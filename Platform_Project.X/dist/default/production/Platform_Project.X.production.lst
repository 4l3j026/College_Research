

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Feb 23 11:49:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F46K22 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _LATEbits	set	3981
    61   000000                     _ANSELC	set	3898
    62   000000                     _PIR1bits	set	3998
    63   000000                     _RCSTAbits	set	4011
    64   000000                     _TXSTA1bits	set	4012
    65   000000                     _SPBRG	set	4015
    66   000000                     _RCONbits	set	4048
    67   000000                     _OSCCON	set	4051
    68   000000                     _INTCONbits	set	4082
    69   000000                     _LATCbits	set	3979
    70   000000                     _TRISCbits	set	3988
    71   000000                     _ANSELE	set	3900
    72   000000                     _ANSELD	set	3899
    73   000000                     _PIE1bits	set	3997
    74   000000                     _TRISE	set	3990
    75   000000                     _TRISD	set	3989
    76   000000                     _LATE	set	3981
    77   000000                     _LATD	set	3980
    78   000000                     _BAUDCON1bits	set	4024
    79   000000                     _RCREG1	set	4014
    80                           
    81                           	psect	smallconst
    82   001000                     __psmallconst:
    83                           	callstack 0
    84   001000  00                 	db	0
    85   001001                     STR_2:
    86   001001  52                 	db	82	;'R'
    87   001002  6F                 	db	111	;'o'
    88   001003  62                 	db	98	;'b'
    89   001004  6F                 	db	111	;'o'
    90   001005  74                 	db	116	;'t'
    91   001006  69                 	db	105	;'i'
    92   001007  63                 	db	99	;'c'
    93   001008  20                 	db	32
    94   001009  50                 	db	80	;'P'
    95   00100A  6C                 	db	108	;'l'
    96   00100B  61                 	db	97	;'a'
    97   00100C  74                 	db	116	;'t'
    98   00100D  66                 	db	102	;'f'
    99   00100E  6F                 	db	111	;'o'
   100   00100F  72                 	db	114	;'r'
   101   001010  6D                 	db	109	;'m'
   102   001011  00                 	db	0
   103   001012                     STR_1:
   104   001012  52                 	db	82	;'R'
   105   001013  65                 	db	101	;'e'
   106   001014  73                 	db	115	;'s'
   107   001015  65                 	db	101	;'e'
   108   001016  61                 	db	97	;'a'
   109   001017  72                 	db	114	;'r'
   110   001018  63                 	db	99	;'c'
   111   001019  68                 	db	104	;'h'
   112   00101A  20                 	db	32
   113   00101B  50                 	db	80	;'P'
   114   00101C  72                 	db	114	;'r'
   115   00101D  6F                 	db	111	;'o'
   116   00101E  6A                 	db	106	;'j'
   117   00101F  65                 	db	101	;'e'
   118   001020  63                 	db	99	;'c'
   119   001021  74                 	db	116	;'t'
   120   001022  00                 	db	0
   121   001023  00                 	db	0	; dummy byte at the end
   122   000000                     
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126   00123E                     __pcinit:
   127                           	callstack 0
   128   00123E                     start_initialization:
   129                           	callstack 0
   130   00123E                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Clear objects allocated to COMRAM (1 bytes)
   134   00123E  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   135   001240                     end_of_initialization:
   136                           	callstack 0
   137   001240                     __end_of__initialization:
   138                           	callstack 0
   139   001240  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   140   001242  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   141   001244  0E00               	movlw	low (__Lmediumconst shr (0+16))
   142   001246  6EF8               	movwf	tblptru,c
   143   001248  0100               	movlb	0
   144   00124A  EF15  F009         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	bssCOMRAM
   147   00000A                     __pbssCOMRAM:
   148                           	callstack 0
   149   00000A                     _Rx_Buffer:
   150                           	callstack 0
   151   00000A                     	ds	1
   152                           
   153                           	psect	cstackCOMRAM
   154   000001                     __pcstackCOMRAM:
   155                           	callstack 0
   156   000001                     Moving_Platform@Command:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x0
   160   000001                     	ds	1
   161   000002                     ??_Interrupt:
   162                           
   163                           ; 1 bytes @ 0x1
   164   000002                     	ds	1
   165   000003                     ??_LCD_Instruction:
   166                           
   167                           ; 1 bytes @ 0x2
   168   000003                     	ds	1
   169   000004                     LCD_Instruction@Instruction:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x3
   173   000004                     	ds	1
   174   000005                     Send_Instruction_Data@Data:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x4
   178   000005                     	ds	1
   179   000006                     Send_Instruction_Data@Instruction:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x5
   183   000006                     	ds	1
   184   000007                     ??_Init_LCD:
   185   000007                     Send_String@String:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x6
   189   000007                     	ds	1
   190   000008                     ??_Send_String:
   191                           
   192                           ; 1 bytes @ 0x7
   193   000008                     	ds	1
   194   000009                     Send_String@i:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x8
   198   000009                     	ds	1
   199   00000A                     
   200                           ; 1 bytes @ 0x9
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 55 in file "main.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels required when called: 8
   226 ;; This function calls:
   227 ;;		_Configurations
   228 ;;		_Init_LCD
   229 ;;		_Init_Message_Platform
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text0
   236   00122A                     __ptext0:
   237                           	callstack 0
   238   00122A                     _main:
   239                           	callstack 23
   240   00122A                     
   241                           ;main.c: 58:     Configurations();
   242   00122A  EC63  F008         	call	_Configurations	;wreg free
   243   00122E                     
   244                           ;main.c: 59:     Init_LCD();
   245   00122E  EC12  F008         	call	_Init_LCD	;wreg free
   246   001232                     
   247                           ;main.c: 60:     Init_Message_Platform();
   248   001232  ECE9  F008         	call	_Init_Message_Platform	;wreg free
   249   001236                     l63:
   250   001236  EF1B  F009         	goto	l63
   251   00123A  EF13  F000         	goto	start
   252   00123E                     __end_of_main:
   253                           	callstack 0
   254                           
   255 ;; *************** function _Init_Message_Platform *****************
   256 ;; Defined at:
   257 ;;		line 235 in file "main.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used: 1
   277 ;; Hardware stack levels required when called: 7
   278 ;; This function calls:
   279 ;;		_Send_Instruction_Data
   280 ;;		_Send_String
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text1
   287   0011D2                     __ptext1:
   288                           	callstack 0
   289   0011D2                     _Init_Message_Platform:
   290                           	callstack 23
   291   0011D2                     
   292                           ;main.c: 237:     Send_Instruction_Data(0, 0X80);
   293   0011D2  0E80               	movlw	128
   294   0011D4  6E05               	movwf	Send_Instruction_Data@Data^0,c
   295   0011D6  0E00               	movlw	0
   296   0011D8  ECFC  F008         	call	_Send_Instruction_Data
   297   0011DC                     
   298                           ;main.c: 238:     Send_String("Research Project");
   299   0011DC  0E12               	movlw	low STR_1
   300   0011DE  6E07               	movwf	Send_String@String^0,c
   301   0011E0  EC8A  F008         	call	_Send_String	;wreg free
   302   0011E4                     
   303                           ;main.c: 239:     Send_Instruction_Data(0, 0xC0);
   304   0011E4  0EC0               	movlw	192
   305   0011E6  6E05               	movwf	Send_Instruction_Data@Data^0,c
   306   0011E8  0E00               	movlw	0
   307   0011EA  ECFC  F008         	call	_Send_Instruction_Data
   308                           
   309                           ;main.c: 240:     Send_String("Robotic Platform");
   310   0011EE  0E01               	movlw	low STR_2
   311   0011F0  6E07               	movwf	Send_String@String^0,c
   312   0011F2  EC8A  F008         	call	_Send_String	;wreg free
   313   0011F6  0012               	return		;funcret
   314   0011F8                     __end_of_Init_Message_Platform:
   315                           	callstack 0
   316                           
   317 ;; *************** function _Send_String *****************
   318 ;; Defined at:
   319 ;;		line 193 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;  String          1    6[COMRAM] PTR unsigned char 
   322 ;;		 -> STR_2(17), STR_1(17), 
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  i               1    8[COMRAM] unsigned char 
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   334 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;Total ram usage:        3 bytes
   339 ;; Hardware stack levels used: 1
   340 ;; Hardware stack levels required when called: 6
   341 ;; This function calls:
   342 ;;		_Send_Instruction_Data
   343 ;; This function is called by:
   344 ;;		_Init_Message_Platform
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text2
   349   001114                     __ptext2:
   350                           	callstack 0
   351   001114                     _Send_String:
   352                           	callstack 23
   353   001114                     
   354                           ;main.c: 195:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   355   001114  0E00               	movlw	0
   356   001116  6E09               	movwf	Send_String@i^0,c
   357   001118  EF9C  F008         	goto	l917
   358   00111C                     l913:
   359                           
   360                           ;main.c: 197:         Send_Instruction_Data(1, String[i]);
   361   00111C  5007               	movf	Send_String@String^0,w,c
   362   00111E  2409               	addwf	Send_String@i^0,w,c
   363   001120  6E08               	movwf	??_Send_String^0,c
   364   001122  C008  FFF6         	movff	??_Send_String,tblptrl
   365   001126                     	if	1	;There is more than 1 active tblptr byte
   366   001126  0E10               	movlw	high __smallconst
   367   001128  6EF7               	movwf	tblptrh,c
   368   00112A                     	endif
   369   00112A                     	if	0	;tblptru may be non-zero
   370   00112A                     	endif
   371   00112A                     	if	0	;tblptru may be non-zero
   372   00112A                     	endif
   373   00112A  0008               	tblrd		*
   374   00112C  CFF5 F005          	movff	tablat,Send_Instruction_Data@Data
   375   001130  0E01               	movlw	1
   376   001132  ECFC  F008         	call	_Send_Instruction_Data
   377   001136                     
   378                           ;main.c: 199:     }
   379   001136  2A09               	incf	Send_String@i^0,f,c
   380   001138                     l917:
   381   001138  5007               	movf	Send_String@String^0,w,c
   382   00113A  2409               	addwf	Send_String@i^0,w,c
   383   00113C  6E08               	movwf	??_Send_String^0,c
   384   00113E  C008  FFF6         	movff	??_Send_String,tblptrl
   385   001142                     	if	1	;There is more than 1 active tblptr byte
   386   001142  0E10               	movlw	high __smallconst
   387   001144  6EF7               	movwf	tblptrh,c
   388   001146                     	endif
   389   001146                     	if	0	;tblptru may be non-zero
   390   001146                     	endif
   391   001146                     	if	0	;tblptru may be non-zero
   392   001146                     	endif
   393   001146  0008               	tblrd		*
   394   001148  50F5               	movf	tablat,w,c
   395   00114A  0900               	iorlw	0
   396   00114C  A4D8               	btfss	status,2,c
   397   00114E  EFAB  F008         	goto	u51
   398   001152  EFAD  F008         	goto	u50
   399   001156                     u51:
   400   001156  EF8E  F008         	goto	l913
   401   00115A                     u50:
   402   00115A  0012               	return		;funcret
   403   00115C                     __end_of_Send_String:
   404                           	callstack 0
   405                           
   406 ;; *************** function _Init_LCD *****************
   407 ;; Defined at:
   408 ;;		line 152 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;Total ram usage:        2 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; Hardware stack levels required when called: 6
   429 ;; This function calls:
   430 ;;		_Send_Instruction_Data
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text3
   437   001024                     __ptext3:
   438                           	callstack 0
   439   001024                     _Init_LCD:
   440                           	callstack 24
   441   001024                     
   442                           ;main.c: 154:     _delay((unsigned long)((60)*(16000000/4000.0)));
   443   001024  0E02               	movlw	2
   444   001026  6E08               	movwf	(??_Init_LCD+1)^0,c
   445   001028  0E38               	movlw	56
   446   00102A  6E07               	movwf	??_Init_LCD^0,c
   447   00102C  0EAD               	movlw	173
   448   00102E                     u67:
   449   00102E  2EE8               	decfsz	wreg,f,c
   450   001030  D7FE               	bra	u67
   451   001032  2E07               	decfsz	??_Init_LCD^0,f,c
   452   001034  D7FC               	bra	u67
   453   001036  2E08               	decfsz	(??_Init_LCD+1)^0,f,c
   454   001038  D7FA               	bra	u67
   455   00103A  0000               	nop	
   456   00103C                     
   457                           ;main.c: 155:     Send_Instruction_Data(0, 0x30);
   458   00103C  0E30               	movlw	48
   459   00103E  6E05               	movwf	Send_Instruction_Data@Data^0,c
   460   001040  0E00               	movlw	0
   461   001042  ECFC  F008         	call	_Send_Instruction_Data
   462   001046                     
   463                           ;main.c: 156:     _delay((unsigned long)((5)*(16000000/4000.0)));
   464   001046  0E1A               	movlw	26
   465   001048  6E07               	movwf	??_Init_LCD^0,c
   466   00104A  0EF8               	movlw	248
   467   00104C                     u77:
   468   00104C  2EE8               	decfsz	wreg,f,c
   469   00104E  D7FE               	bra	u77
   470   001050  2E07               	decfsz	??_Init_LCD^0,f,c
   471   001052  D7FC               	bra	u77
   472   001054  D000               	nop2	
   473                           
   474                           ;main.c: 157:     Send_Instruction_Data(0, 0x30);
   475   001056  0E30               	movlw	48
   476   001058  6E05               	movwf	Send_Instruction_Data@Data^0,c
   477   00105A  0E00               	movlw	0
   478   00105C  ECFC  F008         	call	_Send_Instruction_Data
   479   001060                     
   480                           ;main.c: 158:     _delay((unsigned long)((5)*(16000000/4000.0)));
   481   001060  0E1A               	movlw	26
   482   001062  6E07               	movwf	??_Init_LCD^0,c
   483   001064  0EF8               	movlw	248
   484   001066                     u87:
   485   001066  2EE8               	decfsz	wreg,f,c
   486   001068  D7FE               	bra	u87
   487   00106A  2E07               	decfsz	??_Init_LCD^0,f,c
   488   00106C  D7FC               	bra	u87
   489   00106E  D000               	nop2	
   490   001070                     
   491                           ;main.c: 159:     Send_Instruction_Data(0, 0x30);
   492   001070  0E30               	movlw	48
   493   001072  6E05               	movwf	Send_Instruction_Data@Data^0,c
   494   001074  0E00               	movlw	0
   495   001076  ECFC  F008         	call	_Send_Instruction_Data
   496   00107A                     
   497                           ;main.c: 160:     Send_Instruction_Data(0, 0x02);
   498   00107A  0E02               	movlw	2
   499   00107C  6E05               	movwf	Send_Instruction_Data@Data^0,c
   500   00107E  0E00               	movlw	0
   501   001080  ECFC  F008         	call	_Send_Instruction_Data
   502   001084                     
   503                           ;main.c: 161:     Send_Instruction_Data(0, 0x06);
   504   001084  0E06               	movlw	6
   505   001086  6E05               	movwf	Send_Instruction_Data@Data^0,c
   506   001088  0E00               	movlw	0
   507   00108A  ECFC  F008         	call	_Send_Instruction_Data
   508   00108E                     
   509                           ;main.c: 162:     Send_Instruction_Data(0, 0x0F);
   510   00108E  0E0F               	movlw	15
   511   001090  6E05               	movwf	Send_Instruction_Data@Data^0,c
   512   001092  0E00               	movlw	0
   513   001094  ECFC  F008         	call	_Send_Instruction_Data
   514   001098                     
   515                           ;main.c: 163:     Send_Instruction_Data(0, 0x28);
   516   001098  0E28               	movlw	40
   517   00109A  6E05               	movwf	Send_Instruction_Data@Data^0,c
   518   00109C  0E00               	movlw	0
   519   00109E  ECFC  F008         	call	_Send_Instruction_Data
   520   0010A2                     
   521                           ;main.c: 164:     Send_Instruction_Data(0, 0x01);
   522   0010A2  0E01               	movlw	1
   523   0010A4  6E05               	movwf	Send_Instruction_Data@Data^0,c
   524   0010A6  0E00               	movlw	0
   525   0010A8  ECFC  F008         	call	_Send_Instruction_Data
   526   0010AC                     
   527                           ;main.c: 165:     _delay((unsigned long)((100)*(16000000/4000.0)));
   528   0010AC  0E03               	movlw	3
   529   0010AE  6E08               	movwf	(??_Init_LCD+1)^0,c
   530   0010B0  0E08               	movlw	8
   531   0010B2  6E07               	movwf	??_Init_LCD^0,c
   532   0010B4  0E77               	movlw	119
   533   0010B6                     u97:
   534   0010B6  2EE8               	decfsz	wreg,f,c
   535   0010B8  D7FE               	bra	u97
   536   0010BA  2E07               	decfsz	??_Init_LCD^0,f,c
   537   0010BC  D7FC               	bra	u97
   538   0010BE  2E08               	decfsz	(??_Init_LCD+1)^0,f,c
   539   0010C0  D7FA               	bra	u97
   540   0010C2  0000               	nop	
   541   0010C4  0012               	return		;funcret
   542   0010C6                     __end_of_Init_LCD:
   543                           	callstack 0
   544                           
   545 ;; *************** function _Send_Instruction_Data *****************
   546 ;; Defined at:
   547 ;;		line 171 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  Instruction     1    wreg     unsigned char 
   550 ;;  Data            1    4[COMRAM] unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  Instruction     1    5[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        2 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 5
   569 ;; This function calls:
   570 ;;		_LCD_Instruction
   571 ;; This function is called by:
   572 ;;		_Init_LCD
   573 ;;		_Send_String
   574 ;;		_Init_Message_Platform
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text4
   579   0011F8                     __ptext4:
   580                           	callstack 0
   581   0011F8                     _Send_Instruction_Data:
   582                           	callstack 23
   583                           
   584                           ;incstack = 0
   585                           ;Send_Instruction_Data@Instruction stored from wreg
   586   0011F8  6E06               	movwf	Send_Instruction_Data@Instruction^0,c
   587   0011FA                     
   588                           ;main.c: 173:     LATCbits.LATC4 = Instruction;
   589   0011FA  B006               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   590   0011FC  D002               	bra	u45
   591   0011FE  988B               	bcf	139,4,c	;volatile
   592   001200  D001               	bra	u46
   593   001202                     u45:
   594   001202  888B               	bsf	139,4,c	;volatile
   595   001204                     u46:
   596   001204                     
   597                           ;main.c: 174:     LCD_Instruction(Data >> 4);
   598   001204  3805               	swapf	Send_Instruction_Data@Data^0,w,c
   599   001206  0B0F               	andlw	15
   600   001208  ECCC  F008         	call	_LCD_Instruction
   601   00120C                     
   602                           ;main.c: 175:     LCD_Instruction(Data);
   603   00120C  5005               	movf	Send_Instruction_Data@Data^0,w,c
   604   00120E  ECCC  F008         	call	_LCD_Instruction
   605   001212  0012               	return		;funcret
   606   001214                     __end_of_Send_Instruction_Data:
   607                           	callstack 0
   608                           
   609 ;; *************** function _LCD_Instruction *****************
   610 ;; Defined at:
   611 ;;		line 180 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  Instruction     1    wreg     unsigned char 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  Instruction     1    3[COMRAM] unsigned char 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;Total ram usage:        2 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; Hardware stack levels required when called: 4
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_Send_Instruction_Data
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text5
   640   001198                     __ptext5:
   641                           	callstack 0
   642   001198                     _LCD_Instruction:
   643                           	callstack 23
   644                           
   645                           ;incstack = 0
   646                           ;LCD_Instruction@Instruction stored from wreg
   647   001198  6E04               	movwf	LCD_Instruction@Instruction^0,c
   648   00119A                     
   649                           ;main.c: 182:     LATCbits.LATC5 = 1;
   650   00119A  8A8B               	bsf	139,5,c	;volatile
   651   00119C                     
   652                           ;main.c: 183:     _delay((unsigned long)((15)*(16000000/4000.0)));
   653   00119C  0E4E               	movlw	78
   654   00119E  6E03               	movwf	??_LCD_Instruction^0,c
   655   0011A0  0EEB               	movlw	235
   656   0011A2                     u107:
   657   0011A2  2EE8               	decfsz	wreg,f,c
   658   0011A4  D7FE               	bra	u107
   659   0011A6  2E03               	decfsz	??_LCD_Instruction^0,f,c
   660   0011A8  D7FC               	bra	u107
   661   0011AA  0000               	nop	
   662   0011AC                     
   663                           ;main.c: 184:     LATD = Instruction;
   664   0011AC  C004  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   665   0011B0                     
   666                           ;main.c: 185:     _delay((unsigned long)((15)*(16000000/4000.0)));
   667   0011B0  0E4E               	movlw	78
   668   0011B2  6E03               	movwf	??_LCD_Instruction^0,c
   669   0011B4  0EEB               	movlw	235
   670   0011B6                     u117:
   671   0011B6  2EE8               	decfsz	wreg,f,c
   672   0011B8  D7FE               	bra	u117
   673   0011BA  2E03               	decfsz	??_LCD_Instruction^0,f,c
   674   0011BC  D7FC               	bra	u117
   675   0011BE  0000               	nop	
   676   0011C0                     
   677                           ;main.c: 186:     LATCbits.LATC5 = 0;
   678   0011C0  9A8B               	bcf	139,5,c	;volatile
   679   0011C2                     
   680                           ;main.c: 187:     _delay((unsigned long)((10)*(16000000/4000.0)));
   681   0011C2  0E34               	movlw	52
   682   0011C4  6E03               	movwf	??_LCD_Instruction^0,c
   683   0011C6  0EF2               	movlw	242
   684   0011C8                     u127:
   685   0011C8  2EE8               	decfsz	wreg,f,c
   686   0011CA  D7FE               	bra	u127
   687   0011CC  2E03               	decfsz	??_LCD_Instruction^0,f,c
   688   0011CE  D7FC               	bra	u127
   689   0011D0  0012               	return		;funcret
   690   0011D2                     __end_of_LCD_Instruction:
   691                           	callstack 0
   692                           
   693 ;; *************** function _Configurations *****************
   694 ;; Defined at:
   695 ;;		line 93 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; Hardware stack levels required when called: 4
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text6
   724   0010C6                     __ptext6:
   725                           	callstack 0
   726   0010C6                     _Configurations:
   727                           	callstack 26
   728   0010C6                     
   729                           ;main.c: 95:     OSCCON = 0x72;
   730   0010C6  0E72               	movlw	114
   731   0010C8  6ED3               	movwf	211,c	;volatile
   732                           
   733                           ;main.c: 97:     ANSELC = 0;
   734   0010CA  0E00               	movlw	0
   735   0010CC  010F               	movlb	15	; () banked
   736   0010CE  6F3A               	movwf	58,b	;volatile
   737                           
   738                           ;main.c: 98:     ANSELD = 0;
   739   0010D0  0E00               	movlw	0
   740   0010D2  6F3B               	movwf	59,b	;volatile
   741                           
   742                           ;main.c: 99:     ANSELE = 0;
   743   0010D4  0E00               	movlw	0
   744   0010D6  6F3C               	movwf	60,b	;volatile
   745   0010D8                     
   746                           ; BSR set to: 15
   747                           ;main.c: 101:     TRISCbits.RC4 = 0;
   748   0010D8  9894               	bcf	148,4,c	;volatile
   749   0010DA                     
   750                           ; BSR set to: 15
   751                           ;main.c: 102:     TRISCbits.RC5 = 0;
   752   0010DA  9A94               	bcf	148,5,c	;volatile
   753                           
   754                           ;main.c: 103:     TRISD = 0;
   755   0010DC  0E00               	movlw	0
   756   0010DE  6E95               	movwf	149,c	;volatile
   757                           
   758                           ;main.c: 104:     TRISE = 0;
   759   0010E0  0E00               	movlw	0
   760   0010E2  6E96               	movwf	150,c	;volatile
   761   0010E4                     
   762                           ; BSR set to: 15
   763                           ;main.c: 107:     LATCbits.LC4 = 0;
   764   0010E4  988B               	bcf	139,4,c	;volatile
   765   0010E6                     
   766                           ; BSR set to: 15
   767                           ;main.c: 108:     LATCbits.LC5 = 0;
   768   0010E6  9A8B               	bcf	139,5,c	;volatile
   769                           
   770                           ;main.c: 109:     LATD = 0;
   771   0010E8  0E00               	movlw	0
   772   0010EA  6E8C               	movwf	140,c	;volatile
   773                           
   774                           ;main.c: 110:     LATE = 0;
   775   0010EC  0E00               	movlw	0
   776   0010EE  6E8D               	movwf	141,c	;volatile
   777   0010F0                     
   778                           ; BSR set to: 15
   779                           ;main.c: 113:     INTCONbits.GIE = 1;
   780   0010F0  8EF2               	bsf	242,7,c	;volatile
   781   0010F2                     
   782                           ; BSR set to: 15
   783                           ;main.c: 114:     INTCONbits.PEIE = 1;
   784   0010F2  8CF2               	bsf	242,6,c	;volatile
   785   0010F4                     
   786                           ; BSR set to: 15
   787                           ;main.c: 115:     RCONbits.IPEN = 1;
   788   0010F4  8ED0               	bsf	208,7,c	;volatile
   789   0010F6                     
   790                           ; BSR set to: 15
   791                           ;main.c: 117:     PIE1bits.RC1IE = 1;
   792   0010F6  8A9D               	bsf	157,5,c	;volatile
   793   0010F8                     
   794                           ; BSR set to: 15
   795                           ;main.c: 118:     PIR1bits.RC1IF = 0;
   796   0010F8  9A9E               	bcf	158,5,c	;volatile
   797                           
   798                           ;main.c: 121:     SPBRG = 103;
   799   0010FA  0E67               	movlw	103
   800   0010FC  6EAF               	movwf	175,c	;volatile
   801   0010FE                     
   802                           ; BSR set to: 15
   803                           ;main.c: 122:     TRISCbits.RC6 = 1;
   804   0010FE  8C94               	bsf	148,6,c	;volatile
   805   001100                     
   806                           ; BSR set to: 15
   807                           ;main.c: 123:     TRISCbits.RC7 = 1;
   808   001100  8E94               	bsf	148,7,c	;volatile
   809   001102                     
   810                           ; BSR set to: 15
   811                           ;main.c: 126:     TXSTA1bits.TX91 = 0;
   812   001102  9CAC               	bcf	172,6,c	;volatile
   813   001104                     
   814                           ; BSR set to: 15
   815                           ;main.c: 127:     TXSTA1bits.TXEN1 = 1;
   816   001104  8AAC               	bsf	172,5,c	;volatile
   817   001106                     
   818                           ; BSR set to: 15
   819                           ;main.c: 128:     TXSTA1bits.SYNC1 = 0;
   820   001106  98AC               	bcf	172,4,c	;volatile
   821   001108                     
   822                           ; BSR set to: 15
   823                           ;main.c: 129:     TXSTA1bits.BRGH1 = 1;
   824   001108  84AC               	bsf	172,2,c	;volatile
   825   00110A                     
   826                           ; BSR set to: 15
   827                           ;main.c: 132:     RCSTAbits.SPEN1 = 1;
   828   00110A  8EAB               	bsf	171,7,c	;volatile
   829   00110C                     
   830                           ; BSR set to: 15
   831                           ;main.c: 133:     RCSTAbits.RX91 = 0;
   832   00110C  9CAB               	bcf	171,6,c	;volatile
   833   00110E                     
   834                           ; BSR set to: 15
   835                           ;main.c: 134:     RCSTAbits.CREN1 = 1;
   836   00110E  88AB               	bsf	171,4,c	;volatile
   837   001110                     
   838                           ; BSR set to: 15
   839                           ;main.c: 137:     BAUDCON1bits.BRG16 = 0;
   840   001110  96B8               	bcf	184,3,c	;volatile
   841   001112                     
   842                           ; BSR set to: 15
   843   001112  0012               	return		;funcret
   844   001114                     __end_of_Configurations:
   845                           	callstack 0
   846                           
   847 ;; *************** function _Interrupt *****************
   848 ;; Defined at:
   849 ;;		line 85 in file "main.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		None
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;Total ram usage:        1 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 3
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		Interrupt level 1
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	intcodelo
   878   000018                     __pintcodelo:
   879                           	callstack 0
   880   000018                     _Interrupt:
   881                           	callstack 23
   882                           
   883                           ; BSR set to: 15
   884                           ;incstack = 0
   885   000018  800B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   886   00001A  CFE0 F002          	movff	bsr,??_Interrupt
   887   00001E  C002  FFE0         	movff	??_Interrupt,bsr
   888   000022  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   889   000024  0010               	retfie	
   890   000026                     __end_of_Interrupt:
   891                           	callstack 0
   892                           
   893 ;; *************** function _Interrupt_Rx *****************
   894 ;; Defined at:
   895 ;;		line 73 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 2
   916 ;; This function calls:
   917 ;;		_Receive_Interrupt
   918 ;; This function is called by:
   919 ;;		Interrupt level 2
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	intcode
   924   000008                     __pintcode:
   925                           	callstack 0
   926   000008                     _Interrupt_Rx:
   927                           	callstack 23
   928                           
   929                           ;incstack = 0
   930   000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   931   00000A  EF0A  F009         	goto	int_func
   932                           
   933                           	psect	intcode_body
   934   001214                     __pintcode_body:
   935                           	callstack 23
   936   001214                     int_func:
   937                           	callstack 23
   938   001214                     
   939                           ;main.c: 75:     if (PIR1bits.RC1IF) {
   940   001214  AA9E               	btfss	158,5,c	;volatile
   941   001216  EF0F  F009         	goto	i2u3_41
   942   00121A  EF11  F009         	goto	i2u3_40
   943   00121E                     i2u3_41:
   944   00121E  EF13  F009         	goto	i2l72
   945   001222                     i2u3_40:
   946   001222                     
   947                           ;main.c: 77:         Receive_Interrupt();
   948   001222  ECAE  F008         	call	_Receive_Interrupt	;wreg free
   949   001226                     i2l72:
   950   001226  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   951   001228  0011               	retfie		f
   952   00122A                     __end_of_Interrupt_Rx:
   953                           	callstack 0
   954                           
   955 ;; *************** function _Receive_Interrupt *****************
   956 ;; Defined at:
   957 ;;		line 203 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 1
   978 ;; This function calls:
   979 ;;		_Moving_Platform
   980 ;; This function is called by:
   981 ;;		_Interrupt_Rx
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text9
   986   00115C                     __ptext9:
   987                           	callstack 0
   988   00115C                     _Receive_Interrupt:
   989                           	callstack 23
   990   00115C                     
   991                           ;main.c: 205:     Rx_Buffer = RCREG1;
   992   00115C  CFAE F00A          	movff	4014,_Rx_Buffer	;volatile
   993                           
   994                           ;main.c: 207:     switch (Rx_Buffer) {
   995   001160  EFC0  F008         	goto	i2l893
   996   001164                     i2l885:
   997                           
   998                           ;main.c: 210:             Moving_Platform(0b10100000);
   999   001164  0EA0               	movlw	160
  1000   001166  EC27  F009         	call	_Moving_Platform
  1001                           
  1002                           ;main.c: 211:             break;
  1003   00116A  EFCB  F008         	goto	i2l103
  1004   00116E                     i2l887:
  1005                           
  1006                           ;main.c: 214:             Moving_Platform(0b01010000);
  1007   00116E  0E50               	movlw	80
  1008   001170  EC27  F009         	call	_Moving_Platform
  1009                           
  1010                           ;main.c: 215:             break;
  1011   001174  EFCB  F008         	goto	i2l103
  1012   001178                     i2l889:
  1013                           
  1014                           ;main.c: 218:             LATD = 0x00;
  1015   001178  0E00               	movlw	0
  1016   00117A  6E8C               	movwf	140,c	;volatile
  1017                           
  1018                           ;main.c: 219:             break;
  1019   00117C  EFCB  F008         	goto	i2l103
  1020   001180                     i2l893:
  1021   001180  500A               	movf	_Rx_Buffer^0,w,c
  1022                           
  1023                           ; Switch size 1, requested type "simple"
  1024                           ; Number of cases is 2, Range of values is 65 to 77
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte            7     4 (average)
  1028                           ;	Chosen strategy is simple_byte
  1029   001182  0A41               	xorlw	65	; case 65
  1030   001184  B4D8               	btfsc	status,2,c
  1031   001186  EFB7  F008         	goto	i2l887
  1032   00118A  0A0C               	xorlw	12	; case 77
  1033   00118C  B4D8               	btfsc	status,2,c
  1034   00118E  EFB2  F008         	goto	i2l885
  1035   001192  EFBC  F008         	goto	i2l889
  1036   001196                     i2l103:
  1037   001196  0012               	return		;funcret
  1038   001198                     __end_of_Receive_Interrupt:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _Moving_Platform *****************
  1042 ;; Defined at:
  1043 ;;		line 225 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  Command         1    wreg     unsigned char 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  Command         1    0[COMRAM] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;Total ram usage:        1 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_Receive_Interrupt
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text10
  1071   00124E                     __ptext10:
  1072                           	callstack 0
  1073   00124E                     _Moving_Platform:
  1074                           	callstack 23
  1075                           
  1076                           ;incstack = 0
  1077                           ;Moving_Platform@Command stored from wreg
  1078   00124E  6E01               	movwf	Moving_Platform@Command^0,c
  1079   001250                     
  1080                           ;main.c: 227:     LATEbits.LATE0 = 1;
  1081   001250  808D               	bsf	141,0,c	;volatile
  1082                           
  1083                           ;main.c: 228:     LATEbits.LATE2 = 1;
  1084   001252  848D               	bsf	141,2,c	;volatile
  1085   001254                     
  1086                           ;main.c: 229:     LATD = Command;
  1087   001254  C001  FF8C         	movff	Moving_Platform@Command,3980	;volatile
  1088   001258  0012               	return		;funcret
  1089   00125A                     __end_of_Moving_Platform:
  1090                           	callstack 0
  1091                           
  1092                           	psect	rparam
  1093   000000                     
  1094                           	psect	temp
  1095   00000B                     btemp:
  1096                           	callstack 0
  1097   00000B                     	ds	1
  1098   000000                     int$flags	set	btemp
  1099   000000                     wtemp8	set	btemp+1
  1100   000000                     ttemp5	set	btemp+1
  1101   000000                     ttemp6	set	btemp+4
  1102   000000                     ttemp7	set	btemp+8
  1103                           
  1104                           	psect	config
  1105                           
  1106                           ; Padding undefined space
  1107   300000                     	org	3145728
  1108   300000  FF                 	db	255
  1109                           
  1110                           ;Config register CONFIG1H @ 0x300001
  1111                           ;	Oscillator Selection bits
  1112                           ;	FOSC = INTIO67, Internal oscillator block
  1113                           ;	4X PLL Enable
  1114                           ;	PLLCFG = OFF, Oscillator used directly
  1115                           ;	Primary clock enable bit
  1116                           ;	PRICLKEN = ON, Primary clock is always enabled
  1117                           ;	Fail-Safe Clock Monitor Enable bit
  1118                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1119                           ;	Internal/External Oscillator Switchover bit
  1120                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1121   300001                     	org	3145729
  1122   300001  28                 	db	40
  1123                           
  1124                           ;Config register CONFIG2L @ 0x300002
  1125                           ;	Power-up Timer Enable bit
  1126                           ;	PWRTEN = OFF, Power up timer disabled
  1127                           ;	Brown-out Reset Enable bits
  1128                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1129                           ;	Brown Out Reset Voltage bits
  1130                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1131   300002                     	org	3145730
  1132   300002  1F                 	db	31
  1133                           
  1134                           ;Config register CONFIG2H @ 0x300003
  1135                           ;	Watchdog Timer Enable bits
  1136                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1137                           ;	Watchdog Timer Postscale Select bits
  1138                           ;	WDTPS = 32768, 1:32768
  1139   300003                     	org	3145731
  1140   300003  3C                 	db	60
  1141                           
  1142                           ; Padding undefined space
  1143   300004                     	org	3145732
  1144   300004  FF                 	db	255
  1145                           
  1146                           ;Config register CONFIG3H @ 0x300005
  1147                           ;	CCP2 MUX bit
  1148                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1149                           ;	PORTB A/D Enable bit
  1150                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1151                           ;	P3A/CCP3 Mux bit
  1152                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1153                           ;	HFINTOSC Fast Start-up
  1154                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1155                           ;	Timer3 Clock input mux bit
  1156                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1157                           ;	ECCP2 B output mux bit
  1158                           ;	P2BMX = PORTD2, P2B is on RD2
  1159                           ;	MCLR Pin Enable bit
  1160                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1161   300005                     	org	3145733
  1162   300005  BF                 	db	191
  1163                           
  1164                           ;Config register CONFIG4L @ 0x300006
  1165                           ;	Stack Full/Underflow Reset Enable bit
  1166                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1167                           ;	Single-Supply ICSP Enable bit
  1168                           ;	LVP = OFF, Single-Supply ICSP disabled
  1169                           ;	Extended Instruction Set Enable bit
  1170                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1171                           ;	Background Debug
  1172                           ;	DEBUG = 0x1, unprogrammed default
  1173   300006                     	org	3145734
  1174   300006  81                 	db	129
  1175                           
  1176                           ; Padding undefined space
  1177   300007                     	org	3145735
  1178   300007  FF                 	db	255
  1179                           
  1180                           ;Config register CONFIG5L @ 0x300008
  1181                           ;	Code Protection Block 0
  1182                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1183                           ;	Code Protection Block 1
  1184                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1185                           ;	Code Protection Block 2
  1186                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1187                           ;	Code Protection Block 3
  1188                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1189   300008                     	org	3145736
  1190   300008  0F                 	db	15
  1191                           
  1192                           ;Config register CONFIG5H @ 0x300009
  1193                           ;	Boot Block Code Protection bit
  1194                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1195                           ;	Data EEPROM Code Protection bit
  1196                           ;	CPD = OFF, Data EEPROM not code-protected
  1197   300009                     	org	3145737
  1198   300009  C0                 	db	192
  1199                           
  1200                           ;Config register CONFIG6L @ 0x30000A
  1201                           ;	Write Protection Block 0
  1202                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1203                           ;	Write Protection Block 1
  1204                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1205                           ;	Write Protection Block 2
  1206                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1207                           ;	Write Protection Block 3
  1208                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1209   30000A                     	org	3145738
  1210   30000A  0F                 	db	15
  1211                           
  1212                           ;Config register CONFIG6H @ 0x30000B
  1213                           ;	Configuration Register Write Protection bit
  1214                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1215                           ;	Boot Block Write Protection bit
  1216                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1217                           ;	Data EEPROM Write Protection bit
  1218                           ;	WRTD = OFF, Data EEPROM not write-protected
  1219   30000B                     	org	3145739
  1220   30000B  E0                 	db	224
  1221                           
  1222                           ;Config register CONFIG7L @ 0x30000C
  1223                           ;	Table Read Protection Block 0
  1224                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1225                           ;	Table Read Protection Block 1
  1226                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1227                           ;	Table Read Protection Block 2
  1228                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1229                           ;	Table Read Protection Block 3
  1230                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1231   30000C                     	org	3145740
  1232   30000C  0F                 	db	15
  1233                           
  1234                           ;Config register CONFIG7H @ 0x30000D
  1235                           ;	Boot Block Table Read Protection bit
  1236                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1237   30000D                     	org	3145741
  1238   30000D  40                 	db	64
  1239                           tosu	equ	0xFFF
  1240                           tosh	equ	0xFFE
  1241                           tosl	equ	0xFFD
  1242                           stkptr	equ	0xFFC
  1243                           pclatu	equ	0xFFB
  1244                           pclath	equ	0xFFA
  1245                           pcl	equ	0xFF9
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           prodh	equ	0xFF4
  1251                           prodl	equ	0xFF3
  1252                           indf0	equ	0xFEF
  1253                           postinc0	equ	0xFEE
  1254                           postdec0	equ	0xFED
  1255                           preinc0	equ	0xFEC
  1256                           plusw0	equ	0xFEB
  1257                           fsr0h	equ	0xFEA
  1258                           fsr0l	equ	0xFE9
  1259                           wreg	equ	0xFE8
  1260                           indf1	equ	0xFE7
  1261                           postinc1	equ	0xFE6
  1262                           postdec1	equ	0xFE5
  1263                           preinc1	equ	0xFE4
  1264                           plusw1	equ	0xFE3
  1265                           fsr1h	equ	0xFE2
  1266                           fsr1l	equ	0xFE1
  1267                           bsr	equ	0xFE0
  1268                           indf2	equ	0xFDF
  1269                           postinc2	equ	0xFDE
  1270                           postdec2	equ	0xFDD
  1271                           preinc2	equ	0xFDC
  1272                           plusw2	equ	0xFDB
  1273                           fsr2h	equ	0xFDA
  1274                           fsr2l	equ	0xFD9
  1275                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 


Critical Paths under _main in COMRAM

    _Init_Message_Platform->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Receive_Interrupt->_Moving_Platform

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2993
                     _Configurations
                           _Init_LCD
              _Init_Message_Platform
 ---------------------------------------------------------------------------------
 (1) _Init_Message_Platform                                0     0      0    2076
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (2) _Send_String                                          3     2      1    1159
                                              6 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     917
                                              6 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (3) _Send_Instruction_Data                                2     1      1     917
                                              4 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (4) _LCD_Instruction                                      2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupt_Rx                                         0     0      0      15
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (7) _Receive_Interrupt                                    0     0      0      15
                    _Moving_Platform
 ---------------------------------------------------------------------------------
 (8) _Moving_Platform                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Init_Message_Platform
     _Send_Instruction_Data
     _Send_String
       _Send_Instruction_Data

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Moving_Platform

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9       A       1       10.6%
BITBIGSFRlhll       4E      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRhllhh      17      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      42        0.0%
BITBIGSFRhllhl       8      0       0      40        0.0%
BITBIGSFRlhlh        6      0       0      44        0.0%
BITBIGSFRlhh         6      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRhlllh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      47        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Feb 23 11:49:51 2024

                              l63 1236                                l80 1112                                l64 1236  
                              l83 10C4                                l86 1212                                l95 115A  
                              l89 11D0                                u50 115A                                u51 1156  
                              u45 1202                                u46 1204                                u67 102E  
                              u77 104C                                u87 1066                                u97 10B6  
               Send_String@String 0007                                bsr 0FE0                               l109 11F6  
                             l821 10E4                               l831 10F6                               l823 10E6  
                             l815 10C6                               l911 1114                               l841 1104  
                             l833 10F8                               l825 10F0                               l817 10D8  
                             l905 11FA                               l921 103C                               l913 111C  
                             l851 110E                               l843 1106                               l835 10FE  
                             l827 10F2                               l819 10DA                               l907 1204  
                             l931 1084                               l923 1046                               l915 1136  
                             l853 1110                               l845 1108                               l837 1100  
                             l829 10F4                               l909 120C                               l933 108E  
                             l925 1060                               l917 1138                               l941 11D2  
                             l847 110A                               l839 1102                               l791 11B0  
                             l935 1098                               l927 1070                               l919 1024  
                             l943 11DC                               l951 1232                               l849 110C  
                             l793 11C0                               l785 119A                               l937 10A2  
                             l929 107A                               l945 11E4                               l795 11C2  
                             l787 119C                               l939 10AC                               l947 122A  
                             l789 11AC                               l949 122E                               u107 11A2  
                             u117 11B6                               u127 11C8                               wreg 0FE8  
                      _TXSTA1bits 0FAC                              STR_1 1012                              STR_2 1001  
                            _LATD 0F8C                              _LATE 0F8D                              i1l77 001E  
                            i2l72 1226                              _main 122A                              btemp 000B  
                            start 0026                      ___param_bank 0000                   _LCD_Instruction 1198  
Send_Instruction_Data@Instruction 0006                      _BAUDCON1bits 0FB8                             ?_main 0001  
                           i2l103 1196                             i2l106 1258                             i2l811 1250  
                           i2l813 1254                             i2l901 1214                             i2l903 1222  
                           i2l883 115C                             i2l885 1164                             i2l893 1180  
                           i2l887 116E                             i2l889 1178                             _SPBRG 0FAF  
                           _TRISD 0F95                             _TRISE 0F96                             tablat 0FF5  
                           ttemp5 000C                             ttemp6 000F                             ttemp7 0013  
                           status 0FD8                             wtemp8 000C                   __initialization 123E  
                    __end_of_main 123E                  __end_of_Init_LCD 10C6             _Send_Instruction_Data 11F8  
                          ??_main 000A                     ??_Send_String 0008                     __activetblptr 0002  
               ??_Moving_Platform 0001                            _ANSELC 0F3A                            _ANSELD 0F3B  
                          _ANSELE 0F3C                            _RCREG1 0FAE        LCD_Instruction@Instruction 0004  
                          _OSCCON 0FD3                            i2u3_40 1222                            i2u3_41 121E  
                   ?_Interrupt_Rx 0001           __end_of_LCD_Instruction 11D2     __end_of_Init_Message_Platform 11F8  
                          isa$std 0001                      __mediumconst 0000                            tblptrh 0FF7  
                          tblptrl 0FF6                            tblptru 0FF8               __end_of_Send_String 115C  
                      __accesstop 0060           __end_of__initialization 1240                    ??_Interrupt_Rx 0002  
                   ___rparam_used 0001                    __pcstackCOMRAM 0001                 _Receive_Interrupt 115C  
          ?_Send_Instruction_Data 0005                ?_Receive_Interrupt 0001               ??_Receive_Interrupt 0002  
               __end_of_Interrupt 0026                         ?_Init_LCD 0001                  ?_LCD_Instruction 0001  
       __end_of_Receive_Interrupt 1198                       _Send_String 1114                        ??_Init_LCD 0007  
                         __Hparam 0000                           __Lparam 0000                      __psmallconst 1000  
                         __pcinit 123E                           __ramtop 1000                           __ptext0 122A  
                         __ptext1 11D2                           __ptext2 1114                           __ptext3 1024  
                         __ptext4 11F8                           __ptext5 1198                           __ptext6 10C6  
                         __ptext9 115C                   _Moving_Platform 124E              __end_of_Interrupt_Rx 122A  
                  __pintcode_body 1214              end_of_initialization 1240                     __Lmediumconst 0000  
                         int_func 1214                         _RCSTAbits 0FAB                         _TRISCbits 0F94  
         ??_Send_Instruction_Data 0006           __end_of_Moving_Platform 125A             _Init_Message_Platform 11D2  
             start_initialization 123E                      Send_String@i 0009         Send_Instruction_Data@Data 0005  
                  _Configurations 10C6                         _Interrupt 0018                         _Rx_Buffer 000A  
                    ?_Send_String 0007                       __pbssCOMRAM 000A            __end_of_Configurations 1114  
                      ?_Interrupt 0001                      _Interrupt_Rx 0008            ?_Init_Message_Platform 0001  
                       __pintcode 0008                  ?_Moving_Platform 0001                       __pintcodelo 0018  
                     __smallconst 1000                   ?_Configurations 0001                          _LATCbits 0F8B  
                        _LATEbits 0F8D                          _PIE1bits 0F9D                          _PIR1bits 0F9E  
                        _RCONbits 0FD0                       ??_Interrupt 0002                          _Init_LCD 1024  
          Moving_Platform@Command 0001                          __Hrparam 0000                          __Lrparam 0000  
   __end_of_Send_Instruction_Data 1214                 ??_LCD_Instruction 0003                          __ptext10 124E  
                        isa$xinst 0000                          int$flags 000B                        _INTCONbits 0FF2  
                        intlevel1 0000                          intlevel2 0000           ??_Init_Message_Platform 000A  
                ??_Configurations 0003  
