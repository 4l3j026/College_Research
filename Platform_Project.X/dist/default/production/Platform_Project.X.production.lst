

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Feb 26 11:51:41 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _LATEbits	set	3981
    56   000000                     _ANSELC	set	3898
    57   000000                     _PIR1bits	set	3998
    58   000000                     _RCSTAbits	set	4011
    59   000000                     _TXSTA1bits	set	4012
    60   000000                     _SPBRG	set	4015
    61   000000                     _RCONbits	set	4048
    62   000000                     _OSCCON	set	4051
    63   000000                     _INTCONbits	set	4082
    64   000000                     _LATCbits	set	3979
    65   000000                     _TRISCbits	set	3988
    66   000000                     _ANSELE	set	3900
    67   000000                     _ANSELD	set	3899
    68   000000                     _PIE1bits	set	3997
    69   000000                     _TRISE	set	3990
    70   000000                     _TRISD	set	3989
    71   000000                     _LATE	set	3981
    72   000000                     _LATD	set	3980
    73   000000                     _BAUDCON1bits	set	4024
    74   000000                     _RCREG1	set	4014
    75                           
    76                           	psect	smallconst
    77   001000                     __psmallconst:
    78                           	callstack 0
    79   001000  00                 	db	0
    80   001001  52                 	db	82	;'R'
    81   001002  6F                 	db	111	;'o'
    82   001003  62                 	db	98	;'b'
    83   001004  6F                 	db	111	;'o'
    84   001005  74                 	db	116	;'t'
    85   001006  69                 	db	105	;'i'
    86   001007  63                 	db	99	;'c'
    87   001008  20                 	db	32
    88   001009  50                 	db	80	;'P'
    89   00100A  6C                 	db	108	;'l'
    90   00100B  61                 	db	97	;'a'
    91   00100C  74                 	db	116	;'t'
    92   00100D  66                 	db	102	;'f'
    93   00100E  6F                 	db	111	;'o'
    94   00100F  72                 	db	114	;'r'
    95   001010  6D                 	db	109	;'m'
    96   001011  00                 	db	0
    97   001012  52                 	db	82	;'R'
    98   001013  65                 	db	101	;'e'
    99   001014  73                 	db	115	;'s'
   100   001015  65                 	db	101	;'e'
   101   001016  61                 	db	97	;'a'
   102   001017  72                 	db	114	;'r'
   103   001018  63                 	db	99	;'c'
   104   001019  68                 	db	104	;'h'
   105   00101A  20                 	db	32
   106   00101B  50                 	db	80	;'P'
   107   00101C  72                 	db	114	;'r'
   108   00101D  6F                 	db	111	;'o'
   109   00101E  6A                 	db	106	;'j'
   110   00101F  65                 	db	101	;'e'
   111   001020  63                 	db	99	;'c'
   112   001021  74                 	db	116	;'t'
   113   001022  00                 	db	0
   114   001023  00                 	db	0	; dummy byte at the end
   115   000000                     
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119   0010D8                     __pcinit:
   120                           	callstack 0
   121   0010D8                     start_initialization:
   122                           	callstack 0
   123   0010D8                     __initialization:
   124                           	callstack 0
   125                           
   126                           ; Clear objects allocated to COMRAM (1 bytes)
   127   0010D8  6A05               	clrf	__pbssCOMRAM& (0+255),c
   128   0010DA                     end_of_initialization:
   129                           	callstack 0
   130   0010DA                     __end_of__initialization:
   131                           	callstack 0
   132   0010DA  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   133   0010DC  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   134   0010DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   135   0010E0  6EF8               	movwf	tblptru,c
   136   0010E2  0100               	movlb	0
   137   0010E4  EF74  F008         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	bssCOMRAM
   140   000005                     __pbssCOMRAM:
   141                           	callstack 0
   142   000005                     _Rx_Buffer:
   143                           	callstack 0
   144   000005                     	ds	1
   145                           
   146                           	psect	cstackCOMRAM
   147   000001                     __pcstackCOMRAM:
   148                           	callstack 0
   149   000001                     Moving_Platform@Command:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x0
   153   000001                     	ds	1
   154   000002                     ??_Receive_Interrupt:
   155                           
   156                           ; 1 bytes @ 0x1
   157   000002                     	ds	2
   158   000004                     ??_Interrupt:
   159                           
   160                           ; 1 bytes @ 0x3
   161   000004                     	ds	1
   162   000005                     
   163                           ; 1 bytes @ 0x4
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 33 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;Total ram usage:        0 bytes
   188 ;; Hardware stack levels required when called: 5
   189 ;; This function calls:
   190 ;;		_Configurations
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text0
   197   0010E8                     __ptext0:
   198                           	callstack 0
   199   0010E8                     _main:
   200                           	callstack 26
   201   0010E8                     
   202                           ;main.c: 36:     Configurations();
   203   0010E8  EC3A  F008         	call	_Configurations	;wreg free
   204   0010EC                     l57:
   205   0010EC  EF76  F008         	goto	l57
   206   0010F0  EF13  F000         	goto	start
   207   0010F4                     __end_of_main:
   208                           	callstack 0
   209                           
   210 ;; *************** function _Configurations *****************
   211 ;; Defined at:
   212 ;;		line 71 in file "main.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, status,2
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   230 ;;Total ram usage:        0 bytes
   231 ;; Hardware stack levels used: 1
   232 ;; Hardware stack levels required when called: 4
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		_main
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240                           	psect	text1
   241   001074                     __ptext1:
   242                           	callstack 0
   243   001074                     _Configurations:
   244                           	callstack 26
   245   001074                     
   246                           ;main.c: 73:     OSCCON = 0x72;
   247   001074  0E72               	movlw	114
   248   001076  6ED3               	movwf	211,c	;volatile
   249                           
   250                           ;main.c: 75:     ANSELC = 0;
   251   001078  0E00               	movlw	0
   252   00107A  010F               	movlb	15	; () banked
   253   00107C  6F3A               	movwf	58,b	;volatile
   254                           
   255                           ;main.c: 76:     ANSELD = 0;
   256   00107E  0E00               	movlw	0
   257   001080  6F3B               	movwf	59,b	;volatile
   258                           
   259                           ;main.c: 77:     ANSELE = 0;
   260   001082  0E00               	movlw	0
   261   001084  6F3C               	movwf	60,b	;volatile
   262   001086                     
   263                           ; BSR set to: 15
   264                           ;main.c: 79:     TRISCbits.RC4 = 0;
   265   001086  9894               	bcf	148,4,c	;volatile
   266   001088                     
   267                           ; BSR set to: 15
   268                           ;main.c: 80:     TRISCbits.RC5 = 0;
   269   001088  9A94               	bcf	148,5,c	;volatile
   270                           
   271                           ;main.c: 81:     TRISD = 0;
   272   00108A  0E00               	movlw	0
   273   00108C  6E95               	movwf	149,c	;volatile
   274                           
   275                           ;main.c: 82:     TRISE = 0;
   276   00108E  0E00               	movlw	0
   277   001090  6E96               	movwf	150,c	;volatile
   278   001092                     
   279                           ; BSR set to: 15
   280                           ;main.c: 85:     LATCbits.LC4 = 0;
   281   001092  988B               	bcf	139,4,c	;volatile
   282   001094                     
   283                           ; BSR set to: 15
   284                           ;main.c: 86:     LATCbits.LC5 = 0;
   285   001094  9A8B               	bcf	139,5,c	;volatile
   286                           
   287                           ;main.c: 87:     LATD = 0;
   288   001096  0E00               	movlw	0
   289   001098  6E8C               	movwf	140,c	;volatile
   290                           
   291                           ;main.c: 88:     LATE = 0;
   292   00109A  0E00               	movlw	0
   293   00109C  6E8D               	movwf	141,c	;volatile
   294   00109E                     
   295                           ; BSR set to: 15
   296                           ;main.c: 91:     INTCONbits.GIE = 1;
   297   00109E  8EF2               	bsf	242,7,c	;volatile
   298   0010A0                     
   299                           ; BSR set to: 15
   300                           ;main.c: 92:     INTCONbits.PEIE = 1;
   301   0010A0  8CF2               	bsf	242,6,c	;volatile
   302   0010A2                     
   303                           ; BSR set to: 15
   304                           ;main.c: 93:     RCONbits.IPEN = 1;
   305   0010A2  8ED0               	bsf	208,7,c	;volatile
   306   0010A4                     
   307                           ; BSR set to: 15
   308                           ;main.c: 95:     PIE1bits.RC1IE = 1;
   309   0010A4  8A9D               	bsf	157,5,c	;volatile
   310   0010A6                     
   311                           ; BSR set to: 15
   312                           ;main.c: 96:     PIR1bits.RC1IF = 0;
   313   0010A6  9A9E               	bcf	158,5,c	;volatile
   314                           
   315                           ;main.c: 99:     SPBRG = 103;
   316   0010A8  0E67               	movlw	103
   317   0010AA  6EAF               	movwf	175,c	;volatile
   318   0010AC                     
   319                           ; BSR set to: 15
   320                           ;main.c: 100:     TRISCbits.RC6 = 1;
   321   0010AC  8C94               	bsf	148,6,c	;volatile
   322   0010AE                     
   323                           ; BSR set to: 15
   324                           ;main.c: 101:     TRISCbits.RC7 = 1;
   325   0010AE  8E94               	bsf	148,7,c	;volatile
   326   0010B0                     
   327                           ; BSR set to: 15
   328                           ;main.c: 104:     TXSTA1bits.TX91 = 0;
   329   0010B0  9CAC               	bcf	172,6,c	;volatile
   330   0010B2                     
   331                           ; BSR set to: 15
   332                           ;main.c: 105:     TXSTA1bits.TXEN1 = 1;
   333   0010B2  8AAC               	bsf	172,5,c	;volatile
   334   0010B4                     
   335                           ; BSR set to: 15
   336                           ;main.c: 106:     TXSTA1bits.SYNC1 = 0;
   337   0010B4  98AC               	bcf	172,4,c	;volatile
   338   0010B6                     
   339                           ; BSR set to: 15
   340                           ;main.c: 107:     TXSTA1bits.BRGH1 = 1;
   341   0010B6  84AC               	bsf	172,2,c	;volatile
   342   0010B8                     
   343                           ; BSR set to: 15
   344                           ;main.c: 110:     RCSTAbits.SPEN1 = 1;
   345   0010B8  8EAB               	bsf	171,7,c	;volatile
   346   0010BA                     
   347                           ; BSR set to: 15
   348                           ;main.c: 111:     RCSTAbits.RX91 = 0;
   349   0010BA  9CAB               	bcf	171,6,c	;volatile
   350   0010BC                     
   351                           ; BSR set to: 15
   352                           ;main.c: 112:     RCSTAbits.CREN1 = 1;
   353   0010BC  88AB               	bsf	171,4,c	;volatile
   354   0010BE                     
   355                           ; BSR set to: 15
   356                           ;main.c: 115:     BAUDCON1bits.BRG16 = 0;
   357   0010BE  96B8               	bcf	184,3,c	;volatile
   358   0010C0                     
   359                           ; BSR set to: 15
   360   0010C0  0012               	return		;funcret
   361   0010C2                     __end_of_Configurations:
   362                           	callstack 0
   363                           
   364 ;; *************** function _Interrupt *****************
   365 ;; Defined at:
   366 ;;		line 63 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		None
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;Total ram usage:        1 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; Hardware stack levels required when called: 3
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		Interrupt level 1
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	intcodelo
   395   000018                     __pintcodelo:
   396                           	callstack 0
   397   000018                     _Interrupt:
   398                           	callstack 26
   399                           
   400                           ; BSR set to: 15
   401                           ;incstack = 0
   402   000018  8006               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   403   00001A  CFE0 F004          	movff	bsr,??_Interrupt
   404   00001E  C004  FFE0         	movff	??_Interrupt,bsr
   405   000022  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   406   000024  0010               	retfie	
   407   000026                     __end_of_Interrupt:
   408                           	callstack 0
   409                           
   410 ;; *************** function _Interrupt_Rx *****************
   411 ;; Defined at:
   412 ;;		line 51 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 2
   433 ;; This function calls:
   434 ;;		_Receive_Interrupt
   435 ;; This function is called by:
   436 ;;		Interrupt level 2
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	intcode
   441   000008                     __pintcode:
   442                           	callstack 0
   443   000008                     _Interrupt_Rx:
   444                           	callstack 26
   445                           
   446                           ;incstack = 0
   447   000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   448   00000A  EF61  F008         	goto	int_func
   449                           
   450                           	psect	intcode_body
   451   0010C2                     __pintcode_body:
   452                           	callstack 26
   453   0010C2                     int_func:
   454                           	callstack 26
   455   0010C2                     
   456                           ;main.c: 53:     if (PIR1bits.RC1IF) {
   457   0010C2  AA9E               	btfss	158,5,c	;volatile
   458   0010C4  EF66  F008         	goto	i2u2_41
   459   0010C8  EF68  F008         	goto	i2u2_40
   460   0010CC                     i2u2_41:
   461   0010CC  EF6A  F008         	goto	i2l66
   462   0010D0                     i2u2_40:
   463   0010D0                     
   464                           ;main.c: 55:         Receive_Interrupt();
   465   0010D0  EC12  F008         	call	_Receive_Interrupt	;wreg free
   466   0010D4                     i2l66:
   467   0010D4  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   468   0010D6  0011               	retfie		f
   469   0010D8                     __end_of_Interrupt_Rx:
   470                           	callstack 0
   471                           
   472 ;; *************** function _Receive_Interrupt *****************
   473 ;; Defined at:
   474 ;;		line 131 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; Hardware stack levels required when called: 1
   495 ;; This function calls:
   496 ;;		_Moving_Platform
   497 ;; This function is called by:
   498 ;;		_Interrupt_Rx
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text4
   503   001024                     __ptext4:
   504                           	callstack 0
   505   001024                     _Receive_Interrupt:
   506                           	callstack 26
   507   001024                     
   508                           ;main.c: 133:     Rx_Buffer = RCREG1;
   509   001024  CFAE F005          	movff	4014,_Rx_Buffer	;volatile
   510                           
   511                           ;main.c: 135:     switch (Rx_Buffer) {
   512   001028  EF24  F008         	goto	i2l855
   513   00102C                     i2l847:
   514                           
   515                           ;main.c: 138:             Moving_Platform(0b10100000);
   516   00102C  0EA0               	movlw	160
   517   00102E  EC7A  F008         	call	_Moving_Platform
   518                           
   519                           ;main.c: 139:             break;
   520   001032  EF39  F008         	goto	i2l82
   521   001036                     i2l849:
   522                           
   523                           ;main.c: 142:             Moving_Platform(0b01010000);
   524   001036  0E50               	movlw	80
   525   001038  EC7A  F008         	call	_Moving_Platform
   526                           
   527                           ;main.c: 143:             break;
   528   00103C  EF39  F008         	goto	i2l82
   529   001040                     i2l851:
   530                           
   531                           ;main.c: 146:             LATD = 0x00;
   532   001040  0E00               	movlw	0
   533   001042  6E8C               	movwf	140,c	;volatile
   534                           
   535                           ;main.c: 147:             break;
   536   001044  EF39  F008         	goto	i2l82
   537   001048                     i2l855:
   538   001048  5005               	movf	_Rx_Buffer^0,w,c
   539   00104A  6E02               	movwf	??_Receive_Interrupt^0,c
   540   00104C  6A03               	clrf	(??_Receive_Interrupt+1)^0,c
   541                           
   542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   543                           ; Switch size 1, requested type "simple"
   544                           ; Number of cases is 1, Range of values is 0 to 0
   545                           ; switch strategies available:
   546                           ; Name         Instructions Cycles
   547                           ; simple_byte            4     3 (average)
   548                           ;	Chosen strategy is simple_byte
   549   00104E  5003               	movf	(??_Receive_Interrupt+1)^0,w,c
   550   001050  0A00               	xorlw	0	; case 0
   551   001052  B4D8               	btfsc	status,2,c
   552   001054  EF2E  F008         	goto	i2l929
   553   001058  EF20  F008         	goto	i2l851
   554   00105C                     i2l929:
   555                           
   556                           ; Switch size 1, requested type "simple"
   557                           ; Number of cases is 2, Range of values is 65 to 77
   558                           ; switch strategies available:
   559                           ; Name         Instructions Cycles
   560                           ; simple_byte            7     4 (average)
   561                           ;	Chosen strategy is simple_byte
   562   00105C  5002               	movf	??_Receive_Interrupt^0,w,c
   563   00105E  0A41               	xorlw	65	; case 65
   564   001060  B4D8               	btfsc	status,2,c
   565   001062  EF1B  F008         	goto	i2l849
   566   001066  0A0C               	xorlw	12	; case 77
   567   001068  B4D8               	btfsc	status,2,c
   568   00106A  EF16  F008         	goto	i2l847
   569   00106E  EF20  F008         	goto	i2l851
   570   001072                     i2l82:
   571   001072  0012               	return		;funcret
   572   001074                     __end_of_Receive_Interrupt:
   573                           	callstack 0
   574                           
   575 ;; *************** function _Moving_Platform *****************
   576 ;; Defined at:
   577 ;;		line 153 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  Command         1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  Command         1    0[COMRAM] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_Receive_Interrupt
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text5
   605   0010F4                     __ptext5:
   606                           	callstack 0
   607   0010F4                     _Moving_Platform:
   608                           	callstack 26
   609                           
   610                           ;incstack = 0
   611                           ;Moving_Platform@Command stored from wreg
   612   0010F4  6E01               	movwf	Moving_Platform@Command^0,c
   613   0010F6                     
   614                           ;main.c: 155:     LATEbits.LATE0 = 1;
   615   0010F6  808D               	bsf	141,0,c	;volatile
   616                           
   617                           ;main.c: 156:     LATEbits.LATE2 = 1;
   618   0010F8  848D               	bsf	141,2,c	;volatile
   619   0010FA                     
   620                           ;main.c: 157:     LATD = Command;
   621   0010FA  C001  FF8C         	movff	Moving_Platform@Command,3980	;volatile
   622   0010FE  0012               	return		;funcret
   623   001100                     __end_of_Moving_Platform:
   624                           	callstack 0
   625                           
   626                           	psect	rparam
   627   000000                     
   628                           	psect	temp
   629   000006                     btemp:
   630                           	callstack 0
   631   000006                     	ds	1
   632   000000                     int$flags	set	btemp
   633   000000                     wtemp8	set	btemp+1
   634   000000                     ttemp5	set	btemp+1
   635   000000                     ttemp6	set	btemp+4
   636   000000                     ttemp7	set	btemp+8
   637                           
   638                           	psect	config
   639                           
   640                           ; Padding undefined space
   641   300000                     	org	3145728
   642   300000  FF                 	db	255
   643                           
   644                           ;Config register CONFIG1H @ 0x300001
   645                           ;	Oscillator Selection bits
   646                           ;	FOSC = INTIO67, Internal oscillator block
   647                           ;	4X PLL Enable
   648                           ;	PLLCFG = OFF, Oscillator used directly
   649                           ;	Primary clock enable bit
   650                           ;	PRICLKEN = ON, Primary clock is always enabled
   651                           ;	Fail-Safe Clock Monitor Enable bit
   652                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   653                           ;	Internal/External Oscillator Switchover bit
   654                           ;	IESO = OFF, Oscillator Switchover mode disabled
   655   300001                     	org	3145729
   656   300001  28                 	db	40
   657                           
   658                           ;Config register CONFIG2L @ 0x300002
   659                           ;	Power-up Timer Enable bit
   660                           ;	PWRTEN = OFF, Power up timer disabled
   661                           ;	Brown-out Reset Enable bits
   662                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   663                           ;	Brown Out Reset Voltage bits
   664                           ;	BORV = 190, VBOR set to 1.90 V nominal
   665   300002                     	org	3145730
   666   300002  1F                 	db	31
   667                           
   668                           ;Config register CONFIG2H @ 0x300003
   669                           ;	Watchdog Timer Enable bits
   670                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   671                           ;	Watchdog Timer Postscale Select bits
   672                           ;	WDTPS = 32768, 1:32768
   673   300003                     	org	3145731
   674   300003  3C                 	db	60
   675                           
   676                           ; Padding undefined space
   677   300004                     	org	3145732
   678   300004  FF                 	db	255
   679                           
   680                           ;Config register CONFIG3H @ 0x300005
   681                           ;	CCP2 MUX bit
   682                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   683                           ;	PORTB A/D Enable bit
   684                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   685                           ;	P3A/CCP3 Mux bit
   686                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   687                           ;	HFINTOSC Fast Start-up
   688                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   689                           ;	Timer3 Clock input mux bit
   690                           ;	T3CMX = PORTC0, T3CKI is on RC0
   691                           ;	ECCP2 B output mux bit
   692                           ;	P2BMX = PORTD2, P2B is on RD2
   693                           ;	MCLR Pin Enable bit
   694                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   695   300005                     	org	3145733
   696   300005  BF                 	db	191
   697                           
   698                           ;Config register CONFIG4L @ 0x300006
   699                           ;	Stack Full/Underflow Reset Enable bit
   700                           ;	STVREN = ON, Stack full/underflow will cause Reset
   701                           ;	Single-Supply ICSP Enable bit
   702                           ;	LVP = OFF, Single-Supply ICSP disabled
   703                           ;	Extended Instruction Set Enable bit
   704                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   705                           ;	Background Debug
   706                           ;	DEBUG = 0x1, unprogrammed default
   707   300006                     	org	3145734
   708   300006  81                 	db	129
   709                           
   710                           ; Padding undefined space
   711   300007                     	org	3145735
   712   300007  FF                 	db	255
   713                           
   714                           ;Config register CONFIG5L @ 0x300008
   715                           ;	Code Protection Block 0
   716                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   717                           ;	Code Protection Block 1
   718                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   719                           ;	Code Protection Block 2
   720                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   721                           ;	Code Protection Block 3
   722                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   723   300008                     	org	3145736
   724   300008  0F                 	db	15
   725                           
   726                           ;Config register CONFIG5H @ 0x300009
   727                           ;	Boot Block Code Protection bit
   728                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   729                           ;	Data EEPROM Code Protection bit
   730                           ;	CPD = OFF, Data EEPROM not code-protected
   731   300009                     	org	3145737
   732   300009  C0                 	db	192
   733                           
   734                           ;Config register CONFIG6L @ 0x30000A
   735                           ;	Write Protection Block 0
   736                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   737                           ;	Write Protection Block 1
   738                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   739                           ;	Write Protection Block 2
   740                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   741                           ;	Write Protection Block 3
   742                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   743   30000A                     	org	3145738
   744   30000A  0F                 	db	15
   745                           
   746                           ;Config register CONFIG6H @ 0x30000B
   747                           ;	Configuration Register Write Protection bit
   748                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   749                           ;	Boot Block Write Protection bit
   750                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   751                           ;	Data EEPROM Write Protection bit
   752                           ;	WRTD = OFF, Data EEPROM not write-protected
   753   30000B                     	org	3145739
   754   30000B  E0                 	db	224
   755                           
   756                           ;Config register CONFIG7L @ 0x30000C
   757                           ;	Table Read Protection Block 0
   758                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   759                           ;	Table Read Protection Block 1
   760                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   761                           ;	Table Read Protection Block 2
   762                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   763                           ;	Table Read Protection Block 3
   764                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   765   30000C                     	org	3145740
   766   30000C  0F                 	db	15
   767                           
   768                           ;Config register CONFIG7H @ 0x30000D
   769                           ;	Boot Block Table Read Protection bit
   770                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   771   30000D                     	org	3145741
   772   30000D  40                 	db	64
   773                           tosu	equ	0xFFF
   774                           tosh	equ	0xFFE
   775                           tosl	equ	0xFFD
   776                           stkptr	equ	0xFFC
   777                           pclatu	equ	0xFFB
   778                           pclath	equ	0xFFA
   779                           pcl	equ	0xFF9
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           prodh	equ	0xFF4
   785                           prodl	equ	0xFF3
   786                           indf0	equ	0xFEF
   787                           postinc0	equ	0xFEE
   788                           postdec0	equ	0xFED
   789                           preinc0	equ	0xFEC
   790                           plusw0	equ	0xFEB
   791                           fsr0h	equ	0xFEA
   792                           fsr0l	equ	0xFE9
   793                           wreg	equ	0xFE8
   794                           indf1	equ	0xFE7
   795                           postinc1	equ	0xFE6
   796                           postdec1	equ	0xFE5
   797                           preinc1	equ	0xFE4
   798                           plusw1	equ	0xFE3
   799                           fsr1h	equ	0xFE2
   800                           fsr1l	equ	0xFE1
   801                           bsr	equ	0xFE0
   802                           indf2	equ	0xFDF
   803                           postinc2	equ	0xFDE
   804                           postdec2	equ	0xFDD
   805                           preinc2	equ	0xFDC
   806                           plusw2	equ	0xFDB
   807                           fsr2h	equ	0xFDA
   808                           fsr2l	equ	0xFD9
   809                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Interrupt_Rx->_Receive_Interrupt
    _Receive_Interrupt->_Moving_Platform

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _Configurations
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrupt                                            1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupt_Rx                                         0     0      0      15
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (4) _Receive_Interrupt                                    2     2      0      15
                                              1 COMRAM     2     2      0
                    _Moving_Platform
 ---------------------------------------------------------------------------------
 (5) _Moving_Platform                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Moving_Platform

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       5       1        5.3%
BITBIGSFRlhll       4E      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRhllhh      17      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      42        0.0%
BITBIGSFRhllhl       8      0       0      40        0.0%
BITBIGSFRlhlh        6      0       0      44        0.0%
BITBIGSFRlhh         6      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRhlllh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      47        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Feb 26 11:51:41 2024

                       l57 10EC                         l74 10C0                         l58 10EC  
                       bsr 0FE0                        l811 1092                        l821 10A4  
                      l813 1094                        l805 1074                        l831 10B2  
                      l823 10A6                        l815 109E                        l807 1086  
                      l841 10BC                        l833 10B4                        l825 10AC  
                      l817 10A0                        l809 1088                        l843 10BE  
                      l835 10B6                        l827 10AE                        l819 10A2  
                      l837 10B8                        l829 10B0                        l839 10BA  
                      l867 10E8                 _TXSTA1bits 0FAC                       STR_1 1012  
                     STR_2 1001                       _LATD 0F8C                       _LATE 0F8D  
                     i1l71 001E                       i2l82 1072                       i2l66 10D4  
                     i2l85 10FE                       _main 10E8                       btemp 0006  
                     start 0026               ___param_bank 0000               _BAUDCON1bits 0FB8  
                    ?_main 0001                      i2l851 1040                      i2l845 1024  
                    i2l791 10FA                      i2l847 102C                      i2l855 1048  
                    i2l871 10D0                      i2l929 105C                      i2l849 1036  
                    i2l789 10F6                      i2l869 10C2                      _SPBRG 0FAF  
                    _TRISD 0F95                      _TRISE 0F96                      ttemp5 0007  
                    ttemp6 000A                      ttemp7 000E                      status 0FD8  
                    wtemp8 0007            __initialization 10D8               __end_of_main 10F4  
                   ??_main 0005              __activetblptr 0002          ??_Moving_Platform 0001  
                   _ANSELC 0F3A                     _ANSELD 0F3B                     _ANSELE 0F3C  
                   _RCREG1 0FAE                     _OSCCON 0FD3                     i2u2_40 10D0  
                   i2u2_41 10CC              ?_Interrupt_Rx 0001                     isa$std 0001  
             __mediumconst 0000                     tblptru 0FF8                 __accesstop 0060  
  __end_of__initialization 10DA             ??_Interrupt_Rx 0004              ___rparam_used 0001  
           __pcstackCOMRAM 0001          _Receive_Interrupt 1024         ?_Receive_Interrupt 0001  
      ??_Receive_Interrupt 0002          __end_of_Interrupt 0026  __end_of_Receive_Interrupt 1074  
                  __Hparam 0000                    __Lparam 0000               __psmallconst 1000  
                  __pcinit 10D8                    __ramtop 1000                    __ptext0 10E8  
                  __ptext1 1074                    __ptext4 1024                    __ptext5 10F4  
          _Moving_Platform 10F4       __end_of_Interrupt_Rx 10D8             __pintcode_body 10C2  
     end_of_initialization 10DA              __Lmediumconst 0000                    int_func 10C2  
                _RCSTAbits 0FAB                  _TRISCbits 0F94    __end_of_Moving_Platform 1100  
      start_initialization 10D8             _Configurations 1074                  _Interrupt 0018  
                _Rx_Buffer 0005                __pbssCOMRAM 0005     __end_of_Configurations 10C2  
               ?_Interrupt 0001               _Interrupt_Rx 0008                  __pintcode 0008  
         ?_Moving_Platform 0001                __pintcodelo 0018                __smallconst 1000  
          ?_Configurations 0001                   _LATCbits 0F8B                   _LATEbits 0F8D  
                 _PIE1bits 0F9D                   _PIR1bits 0F9E                   _RCONbits 0FD0  
              ??_Interrupt 0004     Moving_Platform@Command 0001                   __Hrparam 0000  
                 __Lrparam 0000                   isa$xinst 0000                   int$flags 0006  
               _INTCONbits 0FF2                   intlevel1 0000                   intlevel2 0000  
         ??_Configurations 0005  
