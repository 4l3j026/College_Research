

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Mar 17 21:01:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 12/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F46K22 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   001BB6                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _Platform_Status
    72   001BB6  69                 	db	105
    73   000000                     _LATDbits	set	3980
    74   000000                     _T2CONbits	set	4026
    75   000000                     _ANSELC	set	3898
    76   000000                     _OSCCON	set	4051
    77   000000                     _INTCONbits	set	4082
    78   000000                     _CCP5CON	set	3924
    79   000000                     _CCP3CON	set	3933
    80   000000                     _LATCbits	set	3979
    81   000000                     _TRISCbits	set	3988
    82   000000                     _ANSELE	set	3900
    83   000000                     _ANSELD	set	3899
    84   000000                     _PIE1bits	set	3997
    85   000000                     _RCONbits	set	4048
    86   000000                     _TRISE	set	3990
    87   000000                     _TRISD	set	3989
    88   000000                     _LATE	set	3981
    89   000000                     _LATD	set	3980
    90   000000                     _RCSTAbits	set	4011
    91   000000                     _TXSTA1bits	set	4012
    92   000000                     _SPBRG	set	4015
    93   000000                     _PIR1bits	set	3998
    94   000000                     _BAUDCON1bits	set	4024
    95   000000                     _RCREG1	set	4014
    96   000000                     _T2CON	set	4026
    97   000000                     _PR2	set	4027
    98   000000                     _CCPR3L	set	3934
    99   000000                     _CCPR5L	set	3925
   100                           
   101                           	psect	smallconst
   102   001000                     __psmallconst:
   103                           	callstack 0
   104   001000  00                 	db	0
   105   001001  52                 	db	82	;'R'
   106   001002  6F                 	db	111	;'o'
   107   001003  62                 	db	98	;'b'
   108   001004  6F                 	db	111	;'o'
   109   001005  74                 	db	116	;'t'
   110   001006  69                 	db	105	;'i'
   111   001007  63                 	db	99	;'c'
   112   001008  20                 	db	32
   113   001009  50                 	db	80	;'P'
   114   00100A  6C                 	db	108	;'l'
   115   00100B  61                 	db	97	;'a'
   116   00100C  74                 	db	116	;'t'
   117   00100D  66                 	db	102	;'f'
   118   00100E  6F                 	db	111	;'o'
   119   00100F  72                 	db	114	;'r'
   120   001010  6D                 	db	109	;'m'
   121   001011  00                 	db	0
   122   001012  52                 	db	82	;'R'
   123   001013  65                 	db	101	;'e'
   124   001014  73                 	db	115	;'s'
   125   001015  65                 	db	101	;'e'
   126   001016  61                 	db	97	;'a'
   127   001017  72                 	db	114	;'r'
   128   001018  63                 	db	99	;'c'
   129   001019  68                 	db	104	;'h'
   130   00101A  20                 	db	32
   131   00101B  50                 	db	80	;'P'
   132   00101C  72                 	db	114	;'r'
   133   00101D  6F                 	db	111	;'o'
   134   00101E  6A                 	db	106	;'j'
   135   00101F  65                 	db	101	;'e'
   136   001020  63                 	db	99	;'c'
   137   001021  74                 	db	116	;'t'
   138   001022  00                 	db	0
   139   001023                     STR_2:
   140   001023  41                 	db	65	;'A'
   141   001024  75                 	db	117	;'u'
   142   001025  74                 	db	116	;'t'
   143   001026  6F                 	db	111	;'o'
   144   001027  6D                 	db	109	;'m'
   145   001028  61                 	db	97	;'a'
   146   001029  74                 	db	116	;'t'
   147   00102A  69                 	db	105	;'i'
   148   00102B  63                 	db	99	;'c'
   149   00102C  20                 	db	32
   150   00102D  4D                 	db	77	;'M'
   151   00102E  6F                 	db	111	;'o'
   152   00102F  64                 	db	100	;'d'
   153   001030  65                 	db	101	;'e'
   154   001031  00                 	db	0
   155   001032                     STR_1:
   156   001032  20                 	db	32
   157   001033  20                 	db	32
   158   001034  20                 	db	32
   159   001035  4D                 	db	77	;'M'
   160   001036  61                 	db	97	;'a'
   161   001037  6E                 	db	110	;'n'
   162   001038  75                 	db	117	;'u'
   163   001039  61                 	db	97	;'a'
   164   00103A  6C                 	db	108	;'l'
   165   00103B  20                 	db	32
   166   00103C  4D                 	db	77	;'M'
   167   00103D  6F                 	db	111	;'o'
   168   00103E  64                 	db	100	;'d'
   169   00103F  65                 	db	101	;'e'
   170   001040  00                 	db	0
   171   001041                     STR_3:
   172   001041  53                 	db	83	;'S'
   173   001042  65                 	db	101	;'e'
   174   001043  6D                 	db	109	;'m'
   175   001044  69                 	db	105	;'i'
   176   001045  20                 	db	32
   177   001046  4D                 	db	77	;'M'
   178   001047  6F                 	db	111	;'o'
   179   001048  64                 	db	100	;'d'
   180   001049  65                 	db	101	;'e'
   181   00104A  00                 	db	0
   182   00104B  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   001B32                     __pcinit:
   188                           	callstack 0
   189   001B32                     start_initialization:
   190                           	callstack 0
   191   001B32                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (1 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196   001B32  0EB6               	movlw	low __pidataCOMRAM
   197   001B34  6EF6               	movwf	tblptrl,c
   198   001B36  0E1B               	movlw	high __pidataCOMRAM
   199   001B38  6EF7               	movwf	tblptrh,c
   200   001B3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201   001B3C  6EF8               	movwf	tblptru,c
   202   001B3E  0009               	tblrd		*+	;fetch initializer
   203   001B40  CFF5 F035          	movff	tablat,__pdataCOMRAM
   204                           
   205                           ; Clear objects allocated to COMRAM (10 bytes)
   206   001B44  EE00  F02B         	lfsr	0,__pbssCOMRAM
   207   001B48  0E0A               	movlw	10
   208   001B4A                     clear_0:
   209   001B4A  6AEE               	clrf	postinc0,c
   210   001B4C  06E8               	decf	wreg,f,c
   211   001B4E  E1FD               	bnz	clear_0
   212   001B50                     end_of_initialization:
   213                           	callstack 0
   214   001B50                     __end_of__initialization:
   215                           	callstack 0
   216   001B50  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217   001B52  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218   001B54  0E00               	movlw	low (__Lsmallconst shr (0+16))
   219   001B56  6EF8               	movwf	tblptru,c
   220   001B58  0E10               	movlw	high __Lsmallconst
   221   001B5A  6EF7               	movwf	tblptrh,c
   222   001B5C  0100               	movlb	0
   223   001B5E  EFD3  F00D         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMRAM
   226   00002B                     __pbssCOMRAM:
   227                           	callstack 0
   228   00002B                     _Duty_Cycle2:
   229                           	callstack 0
   230   00002B                     	ds	4
   231   00002F                     _Duty_Cycle1:
   232                           	callstack 0
   233   00002F                     	ds	4
   234   000033                     _Manual_Direction:
   235                           	callstack 0
   236   000033                     	ds	1
   237   000034                     _Rx_Buffer:
   238                           	callstack 0
   239   000034                     	ds	1
   240                           
   241                           	psect	dataCOMRAM
   242   000035                     __pdataCOMRAM:
   243                           	callstack 0
   244   000035                     _Platform_Status:
   245                           	callstack 0
   246   000035                     	ds	1
   247                           
   248                           	psect	cstackBANK0
   249   000060                     __pcstackBANK0:
   250                           	callstack 0
   251   000060                     LCD_Instruction@Instruction:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x0
   255   000060                     	ds	1
   256   000061                     Send_Instruction_Data@Data:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260   000061                     	ds	1
   261   000062                     Send_Instruction_Data@Instruction:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x2
   265   000062                     	ds	1
   266   000063                     ??_Init_LCD:
   267                           
   268                           ; 1 bytes @ 0x3
   269   000063                     	ds	2
   270                           
   271                           	psect	cstackCOMRAM
   272   000001                     __pcstackCOMRAM:
   273                           	callstack 0
   274   000001                     ??i2_LCD_Instruction:
   275   000001                     ?___flmul:
   276                           	callstack 0
   277   000001                     ?___fltol:
   278                           	callstack 0
   279   000001                     ___fltol@f1:
   280                           	callstack 0
   281   000001                     ___flmul@b:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0x0
   285   000001                     	ds	1
   286   000002                     i2LCD_Instruction@Instruction:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x1
   290   000002                     	ds	1
   291   000003                     i2Send_Instruction_Data@Data:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x2
   295   000003                     	ds	1
   296   000004                     i2Send_Instruction_Data@Instruction:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x3
   300   000004                     	ds	1
   301   000005                     ??___fltol:
   302   000005                     Send_String@String:
   303                           	callstack 0
   304   000005                     ___flmul@a:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x4
   308   000005                     	ds	1
   309   000006                     ??_Send_String:
   310                           
   311                           ; 1 bytes @ 0x5
   312   000006                     	ds	1
   313   000007                     Send_String@i:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x6
   317   000007                     	ds	2
   318   000009                     ??___flmul:
   319   000009                     ___fltol@sign1:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x8
   323   000009                     	ds	1
   324   00000A                     ___fltol@exp1:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x9
   328   00000A                     	ds	3
   329   00000D                     ___flmul@sign:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xC
   333   00000D                     	ds	1
   334   00000E                     ___flmul@grs:
   335                           	callstack 0
   336                           
   337                           ; 4 bytes @ 0xD
   338   00000E                     	ds	4
   339   000012                     ___flmul@aexp:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x11
   343   000012                     	ds	1
   344   000013                     ___flmul@bexp:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x12
   348   000013                     	ds	1
   349   000014                     ___flmul@prod:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x13
   353   000014                     	ds	4
   354   000018                     ___flmul@temp:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x17
   358   000018                     	ds	2
   359   00001A                     Driver_Control@PWM_RMotor:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x19
   363   00001A                     	ds	4
   364   00001E                     Driver_Control@PWM_LMotor:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x1D
   368   00001E                     	ds	4
   369   000022                     Driver_Control@Direction:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x21
   373   000022                     	ds	1
   374   000023                     ??_Interrupt_Rx:
   375                           
   376                           ; 1 bytes @ 0x22
   377   000023                     	ds	6
   378   000029                     ??_Interrupt:
   379                           
   380                           ; 1 bytes @ 0x28
   381   000029                     	ds	1
   382   00002A                     ??_LCD_Instruction:
   383                           
   384                           ; 1 bytes @ 0x29
   385   00002A                     	ds	1
   386   00002B                     
   387                           ; 1 bytes @ 0x2A
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 54 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels required when called: 9
   413 ;; This function calls:
   414 ;;		_Configurations
   415 ;;		_Init_LCD
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text0
   422   001BA6                     __ptext0:
   423                           	callstack 0
   424   001BA6                     _main:
   425                           	callstack 22
   426   001BA6                     
   427                           ;main.c: 57:     Configurations();
   428   001BA6  ECEC  F00C         	call	_Configurations	;wreg free
   429   001BAA                     
   430                           ;main.c: 58:     Init_LCD();
   431   001BAA  EC91  F00C         	call	_Init_LCD	;wreg free
   432   001BAE                     l87:
   433   001BAE  EFD7  F00D         	goto	l87
   434   001BB2  EF13  F000         	goto	start
   435   001BB6                     __end_of_main:
   436                           	callstack 0
   437                           
   438 ;; *************** function _Init_LCD *****************
   439 ;; Defined at:
   440 ;;		line 5 in file "LCD_Library.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;Total ram usage:        2 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 8
   461 ;; This function calls:
   462 ;;		_Send_Instruction_Data
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text1
   469   001922                     __ptext1:
   470                           	callstack 0
   471   001922                     _Init_LCD:
   472                           	callstack 22
   473   001922                     
   474                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   475   001922  0E03               	movlw	3
   476   001924  0100               	movlb	0	; () banked
   477   001926  6F64               	movwf	(??_Init_LCD+1)& (0+255),b
   478   001928  0E08               	movlw	8
   479   00192A  6F63               	movwf	??_Init_LCD& (0+255),b
   480   00192C  0E77               	movlw	119
   481   00192E                     u1167:
   482   00192E  2EE8               	decfsz	wreg,f,c
   483   001930  D7FE               	bra	u1167
   484   001932  2F63               	decfsz	??_Init_LCD& (0+255),f,b
   485   001934  D7FC               	bra	u1167
   486   001936  2F64               	decfsz	(??_Init_LCD+1)& (0+255),f,b
   487   001938  D7FA               	bra	u1167
   488   00193A                     
   489                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   490   00193A  0E30               	movlw	48
   491   00193C  0100               	movlb	0	; () banked
   492   00193E  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   493   001940  0E00               	movlw	0
   494   001942  ECB1  F00D         	call	_Send_Instruction_Data
   495   001946                     
   496                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   497   001946  0E1A               	movlw	26
   498   001948  0100               	movlb	0	; () banked
   499   00194A  6F63               	movwf	??_Init_LCD& (0+255),b
   500   00194C  0EF8               	movlw	248
   501   00194E                     u1177:
   502   00194E  2EE8               	decfsz	wreg,f,c
   503   001950  D7FE               	bra	u1177
   504   001952  2F63               	decfsz	??_Init_LCD& (0+255),f,b
   505   001954  D7FC               	bra	u1177
   506   001956  0000               	nop	
   507                           
   508                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   509   001958  0E30               	movlw	48
   510   00195A  0100               	movlb	0	; () banked
   511   00195C  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   512   00195E  0E00               	movlw	0
   513   001960  ECB1  F00D         	call	_Send_Instruction_Data
   514   001964                     
   515                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   516   001964  0E1A               	movlw	26
   517   001966  0100               	movlb	0	; () banked
   518   001968  6F63               	movwf	??_Init_LCD& (0+255),b
   519   00196A  0EF8               	movlw	248
   520   00196C                     u1187:
   521   00196C  2EE8               	decfsz	wreg,f,c
   522   00196E  D7FE               	bra	u1187
   523   001970  2F63               	decfsz	??_Init_LCD& (0+255),f,b
   524   001972  D7FC               	bra	u1187
   525   001974  0000               	nop	
   526   001976                     
   527                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   528   001976  0E30               	movlw	48
   529   001978  0100               	movlb	0	; () banked
   530   00197A  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   531   00197C  0E00               	movlw	0
   532   00197E  ECB1  F00D         	call	_Send_Instruction_Data
   533   001982                     
   534                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   535   001982  0E02               	movlw	2
   536   001984  0100               	movlb	0	; () banked
   537   001986  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   538   001988  0E00               	movlw	0
   539   00198A  ECB1  F00D         	call	_Send_Instruction_Data
   540   00198E                     
   541                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   542   00198E  0E06               	movlw	6
   543   001990  0100               	movlb	0	; () banked
   544   001992  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   545   001994  0E00               	movlw	0
   546   001996  ECB1  F00D         	call	_Send_Instruction_Data
   547   00199A                     
   548                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   549   00199A  0E0F               	movlw	15
   550   00199C  0100               	movlb	0	; () banked
   551   00199E  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   552   0019A0  0E00               	movlw	0
   553   0019A2  ECB1  F00D         	call	_Send_Instruction_Data
   554   0019A6                     
   555                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   556   0019A6  0E28               	movlw	40
   557   0019A8  0100               	movlb	0	; () banked
   558   0019AA  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   559   0019AC  0E00               	movlw	0
   560   0019AE  ECB1  F00D         	call	_Send_Instruction_Data
   561   0019B2                     
   562                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   563   0019B2  0E01               	movlw	1
   564   0019B4  0100               	movlb	0	; () banked
   565   0019B6  6F61               	movwf	Send_Instruction_Data@Data& (0+255),b
   566   0019B8  0E00               	movlw	0
   567   0019BA  ECB1  F00D         	call	_Send_Instruction_Data
   568   0019BE                     
   569                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   570   0019BE  0E03               	movlw	3
   571   0019C0  0100               	movlb	0	; () banked
   572   0019C2  6F64               	movwf	(??_Init_LCD+1)& (0+255),b
   573   0019C4  0E08               	movlw	8
   574   0019C6  6F63               	movwf	??_Init_LCD& (0+255),b
   575   0019C8  0E77               	movlw	119
   576   0019CA                     u1197:
   577   0019CA  2EE8               	decfsz	wreg,f,c
   578   0019CC  D7FE               	bra	u1197
   579   0019CE  2F63               	decfsz	??_Init_LCD& (0+255),f,b
   580   0019D0  D7FC               	bra	u1197
   581   0019D2  2F64               	decfsz	(??_Init_LCD+1)& (0+255),f,b
   582   0019D4  D7FA               	bra	u1197
   583   0019D6  0012               	return		;funcret
   584   0019D8                     __end_of_Init_LCD:
   585                           	callstack 0
   586                           
   587 ;; *************** function _Send_Instruction_Data *****************
   588 ;; Defined at:
   589 ;;		line 24 in file "LCD_Library.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  Instruction     1    wreg     unsigned char 
   592 ;;  Data            1    1[BANK0 ] unsigned char 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  Instruction     1    2[BANK0 ] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   604 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;Total ram usage:        2 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 7
   611 ;; This function calls:
   612 ;;		_LCD_Instruction
   613 ;; This function is called by:
   614 ;;		_Init_LCD
   615 ;;		_Init_Message_Platform
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text2
   620   001B62                     __ptext2:
   621                           	callstack 0
   622   001B62                     _Send_Instruction_Data:
   623                           	callstack 22
   624                           
   625                           ;incstack = 0
   626                           ;Send_Instruction_Data@Instruction stored from wreg
   627   001B62  0100               	movlb	0	; () banked
   628   001B64  6F62               	movwf	Send_Instruction_Data@Instruction& (0+255),b
   629   001B66                     
   630                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   631   001B66  0100               	movlb	0	; () banked
   632   001B68  B162               	btfsc	Send_Instruction_Data@Instruction& (0+255),0,b
   633   001B6A  D002               	bra	u1155
   634   001B6C  988B               	bcf	139,4,c	;volatile
   635   001B6E  D001               	bra	u1156
   636   001B70                     u1155:
   637   001B70  888B               	bsf	139,4,c	;volatile
   638   001B72                     u1156:
   639   001B72                     
   640                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   641   001B72  0100               	movlb	0	; () banked
   642   001B74  3961               	swapf	Send_Instruction_Data@Data& (0+255),w,b
   643   001B76  0B0F               	andlw	15
   644   001B78  EC40  F00D         	call	_LCD_Instruction
   645   001B7C                     
   646                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
   647   001B7C  0100               	movlb	0	; () banked
   648   001B7E  5161               	movf	Send_Instruction_Data@Data& (0+255),w,b
   649   001B80  0B0F               	andlw	15
   650   001B82  EC40  F00D         	call	_LCD_Instruction
   651   001B86  0012               	return		;funcret
   652   001B88                     __end_of_Send_Instruction_Data:
   653                           	callstack 0
   654                           
   655 ;; *************** function _LCD_Instruction *****************
   656 ;; Defined at:
   657 ;;		line 33 in file "LCD_Library.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  Instruction     1    wreg     unsigned char 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  Instruction     1    0[BANK0 ] unsigned char 
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;Total ram usage:        2 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 6
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_Send_Instruction_Data
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text3
   686   001A80                     __ptext3:
   687                           	callstack 0
   688   001A80                     _LCD_Instruction:
   689                           	callstack 22
   690                           
   691                           ;incstack = 0
   692                           ;LCD_Instruction@Instruction stored from wreg
   693   001A80  0100               	movlb	0	; () banked
   694   001A82  6F60               	movwf	LCD_Instruction@Instruction& (0+255),b
   695   001A84                     
   696                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   697   001A84  8A8B               	bsf	139,5,c	;volatile
   698   001A86                     
   699                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   700   001A86  0E4E               	movlw	78
   701   001A88  6E2A               	movwf	??_LCD_Instruction^0,c
   702   001A8A  0EEB               	movlw	235
   703   001A8C                     u1207:
   704   001A8C  2EE8               	decfsz	wreg,f,c
   705   001A8E  D7FE               	bra	u1207
   706   001A90  2E2A               	decfsz	??_LCD_Instruction^0,f,c
   707   001A92  D7FC               	bra	u1207
   708   001A94  0000               	nop	
   709   001A96                     
   710                           ;LCD_Library.c: 37:     LATD = Instruction;
   711   001A96  C060  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   712   001A9A                     
   713                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   714   001A9A  0E4E               	movlw	78
   715   001A9C  6E2A               	movwf	??_LCD_Instruction^0,c
   716   001A9E  0EEB               	movlw	235
   717   001AA0                     u1217:
   718   001AA0  2EE8               	decfsz	wreg,f,c
   719   001AA2  D7FE               	bra	u1217
   720   001AA4  2E2A               	decfsz	??_LCD_Instruction^0,f,c
   721   001AA6  D7FC               	bra	u1217
   722   001AA8  0000               	nop	
   723   001AAA                     
   724                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   725   001AAA  9A8B               	bcf	139,5,c	;volatile
   726   001AAC                     
   727                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   728   001AAC  0E4E               	movlw	78
   729   001AAE  6E2A               	movwf	??_LCD_Instruction^0,c
   730   001AB0  0EEB               	movlw	235
   731   001AB2                     u1227:
   732   001AB2  2EE8               	decfsz	wreg,f,c
   733   001AB4  D7FE               	bra	u1227
   734   001AB6  2E2A               	decfsz	??_LCD_Instruction^0,f,c
   735   001AB8  D7FC               	bra	u1227
   736   001ABA  0000               	nop	
   737   001ABC  0012               	return		;funcret
   738   001ABE                     __end_of_LCD_Instruction:
   739                           	callstack 0
   740                           
   741 ;; *************** function _Configurations *****************
   742 ;; Defined at:
   743 ;;		line 71 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 6
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text4
   772   0019D8                     __ptext4:
   773                           	callstack 0
   774   0019D8                     _Configurations:
   775                           	callstack 24
   776   0019D8                     
   777                           ;main.c: 73:     OSCCON = 0x72;
   778   0019D8  0E72               	movlw	114
   779   0019DA  6ED3               	movwf	211,c	;volatile
   780                           
   781                           ;main.c: 75:     ANSELC = 0;
   782   0019DC  0E00               	movlw	0
   783   0019DE  010F               	movlb	15	; () banked
   784   0019E0  6F3A               	movwf	58,b	;volatile
   785                           
   786                           ;main.c: 76:     ANSELD = 0;
   787   0019E2  0E00               	movlw	0
   788   0019E4  6F3B               	movwf	59,b	;volatile
   789                           
   790                           ;main.c: 77:     ANSELE = 0;
   791   0019E6  0E00               	movlw	0
   792   0019E8  6F3C               	movwf	60,b	;volatile
   793   0019EA                     
   794                           ; BSR set to: 15
   795                           ;main.c: 81:     TRISCbits.RC4 = 0;
   796   0019EA  9894               	bcf	148,4,c	;volatile
   797   0019EC                     
   798                           ; BSR set to: 15
   799                           ;main.c: 82:     TRISCbits.RC5 = 0;
   800   0019EC  9A94               	bcf	148,5,c	;volatile
   801                           
   802                           ;main.c: 83:     TRISD = 0;
   803   0019EE  0E00               	movlw	0
   804   0019F0  6E95               	movwf	149,c	;volatile
   805                           
   806                           ;main.c: 84:     TRISE = 0;
   807   0019F2  0E00               	movlw	0
   808   0019F4  6E96               	movwf	150,c	;volatile
   809   0019F6                     
   810                           ; BSR set to: 15
   811                           ;main.c: 87:     LATCbits.LC4 = 0;
   812   0019F6  988B               	bcf	139,4,c	;volatile
   813   0019F8                     
   814                           ; BSR set to: 15
   815                           ;main.c: 88:     LATCbits.LC5 = 0;
   816   0019F8  9A8B               	bcf	139,5,c	;volatile
   817                           
   818                           ;main.c: 89:     LATD = 0;
   819   0019FA  0E00               	movlw	0
   820   0019FC  6E8C               	movwf	140,c	;volatile
   821                           
   822                           ;main.c: 90:     LATE = 0;
   823   0019FE  0E00               	movlw	0
   824   001A00  6E8D               	movwf	141,c	;volatile
   825   001A02                     
   826                           ; BSR set to: 15
   827                           ;main.c: 93:     INTCONbits.GIE = 1;
   828   001A02  8EF2               	bsf	242,7,c	;volatile
   829   001A04                     
   830                           ; BSR set to: 15
   831                           ;main.c: 94:     INTCONbits.PEIE = 1;
   832   001A04  8CF2               	bsf	242,6,c	;volatile
   833   001A06                     
   834                           ; BSR set to: 15
   835                           ;main.c: 95:     RCONbits.IPEN = 1;
   836   001A06  8ED0               	bsf	208,7,c	;volatile
   837   001A08                     
   838                           ; BSR set to: 15
   839                           ;main.c: 97:     PIE1bits.RC1IE = 1;
   840   001A08  8A9D               	bsf	157,5,c	;volatile
   841   001A0A                     
   842                           ; BSR set to: 15
   843                           ;main.c: 98:     PIR1bits.RC1IF = 0;
   844   001A0A  9A9E               	bcf	158,5,c	;volatile
   845                           
   846                           ;main.c: 101:     SPBRG = 103;
   847   001A0C  0E67               	movlw	103
   848   001A0E  6EAF               	movwf	175,c	;volatile
   849   001A10                     
   850                           ; BSR set to: 15
   851                           ;main.c: 102:     TRISCbits.RC6 = 1;
   852   001A10  8C94               	bsf	148,6,c	;volatile
   853   001A12                     
   854                           ; BSR set to: 15
   855                           ;main.c: 103:     TRISCbits.RC7 = 1;
   856   001A12  8E94               	bsf	148,7,c	;volatile
   857   001A14                     
   858                           ; BSR set to: 15
   859                           ;main.c: 106:     TXSTA1bits.TX91 = 0;
   860   001A14  9CAC               	bcf	172,6,c	;volatile
   861   001A16                     
   862                           ; BSR set to: 15
   863                           ;main.c: 107:     TXSTA1bits.TXEN1 = 1;
   864   001A16  8AAC               	bsf	172,5,c	;volatile
   865   001A18                     
   866                           ; BSR set to: 15
   867                           ;main.c: 108:     TXSTA1bits.SYNC1 = 0;
   868   001A18  98AC               	bcf	172,4,c	;volatile
   869   001A1A                     
   870                           ; BSR set to: 15
   871                           ;main.c: 109:     TXSTA1bits.BRGH1 = 1;
   872   001A1A  84AC               	bsf	172,2,c	;volatile
   873   001A1C                     
   874                           ; BSR set to: 15
   875                           ;main.c: 112:     RCSTAbits.SPEN1 = 1;
   876   001A1C  8EAB               	bsf	171,7,c	;volatile
   877   001A1E                     
   878                           ; BSR set to: 15
   879                           ;main.c: 113:     RCSTAbits.RX91 = 0;
   880   001A1E  9CAB               	bcf	171,6,c	;volatile
   881   001A20                     
   882                           ; BSR set to: 15
   883                           ;main.c: 114:     RCSTAbits.CREN1 = 1;
   884   001A20  88AB               	bsf	171,4,c	;volatile
   885   001A22                     
   886                           ; BSR set to: 15
   887                           ;main.c: 117:     BAUDCON1bits.BRG16 = 0;
   888   001A22  96B8               	bcf	184,3,c	;volatile
   889                           
   890                           ;main.c: 129:     PR2 = 0xF9;
   891   001A24  0EF9               	movlw	249
   892   001A26  6EBB               	movwf	187,c	;volatile
   893                           
   894                           ;main.c: 130:     T2CON = 0x00;
   895   001A28  0E00               	movlw	0
   896   001A2A  6EBA               	movwf	186,c	;volatile
   897                           
   898                           ;main.c: 131:     CCP3CON = 0x0C;
   899   001A2C  0E0C               	movlw	12
   900   001A2E  6F5D               	movwf	93,b	;volatile
   901                           
   902                           ;main.c: 132:     CCPR3L = 0xFA;
   903   001A30  0EFA               	movlw	250
   904   001A32  6F5E               	movwf	94,b	;volatile
   905                           
   906                           ;main.c: 133:     CCP5CON = 0x0C;
   907   001A34  0E0C               	movlw	12
   908   001A36  6F54               	movwf	84,b	;volatile
   909                           
   910                           ;main.c: 134:     CCPR5L = 0xFA;
   911   001A38  0EFA               	movlw	250
   912   001A3A  6F55               	movwf	85,b	;volatile
   913   001A3C                     
   914                           ; BSR set to: 15
   915                           ;main.c: 135:     T2CONbits.TMR2ON = 1;
   916   001A3C  84BA               	bsf	186,2,c	;volatile
   917   001A3E                     
   918                           ; BSR set to: 15
   919   001A3E  0012               	return		;funcret
   920   001A40                     __end_of_Configurations:
   921                           	callstack 0
   922                           
   923 ;; *************** function _Interrupt *****************
   924 ;; Defined at:
   925 ;;		line 149 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		None
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;Total ram usage:        1 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 5
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		Interrupt level 1
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	intcodelo
   954   000018                     __pintcodelo:
   955                           	callstack 0
   956   000018                     _Interrupt:
   957                           	callstack 22
   958                           
   959                           ; BSR set to: 15
   960                           ;incstack = 0
   961   000018  8036               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   962   00001A  CFE0 F029          	movff	bsr,??_Interrupt
   963   00001E  C029  FFE0         	movff	??_Interrupt,bsr
   964   000022  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   965   000024  0010               	retfie	
   966   000026                     __end_of_Interrupt:
   967                           	callstack 0
   968                           
   969 ;; *************** function _Interrupt_Rx *****************
   970 ;; Defined at:
   971 ;;		line 141 in file "main.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        6 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 4
   992 ;; This function calls:
   993 ;;		_Bluetooth_Receiver
   994 ;; This function is called by:
   995 ;;		Interrupt level 2
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	intcode
  1000   000008                     __pintcode:
  1001                           	callstack 0
  1002   000008                     _Interrupt_Rx:
  1003                           	callstack 22
  1004                           
  1005                           ;incstack = 0
  1006   000008  8236               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1007   00000A  EF7D  F00D         	goto	int_func
  1008                           
  1009                           	psect	intcode_body
  1010   001AFA                     __pintcode_body:
  1011                           	callstack 22
  1012   001AFA                     int_func:
  1013                           	callstack 22
  1014   001AFA  CFF3 F023          	movff	prodl,??_Interrupt_Rx
  1015   001AFE  CFF4 F024          	movff	prodh,??_Interrupt_Rx+1
  1016   001B02  CFF6 F025          	movff	tblptrl,??_Interrupt_Rx+2
  1017   001B06  CFF7 F026          	movff	tblptrh,??_Interrupt_Rx+3
  1018   001B0A  CFF8 F027          	movff	tblptru,??_Interrupt_Rx+4
  1019   001B0E  CFF5 F028          	movff	tablat,??_Interrupt_Rx+5
  1020   001B12                     
  1021                           ;main.c: 143:     Bluetooth_Receiver();
  1022   001B12  EC3B  F00A         	call	_Bluetooth_Receiver	;wreg free
  1023   001B16  C028  FFF5         	movff	??_Interrupt_Rx+5,tablat
  1024   001B1A  C027  FFF8         	movff	??_Interrupt_Rx+4,tblptru
  1025   001B1E  C026  FFF7         	movff	??_Interrupt_Rx+3,tblptrh
  1026   001B22  C025  FFF6         	movff	??_Interrupt_Rx+2,tblptrl
  1027   001B26  C024  FFF4         	movff	??_Interrupt_Rx+1,prodh
  1028   001B2A  C023  FFF3         	movff	??_Interrupt_Rx,prodl
  1029   001B2E  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1030   001B30  0011               	retfie		f
  1031   001B32                     __end_of_Interrupt_Rx:
  1032                           	callstack 0
  1033                           
  1034 ;; *************** function _Bluetooth_Receiver *****************
  1035 ;; Defined at:
  1036 ;;		line 157 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 3
  1057 ;; This function calls:
  1058 ;;		_Driver_Control
  1059 ;;		_Send_String
  1060 ;;		i2_Send_Instruction_Data
  1061 ;; This function is called by:
  1062 ;;		_Interrupt_Rx
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text7
  1067   001476                     __ptext7:
  1068                           	callstack 0
  1069   001476                     _Bluetooth_Receiver:
  1070                           	callstack 22
  1071   001476                     
  1072                           ;main.c: 159:     if (PIR1bits.RC1IF) {
  1073   001476  AA9E               	btfss	158,5,c	;volatile
  1074   001478  EF40  F00A         	goto	i2u92_41
  1075   00147C  EF42  F00A         	goto	i2u92_40
  1076   001480                     i2u92_41:
  1077   001480  EF3F  F00B         	goto	i2l122
  1078   001484                     i2u92_40:
  1079   001484                     
  1080                           ;main.c: 161:         Rx_Buffer = RCREG1;
  1081   001484  CFAE F034          	movff	4014,_Rx_Buffer	;volatile
  1082   001488                     
  1083                           ;main.c: 163:         if (Rx_Buffer == 'M') {
  1084   001488  0E4D               	movlw	77
  1085   00148A  1834               	xorwf	_Rx_Buffer^0,w,c
  1086   00148C  A4D8               	btfss	status,2,c
  1087   00148E  EF4B  F00A         	goto	i2u93_41
  1088   001492  EF4D  F00A         	goto	i2u93_40
  1089   001496                     i2u93_41:
  1090   001496  EF61  F00A         	goto	i2l1562
  1091   00149A                     i2u93_40:
  1092   00149A                     
  1093                           ;main.c: 166:             Send_Instruction_Data(0, 0x01);
  1094   00149A  0E01               	movlw	1
  1095   00149C  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1096   00149E  0E00               	movlw	0
  1097   0014A0  ECC4  F00D         	call	i2_Send_Instruction_Data
  1098                           
  1099                           ;main.c: 167:             Send_Instruction_Data(0, 0X80);
  1100   0014A4  0E80               	movlw	128
  1101   0014A6  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1102   0014A8  0E00               	movlw	0
  1103   0014AA  ECC4  F00D         	call	i2_Send_Instruction_Data
  1104   0014AE                     
  1105                           ;main.c: 168:             Send_String("   Manual Mode");
  1106   0014AE  0E32               	movlw	low STR_1
  1107   0014B0  6E05               	movwf	Send_String@String^0,c
  1108   0014B2  EC20  F00D         	call	_Send_String	;wreg free
  1109   0014B6                     
  1110                           ;main.c: 169:             Manual_Direction = '0';
  1111   0014B6  0E30               	movlw	48
  1112   0014B8  6E33               	movwf	_Manual_Direction^0,c
  1113   0014BA                     
  1114                           ;main.c: 170:             Platform_Status = 'M';
  1115   0014BA  0E4D               	movlw	77
  1116   0014BC  6E35               	movwf	_Platform_Status^0,c
  1117                           
  1118                           ;main.c: 173:         } else if (Rx_Buffer == 'A') {
  1119   0014BE  EF3F  F00B         	goto	i2l122
  1120   0014C2                     i2l1562:
  1121   0014C2  0E41               	movlw	65
  1122   0014C4  1834               	xorwf	_Rx_Buffer^0,w,c
  1123   0014C6  A4D8               	btfss	status,2,c
  1124   0014C8  EF68  F00A         	goto	i2u94_41
  1125   0014CC  EF6A  F00A         	goto	i2u94_40
  1126   0014D0                     i2u94_41:
  1127   0014D0  EF7E  F00A         	goto	i2l1572
  1128   0014D4                     i2u94_40:
  1129   0014D4                     
  1130                           ;main.c: 176:             Send_Instruction_Data(0, 0x01);
  1131   0014D4  0E01               	movlw	1
  1132   0014D6  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1133   0014D8  0E00               	movlw	0
  1134   0014DA  ECC4  F00D         	call	i2_Send_Instruction_Data
  1135                           
  1136                           ;main.c: 177:             Send_Instruction_Data(0, 0xC0);
  1137   0014DE  0EC0               	movlw	192
  1138   0014E0  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1139   0014E2  0E00               	movlw	0
  1140   0014E4  ECC4  F00D         	call	i2_Send_Instruction_Data
  1141   0014E8                     
  1142                           ;main.c: 178:             Send_String("Automatic Mode");
  1143   0014E8  0E23               	movlw	low STR_2
  1144   0014EA  6E05               	movwf	Send_String@String^0,c
  1145   0014EC  EC20  F00D         	call	_Send_String	;wreg free
  1146   0014F0                     
  1147                           ;main.c: 179:             Manual_Direction = '0';
  1148   0014F0  0E30               	movlw	48
  1149   0014F2  6E33               	movwf	_Manual_Direction^0,c
  1150   0014F4                     
  1151                           ;main.c: 180:             Platform_Status = 'A';
  1152   0014F4  0E41               	movlw	65
  1153   0014F6  6E35               	movwf	_Platform_Status^0,c
  1154                           
  1155                           ;main.c: 182:         } else if (Rx_Buffer == 'S') {
  1156   0014F8  EF3F  F00B         	goto	i2l122
  1157   0014FC                     i2l1572:
  1158   0014FC  0E53               	movlw	83
  1159   0014FE  1834               	xorwf	_Rx_Buffer^0,w,c
  1160   001500  A4D8               	btfss	status,2,c
  1161   001502  EF85  F00A         	goto	i2u95_41
  1162   001506  EF87  F00A         	goto	i2u95_40
  1163   00150A                     i2u95_41:
  1164   00150A  EF9B  F00A         	goto	i2l1582
  1165   00150E                     i2u95_40:
  1166   00150E                     
  1167                           ;main.c: 185:             Send_Instruction_Data(0, 0x01);
  1168   00150E  0E01               	movlw	1
  1169   001510  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1170   001512  0E00               	movlw	0
  1171   001514  ECC4  F00D         	call	i2_Send_Instruction_Data
  1172                           
  1173                           ;main.c: 186:             Send_Instruction_Data(0, 0X94);
  1174   001518  0E94               	movlw	148
  1175   00151A  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1176   00151C  0E00               	movlw	0
  1177   00151E  ECC4  F00D         	call	i2_Send_Instruction_Data
  1178   001522                     
  1179                           ;main.c: 187:             Send_String("Semi Mode");
  1180   001522  0E41               	movlw	low STR_3
  1181   001524  6E05               	movwf	Send_String@String^0,c
  1182   001526  EC20  F00D         	call	_Send_String	;wreg free
  1183   00152A                     
  1184                           ;main.c: 188:             Manual_Direction = '0';
  1185   00152A  0E30               	movlw	48
  1186   00152C  6E33               	movwf	_Manual_Direction^0,c
  1187   00152E                     
  1188                           ;main.c: 189:             Platform_Status = 'S';
  1189   00152E  0E53               	movlw	83
  1190   001530  6E35               	movwf	_Platform_Status^0,c
  1191                           
  1192                           ;main.c: 191:         } else if (Rx_Buffer == 'F' && Platform_Status == 'M') {
  1193   001532  EF3F  F00B         	goto	i2l122
  1194   001536                     i2l1582:
  1195   001536  0E46               	movlw	70
  1196   001538  1834               	xorwf	_Rx_Buffer^0,w,c
  1197   00153A  A4D8               	btfss	status,2,c
  1198   00153C  EFA2  F00A         	goto	i2u96_41
  1199   001540  EFA4  F00A         	goto	i2u96_40
  1200   001544                     i2u96_41:
  1201   001544  EFC3  F00A         	goto	i2l1588
  1202   001548                     i2u96_40:
  1203   001548  0E4D               	movlw	77
  1204   00154A  1835               	xorwf	_Platform_Status^0,w,c
  1205   00154C  A4D8               	btfss	status,2,c
  1206   00154E  EFAB  F00A         	goto	i2u97_41
  1207   001552  EFAD  F00A         	goto	i2u97_40
  1208   001556                     i2u97_41:
  1209   001556  EFC3  F00A         	goto	i2l1588
  1210   00155A                     i2u97_40:
  1211   00155A                     
  1212                           ;main.c: 194:             Driver_Control(1023.0, 1023.0, 'F');
  1213   00155A  0E00               	movlw	0
  1214   00155C  6E1A               	movwf	Driver_Control@PWM_RMotor^0,c
  1215   00155E  0EC0               	movlw	192
  1216   001560  6E1B               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
  1217   001562  0E7F               	movlw	127
  1218   001564  6E1C               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
  1219   001566  0E44               	movlw	68
  1220   001568  6E1D               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
  1221   00156A  0E00               	movlw	0
  1222   00156C  6E1E               	movwf	Driver_Control@PWM_LMotor^0,c
  1223   00156E  0EC0               	movlw	192
  1224   001570  6E1F               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
  1225   001572  0E7F               	movlw	127
  1226   001574  6E20               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
  1227   001576  0E44               	movlw	68
  1228   001578  6E21               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
  1229   00157A  0E46               	movlw	70
  1230   00157C  6E22               	movwf	Driver_Control@Direction^0,c
  1231   00157E  EC40  F00B         	call	_Driver_Control	;wreg free
  1232                           
  1233                           ;main.c: 196:         } else if (Rx_Buffer == 'B' && Platform_Status == 'M') {
  1234   001582  EF3F  F00B         	goto	i2l122
  1235   001586                     i2l1588:
  1236   001586  0E42               	movlw	66
  1237   001588  1834               	xorwf	_Rx_Buffer^0,w,c
  1238   00158A  A4D8               	btfss	status,2,c
  1239   00158C  EFCA  F00A         	goto	i2u98_41
  1240   001590  EFCC  F00A         	goto	i2u98_40
  1241   001594                     i2u98_41:
  1242   001594  EFEB  F00A         	goto	i2l1594
  1243   001598                     i2u98_40:
  1244   001598  0E4D               	movlw	77
  1245   00159A  1835               	xorwf	_Platform_Status^0,w,c
  1246   00159C  A4D8               	btfss	status,2,c
  1247   00159E  EFD3  F00A         	goto	i2u99_41
  1248   0015A2  EFD5  F00A         	goto	i2u99_40
  1249   0015A6                     i2u99_41:
  1250   0015A6  EFEB  F00A         	goto	i2l1594
  1251   0015AA                     i2u99_40:
  1252   0015AA                     
  1253                           ;main.c: 199:             Driver_Control(1023.0, 1023.0, 'B');
  1254   0015AA  0E00               	movlw	0
  1255   0015AC  6E1A               	movwf	Driver_Control@PWM_RMotor^0,c
  1256   0015AE  0EC0               	movlw	192
  1257   0015B0  6E1B               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
  1258   0015B2  0E7F               	movlw	127
  1259   0015B4  6E1C               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
  1260   0015B6  0E44               	movlw	68
  1261   0015B8  6E1D               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
  1262   0015BA  0E00               	movlw	0
  1263   0015BC  6E1E               	movwf	Driver_Control@PWM_LMotor^0,c
  1264   0015BE  0EC0               	movlw	192
  1265   0015C0  6E1F               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
  1266   0015C2  0E7F               	movlw	127
  1267   0015C4  6E20               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
  1268   0015C6  0E44               	movlw	68
  1269   0015C8  6E21               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
  1270   0015CA  0E42               	movlw	66
  1271   0015CC  6E22               	movwf	Driver_Control@Direction^0,c
  1272   0015CE  EC40  F00B         	call	_Driver_Control	;wreg free
  1273                           
  1274                           ;main.c: 201:         } else if (Rx_Buffer == 'T' && Platform_Status == 'M') {
  1275   0015D2  EF3F  F00B         	goto	i2l122
  1276   0015D6                     i2l1594:
  1277   0015D6  0E54               	movlw	84
  1278   0015D8  1834               	xorwf	_Rx_Buffer^0,w,c
  1279   0015DA  A4D8               	btfss	status,2,c
  1280   0015DC  EFF2  F00A         	goto	i2u100_41
  1281   0015E0  EFF4  F00A         	goto	i2u100_40
  1282   0015E4                     i2u100_41:
  1283   0015E4  EF13  F00B         	goto	i2l1600
  1284   0015E8                     i2u100_40:
  1285   0015E8  0E4D               	movlw	77
  1286   0015EA  1835               	xorwf	_Platform_Status^0,w,c
  1287   0015EC  A4D8               	btfss	status,2,c
  1288   0015EE  EFFB  F00A         	goto	i2u101_41
  1289   0015F2  EFFD  F00A         	goto	i2u101_40
  1290   0015F6                     i2u101_41:
  1291   0015F6  EF13  F00B         	goto	i2l1600
  1292   0015FA                     i2u101_40:
  1293   0015FA                     
  1294                           ;main.c: 204:             Driver_Control(0.00, 0.00, 'T');
  1295   0015FA  0E00               	movlw	0
  1296   0015FC  6E1A               	movwf	Driver_Control@PWM_RMotor^0,c
  1297   0015FE  0E00               	movlw	0
  1298   001600  6E1B               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
  1299   001602  0E00               	movlw	0
  1300   001604  6E1C               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
  1301   001606  0E00               	movlw	0
  1302   001608  6E1D               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
  1303   00160A  0E00               	movlw	0
  1304   00160C  6E1E               	movwf	Driver_Control@PWM_LMotor^0,c
  1305   00160E  0E00               	movlw	0
  1306   001610  6E1F               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
  1307   001612  0E00               	movlw	0
  1308   001614  6E20               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
  1309   001616  0E00               	movlw	0
  1310   001618  6E21               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
  1311   00161A  0E54               	movlw	84
  1312   00161C  6E22               	movwf	Driver_Control@Direction^0,c
  1313   00161E  EC40  F00B         	call	_Driver_Control	;wreg free
  1314                           
  1315                           ;main.c: 207:         } else if (Rx_Buffer == 'R' && Platform_Status == 'M') {
  1316   001622  EF3F  F00B         	goto	i2l122
  1317   001626                     i2l1600:
  1318   001626  0E52               	movlw	82
  1319   001628  1834               	xorwf	_Rx_Buffer^0,w,c
  1320   00162A  A4D8               	btfss	status,2,c
  1321   00162C  EF1A  F00B         	goto	i2u102_41
  1322   001630  EF1C  F00B         	goto	i2u102_40
  1323   001634                     i2u102_41:
  1324   001634  EF29  F00B         	goto	i2l1606
  1325   001638                     i2u102_40:
  1326   001638  0E4D               	movlw	77
  1327   00163A  1835               	xorwf	_Platform_Status^0,w,c
  1328   00163C  A4D8               	btfss	status,2,c
  1329   00163E  EF23  F00B         	goto	i2u103_41
  1330   001642  EF25  F00B         	goto	i2u103_40
  1331   001646                     i2u103_41:
  1332   001646  EF29  F00B         	goto	i2l1606
  1333   00164A                     i2u103_40:
  1334   00164A                     
  1335                           ;main.c: 209:             Manual_Direction = 'R';
  1336   00164A  0E52               	movlw	82
  1337   00164C  6E33               	movwf	_Manual_Direction^0,c
  1338                           
  1339                           ;main.c: 211:         } else if (Rx_Buffer == 'L' && Platform_Status == 'M') {
  1340   00164E  EF3F  F00B         	goto	i2l122
  1341   001652                     i2l1606:
  1342   001652  0E4C               	movlw	76
  1343   001654  1834               	xorwf	_Rx_Buffer^0,w,c
  1344   001656  A4D8               	btfss	status,2,c
  1345   001658  EF30  F00B         	goto	i2u104_41
  1346   00165C  EF32  F00B         	goto	i2u104_40
  1347   001660                     i2u104_41:
  1348   001660  EF3F  F00B         	goto	i2l116
  1349   001664                     i2u104_40:
  1350   001664  0E4D               	movlw	77
  1351   001666  1835               	xorwf	_Platform_Status^0,w,c
  1352   001668  A4D8               	btfss	status,2,c
  1353   00166A  EF39  F00B         	goto	i2u105_41
  1354   00166E  EF3B  F00B         	goto	i2u105_40
  1355   001672                     i2u105_41:
  1356   001672  EF3F  F00B         	goto	i2l116
  1357   001676                     i2u105_40:
  1358   001676                     
  1359                           ;main.c: 213:             Manual_Direction = 'L';
  1360   001676  0E4C               	movlw	76
  1361   001678  6E33               	movwf	_Manual_Direction^0,c
  1362   00167A  EF3F  F00B         	goto	i2l122
  1363   00167E                     i2l116:
  1364   00167E                     i2l122:
  1365   00167E  0012               	return		;funcret
  1366   001680                     __end_of_Bluetooth_Receiver:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _Send_String *****************
  1370 ;; Defined at:
  1371 ;;		line 46 in file "LCD_Library.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  String          1    4[COMRAM] PTR unsigned char 
  1374 ;;		 -> STR_5(17), STR_4(17), STR_3(10), STR_2(15), 
  1375 ;;		 -> STR_1(15), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  i               1    6[COMRAM] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;Total ram usage:        3 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 2
  1394 ;; This function calls:
  1395 ;;		i2_Send_Instruction_Data
  1396 ;; This function is called by:
  1397 ;;		_Bluetooth_Receiver
  1398 ;;		_Init_Message_Platform
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text8
  1403   001A40                     __ptext8:
  1404                           	callstack 0
  1405   001A40                     _Send_String:
  1406                           	callstack 22
  1407   001A40                     
  1408                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
  1409   001A40  0E00               	movlw	0
  1410   001A42  6E07               	movwf	Send_String@i^0,c
  1411   001A44  EF30  F00D         	goto	i2l1494
  1412   001A48                     i2l1490:
  1413                           
  1414                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
  1415   001A48  5005               	movf	Send_String@String^0,w,c
  1416   001A4A  2407               	addwf	Send_String@i^0,w,c
  1417   001A4C  6E06               	movwf	??_Send_String^0,c
  1418   001A4E  C006  FFF6         	movff	??_Send_String,tblptrl
  1419   001A52                     	if	0	;There is only one active tblptr byte
  1420   001A52                     	endif
  1421   001A52                     	if	0	;tblptru may be non-zero
  1422   001A52                     	endif
  1423   001A52                     	if	0	;tblptru may be non-zero
  1424   001A52                     	endif
  1425   001A52  0008               	tblrd		*
  1426   001A54  CFF5 F003          	movff	tablat,i2Send_Instruction_Data@Data
  1427   001A58  0E01               	movlw	1
  1428   001A5A  ECC4  F00D         	call	i2_Send_Instruction_Data
  1429   001A5E                     
  1430                           ;LCD_Library.c: 52:     }
  1431   001A5E  2A07               	incf	Send_String@i^0,f,c
  1432   001A60                     i2l1494:
  1433   001A60  5005               	movf	Send_String@String^0,w,c
  1434   001A62  2407               	addwf	Send_String@i^0,w,c
  1435   001A64  6E06               	movwf	??_Send_String^0,c
  1436   001A66  C006  FFF6         	movff	??_Send_String,tblptrl
  1437   001A6A                     	if	0	;There is only one active tblptr byte
  1438   001A6A                     	endif
  1439   001A6A                     	if	0	;tblptru may be non-zero
  1440   001A6A                     	endif
  1441   001A6A                     	if	0	;tblptru may be non-zero
  1442   001A6A                     	endif
  1443   001A6A  0008               	tblrd		*
  1444   001A6C  50F5               	movf	tablat,w,c
  1445   001A6E  0900               	iorlw	0
  1446   001A70  A4D8               	btfss	status,2,c
  1447   001A72  EF3D  F00D         	goto	i2u86_41
  1448   001A76  EF3F  F00D         	goto	i2u86_40
  1449   001A7A                     i2u86_41:
  1450   001A7A  EF24  F00D         	goto	i2l1490
  1451   001A7E                     i2u86_40:
  1452   001A7E  0012               	return		;funcret
  1453   001A80                     __end_of_Send_String:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function i2_Send_Instruction_Data *****************
  1457 ;; Defined at:
  1458 ;;		line 24 in file "LCD_Library.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  Instruction     1    wreg     unsigned char 
  1461 ;;  Data            1    2[COMRAM] unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  Instruction     1    3[COMRAM] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:        2 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; Hardware stack levels required when called: 1
  1480 ;; This function calls:
  1481 ;;		i2_LCD_Instruction
  1482 ;; This function is called by:
  1483 ;;		_Bluetooth_Receiver
  1484 ;;		_Send_String
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text9
  1489   001B88                     __ptext9:
  1490                           	callstack 0
  1491   001B88                     i2_Send_Instruction_Data:
  1492                           	callstack 23
  1493                           
  1494                           ;incstack = 0
  1495                           ;i2Send_Instruction_Data@Instruction stored from wreg
  1496   001B88  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
  1497   001B8A                     
  1498                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
  1499   001B8A  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
  1500   001B8C  D002               	bra	i2u84_45
  1501   001B8E  988B               	bcf	139,4,c	;volatile
  1502   001B90  D001               	bra	i2u84_46
  1503   001B92                     i2u84_45:
  1504   001B92  888B               	bsf	139,4,c	;volatile
  1505   001B94                     i2u84_46:
  1506   001B94                     
  1507                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
  1508   001B94  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
  1509   001B96  0B0F               	andlw	15
  1510   001B98  EC5F  F00D         	call	i2_LCD_Instruction
  1511   001B9C                     
  1512                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
  1513   001B9C  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
  1514   001B9E  0B0F               	andlw	15
  1515   001BA0  EC5F  F00D         	call	i2_LCD_Instruction
  1516   001BA4  0012               	return		;funcret
  1517   001BA6                     __end_ofi2_Send_Instruction_Data:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function i2_LCD_Instruction *****************
  1521 ;; Defined at:
  1522 ;;		line 33 in file "LCD_Library.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  Instruction     1    wreg     unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  Instruction     1    1[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;Total ram usage:        2 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		i2_Send_Instruction_Data
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text10
  1550   001ABE                     __ptext10:
  1551                           	callstack 0
  1552   001ABE                     i2_LCD_Instruction:
  1553                           	callstack 23
  1554                           
  1555                           ;incstack = 0
  1556                           ;i2LCD_Instruction@Instruction stored from wreg
  1557   001ABE  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
  1558   001AC0                     
  1559                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  1560   001AC0  8A8B               	bsf	139,5,c	;volatile
  1561   001AC2                     
  1562                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1563   001AC2  0E4E               	movlw	78
  1564   001AC4  6E01               	movwf	??i2_LCD_Instruction^0,c
  1565   001AC6  0EEB               	movlw	235
  1566   001AC8                     i2u123_47:
  1567   001AC8  2EE8               	decfsz	wreg,f,c
  1568   001ACA  D7FE               	bra	i2u123_47
  1569   001ACC  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1570   001ACE  D7FC               	bra	i2u123_47
  1571   001AD0  0000               	nop	
  1572   001AD2                     
  1573                           ;LCD_Library.c: 37:     LATD = Instruction;
  1574   001AD2  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  1575   001AD6                     
  1576                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1577   001AD6  0E4E               	movlw	78
  1578   001AD8  6E01               	movwf	??i2_LCD_Instruction^0,c
  1579   001ADA  0EEB               	movlw	235
  1580   001ADC                     i2u124_47:
  1581   001ADC  2EE8               	decfsz	wreg,f,c
  1582   001ADE  D7FE               	bra	i2u124_47
  1583   001AE0  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1584   001AE2  D7FC               	bra	i2u124_47
  1585   001AE4  0000               	nop	
  1586   001AE6                     
  1587                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  1588   001AE6  9A8B               	bcf	139,5,c	;volatile
  1589   001AE8                     
  1590                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1591   001AE8  0E4E               	movlw	78
  1592   001AEA  6E01               	movwf	??i2_LCD_Instruction^0,c
  1593   001AEC  0EEB               	movlw	235
  1594   001AEE                     i2u125_47:
  1595   001AEE  2EE8               	decfsz	wreg,f,c
  1596   001AF0  D7FE               	bra	i2u125_47
  1597   001AF2  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1598   001AF4  D7FC               	bra	i2u125_47
  1599   001AF6  0000               	nop	
  1600   001AF8  0012               	return		;funcret
  1601   001AFA                     __end_ofi2_LCD_Instruction:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _Driver_Control *****************
  1605 ;; Defined at:
  1606 ;;		line 242 in file "main.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  PWM_RMotor      4   25[COMRAM] float 
  1609 ;;  PWM_LMotor      4   29[COMRAM] float 
  1610 ;;  Direction       1   33[COMRAM] unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1622 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;Total ram usage:        9 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 1
  1629 ;; This function calls:
  1630 ;;		___flmul
  1631 ;;		___fltol
  1632 ;; This function is called by:
  1633 ;;		_Bluetooth_Receiver
  1634 ;;		_Manual
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text11
  1639   001680                     __ptext11:
  1640                           	callstack 0
  1641   001680                     _Driver_Control:
  1642                           	callstack 23
  1643   001680                     
  1644                           ;main.c: 245:     Duty_Cycle1 = (float) PWM_RMotor * (1000.0 / 1023.0);
  1645   001680  C01A  F001         	movff	Driver_Control@PWM_RMotor,___flmul@b
  1646   001684  C01B  F002         	movff	Driver_Control@PWM_RMotor+1,___flmul@b+1
  1647   001688  C01C  F003         	movff	Driver_Control@PWM_RMotor+2,___flmul@b+2
  1648   00168C  C01D  F004         	movff	Driver_Control@PWM_RMotor+3,___flmul@b+3
  1649   001690  0E90               	movlw	144
  1650   001692  6E05               	movwf	___flmul@a^0,c
  1651   001694  0E3E               	movlw	62
  1652   001696  6E06               	movwf	(___flmul@a+1)^0,c
  1653   001698  0E7A               	movlw	122
  1654   00169A  6E07               	movwf	(___flmul@a+2)^0,c
  1655   00169C  0E3F               	movlw	63
  1656   00169E  6E08               	movwf	(___flmul@a+3)^0,c
  1657   0016A0  EC26  F008         	call	___flmul	;wreg free
  1658   0016A4  C001  F02F         	movff	?___flmul,_Duty_Cycle1
  1659   0016A8  C002  F030         	movff	?___flmul+1,_Duty_Cycle1+1
  1660   0016AC  C003  F031         	movff	?___flmul+2,_Duty_Cycle1+2
  1661   0016B0  C004  F032         	movff	?___flmul+3,_Duty_Cycle1+3
  1662   0016B4                     
  1663                           ;main.c: 246:     CCPR3L = (int) Duty_Cycle1 >> 2;
  1664   0016B4  C02F  F001         	movff	_Duty_Cycle1,___fltol@f1
  1665   0016B8  C030  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1666   0016BC  C031  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1667   0016C0  C032  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1668   0016C4  EC0E  F00C         	call	___fltol	;wreg free
  1669   0016C8  3402               	rlcf	(?___fltol+1)^0,w,c
  1670   0016CA  3202               	rrcf	(?___fltol+1)^0,f,c
  1671   0016CC  3201               	rrcf	?___fltol^0,f,c
  1672   0016CE  3402               	rlcf	(?___fltol+1)^0,w,c
  1673   0016D0  3202               	rrcf	(?___fltol+1)^0,f,c
  1674   0016D2  3201               	rrcf	?___fltol^0,f,c
  1675   0016D4  5001               	movf	?___fltol^0,w,c
  1676   0016D6  010F               	movlb	15	; () banked
  1677   0016D8  6F5E               	movwf	94,b	;volatile
  1678   0016DA                     
  1679                           ; BSR set to: 15
  1680                           ;main.c: 247:     CCP3CON = (CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4);
  1681   0016DA  C02F  F001         	movff	_Duty_Cycle1,___fltol@f1
  1682   0016DE  C030  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1683   0016E2  C031  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1684   0016E6  C032  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1685   0016EA  EC0E  F00C         	call	___fltol	;wreg free
  1686   0016EE  0E03               	movlw	3
  1687   0016F0  1601               	andwf	?___fltol^0,f,c
  1688   0016F2  3A01               	swapf	?___fltol^0,f,c
  1689   0016F4  0EF0               	movlw	240
  1690   0016F6  1601               	andwf	?___fltol^0,f,c
  1691   0016F8  010F               	movlb	15	; () banked
  1692   0016FA  515D               	movf	93,w,b	;volatile
  1693   0016FC  0B0F               	andlw	15
  1694   0016FE  1001               	iorwf	?___fltol^0,w,c
  1695   001700  6F5D               	movwf	93,b	;volatile
  1696                           
  1697                           ;main.c: 249:     Duty_Cycle2 = (float) PWM_LMotor * (1000.0 / 1023.0);
  1698   001702  C01E  F001         	movff	Driver_Control@PWM_LMotor,___flmul@b
  1699   001706  C01F  F002         	movff	Driver_Control@PWM_LMotor+1,___flmul@b+1
  1700   00170A  C020  F003         	movff	Driver_Control@PWM_LMotor+2,___flmul@b+2
  1701   00170E  C021  F004         	movff	Driver_Control@PWM_LMotor+3,___flmul@b+3
  1702   001712  0E90               	movlw	144
  1703   001714  6E05               	movwf	___flmul@a^0,c
  1704   001716  0E3E               	movlw	62
  1705   001718  6E06               	movwf	(___flmul@a+1)^0,c
  1706   00171A  0E7A               	movlw	122
  1707   00171C  6E07               	movwf	(___flmul@a+2)^0,c
  1708   00171E  0E3F               	movlw	63
  1709   001720  6E08               	movwf	(___flmul@a+3)^0,c
  1710   001722  EC26  F008         	call	___flmul	;wreg free
  1711   001726  C001  F02B         	movff	?___flmul,_Duty_Cycle2
  1712   00172A  C002  F02C         	movff	?___flmul+1,_Duty_Cycle2+1
  1713   00172E  C003  F02D         	movff	?___flmul+2,_Duty_Cycle2+2
  1714   001732  C004  F02E         	movff	?___flmul+3,_Duty_Cycle2+3
  1715   001736                     
  1716                           ;main.c: 250:     CCPR5L = (int) Duty_Cycle2 >> 2;
  1717   001736  C02B  F001         	movff	_Duty_Cycle2,___fltol@f1
  1718   00173A  C02C  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1719   00173E  C02D  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1720   001742  C02E  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1721   001746  EC0E  F00C         	call	___fltol	;wreg free
  1722   00174A  3402               	rlcf	(?___fltol+1)^0,w,c
  1723   00174C  3202               	rrcf	(?___fltol+1)^0,f,c
  1724   00174E  3201               	rrcf	?___fltol^0,f,c
  1725   001750  3402               	rlcf	(?___fltol+1)^0,w,c
  1726   001752  3202               	rrcf	(?___fltol+1)^0,f,c
  1727   001754  3201               	rrcf	?___fltol^0,f,c
  1728   001756  5001               	movf	?___fltol^0,w,c
  1729   001758  010F               	movlb	15	; () banked
  1730   00175A  6F55               	movwf	85,b	;volatile
  1731   00175C                     
  1732                           ; BSR set to: 15
  1733                           ;main.c: 251:     CCP5CON = (CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4);
  1734   00175C  C02B  F001         	movff	_Duty_Cycle2,___fltol@f1
  1735   001760  C02C  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1736   001764  C02D  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1737   001768  C02E  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1738   00176C  EC0E  F00C         	call	___fltol	;wreg free
  1739   001770  0E03               	movlw	3
  1740   001772  1601               	andwf	?___fltol^0,f,c
  1741   001774  3A01               	swapf	?___fltol^0,f,c
  1742   001776  0EF0               	movlw	240
  1743   001778  1601               	andwf	?___fltol^0,f,c
  1744   00177A  010F               	movlb	15	; () banked
  1745   00177C  515D               	movf	93,w,b	;volatile
  1746   00177E  0B0F               	andlw	15
  1747   001780  1001               	iorwf	?___fltol^0,w,c
  1748   001782  6F54               	movwf	84,b	;volatile
  1749   001784                     
  1750                           ; BSR set to: 15
  1751                           ;main.c: 254:     if (Direction == 'F') {
  1752   001784  0E46               	movlw	70
  1753   001786  1822               	xorwf	Driver_Control@Direction^0,w,c
  1754   001788  A4D8               	btfss	status,2,c
  1755   00178A  EFC9  F00B         	goto	i2u87_41
  1756   00178E  EFCB  F00B         	goto	i2u87_40
  1757   001792                     i2u87_41:
  1758   001792  EFD1  F00B         	goto	i2l1510
  1759   001796                     i2u87_40:
  1760   001796                     
  1761                           ; BSR set to: 15
  1762                           ;main.c: 257:         LATDbits.LD4 = 1;
  1763   001796  888C               	bsf	140,4,c	;volatile
  1764                           
  1765                           ;main.c: 258:         LATDbits.LD5 = 0;
  1766   001798  9A8C               	bcf	140,5,c	;volatile
  1767                           
  1768                           ;main.c: 259:         LATDbits.LD6 = 0;
  1769   00179A  9C8C               	bcf	140,6,c	;volatile
  1770                           
  1771                           ;main.c: 260:         LATDbits.LD7 = 1;
  1772   00179C  8E8C               	bsf	140,7,c	;volatile
  1773                           
  1774                           ;main.c: 262:     } else if (Direction == 'B') {
  1775   00179E  EF0D  F00C         	goto	i2l142
  1776   0017A2                     i2l1510:
  1777                           
  1778                           ; BSR set to: 15
  1779   0017A2  0E42               	movlw	66
  1780   0017A4  1822               	xorwf	Driver_Control@Direction^0,w,c
  1781   0017A6  A4D8               	btfss	status,2,c
  1782   0017A8  EFD8  F00B         	goto	i2u88_41
  1783   0017AC  EFDA  F00B         	goto	i2u88_40
  1784   0017B0                     i2u88_41:
  1785   0017B0  EFE0  F00B         	goto	i2l1514
  1786   0017B4                     i2u88_40:
  1787   0017B4                     
  1788                           ; BSR set to: 15
  1789                           ;main.c: 264:         LATDbits.LD4 = 0;
  1790   0017B4  988C               	bcf	140,4,c	;volatile
  1791                           
  1792                           ;main.c: 265:         LATDbits.LD5 = 1;
  1793   0017B6  8A8C               	bsf	140,5,c	;volatile
  1794                           
  1795                           ;main.c: 266:         LATDbits.LD6 = 1;
  1796   0017B8  8C8C               	bsf	140,6,c	;volatile
  1797                           
  1798                           ;main.c: 267:         LATDbits.LD7 = 0;
  1799   0017BA  9E8C               	bcf	140,7,c	;volatile
  1800                           
  1801                           ;main.c: 269:     } else if (Direction == 'R') {
  1802   0017BC  EF0D  F00C         	goto	i2l142
  1803   0017C0                     i2l1514:
  1804                           
  1805                           ; BSR set to: 15
  1806   0017C0  0E52               	movlw	82
  1807   0017C2  1822               	xorwf	Driver_Control@Direction^0,w,c
  1808   0017C4  A4D8               	btfss	status,2,c
  1809   0017C6  EFE7  F00B         	goto	i2u89_41
  1810   0017CA  EFE9  F00B         	goto	i2u89_40
  1811   0017CE                     i2u89_41:
  1812   0017CE  EFEF  F00B         	goto	i2l1518
  1813   0017D2                     i2u89_40:
  1814   0017D2                     
  1815                           ; BSR set to: 15
  1816                           ;main.c: 271:         LATDbits.LD4 = 1;
  1817   0017D2  888C               	bsf	140,4,c	;volatile
  1818                           
  1819                           ;main.c: 272:         LATDbits.LD5 = 0;
  1820   0017D4  9A8C               	bcf	140,5,c	;volatile
  1821                           
  1822                           ;main.c: 273:         LATDbits.LD6 = 0;
  1823   0017D6  9C8C               	bcf	140,6,c	;volatile
  1824                           
  1825                           ;main.c: 274:         LATDbits.LD7 = 1;
  1826   0017D8  8E8C               	bsf	140,7,c	;volatile
  1827                           
  1828                           ;main.c: 276:     } else if (Direction == 'L') {
  1829   0017DA  EF0D  F00C         	goto	i2l142
  1830   0017DE                     i2l1518:
  1831                           
  1832                           ; BSR set to: 15
  1833   0017DE  0E4C               	movlw	76
  1834   0017E0  1822               	xorwf	Driver_Control@Direction^0,w,c
  1835   0017E2  A4D8               	btfss	status,2,c
  1836   0017E4  EFF6  F00B         	goto	i2u90_41
  1837   0017E8  EFF8  F00B         	goto	i2u90_40
  1838   0017EC                     i2u90_41:
  1839   0017EC  EFFE  F00B         	goto	i2l1522
  1840   0017F0                     i2u90_40:
  1841   0017F0                     
  1842                           ; BSR set to: 15
  1843                           ;main.c: 278:         LATDbits.LD4 = 1;
  1844   0017F0  888C               	bsf	140,4,c	;volatile
  1845                           
  1846                           ;main.c: 279:         LATDbits.LD5 = 0;
  1847   0017F2  9A8C               	bcf	140,5,c	;volatile
  1848                           
  1849                           ;main.c: 280:         LATDbits.LD6 = 0;
  1850   0017F4  9C8C               	bcf	140,6,c	;volatile
  1851                           
  1852                           ;main.c: 281:         LATDbits.LD7 = 1;
  1853   0017F6  8E8C               	bsf	140,7,c	;volatile
  1854                           
  1855                           ;main.c: 283:     } else if (Direction == 'T') {
  1856   0017F8  EF0D  F00C         	goto	i2l142
  1857   0017FC                     i2l1522:
  1858                           
  1859                           ; BSR set to: 15
  1860   0017FC  0E54               	movlw	84
  1861   0017FE  1822               	xorwf	Driver_Control@Direction^0,w,c
  1862   001800  A4D8               	btfss	status,2,c
  1863   001802  EF05  F00C         	goto	i2u91_41
  1864   001806  EF07  F00C         	goto	i2u91_40
  1865   00180A                     i2u91_41:
  1866   00180A  EF0D  F00C         	goto	i2l136
  1867   00180E                     i2u91_40:
  1868   00180E                     
  1869                           ; BSR set to: 15
  1870                           ;main.c: 285:         LATDbits.LD4 = 0;
  1871   00180E  988C               	bcf	140,4,c	;volatile
  1872                           
  1873                           ;main.c: 286:         LATDbits.LD5 = 0;
  1874   001810  9A8C               	bcf	140,5,c	;volatile
  1875                           
  1876                           ;main.c: 287:         LATDbits.LD6 = 0;
  1877   001812  9C8C               	bcf	140,6,c	;volatile
  1878                           
  1879                           ;main.c: 288:         LATDbits.LD7 = 0;
  1880   001814  9E8C               	bcf	140,7,c	;volatile
  1881   001816  EF0D  F00C         	goto	i2l142
  1882   00181A                     i2l136:
  1883   00181A                     i2l142:
  1884                           
  1885                           ; BSR set to: 15
  1886   00181A  0012               	return		;funcret
  1887   00181C                     __end_of_Driver_Control:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function ___fltol *****************
  1891 ;; Defined at:
  1892 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  f1              4    0[COMRAM] void 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  exp1            1    9[COMRAM] unsigned char 
  1897 ;;  sign1           1    8[COMRAM] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  4    0[COMRAM] long 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;Total ram usage:       10 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_Driver_Control
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text12
  1921   00181C                     __ptext12:
  1922                           	callstack 0
  1923   00181C                     ___fltol:
  1924                           	callstack 23
  1925   00181C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1926   00181E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1927   001820  6E0A               	movwf	___fltol@exp1^0,c
  1928   001822  500A               	movf	___fltol@exp1^0,w,c
  1929   001824  A4D8               	btfss	status,2,c
  1930   001826  EF17  F00C         	goto	i2u77_41
  1931   00182A  EF19  F00C         	goto	i2u77_40
  1932   00182E                     i2u77_41:
  1933   00182E  EF23  F00C         	goto	i2l1438
  1934   001832                     i2u77_40:
  1935   001832                     i2l1434:
  1936   001832  0E00               	movlw	0
  1937   001834  6E01               	movwf	?___fltol^0,c
  1938   001836  0E00               	movlw	0
  1939   001838  6E02               	movwf	(?___fltol+1)^0,c
  1940   00183A  0E00               	movlw	0
  1941   00183C  6E03               	movwf	(?___fltol+2)^0,c
  1942   00183E  0E00               	movlw	0
  1943   001840  6E04               	movwf	(?___fltol+3)^0,c
  1944   001842  EF90  F00C         	goto	i2l490
  1945   001846                     i2l1438:
  1946   001846  C001  F005         	movff	___fltol@f1,??___fltol
  1947   00184A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1948   00184E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1949   001852  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1950   001856  0E20               	movlw	32
  1951   001858  EF33  F00C         	goto	i2u78_40
  1952   00185C                     i2u78_45:
  1953   00185C  90D8               	bcf	status,0,c
  1954   00185E  3208               	rrcf	(??___fltol+3)^0,f,c
  1955   001860  3207               	rrcf	(??___fltol+2)^0,f,c
  1956   001862  3206               	rrcf	(??___fltol+1)^0,f,c
  1957   001864  3205               	rrcf	??___fltol^0,f,c
  1958   001866                     i2u78_40:
  1959   001866  2EE8               	decfsz	wreg,f,c
  1960   001868  EF2E  F00C         	goto	i2u78_45
  1961   00186C  5005               	movf	??___fltol^0,w,c
  1962   00186E  6E09               	movwf	___fltol@sign1^0,c
  1963   001870  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1964   001872  0EFF               	movlw	255
  1965   001874  1601               	andwf	___fltol@f1^0,f,c
  1966   001876  0EFF               	movlw	255
  1967   001878  1602               	andwf	(___fltol@f1+1)^0,f,c
  1968   00187A  0EFF               	movlw	255
  1969   00187C  1603               	andwf	(___fltol@f1+2)^0,f,c
  1970   00187E  0E00               	movlw	0
  1971   001880  1604               	andwf	(___fltol@f1+3)^0,f,c
  1972   001882  0E96               	movlw	150
  1973   001884  5E0A               	subwf	___fltol@exp1^0,f,c
  1974   001886  BE0A               	btfsc	___fltol@exp1^0,7,c
  1975   001888  EF4A  F00C         	goto	i2u79_40
  1976   00188C  EF48  F00C         	goto	i2u79_41
  1977   001890                     i2u79_41:
  1978   001890  EF60  F00C         	goto	i2l1458
  1979   001894                     i2u79_40:
  1980   001894  500A               	movf	___fltol@exp1^0,w,c
  1981   001896  0A80               	xorlw	128
  1982   001898  0F97               	addlw	151
  1983   00189A  B0D8               	btfsc	status,0,c
  1984   00189C  EF52  F00C         	goto	i2u80_41
  1985   0018A0  EF54  F00C         	goto	i2u80_40
  1986   0018A4                     i2u80_41:
  1987   0018A4  EF56  F00C         	goto	i2l1454
  1988   0018A8                     i2u80_40:
  1989   0018A8  EF19  F00C         	goto	i2l1434
  1990   0018AC                     i2l1454:
  1991   0018AC  90D8               	bcf	status,0,c
  1992   0018AE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1993   0018B0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1994   0018B2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1995   0018B4  3201               	rrcf	___fltol@f1^0,f,c
  1996   0018B6  3E0A               	incfsz	___fltol@exp1^0,f,c
  1997   0018B8  EF56  F00C         	goto	i2l1454
  1998   0018BC  EF78  F00C         	goto	i2l1468
  1999   0018C0                     i2l1458:
  2000   0018C0  0E1F               	movlw	31
  2001   0018C2  640A               	cpfsgt	___fltol@exp1^0,c
  2002   0018C4  EF66  F00C         	goto	i2u81_41
  2003   0018C8  EF68  F00C         	goto	i2u81_40
  2004   0018CC                     i2u81_41:
  2005   0018CC  EF70  F00C         	goto	i2l1466
  2006   0018D0                     i2u81_40:
  2007   0018D0  EF19  F00C         	goto	i2l1434
  2008   0018D4                     i2l1464:
  2009   0018D4  90D8               	bcf	status,0,c
  2010   0018D6  3601               	rlcf	___fltol@f1^0,f,c
  2011   0018D8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2012   0018DA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2013   0018DC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2014   0018DE  060A               	decf	___fltol@exp1^0,f,c
  2015   0018E0                     i2l1466:
  2016   0018E0  500A               	movf	___fltol@exp1^0,w,c
  2017   0018E2  A4D8               	btfss	status,2,c
  2018   0018E4  EF76  F00C         	goto	i2u82_41
  2019   0018E8  EF78  F00C         	goto	i2u82_40
  2020   0018EC                     i2u82_41:
  2021   0018EC  EF6A  F00C         	goto	i2l1464
  2022   0018F0                     i2u82_40:
  2023   0018F0                     i2l1468:
  2024   0018F0  5009               	movf	___fltol@sign1^0,w,c
  2025   0018F2  B4D8               	btfsc	status,2,c
  2026   0018F4  EF7E  F00C         	goto	i2u83_41
  2027   0018F8  EF80  F00C         	goto	i2u83_40
  2028   0018FC                     i2u83_41:
  2029   0018FC  EF88  F00C         	goto	i2l1472
  2030   001900                     i2u83_40:
  2031   001900  1E04               	comf	(___fltol@f1+3)^0,f,c
  2032   001902  1E03               	comf	(___fltol@f1+2)^0,f,c
  2033   001904  1E02               	comf	(___fltol@f1+1)^0,f,c
  2034   001906  6C01               	negf	___fltol@f1^0,c
  2035   001908  0E00               	movlw	0
  2036   00190A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2037   00190C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2038   00190E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2039   001910                     i2l1472:
  2040   001910  C001  F001         	movff	___fltol@f1,?___fltol
  2041   001914  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2042   001918  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2043   00191C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2044   001920                     i2l490:
  2045   001920  0012               	return		;funcret
  2046   001922                     __end_of___fltol:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function ___flmul *****************
  2050 ;; Defined at:
  2051 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  b               4    0[COMRAM] long 
  2054 ;;  a               4    4[COMRAM] long 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  prod            4   19[COMRAM] struct .
  2057 ;;  grs             4   13[COMRAM] unsigned long 
  2058 ;;  temp            2   23[COMRAM] struct .
  2059 ;;  bexp            1   18[COMRAM] unsigned char 
  2060 ;;  aexp            1   17[COMRAM] unsigned char 
  2061 ;;  sign            1   12[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  4    0[COMRAM] unsigned char 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, prodl, prodh
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;Total ram usage:       25 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_Driver_Control
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text13
  2085   00104C                     __ptext13:
  2086                           	callstack 0
  2087   00104C                     ___flmul:
  2088                           	callstack 23
  2089   00104C  5004               	movf	(___flmul@b+3)^0,w,c
  2090   00104E  0B80               	andlw	128
  2091   001050  6E0D               	movwf	___flmul@sign^0,c
  2092   001052  5004               	movf	(___flmul@b+3)^0,w,c
  2093   001054  2404               	addwf	(___flmul@b+3)^0,w,c
  2094   001056  6E13               	movwf	___flmul@bexp^0,c
  2095   001058  AE03               	btfss	(___flmul@b+2)^0,7,c
  2096   00105A  EF31  F008         	goto	i2u58_41
  2097   00105E  EF33  F008         	goto	i2u58_40
  2098   001062                     i2u58_41:
  2099   001062  EF34  F008         	goto	i2l1308
  2100   001066                     i2u58_40:
  2101   001066  8013               	bsf	___flmul@bexp^0,0,c
  2102   001068                     i2l1308:
  2103   001068  5013               	movf	___flmul@bexp^0,w,c
  2104   00106A  B4D8               	btfsc	status,2,c
  2105   00106C  EF3A  F008         	goto	i2u59_41
  2106   001070  EF3C  F008         	goto	i2u59_40
  2107   001074                     i2u59_41:
  2108   001074  EF4F  F008         	goto	i2l1316
  2109   001078                     i2u59_40:
  2110   001078  2813               	incf	___flmul@bexp^0,w,c
  2111   00107A  A4D8               	btfss	status,2,c
  2112   00107C  EF42  F008         	goto	i2u60_41
  2113   001080  EF44  F008         	goto	i2u60_40
  2114   001084                     i2u60_41:
  2115   001084  EF4C  F008         	goto	i2l1314
  2116   001088                     i2u60_40:
  2117   001088  0E00               	movlw	0
  2118   00108A  6E01               	movwf	___flmul@b^0,c
  2119   00108C  0E00               	movlw	0
  2120   00108E  6E02               	movwf	(___flmul@b+1)^0,c
  2121   001090  0E00               	movlw	0
  2122   001092  6E03               	movwf	(___flmul@b+2)^0,c
  2123   001094  0E00               	movlw	0
  2124   001096  6E04               	movwf	(___flmul@b+3)^0,c
  2125   001098                     i2l1314:
  2126   001098  8E03               	bsf	(___flmul@b+2)^0,7,c
  2127   00109A  EF57  F008         	goto	i2l1318
  2128   00109E                     i2l1316:
  2129   00109E  0E00               	movlw	0
  2130   0010A0  6E01               	movwf	___flmul@b^0,c
  2131   0010A2  0E00               	movlw	0
  2132   0010A4  6E02               	movwf	(___flmul@b+1)^0,c
  2133   0010A6  0E00               	movlw	0
  2134   0010A8  6E03               	movwf	(___flmul@b+2)^0,c
  2135   0010AA  0E00               	movlw	0
  2136   0010AC  6E04               	movwf	(___flmul@b+3)^0,c
  2137   0010AE                     i2l1318:
  2138   0010AE  5008               	movf	(___flmul@a+3)^0,w,c
  2139   0010B0  0B80               	andlw	128
  2140   0010B2  1A0D               	xorwf	___flmul@sign^0,f,c
  2141   0010B4  5008               	movf	(___flmul@a+3)^0,w,c
  2142   0010B6  2408               	addwf	(___flmul@a+3)^0,w,c
  2143   0010B8  6E12               	movwf	___flmul@aexp^0,c
  2144   0010BA  AE07               	btfss	(___flmul@a+2)^0,7,c
  2145   0010BC  EF62  F008         	goto	i2u61_41
  2146   0010C0  EF64  F008         	goto	i2u61_40
  2147   0010C4                     i2u61_41:
  2148   0010C4  EF65  F008         	goto	i2l1326
  2149   0010C8                     i2u61_40:
  2150   0010C8  8012               	bsf	___flmul@aexp^0,0,c
  2151   0010CA                     i2l1326:
  2152   0010CA  5012               	movf	___flmul@aexp^0,w,c
  2153   0010CC  B4D8               	btfsc	status,2,c
  2154   0010CE  EF6B  F008         	goto	i2u62_41
  2155   0010D2  EF6D  F008         	goto	i2u62_40
  2156   0010D6                     i2u62_41:
  2157   0010D6  EF80  F008         	goto	i2l1334
  2158   0010DA                     i2u62_40:
  2159   0010DA  2812               	incf	___flmul@aexp^0,w,c
  2160   0010DC  A4D8               	btfss	status,2,c
  2161   0010DE  EF73  F008         	goto	i2u63_41
  2162   0010E2  EF75  F008         	goto	i2u63_40
  2163   0010E6                     i2u63_41:
  2164   0010E6  EF7D  F008         	goto	i2l1332
  2165   0010EA                     i2u63_40:
  2166   0010EA  0E00               	movlw	0
  2167   0010EC  6E05               	movwf	___flmul@a^0,c
  2168   0010EE  0E00               	movlw	0
  2169   0010F0  6E06               	movwf	(___flmul@a+1)^0,c
  2170   0010F2  0E00               	movlw	0
  2171   0010F4  6E07               	movwf	(___flmul@a+2)^0,c
  2172   0010F6  0E00               	movlw	0
  2173   0010F8  6E08               	movwf	(___flmul@a+3)^0,c
  2174   0010FA                     i2l1332:
  2175   0010FA  8E07               	bsf	(___flmul@a+2)^0,7,c
  2176   0010FC  EF88  F008         	goto	i2l807
  2177   001100                     i2l1334:
  2178   001100  0E00               	movlw	0
  2179   001102  6E05               	movwf	___flmul@a^0,c
  2180   001104  0E00               	movlw	0
  2181   001106  6E06               	movwf	(___flmul@a+1)^0,c
  2182   001108  0E00               	movlw	0
  2183   00110A  6E07               	movwf	(___flmul@a+2)^0,c
  2184   00110C  0E00               	movlw	0
  2185   00110E  6E08               	movwf	(___flmul@a+3)^0,c
  2186   001110                     i2l807:
  2187   001110  5012               	movf	___flmul@aexp^0,w,c
  2188   001112  B4D8               	btfsc	status,2,c
  2189   001114  EF8E  F008         	goto	i2u64_41
  2190   001118  EF90  F008         	goto	i2u64_40
  2191   00111C                     i2u64_41:
  2192   00111C  EF98  F008         	goto	i2l1338
  2193   001120                     i2u64_40:
  2194   001120  5013               	movf	___flmul@bexp^0,w,c
  2195   001122  A4D8               	btfss	status,2,c
  2196   001124  EF96  F008         	goto	i2u65_41
  2197   001128  EF98  F008         	goto	i2u65_40
  2198   00112C                     i2u65_41:
  2199   00112C  EFA2  F008         	goto	i2l1342
  2200   001130                     i2u65_40:
  2201   001130                     i2l1338:
  2202   001130  0E00               	movlw	0
  2203   001132  6E01               	movwf	?___flmul^0,c
  2204   001134  0E00               	movlw	0
  2205   001136  6E02               	movwf	(?___flmul+1)^0,c
  2206   001138  0E00               	movlw	0
  2207   00113A  6E03               	movwf	(?___flmul+2)^0,c
  2208   00113C  0E00               	movlw	0
  2209   00113E  6E04               	movwf	(?___flmul+3)^0,c
  2210   001140  EF3A  F00A         	goto	i2l811
  2211   001144                     i2l1342:
  2212   001144  5007               	movf	(___flmul@a+2)^0,w,c
  2213   001146  0201               	mulwf	___flmul@b^0,c
  2214   001148  CFF3 F018          	movff	prodl,___flmul@temp
  2215   00114C  CFF4 F019          	movff	prodh,___flmul@temp+1
  2216   001150  5018               	movf	___flmul@temp^0,w,c
  2217   001152  6E0E               	movwf	___flmul@grs^0,c
  2218   001154  6A0F               	clrf	(___flmul@grs+1)^0,c
  2219   001156  6A10               	clrf	(___flmul@grs+2)^0,c
  2220   001158  6A11               	clrf	(___flmul@grs+3)^0,c
  2221   00115A  5019               	movf	(___flmul@temp+1)^0,w,c
  2222   00115C  6E14               	movwf	___flmul@prod^0,c
  2223   00115E  6A15               	clrf	(___flmul@prod+1)^0,c
  2224   001160  6A16               	clrf	(___flmul@prod+2)^0,c
  2225   001162  6A17               	clrf	(___flmul@prod+3)^0,c
  2226   001164  5006               	movf	(___flmul@a+1)^0,w,c
  2227   001166  0202               	mulwf	(___flmul@b+1)^0,c
  2228   001168  CFF3 F018          	movff	prodl,___flmul@temp
  2229   00116C  CFF4 F019          	movff	prodh,___flmul@temp+1
  2230   001170  5018               	movf	___flmul@temp^0,w,c
  2231   001172  260E               	addwf	___flmul@grs^0,f,c
  2232   001174  0E00               	movlw	0
  2233   001176  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2234   001178  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2235   00117A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2236   00117C  5019               	movf	(___flmul@temp+1)^0,w,c
  2237   00117E  2614               	addwf	___flmul@prod^0,f,c
  2238   001180  0E00               	movlw	0
  2239   001182  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2240   001184  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2241   001186  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2242   001188  5005               	movf	___flmul@a^0,w,c
  2243   00118A  0203               	mulwf	(___flmul@b+2)^0,c
  2244   00118C  CFF3 F018          	movff	prodl,___flmul@temp
  2245   001190  CFF4 F019          	movff	prodh,___flmul@temp+1
  2246   001194  5018               	movf	___flmul@temp^0,w,c
  2247   001196  260E               	addwf	___flmul@grs^0,f,c
  2248   001198  0E00               	movlw	0
  2249   00119A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2250   00119C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2251   00119E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2252   0011A0  5019               	movf	(___flmul@temp+1)^0,w,c
  2253   0011A2  2614               	addwf	___flmul@prod^0,f,c
  2254   0011A4  0E00               	movlw	0
  2255   0011A6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2256   0011A8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2257   0011AA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2258   0011AC  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2259   0011B0  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2260   0011B4  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2261   0011B8  6A0E               	clrf	___flmul@grs^0,c
  2262   0011BA  5005               	movf	___flmul@a^0,w,c
  2263   0011BC  0202               	mulwf	(___flmul@b+1)^0,c
  2264   0011BE  CFF3 F018          	movff	prodl,___flmul@temp
  2265   0011C2  CFF4 F019          	movff	prodh,___flmul@temp+1
  2266   0011C6  5018               	movf	___flmul@temp^0,w,c
  2267   0011C8  260E               	addwf	___flmul@grs^0,f,c
  2268   0011CA  5019               	movf	(___flmul@temp+1)^0,w,c
  2269   0011CC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2270   0011CE  0E00               	movlw	0
  2271   0011D0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2272   0011D2  0E00               	movlw	0
  2273   0011D4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2274   0011D6  5006               	movf	(___flmul@a+1)^0,w,c
  2275   0011D8  0201               	mulwf	___flmul@b^0,c
  2276   0011DA  CFF3 F018          	movff	prodl,___flmul@temp
  2277   0011DE  CFF4 F019          	movff	prodh,___flmul@temp+1
  2278   0011E2  5018               	movf	___flmul@temp^0,w,c
  2279   0011E4  260E               	addwf	___flmul@grs^0,f,c
  2280   0011E6  5019               	movf	(___flmul@temp+1)^0,w,c
  2281   0011E8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2282   0011EA  0E00               	movlw	0
  2283   0011EC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2284   0011EE  0E00               	movlw	0
  2285   0011F0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2286   0011F2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2287   0011F6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2288   0011FA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2289   0011FE  6A0E               	clrf	___flmul@grs^0,c
  2290   001200  5005               	movf	___flmul@a^0,w,c
  2291   001202  0201               	mulwf	___flmul@b^0,c
  2292   001204  CFF3 F018          	movff	prodl,___flmul@temp
  2293   001208  CFF4 F019          	movff	prodh,___flmul@temp+1
  2294   00120C  5018               	movf	___flmul@temp^0,w,c
  2295   00120E  260E               	addwf	___flmul@grs^0,f,c
  2296   001210  5019               	movf	(___flmul@temp+1)^0,w,c
  2297   001212  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2298   001214  0E00               	movlw	0
  2299   001216  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2300   001218  0E00               	movlw	0
  2301   00121A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2302   00121C  5007               	movf	(___flmul@a+2)^0,w,c
  2303   00121E  0202               	mulwf	(___flmul@b+1)^0,c
  2304   001220  CFF3 F018          	movff	prodl,___flmul@temp
  2305   001224  CFF4 F019          	movff	prodh,___flmul@temp+1
  2306   001228  5018               	movf	___flmul@temp^0,w,c
  2307   00122A  2614               	addwf	___flmul@prod^0,f,c
  2308   00122C  5019               	movf	(___flmul@temp+1)^0,w,c
  2309   00122E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2310   001230  0E00               	movlw	0
  2311   001232  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2312   001234  0E00               	movlw	0
  2313   001236  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2314   001238  5006               	movf	(___flmul@a+1)^0,w,c
  2315   00123A  0203               	mulwf	(___flmul@b+2)^0,c
  2316   00123C  CFF3 F018          	movff	prodl,___flmul@temp
  2317   001240  CFF4 F019          	movff	prodh,___flmul@temp+1
  2318   001244  5018               	movf	___flmul@temp^0,w,c
  2319   001246  2614               	addwf	___flmul@prod^0,f,c
  2320   001248  5019               	movf	(___flmul@temp+1)^0,w,c
  2321   00124A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2322   00124C  0E00               	movlw	0
  2323   00124E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2324   001250  0E00               	movlw	0
  2325   001252  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2326   001254  5007               	movf	(___flmul@a+2)^0,w,c
  2327   001256  0203               	mulwf	(___flmul@b+2)^0,c
  2328   001258  CFF3 F018          	movff	prodl,___flmul@temp
  2329   00125C  CFF4 F019          	movff	prodh,___flmul@temp+1
  2330   001260  5018               	movf	___flmul@temp^0,w,c
  2331   001262  6E09               	movwf	??___flmul^0,c
  2332   001264  5019               	movf	(___flmul@temp+1)^0,w,c
  2333   001266  6E0A               	movwf	(??___flmul+1)^0,c
  2334   001268  6A0B               	clrf	(??___flmul+2)^0,c
  2335   00126A  6A0C               	clrf	(??___flmul+3)^0,c
  2336   00126C  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  2337   001270  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  2338   001274  C009  F00A         	movff	??___flmul,??___flmul+1
  2339   001278  6A09               	clrf	??___flmul^0,c
  2340   00127A  5009               	movf	??___flmul^0,w,c
  2341   00127C  2614               	addwf	___flmul@prod^0,f,c
  2342   00127E  500A               	movf	(??___flmul+1)^0,w,c
  2343   001280  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2344   001282  500B               	movf	(??___flmul+2)^0,w,c
  2345   001284  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2346   001286  500C               	movf	(??___flmul+3)^0,w,c
  2347   001288  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2348   00128A  C00E  F009         	movff	___flmul@grs,??___flmul
  2349   00128E  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  2350   001292  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  2351   001296  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  2352   00129A  0E19               	movlw	25
  2353   00129C  EF55  F009         	goto	i2u66_40
  2354   0012A0                     i2u66_45:
  2355   0012A0  90D8               	bcf	status,0,c
  2356   0012A2  320C               	rrcf	(??___flmul+3)^0,f,c
  2357   0012A4  320B               	rrcf	(??___flmul+2)^0,f,c
  2358   0012A6  320A               	rrcf	(??___flmul+1)^0,f,c
  2359   0012A8  3209               	rrcf	??___flmul^0,f,c
  2360   0012AA                     i2u66_40:
  2361   0012AA  2EE8               	decfsz	wreg,f,c
  2362   0012AC  EF50  F009         	goto	i2u66_45
  2363   0012B0  5009               	movf	??___flmul^0,w,c
  2364   0012B2  2614               	addwf	___flmul@prod^0,f,c
  2365   0012B4  500A               	movf	(??___flmul+1)^0,w,c
  2366   0012B6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2367   0012B8  500B               	movf	(??___flmul+2)^0,w,c
  2368   0012BA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2369   0012BC  500C               	movf	(??___flmul+3)^0,w,c
  2370   0012BE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2371   0012C0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2372   0012C4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2373   0012C8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2374   0012CC  6A0E               	clrf	___flmul@grs^0,c
  2375   0012CE  5012               	movf	___flmul@aexp^0,w,c
  2376   0012D0  C013  F009         	movff	___flmul@bexp,??___flmul
  2377   0012D4  6A0A               	clrf	(??___flmul+1)^0,c
  2378   0012D6  2609               	addwf	??___flmul^0,f,c
  2379   0012D8  0E00               	movlw	0
  2380   0012DA  220A               	addwfc	(??___flmul+1)^0,f,c
  2381   0012DC  0E82               	movlw	130
  2382   0012DE  2409               	addwf	??___flmul^0,w,c
  2383   0012E0  6E18               	movwf	___flmul@temp^0,c
  2384   0012E2  0EFF               	movlw	255
  2385   0012E4  200A               	addwfc	(??___flmul+1)^0,w,c
  2386   0012E6  6E19               	movwf	(___flmul@temp+1)^0,c
  2387   0012E8  EF8B  F009         	goto	i2l1390
  2388   0012EC                     i2l1384:
  2389   0012EC  90D8               	bcf	status,0,c
  2390   0012EE  3614               	rlcf	___flmul@prod^0,f,c
  2391   0012F0  3615               	rlcf	(___flmul@prod+1)^0,f,c
  2392   0012F2  3616               	rlcf	(___flmul@prod+2)^0,f,c
  2393   0012F4  3617               	rlcf	(___flmul@prod+3)^0,f,c
  2394   0012F6  AE11               	btfss	(___flmul@grs+3)^0,7,c
  2395   0012F8  EF80  F009         	goto	i2u67_41
  2396   0012FC  EF82  F009         	goto	i2u67_40
  2397   001300                     i2u67_41:
  2398   001300  EF83  F009         	goto	i2l814
  2399   001304                     i2u67_40:
  2400   001304  8014               	bsf	___flmul@prod^0,0,c
  2401   001306                     i2l814:
  2402   001306  90D8               	bcf	status,0,c
  2403   001308  360E               	rlcf	___flmul@grs^0,f,c
  2404   00130A  360F               	rlcf	(___flmul@grs+1)^0,f,c
  2405   00130C  3610               	rlcf	(___flmul@grs+2)^0,f,c
  2406   00130E  3611               	rlcf	(___flmul@grs+3)^0,f,c
  2407   001310  0618               	decf	___flmul@temp^0,f,c
  2408   001312  A0D8               	btfss	status,0,c
  2409   001314  0619               	decf	(___flmul@temp+1)^0,f,c
  2410   001316                     i2l1390:
  2411   001316  AE16               	btfss	(___flmul@prod+2)^0,7,c
  2412   001318  EF90  F009         	goto	i2u68_41
  2413   00131C  EF92  F009         	goto	i2u68_40
  2414   001320                     i2u68_41:
  2415   001320  EF76  F009         	goto	i2l1384
  2416   001324                     i2u68_40:
  2417   001324  0E00               	movlw	0
  2418   001326  6E12               	movwf	___flmul@aexp^0,c
  2419   001328  AE11               	btfss	(___flmul@grs+3)^0,7,c
  2420   00132A  EF99  F009         	goto	i2u69_41
  2421   00132E  EF9B  F009         	goto	i2u69_40
  2422   001332                     i2u69_41:
  2423   001332  EFBF  F009         	goto	i2l816
  2424   001336                     i2u69_40:
  2425   001336  0EFF               	movlw	255
  2426   001338  140E               	andwf	___flmul@grs^0,w,c
  2427   00133A  6E09               	movwf	??___flmul^0,c
  2428   00133C  0EFF               	movlw	255
  2429   00133E  140F               	andwf	(___flmul@grs+1)^0,w,c
  2430   001340  6E0A               	movwf	(??___flmul+1)^0,c
  2431   001342  0EFF               	movlw	255
  2432   001344  1410               	andwf	(___flmul@grs+2)^0,w,c
  2433   001346  6E0B               	movwf	(??___flmul+2)^0,c
  2434   001348  0E7F               	movlw	127
  2435   00134A  1411               	andwf	(___flmul@grs+3)^0,w,c
  2436   00134C  6E0C               	movwf	(??___flmul+3)^0,c
  2437   00134E  5009               	movf	??___flmul^0,w,c
  2438   001350  100A               	iorwf	(??___flmul+1)^0,w,c
  2439   001352  100B               	iorwf	(??___flmul+2)^0,w,c
  2440   001354  100C               	iorwf	(??___flmul+3)^0,w,c
  2441   001356  B4D8               	btfsc	status,2,c
  2442   001358  EFB0  F009         	goto	i2u70_41
  2443   00135C  EFB2  F009         	goto	i2u70_40
  2444   001360                     i2u70_41:
  2445   001360  EFB6  F009         	goto	i2l817
  2446   001364                     i2u70_40:
  2447   001364                     i2l1398:
  2448   001364  0E01               	movlw	1
  2449   001366  6E12               	movwf	___flmul@aexp^0,c
  2450   001368  EFBF  F009         	goto	i2l816
  2451   00136C                     i2l817:
  2452   00136C  A014               	btfss	___flmul@prod^0,0,c
  2453   00136E  EFBB  F009         	goto	i2u71_41
  2454   001372  EFBD  F009         	goto	i2u71_40
  2455   001376                     i2u71_41:
  2456   001376  EFBF  F009         	goto	i2l816
  2457   00137A                     i2u71_40:
  2458   00137A  EFB2  F009         	goto	i2l1398
  2459   00137E                     i2l816:
  2460   00137E  5012               	movf	___flmul@aexp^0,w,c
  2461   001380  B4D8               	btfsc	status,2,c
  2462   001382  EFC5  F009         	goto	i2u72_41
  2463   001386  EFC7  F009         	goto	i2u72_40
  2464   00138A                     i2u72_41:
  2465   00138A  EFEB  F009         	goto	i2l1410
  2466   00138E                     i2u72_40:
  2467   00138E  0E01               	movlw	1
  2468   001390  2614               	addwf	___flmul@prod^0,f,c
  2469   001392  0E00               	movlw	0
  2470   001394  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2471   001396  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2472   001398  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2473   00139A  A017               	btfss	(___flmul@prod+3)^0,0,c
  2474   00139C  EFD2  F009         	goto	i2u73_41
  2475   0013A0  EFD4  F009         	goto	i2u73_40
  2476   0013A4                     i2u73_41:
  2477   0013A4  EFEB  F009         	goto	i2l1410
  2478   0013A8                     i2u73_40:
  2479   0013A8  C014  F009         	movff	___flmul@prod,??___flmul
  2480   0013AC  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  2481   0013B0  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  2482   0013B4  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  2483   0013B8  340C               	rlcf	(??___flmul+3)^0,w,c
  2484   0013BA  320C               	rrcf	(??___flmul+3)^0,f,c
  2485   0013BC  320B               	rrcf	(??___flmul+2)^0,f,c
  2486   0013BE  320A               	rrcf	(??___flmul+1)^0,f,c
  2487   0013C0  3209               	rrcf	??___flmul^0,f,c
  2488   0013C2  C009  F014         	movff	??___flmul,___flmul@prod
  2489   0013C6  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  2490   0013CA  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  2491   0013CE  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  2492   0013D2  4A18               	infsnz	___flmul@temp^0,f,c
  2493   0013D4  2A19               	incf	(___flmul@temp+1)^0,f,c
  2494   0013D6                     i2l1410:
  2495   0013D6  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  2496   0013D8  EFF6  F009         	goto	i2u74_41
  2497   0013DC  5019               	movf	(___flmul@temp+1)^0,w,c
  2498   0013DE  E108               	bnz	i2u74_40
  2499   0013E0  2818               	incf	___flmul@temp^0,w,c
  2500   0013E2  A0D8               	btfss	status,0,c
  2501   0013E4  EFF6  F009         	goto	i2u74_41
  2502   0013E8  EFF8  F009         	goto	i2u74_40
  2503   0013EC                     i2u74_41:
  2504   0013EC  EF02  F00A         	goto	i2l1414
  2505   0013F0                     i2u74_40:
  2506   0013F0  0E00               	movlw	0
  2507   0013F2  6E14               	movwf	___flmul@prod^0,c
  2508   0013F4  0E00               	movlw	0
  2509   0013F6  6E15               	movwf	(___flmul@prod+1)^0,c
  2510   0013F8  0E80               	movlw	128
  2511   0013FA  6E16               	movwf	(___flmul@prod+2)^0,c
  2512   0013FC  0E7F               	movlw	127
  2513   0013FE  6E17               	movwf	(___flmul@prod+3)^0,c
  2514   001400  EF30  F00A         	goto	i2l1426
  2515   001404                     i2l1414:
  2516   001404  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  2517   001406  EF0F  F00A         	goto	i2u75_40
  2518   00140A  5019               	movf	(___flmul@temp+1)^0,w,c
  2519   00140C  E106               	bnz	i2u75_41
  2520   00140E  0418               	decf	___flmul@temp^0,w,c
  2521   001410  B0D8               	btfsc	status,0,c
  2522   001412  EF0D  F00A         	goto	i2u75_41
  2523   001416  EF0F  F00A         	goto	i2u75_40
  2524   00141A                     i2u75_41:
  2525   00141A  EF1B  F00A         	goto	i2l824
  2526   00141E                     i2u75_40:
  2527   00141E  0E00               	movlw	0
  2528   001420  6E14               	movwf	___flmul@prod^0,c
  2529   001422  0E00               	movlw	0
  2530   001424  6E15               	movwf	(___flmul@prod+1)^0,c
  2531   001426  0E00               	movlw	0
  2532   001428  6E16               	movwf	(___flmul@prod+2)^0,c
  2533   00142A  0E00               	movlw	0
  2534   00142C  6E17               	movwf	(___flmul@prod+3)^0,c
  2535   00142E  0E00               	movlw	0
  2536   001430  6E0D               	movwf	___flmul@sign^0,c
  2537   001432  EF30  F00A         	goto	i2l1426
  2538   001436                     i2l824:
  2539   001436  C018  F013         	movff	___flmul@temp,___flmul@bexp
  2540   00143A  0EFF               	movlw	255
  2541   00143C  1614               	andwf	___flmul@prod^0,f,c
  2542   00143E  0EFF               	movlw	255
  2543   001440  1615               	andwf	(___flmul@prod+1)^0,f,c
  2544   001442  0E7F               	movlw	127
  2545   001444  1616               	andwf	(___flmul@prod+2)^0,f,c
  2546   001446  0E00               	movlw	0
  2547   001448  1617               	andwf	(___flmul@prod+3)^0,f,c
  2548   00144A  A013               	btfss	___flmul@bexp^0,0,c
  2549   00144C  EF2A  F00A         	goto	i2u76_41
  2550   001450  EF2C  F00A         	goto	i2u76_40
  2551   001454                     i2u76_41:
  2552   001454  EF2D  F00A         	goto	i2l1424
  2553   001458                     i2u76_40:
  2554   001458  8E16               	bsf	(___flmul@prod+2)^0,7,c
  2555   00145A                     i2l1424:
  2556   00145A  90D8               	bcf	status,0,c
  2557   00145C  3013               	rrcf	___flmul@bexp^0,w,c
  2558   00145E  6E17               	movwf	(___flmul@prod+3)^0,c
  2559   001460                     i2l1426:
  2560   001460  500D               	movf	___flmul@sign^0,w,c
  2561   001462  1217               	iorwf	(___flmul@prod+3)^0,f,c
  2562   001464  C014  F001         	movff	___flmul@prod,?___flmul
  2563   001468  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  2564   00146C  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  2565   001470  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  2566   001474                     i2l811:
  2567   001474  0012               	return		;funcret
  2568   001476                     __end_of___flmul:
  2569                           	callstack 0
  2570                           
  2571                           	psect	rparam
  2572   000000                     
  2573                           	psect	temp
  2574   000036                     btemp:
  2575                           	callstack 0
  2576   000036                     	ds	1
  2577   000000                     int$flags	set	btemp
  2578   000000                     wtemp8	set	btemp+1
  2579   000000                     ttemp5	set	btemp+1
  2580   000000                     ttemp6	set	btemp+4
  2581   000000                     ttemp7	set	btemp+8
  2582                           
  2583                           	psect	config
  2584                           
  2585                           ; Padding undefined space
  2586   300000                     	org	3145728
  2587   300000  FF                 	db	255
  2588                           
  2589                           ;Config register CONFIG1H @ 0x300001
  2590                           ;	Oscillator Selection bits
  2591                           ;	FOSC = INTIO67, Internal oscillator block
  2592                           ;	4X PLL Enable
  2593                           ;	PLLCFG = OFF, Oscillator used directly
  2594                           ;	Primary clock enable bit
  2595                           ;	PRICLKEN = ON, Primary clock is always enabled
  2596                           ;	Fail-Safe Clock Monitor Enable bit
  2597                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2598                           ;	Internal/External Oscillator Switchover bit
  2599                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2600   300001                     	org	3145729
  2601   300001  28                 	db	40
  2602                           
  2603                           ;Config register CONFIG2L @ 0x300002
  2604                           ;	Power-up Timer Enable bit
  2605                           ;	PWRTEN = OFF, Power up timer disabled
  2606                           ;	Brown-out Reset Enable bits
  2607                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2608                           ;	Brown Out Reset Voltage bits
  2609                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2610   300002                     	org	3145730
  2611   300002  1F                 	db	31
  2612                           
  2613                           ;Config register CONFIG2H @ 0x300003
  2614                           ;	Watchdog Timer Enable bits
  2615                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2616                           ;	Watchdog Timer Postscale Select bits
  2617                           ;	WDTPS = 32768, 1:32768
  2618   300003                     	org	3145731
  2619   300003  3C                 	db	60
  2620                           
  2621                           ; Padding undefined space
  2622   300004                     	org	3145732
  2623   300004  FF                 	db	255
  2624                           
  2625                           ;Config register CONFIG3H @ 0x300005
  2626                           ;	CCP2 MUX bit
  2627                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2628                           ;	PORTB A/D Enable bit
  2629                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2630                           ;	P3A/CCP3 Mux bit
  2631                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2632                           ;	HFINTOSC Fast Start-up
  2633                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2634                           ;	Timer3 Clock input mux bit
  2635                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2636                           ;	ECCP2 B output mux bit
  2637                           ;	P2BMX = PORTD2, P2B is on RD2
  2638                           ;	MCLR Pin Enable bit
  2639                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2640   300005                     	org	3145733
  2641   300005  BB                 	db	187
  2642                           
  2643                           ;Config register CONFIG4L @ 0x300006
  2644                           ;	Stack Full/Underflow Reset Enable bit
  2645                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2646                           ;	Single-Supply ICSP Enable bit
  2647                           ;	LVP = OFF, Single-Supply ICSP disabled
  2648                           ;	Extended Instruction Set Enable bit
  2649                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2650                           ;	Background Debug
  2651                           ;	DEBUG = 0x1, unprogrammed default
  2652   300006                     	org	3145734
  2653   300006  81                 	db	129
  2654                           
  2655                           ; Padding undefined space
  2656   300007                     	org	3145735
  2657   300007  FF                 	db	255
  2658                           
  2659                           ;Config register CONFIG5L @ 0x300008
  2660                           ;	Code Protection Block 0
  2661                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2662                           ;	Code Protection Block 1
  2663                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2664                           ;	Code Protection Block 2
  2665                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2666                           ;	Code Protection Block 3
  2667                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2668   300008                     	org	3145736
  2669   300008  0F                 	db	15
  2670                           
  2671                           ;Config register CONFIG5H @ 0x300009
  2672                           ;	Boot Block Code Protection bit
  2673                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2674                           ;	Data EEPROM Code Protection bit
  2675                           ;	CPD = OFF, Data EEPROM not code-protected
  2676   300009                     	org	3145737
  2677   300009  C0                 	db	192
  2678                           
  2679                           ;Config register CONFIG6L @ 0x30000A
  2680                           ;	Write Protection Block 0
  2681                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2682                           ;	Write Protection Block 1
  2683                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2684                           ;	Write Protection Block 2
  2685                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2686                           ;	Write Protection Block 3
  2687                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2688   30000A                     	org	3145738
  2689   30000A  0F                 	db	15
  2690                           
  2691                           ;Config register CONFIG6H @ 0x30000B
  2692                           ;	Configuration Register Write Protection bit
  2693                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2694                           ;	Boot Block Write Protection bit
  2695                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2696                           ;	Data EEPROM Write Protection bit
  2697                           ;	WRTD = OFF, Data EEPROM not write-protected
  2698   30000B                     	org	3145739
  2699   30000B  E0                 	db	224
  2700                           
  2701                           ;Config register CONFIG7L @ 0x30000C
  2702                           ;	Table Read Protection Block 0
  2703                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2704                           ;	Table Read Protection Block 1
  2705                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2706                           ;	Table Read Protection Block 2
  2707                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2708                           ;	Table Read Protection Block 3
  2709                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2710   30000C                     	org	3145740
  2711   30000C  0F                 	db	15
  2712                           
  2713                           ;Config register CONFIG7H @ 0x30000D
  2714                           ;	Boot Block Table Read Protection bit
  2715                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2716   30000D                     	org	3145741
  2717   30000D  40                 	db	64
  2718                           tosu	equ	0xFFF
  2719                           tosh	equ	0xFFE
  2720                           tosl	equ	0xFFD
  2721                           stkptr	equ	0xFFC
  2722                           pclatu	equ	0xFFB
  2723                           pclath	equ	0xFFA
  2724                           pcl	equ	0xFF9
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           indf0	equ	0xFEF
  2732                           postinc0	equ	0xFEE
  2733                           postdec0	equ	0xFED
  2734                           preinc0	equ	0xFEC
  2735                           plusw0	equ	0xFEB
  2736                           fsr0h	equ	0xFEA
  2737                           fsr0l	equ	0xFE9
  2738                           wreg	equ	0xFE8
  2739                           indf1	equ	0xFE7
  2740                           postinc1	equ	0xFE6
  2741                           postdec1	equ	0xFE5
  2742                           preinc1	equ	0xFE4
  2743                           plusw1	equ	0xFE3
  2744                           fsr1h	equ	0xFE2
  2745                           fsr1l	equ	0xFE1
  2746                           bsr	equ	0xFE0
  2747                           indf2	equ	0xFDF
  2748                           postinc2	equ	0xFDE
  2749                           postdec2	equ	0xFDD
  2750                           preinc2	equ	0xFDC
  2751                           plusw2	equ	0xFDB
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        1
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      53
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[10]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), 


Critical Paths under _main in COMRAM

    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Bluetooth_Receiver->_Driver_Control
    _Send_String->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction
    _Driver_Control->___flmul

Critical Paths under _main in BANK0

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1400
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0    1400
                                              3 BANK0      2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1    1400
                                              1 BANK0      2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      22
                                             41 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             40 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         6     6      0    5417
                                             34 COMRAM     6     6      0
                 _Bluetooth_Receiver
 ---------------------------------------------------------------------------------
 (6) _Bluetooth_Receiver                                   0     0      0    5417
                     _Driver_Control
                        _Send_String
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (7) _Send_String                                          3     2      1     740
                                              4 COMRAM     3     2      1
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (7) i2_Send_Instruction_Data                              2     1      1     270
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Driver_Control                                       9     0      9    4407
                                             25 COMRAM     9     0      9
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    1896
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Bluetooth_Receiver
     _Driver_Control
       ___flmul
       ___fltol
     _Send_String
       i2_Send_Instruction_Data
         i2_LCD_Instruction
     i2_Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      35       1       56.4%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRlhhlhh     14      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlhhlhh      8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhhll       6      0       0      44        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRlhhlhh      1      0       0      40        0.0%
BITBIGSFRlhhlhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      50        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Mar 17 21:01:11 2024

                                l93 1A3E                                  l87 1BAE  
                                l88 1BAE                   Send_String@String 0005  
                                bsr 0FE0                                 l181 1B86  
                               l184 1ABC                                 l178 19D6  
                               _PR2 0FBB         i2Send_Instruction_Data@Data 0003  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                      ___flmul@aexp 0012                        ___flmul@bexp 0013  
                _Bluetooth_Receiver 1476                        ___flmul@sign 000D  
                      ___flmul@temp 0018                        ___flmul@prod 0014  
                      ___fltol@exp1 000A                                l1120 19F6  
                              l1130 1A08                                l1122 19F8  
                              l1114 19D8                                l1140 1A16  
                              l1132 1A0A                                l1124 1A02  
                              l1116 19EA                                l1150 1A20  
                              l1142 1A18                                l1134 1A10  
                              l1126 1A04                                l1118 19EC  
                              l1152 1A22                                l1144 1A1A  
                              l1136 1A12                                l1128 1A06  
                              l1154 1A3C                                l1146 1A1C  
                              l1138 1A14                                l1148 1A1E  
                              l1700 1BA6                                l1702 1BAA  
                              l1660 1A84                                l1670 1AAC  
                              l1662 1A86                                l1664 1A96  
                              l1672 1B66                                l1680 193A  
                              l1666 1A9A                                l1674 1B72  
                              l1690 198E                                l1682 1946  
                              l1668 1AAA                                l1676 1B7C  
                              l1692 199A                                l1684 1964  
                              l1694 19A6                                l1686 1976  
                              l1678 1922                                l1696 19B2  
                              l1688 1982                                l1698 19BE  
                              STR_1 1032                                STR_2 1023  
                              STR_3 1041                                STR_4 1012  
                              STR_5 1001                                u1207 1A8C  
                              u1217 1AA0                                u1227 1AB2  
                              u1155 1B70                                u1156 1B72  
                              u1167 192E                                _LATD 0F8C  
                              u1177 194E                                _LATE 0F8D  
                              u1187 196C                                u1197 19CA  
                              i2l98 1B16                 ?_Bluetooth_Receiver 0001  
                              _main 1BA6                                btemp 0036  
                              prodh 0FF4                                prodl 0FF3  
                              start 0026                     ?_Driver_Control 001A  
                      ___param_bank 0000                     _LCD_Instruction 1A80  
i2Send_Instruction_Data@Instruction 0004    Send_Instruction_Data@Instruction 0062  
                      _BAUDCON1bits 0FB8                ??_Bluetooth_Receiver 0023  
                     ___fltol@sign1 0009                               ?_main 0001  
                   __end_of___flmul 1476                     __end_of___fltol 1922  
                             _T2CON 0FBA                               i1l103 001E  
                             i2l122 167E                               i2l116 167E  
                             i2l142 181A                               i2l136 181A  
                             i2l181 1BA4                               i2l190 1A7E  
                             i2l184 1AF8                               i2l490 1920  
                             i2l811 1474                               i2l814 1306  
                             i2l807 1110                               i2l824 1436  
                             i2l816 137E                               i2l817 136C  
                             _SPBRG 0FAF                               _TRISD 0F95  
                             _TRISE 0F96        i2LCD_Instruction@Instruction 0002  
                             tablat 0FF5                               ttemp5 0037  
                             ttemp6 003A                               ttemp7 003E  
                             status 0FD8                               wtemp8 0037  
                   __initialization 1B32                        __end_of_main 1BB6  
                  __end_of_Init_LCD 19D8               _Send_Instruction_Data 1B62  
                            ??_main 002B                       ??_Send_String 0006  
                     __activetblptr 0001                              _CCPR3L 0F5E  
                            _CCPR5L 0F55                              _ANSELC 0F3A  
                            _ANSELD 0F3B                              _ANSELE 0F3C  
                            i2l1300 1AE8                              i2l1310 1078  
                            i2l1302 104C                              i2l1320 10B4  
                            i2l1312 1088                              i2l1304 1058  
                            i2l1402 138E                              i2l1410 13D6  
                            i2l1330 10EA                              i2l1322 10BA  
                            i2l1314 1098                              i2l1306 1066  
                            i2l1420 144A                              i2l1412 13F0  
                            i2l1404 139A                              i2l1332 10FA  
                            i2l1324 10C8                              i2l1316 109E  
                            i2l1308 1068                              i2l1500 16DA  
                            i2l1422 1458                              i2l1414 1404  
                            i2l1406 13A8                              i2l1350 117C  
                            i2l1342 1144                              i2l1334 1100  
                            i2l1326 10CA                              i2l1318 10AE  
                            i2l1510 17A2                              i2l1502 1736  
                            i2l1424 145A                              i2l1416 141E  
                            i2l1408 13D2                              i2l1360 11C6  
                            i2l1352 1194                              i2l1344 1150  
                            i2l1336 1120                              i2l1328 10DA  
                            i2l1440 1870                              i2l1432 181C  
                            i2l1520 17F0                              i2l1512 17B4  
                            i2l1504 175C                              i2l1600 1626  
                            i2l1418 143A                              i2l1426 1460  
                            i2l1370 121C                              i2l1362 11D6  
                            i2l1354 11A0                              i2l1346 115A  
                            i2l1338 1130                              i2l1442 1872  
                            i2l1434 1832                              i2l1522 17FC  
                            i2l1514 17C0                              i2l1506 1784  
                            i2l1290 1AC0                              i2l1610 1676  
                            i2l1602 1638                              i2l1428 1464  
                            i2l1380 12C0                              i2l1372 1238  
                            i2l1364 11E2                              i2l1356 11AC  
                            i2l1348 1170                              i2l1444 1882  
                            i2l1524 180E                              i2l1516 17D2  
                            i2l1508 1796                              i2l1292 1AC2  
                            i2l1604 164A                              i2l1390 1316  
                            i2l1382 12CE                              i2l1374 1244  
                            i2l1366 11F2                              i2l1358 11BA  
                            i2l1470 1900                              i2l1454 18AC  
                            i2l1446 1886                              i2l1438 1846  
                            i2l1518 17DE                              i2l1294 1AD2  
                            i2l1606 1652                              i2l1550 1484  
                            i2l1392 1324                              i2l1384 12EC  
                            i2l1376 1260                              i2l1368 120C  
                            i2l1472 1910                              i2l1464 18D4  
                            i2l1456 18B6                              i2l1448 1894  
                            i2l1296 1AD6                              i2l1480 1B9C  
                            i2l1608 1664                              i2l1560 14BA  
                            i2l1552 1488                              i2l1616 1B12  
                            i2l1394 1328                              i2l1386 12F6  
                            i2l1378 128A                              i2l1466 18E0  
                            i2l1458 18C0                              i2l1298 1AE6  
                            i2l1490 1A48                              i2l1570 14F4  
                            i2l1554 149A                              i2l1562 14C2  
                            i2l1396 1336                              i2l1388 1304  
                            i2l1468 18F0                              i2l1476 1B8A  
                            i2l1492 1A5E                              i2l1580 152E  
                            i2l1564 14D4                              i2l1572 14FC  
                            i2l1556 14AE                              i2l1548 1476  
                            i2l1398 1364                              i2l1478 1B94  
                            i2l1494 1A60                              i2l1590 1598  
                            i2l1574 150E                              i2l1582 1536  
                            i2l1566 14E8                              i2l1558 14B6  
                            i2l1496 1680                              i2l1488 1A40  
                            i2l1592 15AA                              i2l1584 1548  
                            i2l1576 1522                              i2l1568 14F0  
                            i2l1498 16B4                              i2l1594 15D6  
                            i2l1586 155A                              i2l1578 152A  
                            i2l1596 15E8                              i2l1588 1586  
                            i2l1598 15FA                              _RCREG1 0FAE  
        LCD_Instruction@Instruction 0060                              _OSCCON 0FD3  
                     ?_Interrupt_Rx 0001             __end_of_LCD_Instruction 1ABE  
                         ??___flmul 0009                           ??___fltol 0005  
                            clear_0 1B4A                              isa$std 0001  
                      __pdataCOMRAM 0035                        __mediumconst 0000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                 __end_of_Send_String 1A80  
                        __accesstop 0060             __end_of__initialization 1B50  
                    ??_Interrupt_Rx 0023                       ___rparam_used 0001  
                        ___fltol@f1 0001                      __pcstackCOMRAM 0001  
            ?_Send_Instruction_Data 0061                         _Duty_Cycle1 002F  
                       _Duty_Cycle2 002B                   __end_of_Interrupt 0026  
                  ??_Driver_Control 0023                           ?_Init_LCD 0001  
                  ?_LCD_Instruction 0001             i2_Send_Instruction_Data 1B88  
                           _CCP3CON 0F5D                             _CCP5CON 0F54  
           Driver_Control@Direction 0022                         _Send_String 1A40  
                           i2u60_40 1088                             i2u60_41 1084  
                           i2u61_40 10C8                             i2u61_41 10C4  
                           i2u70_40 1364                             i2u62_40 10DA  
                           i2u70_41 1360                             i2u62_41 10D6  
                           i2u71_40 137A                             i2u63_40 10EA  
                           i2u71_41 1376                             i2u63_41 10E6  
                           i2u72_40 138E                             i2u64_40 1120  
                           i2u80_40 18A8                             i2u72_41 138A  
                           i2u64_41 111C                             i2u80_41 18A4  
                           i2u73_40 13A8                             i2u65_40 1130  
                           i2u81_40 18D0                             i2u73_41 13A4  
                           i2u65_41 112C                             i2u81_41 18CC  
                           i2u74_40 13F0                             i2u66_40 12AA  
                           i2u58_40 1066                             i2u82_40 18F0  
                           i2u90_40 17F0                             i2u74_41 13EC  
                           i2u58_41 1062                             i2u82_41 18EC  
                           i2u90_41 17EC                             i2u66_45 12A0  
                           i2u75_40 141E                             i2u67_40 1304  
                           i2u59_40 1078                             i2u83_40 1900  
                           i2u91_40 180E                             i2u75_41 141A  
                           i2u67_41 1300                             i2u59_41 1074  
                           i2u83_41 18FC                             i2u91_41 180A  
                           i2u76_40 1458                             i2u68_40 1324  
                           i2u92_40 1484                             i2u76_41 1454  
                           i2u68_41 1320                             i2u92_41 1480  
                           i2u84_45 1B92                             i2u84_46 1B94  
                           i2u69_40 1336                             i2u77_40 1832  
                           i2u93_40 149A                             i2u69_41 1332  
                           i2u77_41 182E                             i2u93_41 1496  
                           i2u78_40 1866                             i2u86_40 1A7E  
                           i2u94_40 14D4                             i2u86_41 1A7A  
                           i2u94_41 14D0                             i2u78_45 185C  
                           i2u79_40 1894                             i2u87_40 1796  
                           i2u95_40 150E                             i2u79_41 1890  
                           i2u87_41 1792                             i2u95_41 150A  
                           i2u88_40 17B4                             i2u96_40 1548  
                           i2u88_41 17B0                             i2u96_41 1544  
                           i2u89_40 17D2                             i2u97_40 155A  
                           i2u89_41 17CE                             i2u97_41 1556  
                           i2u98_40 1598                             i2u98_41 1594  
                           i2u99_40 15AA                             i2u99_41 15A6  
                  _Manual_Direction 0033                          ??_Init_LCD 0063  
                           __Hparam 0000                             __Lparam 0000  
                           ___flmul 104C                             ___fltol 181C  
                      __psmallconst 1000                             __pcinit 1B32  
                           __ramtop 1000                             __ptext0 1BA6  
                           __ptext1 1922                             __ptext2 1B62  
                           __ptext3 1A80                             __ptext4 19D8  
                           __ptext7 1476                             __ptext8 1A40  
                           __ptext9 1B88                __end_of_Interrupt_Rx 1B32  
                         _T2CONbits 0FBA                      __pintcode_body 1AFA  
              end_of_initialization 1B50                             int_func 1AFA  
         ??i2_Send_Instruction_Data 0004                           _RCSTAbits 0FAB  
                           postinc0 0FEE                           _TRISCbits 0F94  
                       ___flmul@grs 000E             ??_Send_Instruction_Data 002B  
                     __pidataCOMRAM 1BB6                 start_initialization 1B32  
                      Send_String@i 0007           Send_Instruction_Data@Data 0061  
                    _Configurations 19D8                           _Interrupt 0018  
                         _Rx_Buffer 0034                        ?_Send_String 0005  
          Driver_Control@PWM_LMotor 001E            Driver_Control@PWM_RMotor 001A  
                         ___flmul@a 0005                           ___flmul@b 0001  
                       __pbssCOMRAM 002B              __end_of_Configurations 1A40  
                     __pcstackBANK0 0060                          ?_Interrupt 0001  
                      _Interrupt_Rx 0008                           __pintcode 0008  
                          ?___flmul 0001                            ?___fltol 0001  
                       __pintcodelo 0018                         __smallconst 1000  
                   ?_Configurations 0001                            _LATCbits 0F8B  
                          _LATDbits 0F8C                            _PIE1bits 0F9D  
                          i2u100_40 15E8                            i2u100_41 15E4  
                          i2u101_40 15FA                            i2u101_41 15F6  
                          i2u102_40 1638                            i2u102_41 1634  
                          i2u103_40 164A                            i2u103_41 1646  
                          i2u104_40 1664                            i2u104_41 1660  
                          i2u105_40 1676                            i2u105_41 1672  
                          i2u123_47 1AC8                            i2u124_47 1ADC  
                          i2u125_47 1AEE                            _PIR1bits 0F9E  
                          _RCONbits 0FD0          __end_of_Bluetooth_Receiver 1680  
                 i2_LCD_Instruction 1ABE                  ?i2_LCD_Instruction 0001  
               ??i2_LCD_Instruction 0001                         ??_Interrupt 0029  
                          _Init_LCD 1922                            __Hrparam 0000  
                          __Lrparam 0000                        __Lsmallconst 1000  
     __end_of_Send_Instruction_Data 1B88           __end_ofi2_LCD_Instruction 1AFA  
                   _Platform_Status 0035                   ??_LCD_Instruction 002A  
                          __ptext10 1ABE                            __ptext11 1680  
                          __ptext12 181C                            __ptext13 104C  
          ?i2_Send_Instruction_Data 0003                            isa$xinst 0000  
                          int$flags 0036                          _INTCONbits 0FF2  
                          intlevel1 0000                            intlevel2 0000  
                    _Driver_Control 1680                    ??_Configurations 002A  
   __end_ofi2_Send_Instruction_Data 1BA6              __end_of_Driver_Control 181C  
