

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Mar 15 17:49:40 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 12/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F46K22 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001C82                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _Platform_Status
    75   001C82  69                 	db	105
    76   000000                     _LATDbits	set	3980
    77   000000                     _T2CONbits	set	4026
    78   000000                     _ANSELC	set	3898
    79   000000                     _OSCCON	set	4051
    80   000000                     _INTCONbits	set	4082
    81   000000                     _CCP5CON	set	3924
    82   000000                     _CCP3CON	set	3933
    83   000000                     _LATCbits	set	3979
    84   000000                     _TRISCbits	set	3988
    85   000000                     _ANSELE	set	3900
    86   000000                     _ANSELD	set	3899
    87   000000                     _PIE1bits	set	3997
    88   000000                     _RCONbits	set	4048
    89   000000                     _TRISE	set	3990
    90   000000                     _TRISD	set	3989
    91   000000                     _LATE	set	3981
    92   000000                     _LATD	set	3980
    93   000000                     _RCSTAbits	set	4011
    94   000000                     _TXSTA1bits	set	4012
    95   000000                     _SPBRG	set	4015
    96   000000                     _PIR1bits	set	3998
    97   000000                     _BAUDCON1bits	set	4024
    98   000000                     _RCREG1	set	4014
    99   000000                     _T2CON	set	4026
   100   000000                     _PR2	set	4027
   101   000000                     _CCPR3L	set	3934
   102   000000                     _CCPR5L	set	3925
   103                           
   104                           	psect	smallconst
   105   001000                     __psmallconst:
   106                           	callstack 0
   107   001000  00                 	db	0
   108   001001  52                 	db	82	;'R'
   109   001002  6F                 	db	111	;'o'
   110   001003  62                 	db	98	;'b'
   111   001004  6F                 	db	111	;'o'
   112   001005  74                 	db	116	;'t'
   113   001006  69                 	db	105	;'i'
   114   001007  63                 	db	99	;'c'
   115   001008  20                 	db	32
   116   001009  50                 	db	80	;'P'
   117   00100A  6C                 	db	108	;'l'
   118   00100B  61                 	db	97	;'a'
   119   00100C  74                 	db	116	;'t'
   120   00100D  66                 	db	102	;'f'
   121   00100E  6F                 	db	111	;'o'
   122   00100F  72                 	db	114	;'r'
   123   001010  6D                 	db	109	;'m'
   124   001011  00                 	db	0
   125   001012  52                 	db	82	;'R'
   126   001013  65                 	db	101	;'e'
   127   001014  73                 	db	115	;'s'
   128   001015  65                 	db	101	;'e'
   129   001016  61                 	db	97	;'a'
   130   001017  72                 	db	114	;'r'
   131   001018  63                 	db	99	;'c'
   132   001019  68                 	db	104	;'h'
   133   00101A  20                 	db	32
   134   00101B  50                 	db	80	;'P'
   135   00101C  72                 	db	114	;'r'
   136   00101D  6F                 	db	111	;'o'
   137   00101E  6A                 	db	106	;'j'
   138   00101F  65                 	db	101	;'e'
   139   001020  63                 	db	99	;'c'
   140   001021  74                 	db	116	;'t'
   141   001022  00                 	db	0
   142   001023                     STR_2:
   143   001023  41                 	db	65	;'A'
   144   001024  75                 	db	117	;'u'
   145   001025  74                 	db	116	;'t'
   146   001026  6F                 	db	111	;'o'
   147   001027  6D                 	db	109	;'m'
   148   001028  61                 	db	97	;'a'
   149   001029  74                 	db	116	;'t'
   150   00102A  69                 	db	105	;'i'
   151   00102B  63                 	db	99	;'c'
   152   00102C  20                 	db	32
   153   00102D  4D                 	db	77	;'M'
   154   00102E  6F                 	db	111	;'o'
   155   00102F  64                 	db	100	;'d'
   156   001030  65                 	db	101	;'e'
   157   001031  00                 	db	0
   158   001032                     STR_1:
   159   001032  20                 	db	32
   160   001033  20                 	db	32
   161   001034  20                 	db	32
   162   001035  4D                 	db	77	;'M'
   163   001036  61                 	db	97	;'a'
   164   001037  6E                 	db	110	;'n'
   165   001038  75                 	db	117	;'u'
   166   001039  61                 	db	97	;'a'
   167   00103A  6C                 	db	108	;'l'
   168   00103B  20                 	db	32
   169   00103C  4D                 	db	77	;'M'
   170   00103D  6F                 	db	111	;'o'
   171   00103E  64                 	db	100	;'d'
   172   00103F  65                 	db	101	;'e'
   173   001040  00                 	db	0
   174   001041                     STR_3:
   175   001041  53                 	db	83	;'S'
   176   001042  65                 	db	101	;'e'
   177   001043  6D                 	db	109	;'m'
   178   001044  69                 	db	105	;'i'
   179   001045  20                 	db	32
   180   001046  4D                 	db	77	;'M'
   181   001047  6F                 	db	111	;'o'
   182   001048  64                 	db	100	;'d'
   183   001049  65                 	db	101	;'e'
   184   00104A  00                 	db	0
   185   00104B  00                 	db	0	; dummy byte at the end
   186   000000                     
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190   001BD4                     __pcinit:
   191                           	callstack 0
   192   001BD4                     start_initialization:
   193                           	callstack 0
   194   001BD4                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Initialize objects allocated to COMRAM (1 bytes)
   198                           ; load TBLPTR registers with __pidataCOMRAM
   199   001BD4  0E82               	movlw	low __pidataCOMRAM
   200   001BD6  6EF6               	movwf	tblptrl,c
   201   001BD8  0E1C               	movlw	high __pidataCOMRAM
   202   001BDA  6EF7               	movwf	tblptrh,c
   203   001BDC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   204   001BDE  6EF8               	movwf	tblptru,c
   205   001BE0  0009               	tblrd		*+	;fetch initializer
   206   001BE2  CFF5 F03B          	movff	tablat,__pdataCOMRAM
   207                           
   208                           ; Clear objects allocated to COMRAM (10 bytes)
   209   001BE6  EE00  F031         	lfsr	0,__pbssCOMRAM
   210   001BEA  0E0A               	movlw	10
   211   001BEC                     clear_0:
   212   001BEC  6AEE               	clrf	postinc0,c
   213   001BEE  06E8               	decf	wreg,f,c
   214   001BF0  E1FD               	bnz	clear_0
   215   001BF2                     end_of_initialization:
   216                           	callstack 0
   217   001BF2                     __end_of__initialization:
   218                           	callstack 0
   219   001BF2  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220   001BF4  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221   001BF6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   222   001BF8  6EF8               	movwf	tblptru,c
   223   001BFA  0E10               	movlw	high __Lsmallconst
   224   001BFC  6EF7               	movwf	tblptrh,c
   225   001BFE  0100               	movlb	0
   226   001C00  EF34  F00E         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   000031                     __pbssCOMRAM:
   230                           	callstack 0
   231   000031                     _Duty_Cycle2:
   232                           	callstack 0
   233   000031                     	ds	4
   234   000035                     _Duty_Cycle1:
   235                           	callstack 0
   236   000035                     	ds	4
   237   000039                     _Manual_Direction:
   238                           	callstack 0
   239   000039                     	ds	1
   240   00003A                     _Rx_Buffer:
   241                           	callstack 0
   242   00003A                     	ds	1
   243                           
   244                           	psect	dataCOMRAM
   245   00003B                     __pdataCOMRAM:
   246                           	callstack 0
   247   00003B                     _Platform_Status:
   248                           	callstack 0
   249   00003B                     	ds	1
   250                           
   251                           	psect	cstackCOMRAM
   252   000001                     __pcstackCOMRAM:
   253                           	callstack 0
   254   000001                     ??i2_LCD_Instruction:
   255                           
   256                           ; 1 bytes @ 0x0
   257   000001                     	ds	1
   258   000002                     i2LCD_Instruction@Instruction:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x1
   262   000002                     	ds	1
   263   000003                     i2Send_Instruction_Data@Data:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x2
   267   000003                     	ds	1
   268   000004                     i2Send_Instruction_Data@Instruction:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x3
   272   000004                     	ds	1
   273   000005                     Send_String@String:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x4
   277   000005                     	ds	1
   278   000006                     ??_Send_String:
   279                           
   280                           ; 1 bytes @ 0x5
   281   000006                     	ds	1
   282   000007                     Send_String@i:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x6
   286   000007                     	ds	1
   287   000008                     ??_Interrupt_Rx:
   288                           
   289                           ; 1 bytes @ 0x7
   290   000008                     	ds	4
   291   00000C                     ??_Interrupt:
   292                           
   293                           ; 1 bytes @ 0xB
   294   00000C                     	ds	1
   295   00000D                     ??_LCD_Instruction:
   296   00000D                     ?___flmul:
   297                           	callstack 0
   298   00000D                     ?___fltol:
   299                           	callstack 0
   300   00000D                     ___fltol@f1:
   301                           	callstack 0
   302   00000D                     ___flmul@b:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0xC
   306   00000D                     	ds	1
   307   00000E                     LCD_Instruction@Instruction:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0xD
   311   00000E                     	ds	1
   312   00000F                     Send_Instruction_Data@Data:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0xE
   316   00000F                     	ds	1
   317   000010                     Send_Instruction_Data@Instruction:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xF
   321   000010                     	ds	1
   322   000011                     ??_Init_LCD:
   323   000011                     ??___fltol:
   324   000011                     ___flmul@a:
   325                           	callstack 0
   326                           
   327                           ; 4 bytes @ 0x10
   328   000011                     	ds	4
   329   000015                     ??___flmul:
   330   000015                     ___fltol@sign1:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x14
   334   000015                     	ds	1
   335   000016                     ___fltol@exp1:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x15
   339   000016                     	ds	3
   340   000019                     ___flmul@sign:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x18
   344   000019                     	ds	1
   345   00001A                     ___flmul@grs:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x19
   349   00001A                     	ds	4
   350   00001E                     ___flmul@aexp:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x1D
   354   00001E                     	ds	1
   355   00001F                     ___flmul@bexp:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x1E
   359   00001F                     	ds	1
   360   000020                     ___flmul@prod:
   361                           	callstack 0
   362                           
   363                           ; 4 bytes @ 0x1F
   364   000020                     	ds	4
   365   000024                     ___flmul@temp:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x23
   369   000024                     	ds	2
   370   000026                     Driver_Control@PWM_RMotor:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0x25
   374   000026                     	ds	4
   375   00002A                     Driver_Control@PWM_LMotor:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x29
   379   00002A                     	ds	4
   380   00002E                     Driver_Control@Direction:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x2D
   384   00002E                     	ds	1
   385   00002F                     Manual@Data:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x2E
   389   00002F                     	ds	1
   390   000030                     Platform_Mode@Data:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x2F
   394   000030                     	ds	1
   395   000031                     
   396                           ; 1 bytes @ 0x30
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 54 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels required when called: 10
   422 ;; This function calls:
   423 ;;		_Configurations
   424 ;;		_Init_LCD
   425 ;;		_Platform_Mode
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text0
   432   001C68                     __ptext0:
   433                           	callstack 0
   434   001C68                     _main:
   435                           	callstack 21
   436   001C68                     
   437                           ;main.c: 57:     Configurations();
   438   001C68  EC32  F00D         	call	_Configurations	;wreg free
   439   001C6C                     
   440                           ;main.c: 58:     Init_LCD();
   441   001C6C  ECE1  F00C         	call	_Init_LCD	;wreg free
   442   001C70                     l1630:
   443                           
   444                           ;main.c: 63:         Platform_Mode(Platform_Status);
   445   001C70  503B               	movf	_Platform_Status^0,w,c
   446   001C72  EC66  F00D         	call	_Platform_Mode
   447   001C76  EF38  F00E         	goto	l1630
   448   001C7A  EF13  F000         	goto	start
   449   001C7E                     __end_of_main:
   450                           	callstack 0
   451                           
   452 ;; *************** function _Platform_Mode *****************
   453 ;; Defined at:
   454 ;;		line 333 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  Data            1    wreg     unsigned char 
   457 ;; Auto vars:     Size  Location     Type
   458 ;;  Data            1   47[COMRAM] unsigned char 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;Total ram usage:        1 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; Hardware stack levels required when called: 9
   475 ;; This function calls:
   476 ;;		_Automatic
   477 ;;		_Manual
   478 ;;		_Semi_Automatic
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text1
   485   001ACC                     __ptext1:
   486                           	callstack 0
   487   001ACC                     _Platform_Mode:
   488                           	callstack 21
   489                           
   490                           ;incstack = 0
   491                           ;Platform_Mode@Data stored from wreg
   492   001ACC  6E30               	movwf	Platform_Mode@Data^0,c
   493   001ACE                     
   494                           ;main.c: 335:     if (Data == 'M') {
   495   001ACE  0E4D               	movlw	77
   496   001AD0  1830               	xorwf	Platform_Mode@Data^0,w,c
   497   001AD2  A4D8               	btfss	status,2,c
   498   001AD4  EF6E  F00D         	goto	u941
   499   001AD8  EF70  F00D         	goto	u940
   500   001ADC                     u941:
   501   001ADC  EF75  F00D         	goto	l1564
   502   001AE0                     u940:
   503   001AE0                     
   504                           ;main.c: 337:         Manual(Manual_Direction);
   505   001AE0  5039               	movf	_Manual_Direction^0,w,c
   506   001AE2  ECB4  F00B         	call	_Manual
   507                           
   508                           ;main.c: 339:     } else if (Data == 'S') {
   509   001AE6  EF8D  F00D         	goto	l161
   510   001AEA                     l1564:
   511   001AEA  0E53               	movlw	83
   512   001AEC  1830               	xorwf	Platform_Mode@Data^0,w,c
   513   001AEE  A4D8               	btfss	status,2,c
   514   001AF0  EF7C  F00D         	goto	u951
   515   001AF4  EF7E  F00D         	goto	u950
   516   001AF8                     u951:
   517   001AF8  EF82  F00D         	goto	l1568
   518   001AFC                     u950:
   519   001AFC                     
   520                           ;main.c: 341:         Semi_Automatic();
   521   001AFC  EC3F  F00E         	call	_Semi_Automatic	;wreg free
   522                           
   523                           ;main.c: 343:     } else if (Data == 'A') {
   524   001B00  EF8D  F00D         	goto	l161
   525   001B04                     l1568:
   526   001B04  0E41               	movlw	65
   527   001B06  1830               	xorwf	Platform_Mode@Data^0,w,c
   528   001B08  A4D8               	btfss	status,2,c
   529   001B0A  EF89  F00D         	goto	u961
   530   001B0E  EF8B  F00D         	goto	u960
   531   001B12                     u961:
   532   001B12  EF8D  F00D         	goto	l161
   533   001B16                     u960:
   534   001B16                     
   535                           ;main.c: 345:         Automatic();
   536   001B16  EC40  F00E         	call	_Automatic	;wreg free
   537   001B1A                     l161:
   538   001B1A  0012               	return		;funcret
   539   001B1C                     __end_of_Platform_Mode:
   540                           	callstack 0
   541                           
   542 ;; *************** function _Semi_Automatic *****************
   543 ;; Defined at:
   544 ;;		line 325 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		None
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 6
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_Platform_Mode
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text2
   573   001C7E                     __ptext2:
   574                           	callstack 0
   575   001C7E                     _Semi_Automatic:
   576                           	callstack 23
   577   001C7E  0012               	return		;funcret
   578   001C80                     __end_of_Semi_Automatic:
   579                           	callstack 0
   580                           
   581 ;; *************** function _Manual *****************
   582 ;; Defined at:
   583 ;;		line 284 in file "main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  Data            1    wreg     unsigned char 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  Data            1   46[COMRAM] unsigned char 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;Total ram usage:        1 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 8
   604 ;; This function calls:
   605 ;;		_Driver_Control
   606 ;; This function is called by:
   607 ;;		_Platform_Mode
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text3
   612   001768                     __ptext3:
   613                           	callstack 0
   614   001768                     _Manual:
   615                           	callstack 21
   616                           
   617                           ;incstack = 0
   618                           ;Manual@Data stored from wreg
   619   001768  6E2F               	movwf	Manual@Data^0,c
   620   00176A                     
   621                           ;main.c: 287:     if (Data == 'F') {
   622   00176A  0E46               	movlw	70
   623   00176C  182F               	xorwf	Manual@Data^0,w,c
   624   00176E  A4D8               	btfss	status,2,c
   625   001770  EFBC  F00B         	goto	u881
   626   001774  EFBE  F00B         	goto	u880
   627   001778                     u881:
   628   001778  EFD4  F00B         	goto	l1518
   629   00177C                     u880:
   630   00177C                     
   631                           ;main.c: 289:         Driver_Control(1023.0, 1023.0, 'F');
   632   00177C  0E00               	movlw	0
   633   00177E  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   634   001780  0EC0               	movlw	192
   635   001782  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   636   001784  0E7F               	movlw	127
   637   001786  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   638   001788  0E44               	movlw	68
   639   00178A  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   640   00178C  0E00               	movlw	0
   641   00178E  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   642   001790  0EC0               	movlw	192
   643   001792  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   644   001794  0E7F               	movlw	127
   645   001796  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   646   001798  0E44               	movlw	68
   647   00179A  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   648   00179C  0E46               	movlw	70
   649   00179E  6E2E               	movwf	Driver_Control@Direction^0,c
   650   0017A0  EC3B  F00A         	call	_Driver_Control	;wreg free
   651                           
   652                           ;main.c: 291:     } else if (Data == 'B') {
   653   0017A4  EF5D  F00C         	goto	l147
   654   0017A8                     l1518:
   655   0017A8  0E42               	movlw	66
   656   0017AA  182F               	xorwf	Manual@Data^0,w,c
   657   0017AC  A4D8               	btfss	status,2,c
   658   0017AE  EFDB  F00B         	goto	u891
   659   0017B2  EFDD  F00B         	goto	u890
   660   0017B6                     u891:
   661   0017B6  EFF3  F00B         	goto	l1522
   662   0017BA                     u890:
   663   0017BA                     
   664                           ;main.c: 293:         Driver_Control(1023.0, 1023.0, 'B');
   665   0017BA  0E00               	movlw	0
   666   0017BC  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   667   0017BE  0EC0               	movlw	192
   668   0017C0  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   669   0017C2  0E7F               	movlw	127
   670   0017C4  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   671   0017C6  0E44               	movlw	68
   672   0017C8  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   673   0017CA  0E00               	movlw	0
   674   0017CC  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   675   0017CE  0EC0               	movlw	192
   676   0017D0  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   677   0017D2  0E7F               	movlw	127
   678   0017D4  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   679   0017D6  0E44               	movlw	68
   680   0017D8  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   681   0017DA  0E42               	movlw	66
   682   0017DC  6E2E               	movwf	Driver_Control@Direction^0,c
   683   0017DE  EC3B  F00A         	call	_Driver_Control	;wreg free
   684                           
   685                           ;main.c: 295:     } else if (Data == 'T') {
   686   0017E2  EF5D  F00C         	goto	l147
   687   0017E6                     l1522:
   688   0017E6  0E54               	movlw	84
   689   0017E8  182F               	xorwf	Manual@Data^0,w,c
   690   0017EA  A4D8               	btfss	status,2,c
   691   0017EC  EFFA  F00B         	goto	u901
   692   0017F0  EFFC  F00B         	goto	u900
   693   0017F4                     u901:
   694   0017F4  EF12  F00C         	goto	l1526
   695   0017F8                     u900:
   696   0017F8                     
   697                           ;main.c: 297:         Driver_Control(0.00, 0.00, 'T');
   698   0017F8  0E00               	movlw	0
   699   0017FA  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   700   0017FC  0E00               	movlw	0
   701   0017FE  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   702   001800  0E00               	movlw	0
   703   001802  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   704   001804  0E00               	movlw	0
   705   001806  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   706   001808  0E00               	movlw	0
   707   00180A  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   708   00180C  0E00               	movlw	0
   709   00180E  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   710   001810  0E00               	movlw	0
   711   001812  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   712   001814  0E00               	movlw	0
   713   001816  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   714   001818  0E54               	movlw	84
   715   00181A  6E2E               	movwf	Driver_Control@Direction^0,c
   716   00181C  EC3B  F00A         	call	_Driver_Control	;wreg free
   717                           
   718                           ;main.c: 299:     } else if (Data == 'R') {
   719   001820  EF5D  F00C         	goto	l147
   720   001824                     l1526:
   721   001824  0E52               	movlw	82
   722   001826  182F               	xorwf	Manual@Data^0,w,c
   723   001828  A4D8               	btfss	status,2,c
   724   00182A  EF19  F00C         	goto	u911
   725   00182E  EF1B  F00C         	goto	u910
   726   001832                     u911:
   727   001832  EF31  F00C         	goto	l1530
   728   001836                     u910:
   729   001836                     
   730                           ;main.c: 301:         Driver_Control(255.7, 1023.0, 'L');
   731   001836  0E33               	movlw	51
   732   001838  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   733   00183A  0EB3               	movlw	179
   734   00183C  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   735   00183E  0E7F               	movlw	127
   736   001840  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   737   001842  0E43               	movlw	67
   738   001844  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   739   001846  0E00               	movlw	0
   740   001848  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   741   00184A  0EC0               	movlw	192
   742   00184C  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   743   00184E  0E7F               	movlw	127
   744   001850  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   745   001852  0E44               	movlw	68
   746   001854  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   747   001856  0E4C               	movlw	76
   748   001858  6E2E               	movwf	Driver_Control@Direction^0,c
   749   00185A  EC3B  F00A         	call	_Driver_Control	;wreg free
   750                           
   751                           ;main.c: 303:     } else if (Data == 'L') {
   752   00185E  EF5D  F00C         	goto	l147
   753   001862                     l1530:
   754   001862  0E4C               	movlw	76
   755   001864  182F               	xorwf	Manual@Data^0,w,c
   756   001866  A4D8               	btfss	status,2,c
   757   001868  EF38  F00C         	goto	u921
   758   00186C  EF3A  F00C         	goto	u920
   759   001870                     u921:
   760   001870  EF50  F00C         	goto	l1534
   761   001874                     u920:
   762   001874                     
   763                           ;main.c: 305:         Driver_Control(1023.0, 255.7, 'R');
   764   001874  0E00               	movlw	0
   765   001876  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   766   001878  0EC0               	movlw	192
   767   00187A  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   768   00187C  0E7F               	movlw	127
   769   00187E  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   770   001880  0E44               	movlw	68
   771   001882  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   772   001884  0E33               	movlw	51
   773   001886  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   774   001888  0EB3               	movlw	179
   775   00188A  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   776   00188C  0E7F               	movlw	127
   777   00188E  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   778   001890  0E43               	movlw	67
   779   001892  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   780   001894  0E52               	movlw	82
   781   001896  6E2E               	movwf	Driver_Control@Direction^0,c
   782   001898  EC3B  F00A         	call	_Driver_Control	;wreg free
   783                           
   784                           ;main.c: 307:     } else if (Data == 'e') {
   785   00189C  EF5D  F00C         	goto	l147
   786   0018A0                     l1534:
   787   0018A0  0E65               	movlw	101
   788   0018A2  182F               	xorwf	Manual@Data^0,w,c
   789   0018A4  A4D8               	btfss	status,2,c
   790   0018A6  EF57  F00C         	goto	u931
   791   0018AA  EF59  F00C         	goto	u930
   792   0018AE                     u931:
   793   0018AE  EF5D  F00C         	goto	l141
   794   0018B2                     u930:
   795   0018B2                     
   796                           ;main.c: 309:         Platform_Status = 'i';
   797   0018B2  0E69               	movlw	105
   798   0018B4  6E3B               	movwf	_Platform_Status^0,c
   799   0018B6  EF5D  F00C         	goto	l147
   800   0018BA                     l141:
   801   0018BA                     l147:
   802   0018BA  0012               	return		;funcret
   803   0018BC                     __end_of_Manual:
   804                           	callstack 0
   805                           
   806 ;; *************** function _Driver_Control *****************
   807 ;; Defined at:
   808 ;;		line 219 in file "main.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  PWM_RMotor      4   37[COMRAM] float 
   811 ;;  PWM_LMotor      4   41[COMRAM] float 
   812 ;;  Direction       1   45[COMRAM] unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   824 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;Total ram usage:        9 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 7
   831 ;; This function calls:
   832 ;;		___flmul
   833 ;;		___fltol
   834 ;; This function is called by:
   835 ;;		_Manual
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840   001476                     __ptext4:
   841                           	callstack 0
   842   001476                     _Driver_Control:
   843                           	callstack 21
   844   001476                     
   845                           ;main.c: 222:     Duty_Cycle1 = (float) (PWM_RMotor * (1000.0 / 1023.0));
   846   001476  C026  F00D         	movff	Driver_Control@PWM_RMotor,___flmul@b
   847   00147A  C027  F00E         	movff	Driver_Control@PWM_RMotor+1,___flmul@b+1
   848   00147E  C028  F00F         	movff	Driver_Control@PWM_RMotor+2,___flmul@b+2
   849   001482  C029  F010         	movff	Driver_Control@PWM_RMotor+3,___flmul@b+3
   850   001486  0E90               	movlw	144
   851   001488  6E11               	movwf	___flmul@a^0,c
   852   00148A  0E3E               	movlw	62
   853   00148C  6E12               	movwf	(___flmul@a+1)^0,c
   854   00148E  0E7A               	movlw	122
   855   001490  6E13               	movwf	(___flmul@a+2)^0,c
   856   001492  0E3F               	movlw	63
   857   001494  6E14               	movwf	(___flmul@a+3)^0,c
   858   001496  EC26  F008         	call	___flmul	;wreg free
   859   00149A  C00D  F035         	movff	?___flmul,_Duty_Cycle1
   860   00149E  C00E  F036         	movff	?___flmul+1,_Duty_Cycle1+1
   861   0014A2  C00F  F037         	movff	?___flmul+2,_Duty_Cycle1+2
   862   0014A6  C010  F038         	movff	?___flmul+3,_Duty_Cycle1+3
   863   0014AA                     
   864                           ;main.c: 223:     CCPR3L = (int) Duty_Cycle1 >> 2;
   865   0014AA  C035  F00D         	movff	_Duty_Cycle1,___fltol@f1
   866   0014AE  C036  F00E         	movff	_Duty_Cycle1+1,___fltol@f1+1
   867   0014B2  C037  F00F         	movff	_Duty_Cycle1+2,___fltol@f1+2
   868   0014B6  C038  F010         	movff	_Duty_Cycle1+3,___fltol@f1+3
   869   0014BA  EC5E  F00C         	call	___fltol	;wreg free
   870   0014BE  340E               	rlcf	(?___fltol+1)^0,w,c
   871   0014C0  320E               	rrcf	(?___fltol+1)^0,f,c
   872   0014C2  320D               	rrcf	?___fltol^0,f,c
   873   0014C4  340E               	rlcf	(?___fltol+1)^0,w,c
   874   0014C6  320E               	rrcf	(?___fltol+1)^0,f,c
   875   0014C8  320D               	rrcf	?___fltol^0,f,c
   876   0014CA  500D               	movf	?___fltol^0,w,c
   877   0014CC  010F               	movlb	15	; () banked
   878   0014CE  6F5E               	movwf	94,b	;volatile
   879   0014D0                     
   880                           ; BSR set to: 15
   881                           ;main.c: 224:     CCP3CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4));
   882   0014D0  C035  F00D         	movff	_Duty_Cycle1,___fltol@f1
   883   0014D4  C036  F00E         	movff	_Duty_Cycle1+1,___fltol@f1+1
   884   0014D8  C037  F00F         	movff	_Duty_Cycle1+2,___fltol@f1+2
   885   0014DC  C038  F010         	movff	_Duty_Cycle1+3,___fltol@f1+3
   886   0014E0  EC5E  F00C         	call	___fltol	;wreg free
   887   0014E4  0E03               	movlw	3
   888   0014E6  160D               	andwf	?___fltol^0,f,c
   889   0014E8  3A0D               	swapf	?___fltol^0,f,c
   890   0014EA  0EF0               	movlw	240
   891   0014EC  160D               	andwf	?___fltol^0,f,c
   892   0014EE  010F               	movlb	15	; () banked
   893   0014F0  515D               	movf	93,w,b	;volatile
   894   0014F2  0B0F               	andlw	15
   895   0014F4  100D               	iorwf	?___fltol^0,w,c
   896   0014F6  6F5D               	movwf	93,b	;volatile
   897                           
   898                           ;main.c: 226:     Duty_Cycle2 = (float) (PWM_LMotor * (1000.0 / 1023.0));
   899   0014F8  C02A  F00D         	movff	Driver_Control@PWM_LMotor,___flmul@b
   900   0014FC  C02B  F00E         	movff	Driver_Control@PWM_LMotor+1,___flmul@b+1
   901   001500  C02C  F00F         	movff	Driver_Control@PWM_LMotor+2,___flmul@b+2
   902   001504  C02D  F010         	movff	Driver_Control@PWM_LMotor+3,___flmul@b+3
   903   001508  0E90               	movlw	144
   904   00150A  6E11               	movwf	___flmul@a^0,c
   905   00150C  0E3E               	movlw	62
   906   00150E  6E12               	movwf	(___flmul@a+1)^0,c
   907   001510  0E7A               	movlw	122
   908   001512  6E13               	movwf	(___flmul@a+2)^0,c
   909   001514  0E3F               	movlw	63
   910   001516  6E14               	movwf	(___flmul@a+3)^0,c
   911   001518  EC26  F008         	call	___flmul	;wreg free
   912   00151C  C00D  F031         	movff	?___flmul,_Duty_Cycle2
   913   001520  C00E  F032         	movff	?___flmul+1,_Duty_Cycle2+1
   914   001524  C00F  F033         	movff	?___flmul+2,_Duty_Cycle2+2
   915   001528  C010  F034         	movff	?___flmul+3,_Duty_Cycle2+3
   916   00152C                     
   917                           ;main.c: 227:     CCPR5L = (int) Duty_Cycle2 >> 2;
   918   00152C  C031  F00D         	movff	_Duty_Cycle2,___fltol@f1
   919   001530  C032  F00E         	movff	_Duty_Cycle2+1,___fltol@f1+1
   920   001534  C033  F00F         	movff	_Duty_Cycle2+2,___fltol@f1+2
   921   001538  C034  F010         	movff	_Duty_Cycle2+3,___fltol@f1+3
   922   00153C  EC5E  F00C         	call	___fltol	;wreg free
   923   001540  340E               	rlcf	(?___fltol+1)^0,w,c
   924   001542  320E               	rrcf	(?___fltol+1)^0,f,c
   925   001544  320D               	rrcf	?___fltol^0,f,c
   926   001546  340E               	rlcf	(?___fltol+1)^0,w,c
   927   001548  320E               	rrcf	(?___fltol+1)^0,f,c
   928   00154A  320D               	rrcf	?___fltol^0,f,c
   929   00154C  500D               	movf	?___fltol^0,w,c
   930   00154E  010F               	movlb	15	; () banked
   931   001550  6F55               	movwf	85,b	;volatile
   932   001552                     
   933                           ; BSR set to: 15
   934                           ;main.c: 228:     CCP5CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4));
   935   001552  C031  F00D         	movff	_Duty_Cycle2,___fltol@f1
   936   001556  C032  F00E         	movff	_Duty_Cycle2+1,___fltol@f1+1
   937   00155A  C033  F00F         	movff	_Duty_Cycle2+2,___fltol@f1+2
   938   00155E  C034  F010         	movff	_Duty_Cycle2+3,___fltol@f1+3
   939   001562  EC5E  F00C         	call	___fltol	;wreg free
   940   001566  0E03               	movlw	3
   941   001568  160D               	andwf	?___fltol^0,f,c
   942   00156A  3A0D               	swapf	?___fltol^0,f,c
   943   00156C  0EF0               	movlw	240
   944   00156E  160D               	andwf	?___fltol^0,f,c
   945   001570  010F               	movlb	15	; () banked
   946   001572  515D               	movf	93,w,b	;volatile
   947   001574  0B0F               	andlw	15
   948   001576  100D               	iorwf	?___fltol^0,w,c
   949   001578  6F54               	movwf	84,b	;volatile
   950   00157A                     
   951                           ; BSR set to: 15
   952                           ;main.c: 231:     if (Direction == 'F') {
   953   00157A  0E46               	movlw	70
   954   00157C  182E               	xorwf	Driver_Control@Direction^0,w,c
   955   00157E  A4D8               	btfss	status,2,c
   956   001580  EFC4  F00A         	goto	u801
   957   001584  EFC6  F00A         	goto	u800
   958   001588                     u801:
   959   001588  EFCC  F00A         	goto	l1478
   960   00158C                     u800:
   961   00158C                     
   962                           ; BSR set to: 15
   963                           ;main.c: 234:         LATDbits.LD4 = 1;
   964   00158C  888C               	bsf	140,4,c	;volatile
   965                           
   966                           ;main.c: 235:         LATDbits.LD5 = 0;
   967   00158E  9A8C               	bcf	140,5,c	;volatile
   968                           
   969                           ;main.c: 236:         LATDbits.LD6 = 0;
   970   001590  9C8C               	bcf	140,6,c	;volatile
   971                           
   972                           ;main.c: 237:         LATDbits.LD7 = 1;
   973   001592  8E8C               	bsf	140,7,c	;volatile
   974                           
   975                           ;main.c: 239:     } else if (Direction == 'B') {
   976   001594  EF08  F00B         	goto	l130
   977   001598                     l1478:
   978                           
   979                           ; BSR set to: 15
   980   001598  0E42               	movlw	66
   981   00159A  182E               	xorwf	Driver_Control@Direction^0,w,c
   982   00159C  A4D8               	btfss	status,2,c
   983   00159E  EFD3  F00A         	goto	u811
   984   0015A2  EFD5  F00A         	goto	u810
   985   0015A6                     u811:
   986   0015A6  EFDB  F00A         	goto	l1482
   987   0015AA                     u810:
   988   0015AA                     
   989                           ; BSR set to: 15
   990                           ;main.c: 241:         LATDbits.LD4 = 0;
   991   0015AA  988C               	bcf	140,4,c	;volatile
   992                           
   993                           ;main.c: 242:         LATDbits.LD5 = 1;
   994   0015AC  8A8C               	bsf	140,5,c	;volatile
   995                           
   996                           ;main.c: 243:         LATDbits.LD6 = 1;
   997   0015AE  8C8C               	bsf	140,6,c	;volatile
   998                           
   999                           ;main.c: 244:         LATDbits.LD7 = 0;
  1000   0015B0  9E8C               	bcf	140,7,c	;volatile
  1001                           
  1002                           ;main.c: 246:     } else if (Direction == 'R') {
  1003   0015B2  EF08  F00B         	goto	l130
  1004   0015B6                     l1482:
  1005                           
  1006                           ; BSR set to: 15
  1007   0015B6  0E52               	movlw	82
  1008   0015B8  182E               	xorwf	Driver_Control@Direction^0,w,c
  1009   0015BA  A4D8               	btfss	status,2,c
  1010   0015BC  EFE2  F00A         	goto	u821
  1011   0015C0  EFE4  F00A         	goto	u820
  1012   0015C4                     u821:
  1013   0015C4  EFEA  F00A         	goto	l1486
  1014   0015C8                     u820:
  1015   0015C8                     
  1016                           ; BSR set to: 15
  1017                           ;main.c: 248:         LATDbits.LD4 = 0;
  1018   0015C8  988C               	bcf	140,4,c	;volatile
  1019                           
  1020                           ;main.c: 249:         LATDbits.LD5 = 1;
  1021   0015CA  8A8C               	bsf	140,5,c	;volatile
  1022                           
  1023                           ;main.c: 250:         LATDbits.LD6 = 1;
  1024   0015CC  8C8C               	bsf	140,6,c	;volatile
  1025                           
  1026                           ;main.c: 251:         LATDbits.LD7 = 0;
  1027   0015CE  9E8C               	bcf	140,7,c	;volatile
  1028                           
  1029                           ;main.c: 253:     } else if (Direction == 'L') {
  1030   0015D0  EF08  F00B         	goto	l130
  1031   0015D4                     l1486:
  1032                           
  1033                           ; BSR set to: 15
  1034   0015D4  0E4C               	movlw	76
  1035   0015D6  182E               	xorwf	Driver_Control@Direction^0,w,c
  1036   0015D8  A4D8               	btfss	status,2,c
  1037   0015DA  EFF1  F00A         	goto	u831
  1038   0015DE  EFF3  F00A         	goto	u830
  1039   0015E2                     u831:
  1040   0015E2  EFF9  F00A         	goto	l1490
  1041   0015E6                     u830:
  1042   0015E6                     
  1043                           ; BSR set to: 15
  1044                           ;main.c: 255:         LATDbits.LD4 = 0;
  1045   0015E6  988C               	bcf	140,4,c	;volatile
  1046                           
  1047                           ;main.c: 256:         LATDbits.LD5 = 1;
  1048   0015E8  8A8C               	bsf	140,5,c	;volatile
  1049                           
  1050                           ;main.c: 257:         LATDbits.LD6 = 1;
  1051   0015EA  8C8C               	bsf	140,6,c	;volatile
  1052                           
  1053                           ;main.c: 258:         LATDbits.LD7 = 0;
  1054   0015EC  9E8C               	bcf	140,7,c	;volatile
  1055                           
  1056                           ;main.c: 260:     } else if (Direction == 'T') {
  1057   0015EE  EF08  F00B         	goto	l130
  1058   0015F2                     l1490:
  1059                           
  1060                           ; BSR set to: 15
  1061   0015F2  0E54               	movlw	84
  1062   0015F4  182E               	xorwf	Driver_Control@Direction^0,w,c
  1063   0015F6  A4D8               	btfss	status,2,c
  1064   0015F8  EF00  F00B         	goto	u841
  1065   0015FC  EF02  F00B         	goto	u840
  1066   001600                     u841:
  1067   001600  EF08  F00B         	goto	l124
  1068   001604                     u840:
  1069   001604                     
  1070                           ; BSR set to: 15
  1071                           ;main.c: 262:         LATDbits.LD4 = 0;
  1072   001604  988C               	bcf	140,4,c	;volatile
  1073                           
  1074                           ;main.c: 263:         LATDbits.LD5 = 0;
  1075   001606  9A8C               	bcf	140,5,c	;volatile
  1076                           
  1077                           ;main.c: 264:         LATDbits.LD6 = 0;
  1078   001608  9C8C               	bcf	140,6,c	;volatile
  1079                           
  1080                           ;main.c: 265:         LATDbits.LD7 = 0;
  1081   00160A  9E8C               	bcf	140,7,c	;volatile
  1082   00160C  EF08  F00B         	goto	l130
  1083   001610                     l124:
  1084   001610                     l130:
  1085                           
  1086                           ; BSR set to: 15
  1087   001610  0012               	return		;funcret
  1088   001612                     __end_of_Driver_Control:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function ___fltol *****************
  1092 ;; Defined at:
  1093 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  f1              4   12[COMRAM] void 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  exp1            1   21[COMRAM] unsigned char 
  1098 ;;  sign1           1   20[COMRAM] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  4   12[COMRAM] long 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;Total ram usage:       10 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 6
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_Driver_Control
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text5
  1123   0018BC                     __ptext5:
  1124                           	callstack 0
  1125   0018BC                     ___fltol:
  1126                           	callstack 21
  1127   0018BC  340F               	rlcf	(___fltol@f1+2)^0,w,c
  1128   0018BE  3410               	rlcf	(___fltol@f1+3)^0,w,c
  1129   0018C0  6E16               	movwf	___fltol@exp1^0,c
  1130   0018C2  5016               	movf	___fltol@exp1^0,w,c
  1131   0018C4  A4D8               	btfss	status,2,c
  1132   0018C6  EF67  F00C         	goto	u731
  1133   0018CA  EF69  F00C         	goto	u730
  1134   0018CE                     u731:
  1135   0018CE  EF73  F00C         	goto	l1414
  1136   0018D2                     u730:
  1137   0018D2                     l1410:
  1138   0018D2  0E00               	movlw	0
  1139   0018D4  6E0D               	movwf	?___fltol^0,c
  1140   0018D6  0E00               	movlw	0
  1141   0018D8  6E0E               	movwf	(?___fltol+1)^0,c
  1142   0018DA  0E00               	movlw	0
  1143   0018DC  6E0F               	movwf	(?___fltol+2)^0,c
  1144   0018DE  0E00               	movlw	0
  1145   0018E0  6E10               	movwf	(?___fltol+3)^0,c
  1146   0018E2  EFE0  F00C         	goto	l486
  1147   0018E6                     l1414:
  1148   0018E6  C00D  F011         	movff	___fltol@f1,??___fltol
  1149   0018EA  C00E  F012         	movff	___fltol@f1+1,??___fltol+1
  1150   0018EE  C00F  F013         	movff	___fltol@f1+2,??___fltol+2
  1151   0018F2  C010  F014         	movff	___fltol@f1+3,??___fltol+3
  1152   0018F6  0E20               	movlw	32
  1153   0018F8  EF83  F00C         	goto	u740
  1154   0018FC                     u745:
  1155   0018FC  90D8               	bcf	status,0,c
  1156   0018FE  3214               	rrcf	(??___fltol+3)^0,f,c
  1157   001900  3213               	rrcf	(??___fltol+2)^0,f,c
  1158   001902  3212               	rrcf	(??___fltol+1)^0,f,c
  1159   001904  3211               	rrcf	??___fltol^0,f,c
  1160   001906                     u740:
  1161   001906  2EE8               	decfsz	wreg,f,c
  1162   001908  EF7E  F00C         	goto	u745
  1163   00190C  5011               	movf	??___fltol^0,w,c
  1164   00190E  6E15               	movwf	___fltol@sign1^0,c
  1165   001910  8E0F               	bsf	(___fltol@f1+2)^0,7,c
  1166   001912  0EFF               	movlw	255
  1167   001914  160D               	andwf	___fltol@f1^0,f,c
  1168   001916  0EFF               	movlw	255
  1169   001918  160E               	andwf	(___fltol@f1+1)^0,f,c
  1170   00191A  0EFF               	movlw	255
  1171   00191C  160F               	andwf	(___fltol@f1+2)^0,f,c
  1172   00191E  0E00               	movlw	0
  1173   001920  1610               	andwf	(___fltol@f1+3)^0,f,c
  1174   001922  0E96               	movlw	150
  1175   001924  5E16               	subwf	___fltol@exp1^0,f,c
  1176   001926  BE16               	btfsc	___fltol@exp1^0,7,c
  1177   001928  EF9A  F00C         	goto	u750
  1178   00192C  EF98  F00C         	goto	u751
  1179   001930                     u751:
  1180   001930  EFB0  F00C         	goto	l1434
  1181   001934                     u750:
  1182   001934  5016               	movf	___fltol@exp1^0,w,c
  1183   001936  0A80               	xorlw	128
  1184   001938  0F97               	addlw	151
  1185   00193A  B0D8               	btfsc	status,0,c
  1186   00193C  EFA2  F00C         	goto	u761
  1187   001940  EFA4  F00C         	goto	u760
  1188   001944                     u761:
  1189   001944  EFA6  F00C         	goto	l1430
  1190   001948                     u760:
  1191   001948  EF69  F00C         	goto	l1410
  1192   00194C                     l1430:
  1193   00194C  90D8               	bcf	status,0,c
  1194   00194E  3210               	rrcf	(___fltol@f1+3)^0,f,c
  1195   001950  320F               	rrcf	(___fltol@f1+2)^0,f,c
  1196   001952  320E               	rrcf	(___fltol@f1+1)^0,f,c
  1197   001954  320D               	rrcf	___fltol@f1^0,f,c
  1198   001956  3E16               	incfsz	___fltol@exp1^0,f,c
  1199   001958  EFA6  F00C         	goto	l1430
  1200   00195C  EFC8  F00C         	goto	l1444
  1201   001960                     l1434:
  1202   001960  0E1F               	movlw	31
  1203   001962  6416               	cpfsgt	___fltol@exp1^0,c
  1204   001964  EFB6  F00C         	goto	u771
  1205   001968  EFB8  F00C         	goto	u770
  1206   00196C                     u771:
  1207   00196C  EFC0  F00C         	goto	l1442
  1208   001970                     u770:
  1209   001970  EF69  F00C         	goto	l1410
  1210   001974                     l1440:
  1211   001974  90D8               	bcf	status,0,c
  1212   001976  360D               	rlcf	___fltol@f1^0,f,c
  1213   001978  360E               	rlcf	(___fltol@f1+1)^0,f,c
  1214   00197A  360F               	rlcf	(___fltol@f1+2)^0,f,c
  1215   00197C  3610               	rlcf	(___fltol@f1+3)^0,f,c
  1216   00197E  0616               	decf	___fltol@exp1^0,f,c
  1217   001980                     l1442:
  1218   001980  5016               	movf	___fltol@exp1^0,w,c
  1219   001982  A4D8               	btfss	status,2,c
  1220   001984  EFC6  F00C         	goto	u781
  1221   001988  EFC8  F00C         	goto	u780
  1222   00198C                     u781:
  1223   00198C  EFBA  F00C         	goto	l1440
  1224   001990                     u780:
  1225   001990                     l1444:
  1226   001990  5015               	movf	___fltol@sign1^0,w,c
  1227   001992  B4D8               	btfsc	status,2,c
  1228   001994  EFCE  F00C         	goto	u791
  1229   001998  EFD0  F00C         	goto	u790
  1230   00199C                     u791:
  1231   00199C  EFD8  F00C         	goto	l1448
  1232   0019A0                     u790:
  1233   0019A0  1E10               	comf	(___fltol@f1+3)^0,f,c
  1234   0019A2  1E0F               	comf	(___fltol@f1+2)^0,f,c
  1235   0019A4  1E0E               	comf	(___fltol@f1+1)^0,f,c
  1236   0019A6  6C0D               	negf	___fltol@f1^0,c
  1237   0019A8  0E00               	movlw	0
  1238   0019AA  220E               	addwfc	(___fltol@f1+1)^0,f,c
  1239   0019AC  220F               	addwfc	(___fltol@f1+2)^0,f,c
  1240   0019AE  2210               	addwfc	(___fltol@f1+3)^0,f,c
  1241   0019B0                     l1448:
  1242   0019B0  C00D  F00D         	movff	___fltol@f1,?___fltol
  1243   0019B4  C00E  F00E         	movff	___fltol@f1+1,?___fltol+1
  1244   0019B8  C00F  F00F         	movff	___fltol@f1+2,?___fltol+2
  1245   0019BC  C010  F010         	movff	___fltol@f1+3,?___fltol+3
  1246   0019C0                     l486:
  1247   0019C0  0012               	return		;funcret
  1248   0019C2                     __end_of___fltol:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function ___flmul *****************
  1252 ;; Defined at:
  1253 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  b               4   12[COMRAM] long 
  1256 ;;  a               4   16[COMRAM] long 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  prod            4   31[COMRAM] struct .
  1259 ;;  grs             4   25[COMRAM] unsigned long 
  1260 ;;  temp            2   35[COMRAM] struct .
  1261 ;;  bexp            1   30[COMRAM] unsigned char 
  1262 ;;  aexp            1   29[COMRAM] unsigned char 
  1263 ;;  sign            1   24[COMRAM] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  4   12[COMRAM] unsigned char 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, prodl, prodh
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;Total ram usage:       25 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 6
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_Driver_Control
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text6
  1288   00104C                     __ptext6:
  1289                           	callstack 0
  1290   00104C                     ___flmul:
  1291                           	callstack 21
  1292   00104C  5010               	movf	(___flmul@b+3)^0,w,c
  1293   00104E  0B80               	andlw	128
  1294   001050  6E19               	movwf	___flmul@sign^0,c
  1295   001052  5010               	movf	(___flmul@b+3)^0,w,c
  1296   001054  2410               	addwf	(___flmul@b+3)^0,w,c
  1297   001056  6E1F               	movwf	___flmul@bexp^0,c
  1298   001058  AE0F               	btfss	(___flmul@b+2)^0,7,c
  1299   00105A  EF31  F008         	goto	u541
  1300   00105E  EF33  F008         	goto	u540
  1301   001062                     u541:
  1302   001062  EF34  F008         	goto	l1284
  1303   001066                     u540:
  1304   001066  801F               	bsf	___flmul@bexp^0,0,c
  1305   001068                     l1284:
  1306   001068  501F               	movf	___flmul@bexp^0,w,c
  1307   00106A  B4D8               	btfsc	status,2,c
  1308   00106C  EF3A  F008         	goto	u551
  1309   001070  EF3C  F008         	goto	u550
  1310   001074                     u551:
  1311   001074  EF4F  F008         	goto	l1292
  1312   001078                     u550:
  1313   001078  281F               	incf	___flmul@bexp^0,w,c
  1314   00107A  A4D8               	btfss	status,2,c
  1315   00107C  EF42  F008         	goto	u561
  1316   001080  EF44  F008         	goto	u560
  1317   001084                     u561:
  1318   001084  EF4C  F008         	goto	l1290
  1319   001088                     u560:
  1320   001088  0E00               	movlw	0
  1321   00108A  6E0D               	movwf	___flmul@b^0,c
  1322   00108C  0E00               	movlw	0
  1323   00108E  6E0E               	movwf	(___flmul@b+1)^0,c
  1324   001090  0E00               	movlw	0
  1325   001092  6E0F               	movwf	(___flmul@b+2)^0,c
  1326   001094  0E00               	movlw	0
  1327   001096  6E10               	movwf	(___flmul@b+3)^0,c
  1328   001098                     l1290:
  1329   001098  8E0F               	bsf	(___flmul@b+2)^0,7,c
  1330   00109A  EF57  F008         	goto	l1294
  1331   00109E                     l1292:
  1332   00109E  0E00               	movlw	0
  1333   0010A0  6E0D               	movwf	___flmul@b^0,c
  1334   0010A2  0E00               	movlw	0
  1335   0010A4  6E0E               	movwf	(___flmul@b+1)^0,c
  1336   0010A6  0E00               	movlw	0
  1337   0010A8  6E0F               	movwf	(___flmul@b+2)^0,c
  1338   0010AA  0E00               	movlw	0
  1339   0010AC  6E10               	movwf	(___flmul@b+3)^0,c
  1340   0010AE                     l1294:
  1341   0010AE  5014               	movf	(___flmul@a+3)^0,w,c
  1342   0010B0  0B80               	andlw	128
  1343   0010B2  1A19               	xorwf	___flmul@sign^0,f,c
  1344   0010B4  5014               	movf	(___flmul@a+3)^0,w,c
  1345   0010B6  2414               	addwf	(___flmul@a+3)^0,w,c
  1346   0010B8  6E1E               	movwf	___flmul@aexp^0,c
  1347   0010BA  AE13               	btfss	(___flmul@a+2)^0,7,c
  1348   0010BC  EF62  F008         	goto	u571
  1349   0010C0  EF64  F008         	goto	u570
  1350   0010C4                     u571:
  1351   0010C4  EF65  F008         	goto	l1302
  1352   0010C8                     u570:
  1353   0010C8  801E               	bsf	___flmul@aexp^0,0,c
  1354   0010CA                     l1302:
  1355   0010CA  501E               	movf	___flmul@aexp^0,w,c
  1356   0010CC  B4D8               	btfsc	status,2,c
  1357   0010CE  EF6B  F008         	goto	u581
  1358   0010D2  EF6D  F008         	goto	u580
  1359   0010D6                     u581:
  1360   0010D6  EF80  F008         	goto	l1310
  1361   0010DA                     u580:
  1362   0010DA  281E               	incf	___flmul@aexp^0,w,c
  1363   0010DC  A4D8               	btfss	status,2,c
  1364   0010DE  EF73  F008         	goto	u591
  1365   0010E2  EF75  F008         	goto	u590
  1366   0010E6                     u591:
  1367   0010E6  EF7D  F008         	goto	l1308
  1368   0010EA                     u590:
  1369   0010EA  0E00               	movlw	0
  1370   0010EC  6E11               	movwf	___flmul@a^0,c
  1371   0010EE  0E00               	movlw	0
  1372   0010F0  6E12               	movwf	(___flmul@a+1)^0,c
  1373   0010F2  0E00               	movlw	0
  1374   0010F4  6E13               	movwf	(___flmul@a+2)^0,c
  1375   0010F6  0E00               	movlw	0
  1376   0010F8  6E14               	movwf	(___flmul@a+3)^0,c
  1377   0010FA                     l1308:
  1378   0010FA  8E13               	bsf	(___flmul@a+2)^0,7,c
  1379   0010FC  EF88  F008         	goto	l803
  1380   001100                     l1310:
  1381   001100  0E00               	movlw	0
  1382   001102  6E11               	movwf	___flmul@a^0,c
  1383   001104  0E00               	movlw	0
  1384   001106  6E12               	movwf	(___flmul@a+1)^0,c
  1385   001108  0E00               	movlw	0
  1386   00110A  6E13               	movwf	(___flmul@a+2)^0,c
  1387   00110C  0E00               	movlw	0
  1388   00110E  6E14               	movwf	(___flmul@a+3)^0,c
  1389   001110                     l803:
  1390   001110  501E               	movf	___flmul@aexp^0,w,c
  1391   001112  B4D8               	btfsc	status,2,c
  1392   001114  EF8E  F008         	goto	u601
  1393   001118  EF90  F008         	goto	u600
  1394   00111C                     u601:
  1395   00111C  EF98  F008         	goto	l1314
  1396   001120                     u600:
  1397   001120  501F               	movf	___flmul@bexp^0,w,c
  1398   001122  A4D8               	btfss	status,2,c
  1399   001124  EF96  F008         	goto	u611
  1400   001128  EF98  F008         	goto	u610
  1401   00112C                     u611:
  1402   00112C  EFA2  F008         	goto	l1318
  1403   001130                     u610:
  1404   001130                     l1314:
  1405   001130  0E00               	movlw	0
  1406   001132  6E0D               	movwf	?___flmul^0,c
  1407   001134  0E00               	movlw	0
  1408   001136  6E0E               	movwf	(?___flmul+1)^0,c
  1409   001138  0E00               	movlw	0
  1410   00113A  6E0F               	movwf	(?___flmul+2)^0,c
  1411   00113C  0E00               	movlw	0
  1412   00113E  6E10               	movwf	(?___flmul+3)^0,c
  1413   001140  EF3A  F00A         	goto	l807
  1414   001144                     l1318:
  1415   001144  5013               	movf	(___flmul@a+2)^0,w,c
  1416   001146  020D               	mulwf	___flmul@b^0,c
  1417   001148  CFF3 F024          	movff	prodl,___flmul@temp
  1418   00114C  CFF4 F025          	movff	prodh,___flmul@temp+1
  1419   001150  5024               	movf	___flmul@temp^0,w,c
  1420   001152  6E1A               	movwf	___flmul@grs^0,c
  1421   001154  6A1B               	clrf	(___flmul@grs+1)^0,c
  1422   001156  6A1C               	clrf	(___flmul@grs+2)^0,c
  1423   001158  6A1D               	clrf	(___flmul@grs+3)^0,c
  1424   00115A  5025               	movf	(___flmul@temp+1)^0,w,c
  1425   00115C  6E20               	movwf	___flmul@prod^0,c
  1426   00115E  6A21               	clrf	(___flmul@prod+1)^0,c
  1427   001160  6A22               	clrf	(___flmul@prod+2)^0,c
  1428   001162  6A23               	clrf	(___flmul@prod+3)^0,c
  1429   001164  5012               	movf	(___flmul@a+1)^0,w,c
  1430   001166  020E               	mulwf	(___flmul@b+1)^0,c
  1431   001168  CFF3 F024          	movff	prodl,___flmul@temp
  1432   00116C  CFF4 F025          	movff	prodh,___flmul@temp+1
  1433   001170  5024               	movf	___flmul@temp^0,w,c
  1434   001172  261A               	addwf	___flmul@grs^0,f,c
  1435   001174  0E00               	movlw	0
  1436   001176  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1437   001178  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1438   00117A  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1439   00117C  5025               	movf	(___flmul@temp+1)^0,w,c
  1440   00117E  2620               	addwf	___flmul@prod^0,f,c
  1441   001180  0E00               	movlw	0
  1442   001182  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1443   001184  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1444   001186  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1445   001188  5011               	movf	___flmul@a^0,w,c
  1446   00118A  020F               	mulwf	(___flmul@b+2)^0,c
  1447   00118C  CFF3 F024          	movff	prodl,___flmul@temp
  1448   001190  CFF4 F025          	movff	prodh,___flmul@temp+1
  1449   001194  5024               	movf	___flmul@temp^0,w,c
  1450   001196  261A               	addwf	___flmul@grs^0,f,c
  1451   001198  0E00               	movlw	0
  1452   00119A  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1453   00119C  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1454   00119E  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1455   0011A0  5025               	movf	(___flmul@temp+1)^0,w,c
  1456   0011A2  2620               	addwf	___flmul@prod^0,f,c
  1457   0011A4  0E00               	movlw	0
  1458   0011A6  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1459   0011A8  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1460   0011AA  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1461   0011AC  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  1462   0011B0  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  1463   0011B4  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  1464   0011B8  6A1A               	clrf	___flmul@grs^0,c
  1465   0011BA  5011               	movf	___flmul@a^0,w,c
  1466   0011BC  020E               	mulwf	(___flmul@b+1)^0,c
  1467   0011BE  CFF3 F024          	movff	prodl,___flmul@temp
  1468   0011C2  CFF4 F025          	movff	prodh,___flmul@temp+1
  1469   0011C6  5024               	movf	___flmul@temp^0,w,c
  1470   0011C8  261A               	addwf	___flmul@grs^0,f,c
  1471   0011CA  5025               	movf	(___flmul@temp+1)^0,w,c
  1472   0011CC  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1473   0011CE  0E00               	movlw	0
  1474   0011D0  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1475   0011D2  0E00               	movlw	0
  1476   0011D4  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1477   0011D6  5012               	movf	(___flmul@a+1)^0,w,c
  1478   0011D8  020D               	mulwf	___flmul@b^0,c
  1479   0011DA  CFF3 F024          	movff	prodl,___flmul@temp
  1480   0011DE  CFF4 F025          	movff	prodh,___flmul@temp+1
  1481   0011E2  5024               	movf	___flmul@temp^0,w,c
  1482   0011E4  261A               	addwf	___flmul@grs^0,f,c
  1483   0011E6  5025               	movf	(___flmul@temp+1)^0,w,c
  1484   0011E8  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1485   0011EA  0E00               	movlw	0
  1486   0011EC  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1487   0011EE  0E00               	movlw	0
  1488   0011F0  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1489   0011F2  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  1490   0011F6  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  1491   0011FA  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  1492   0011FE  6A1A               	clrf	___flmul@grs^0,c
  1493   001200  5011               	movf	___flmul@a^0,w,c
  1494   001202  020D               	mulwf	___flmul@b^0,c
  1495   001204  CFF3 F024          	movff	prodl,___flmul@temp
  1496   001208  CFF4 F025          	movff	prodh,___flmul@temp+1
  1497   00120C  5024               	movf	___flmul@temp^0,w,c
  1498   00120E  261A               	addwf	___flmul@grs^0,f,c
  1499   001210  5025               	movf	(___flmul@temp+1)^0,w,c
  1500   001212  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1501   001214  0E00               	movlw	0
  1502   001216  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1503   001218  0E00               	movlw	0
  1504   00121A  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1505   00121C  5013               	movf	(___flmul@a+2)^0,w,c
  1506   00121E  020E               	mulwf	(___flmul@b+1)^0,c
  1507   001220  CFF3 F024          	movff	prodl,___flmul@temp
  1508   001224  CFF4 F025          	movff	prodh,___flmul@temp+1
  1509   001228  5024               	movf	___flmul@temp^0,w,c
  1510   00122A  2620               	addwf	___flmul@prod^0,f,c
  1511   00122C  5025               	movf	(___flmul@temp+1)^0,w,c
  1512   00122E  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1513   001230  0E00               	movlw	0
  1514   001232  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1515   001234  0E00               	movlw	0
  1516   001236  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1517   001238  5012               	movf	(___flmul@a+1)^0,w,c
  1518   00123A  020F               	mulwf	(___flmul@b+2)^0,c
  1519   00123C  CFF3 F024          	movff	prodl,___flmul@temp
  1520   001240  CFF4 F025          	movff	prodh,___flmul@temp+1
  1521   001244  5024               	movf	___flmul@temp^0,w,c
  1522   001246  2620               	addwf	___flmul@prod^0,f,c
  1523   001248  5025               	movf	(___flmul@temp+1)^0,w,c
  1524   00124A  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1525   00124C  0E00               	movlw	0
  1526   00124E  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1527   001250  0E00               	movlw	0
  1528   001252  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1529   001254  5013               	movf	(___flmul@a+2)^0,w,c
  1530   001256  020F               	mulwf	(___flmul@b+2)^0,c
  1531   001258  CFF3 F024          	movff	prodl,___flmul@temp
  1532   00125C  CFF4 F025          	movff	prodh,___flmul@temp+1
  1533   001260  5024               	movf	___flmul@temp^0,w,c
  1534   001262  6E15               	movwf	??___flmul^0,c
  1535   001264  5025               	movf	(___flmul@temp+1)^0,w,c
  1536   001266  6E16               	movwf	(??___flmul+1)^0,c
  1537   001268  6A17               	clrf	(??___flmul+2)^0,c
  1538   00126A  6A18               	clrf	(??___flmul+3)^0,c
  1539   00126C  C017  F018         	movff	??___flmul+2,??___flmul+3
  1540   001270  C016  F017         	movff	??___flmul+1,??___flmul+2
  1541   001274  C015  F016         	movff	??___flmul,??___flmul+1
  1542   001278  6A15               	clrf	??___flmul^0,c
  1543   00127A  5015               	movf	??___flmul^0,w,c
  1544   00127C  2620               	addwf	___flmul@prod^0,f,c
  1545   00127E  5016               	movf	(??___flmul+1)^0,w,c
  1546   001280  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1547   001282  5017               	movf	(??___flmul+2)^0,w,c
  1548   001284  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1549   001286  5018               	movf	(??___flmul+3)^0,w,c
  1550   001288  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1551   00128A  C01A  F015         	movff	___flmul@grs,??___flmul
  1552   00128E  C01B  F016         	movff	___flmul@grs+1,??___flmul+1
  1553   001292  C01C  F017         	movff	___flmul@grs+2,??___flmul+2
  1554   001296  C01D  F018         	movff	___flmul@grs+3,??___flmul+3
  1555   00129A  0E19               	movlw	25
  1556   00129C  EF55  F009         	goto	u620
  1557   0012A0                     u625:
  1558   0012A0  90D8               	bcf	status,0,c
  1559   0012A2  3218               	rrcf	(??___flmul+3)^0,f,c
  1560   0012A4  3217               	rrcf	(??___flmul+2)^0,f,c
  1561   0012A6  3216               	rrcf	(??___flmul+1)^0,f,c
  1562   0012A8  3215               	rrcf	??___flmul^0,f,c
  1563   0012AA                     u620:
  1564   0012AA  2EE8               	decfsz	wreg,f,c
  1565   0012AC  EF50  F009         	goto	u625
  1566   0012B0  5015               	movf	??___flmul^0,w,c
  1567   0012B2  2620               	addwf	___flmul@prod^0,f,c
  1568   0012B4  5016               	movf	(??___flmul+1)^0,w,c
  1569   0012B6  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1570   0012B8  5017               	movf	(??___flmul+2)^0,w,c
  1571   0012BA  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1572   0012BC  5018               	movf	(??___flmul+3)^0,w,c
  1573   0012BE  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1574   0012C0  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  1575   0012C4  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  1576   0012C8  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  1577   0012CC  6A1A               	clrf	___flmul@grs^0,c
  1578   0012CE  501E               	movf	___flmul@aexp^0,w,c
  1579   0012D0  C01F  F015         	movff	___flmul@bexp,??___flmul
  1580   0012D4  6A16               	clrf	(??___flmul+1)^0,c
  1581   0012D6  2615               	addwf	??___flmul^0,f,c
  1582   0012D8  0E00               	movlw	0
  1583   0012DA  2216               	addwfc	(??___flmul+1)^0,f,c
  1584   0012DC  0E82               	movlw	130
  1585   0012DE  2415               	addwf	??___flmul^0,w,c
  1586   0012E0  6E24               	movwf	___flmul@temp^0,c
  1587   0012E2  0EFF               	movlw	255
  1588   0012E4  2016               	addwfc	(??___flmul+1)^0,w,c
  1589   0012E6  6E25               	movwf	(___flmul@temp+1)^0,c
  1590   0012E8  EF8B  F009         	goto	l1366
  1591   0012EC                     l1360:
  1592   0012EC  90D8               	bcf	status,0,c
  1593   0012EE  3620               	rlcf	___flmul@prod^0,f,c
  1594   0012F0  3621               	rlcf	(___flmul@prod+1)^0,f,c
  1595   0012F2  3622               	rlcf	(___flmul@prod+2)^0,f,c
  1596   0012F4  3623               	rlcf	(___flmul@prod+3)^0,f,c
  1597   0012F6  AE1D               	btfss	(___flmul@grs+3)^0,7,c
  1598   0012F8  EF80  F009         	goto	u631
  1599   0012FC  EF82  F009         	goto	u630
  1600   001300                     u631:
  1601   001300  EF83  F009         	goto	l810
  1602   001304                     u630:
  1603   001304  8020               	bsf	___flmul@prod^0,0,c
  1604   001306                     l810:
  1605   001306  90D8               	bcf	status,0,c
  1606   001308  361A               	rlcf	___flmul@grs^0,f,c
  1607   00130A  361B               	rlcf	(___flmul@grs+1)^0,f,c
  1608   00130C  361C               	rlcf	(___flmul@grs+2)^0,f,c
  1609   00130E  361D               	rlcf	(___flmul@grs+3)^0,f,c
  1610   001310  0624               	decf	___flmul@temp^0,f,c
  1611   001312  A0D8               	btfss	status,0,c
  1612   001314  0625               	decf	(___flmul@temp+1)^0,f,c
  1613   001316                     l1366:
  1614   001316  AE22               	btfss	(___flmul@prod+2)^0,7,c
  1615   001318  EF90  F009         	goto	u641
  1616   00131C  EF92  F009         	goto	u640
  1617   001320                     u641:
  1618   001320  EF76  F009         	goto	l1360
  1619   001324                     u640:
  1620   001324  0E00               	movlw	0
  1621   001326  6E1E               	movwf	___flmul@aexp^0,c
  1622   001328  AE1D               	btfss	(___flmul@grs+3)^0,7,c
  1623   00132A  EF99  F009         	goto	u651
  1624   00132E  EF9B  F009         	goto	u650
  1625   001332                     u651:
  1626   001332  EFBF  F009         	goto	l812
  1627   001336                     u650:
  1628   001336  0EFF               	movlw	255
  1629   001338  141A               	andwf	___flmul@grs^0,w,c
  1630   00133A  6E15               	movwf	??___flmul^0,c
  1631   00133C  0EFF               	movlw	255
  1632   00133E  141B               	andwf	(___flmul@grs+1)^0,w,c
  1633   001340  6E16               	movwf	(??___flmul+1)^0,c
  1634   001342  0EFF               	movlw	255
  1635   001344  141C               	andwf	(___flmul@grs+2)^0,w,c
  1636   001346  6E17               	movwf	(??___flmul+2)^0,c
  1637   001348  0E7F               	movlw	127
  1638   00134A  141D               	andwf	(___flmul@grs+3)^0,w,c
  1639   00134C  6E18               	movwf	(??___flmul+3)^0,c
  1640   00134E  5015               	movf	??___flmul^0,w,c
  1641   001350  1016               	iorwf	(??___flmul+1)^0,w,c
  1642   001352  1017               	iorwf	(??___flmul+2)^0,w,c
  1643   001354  1018               	iorwf	(??___flmul+3)^0,w,c
  1644   001356  B4D8               	btfsc	status,2,c
  1645   001358  EFB0  F009         	goto	u661
  1646   00135C  EFB2  F009         	goto	u660
  1647   001360                     u661:
  1648   001360  EFB6  F009         	goto	l813
  1649   001364                     u660:
  1650   001364                     l1374:
  1651   001364  0E01               	movlw	1
  1652   001366  6E1E               	movwf	___flmul@aexp^0,c
  1653   001368  EFBF  F009         	goto	l812
  1654   00136C                     l813:
  1655   00136C  A020               	btfss	___flmul@prod^0,0,c
  1656   00136E  EFBB  F009         	goto	u671
  1657   001372  EFBD  F009         	goto	u670
  1658   001376                     u671:
  1659   001376  EFBF  F009         	goto	l812
  1660   00137A                     u670:
  1661   00137A  EFB2  F009         	goto	l1374
  1662   00137E                     l812:
  1663   00137E  501E               	movf	___flmul@aexp^0,w,c
  1664   001380  B4D8               	btfsc	status,2,c
  1665   001382  EFC5  F009         	goto	u681
  1666   001386  EFC7  F009         	goto	u680
  1667   00138A                     u681:
  1668   00138A  EFEB  F009         	goto	l1386
  1669   00138E                     u680:
  1670   00138E  0E01               	movlw	1
  1671   001390  2620               	addwf	___flmul@prod^0,f,c
  1672   001392  0E00               	movlw	0
  1673   001394  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1674   001396  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1675   001398  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1676   00139A  A023               	btfss	(___flmul@prod+3)^0,0,c
  1677   00139C  EFD2  F009         	goto	u691
  1678   0013A0  EFD4  F009         	goto	u690
  1679   0013A4                     u691:
  1680   0013A4  EFEB  F009         	goto	l1386
  1681   0013A8                     u690:
  1682   0013A8  C020  F015         	movff	___flmul@prod,??___flmul
  1683   0013AC  C021  F016         	movff	___flmul@prod+1,??___flmul+1
  1684   0013B0  C022  F017         	movff	___flmul@prod+2,??___flmul+2
  1685   0013B4  C023  F018         	movff	___flmul@prod+3,??___flmul+3
  1686   0013B8  3418               	rlcf	(??___flmul+3)^0,w,c
  1687   0013BA  3218               	rrcf	(??___flmul+3)^0,f,c
  1688   0013BC  3217               	rrcf	(??___flmul+2)^0,f,c
  1689   0013BE  3216               	rrcf	(??___flmul+1)^0,f,c
  1690   0013C0  3215               	rrcf	??___flmul^0,f,c
  1691   0013C2  C015  F020         	movff	??___flmul,___flmul@prod
  1692   0013C6  C016  F021         	movff	??___flmul+1,___flmul@prod+1
  1693   0013CA  C017  F022         	movff	??___flmul+2,___flmul@prod+2
  1694   0013CE  C018  F023         	movff	??___flmul+3,___flmul@prod+3
  1695   0013D2  4A24               	infsnz	___flmul@temp^0,f,c
  1696   0013D4  2A25               	incf	(___flmul@temp+1)^0,f,c
  1697   0013D6                     l1386:
  1698   0013D6  BE25               	btfsc	(___flmul@temp+1)^0,7,c
  1699   0013D8  EFF6  F009         	goto	u701
  1700   0013DC  5025               	movf	(___flmul@temp+1)^0,w,c
  1701   0013DE  E108               	bnz	u700
  1702   0013E0  2824               	incf	___flmul@temp^0,w,c
  1703   0013E2  A0D8               	btfss	status,0,c
  1704   0013E4  EFF6  F009         	goto	u701
  1705   0013E8  EFF8  F009         	goto	u700
  1706   0013EC                     u701:
  1707   0013EC  EF02  F00A         	goto	l1390
  1708   0013F0                     u700:
  1709   0013F0  0E00               	movlw	0
  1710   0013F2  6E20               	movwf	___flmul@prod^0,c
  1711   0013F4  0E00               	movlw	0
  1712   0013F6  6E21               	movwf	(___flmul@prod+1)^0,c
  1713   0013F8  0E80               	movlw	128
  1714   0013FA  6E22               	movwf	(___flmul@prod+2)^0,c
  1715   0013FC  0E7F               	movlw	127
  1716   0013FE  6E23               	movwf	(___flmul@prod+3)^0,c
  1717   001400  EF30  F00A         	goto	l1402
  1718   001404                     l1390:
  1719   001404  BE25               	btfsc	(___flmul@temp+1)^0,7,c
  1720   001406  EF0F  F00A         	goto	u710
  1721   00140A  5025               	movf	(___flmul@temp+1)^0,w,c
  1722   00140C  E106               	bnz	u711
  1723   00140E  0424               	decf	___flmul@temp^0,w,c
  1724   001410  B0D8               	btfsc	status,0,c
  1725   001412  EF0D  F00A         	goto	u711
  1726   001416  EF0F  F00A         	goto	u710
  1727   00141A                     u711:
  1728   00141A  EF1B  F00A         	goto	l820
  1729   00141E                     u710:
  1730   00141E  0E00               	movlw	0
  1731   001420  6E20               	movwf	___flmul@prod^0,c
  1732   001422  0E00               	movlw	0
  1733   001424  6E21               	movwf	(___flmul@prod+1)^0,c
  1734   001426  0E00               	movlw	0
  1735   001428  6E22               	movwf	(___flmul@prod+2)^0,c
  1736   00142A  0E00               	movlw	0
  1737   00142C  6E23               	movwf	(___flmul@prod+3)^0,c
  1738   00142E  0E00               	movlw	0
  1739   001430  6E19               	movwf	___flmul@sign^0,c
  1740   001432  EF30  F00A         	goto	l1402
  1741   001436                     l820:
  1742   001436  C024  F01F         	movff	___flmul@temp,___flmul@bexp
  1743   00143A  0EFF               	movlw	255
  1744   00143C  1620               	andwf	___flmul@prod^0,f,c
  1745   00143E  0EFF               	movlw	255
  1746   001440  1621               	andwf	(___flmul@prod+1)^0,f,c
  1747   001442  0E7F               	movlw	127
  1748   001444  1622               	andwf	(___flmul@prod+2)^0,f,c
  1749   001446  0E00               	movlw	0
  1750   001448  1623               	andwf	(___flmul@prod+3)^0,f,c
  1751   00144A  A01F               	btfss	___flmul@bexp^0,0,c
  1752   00144C  EF2A  F00A         	goto	u721
  1753   001450  EF2C  F00A         	goto	u720
  1754   001454                     u721:
  1755   001454  EF2D  F00A         	goto	l1400
  1756   001458                     u720:
  1757   001458  8E22               	bsf	(___flmul@prod+2)^0,7,c
  1758   00145A                     l1400:
  1759   00145A  90D8               	bcf	status,0,c
  1760   00145C  301F               	rrcf	___flmul@bexp^0,w,c
  1761   00145E  6E23               	movwf	(___flmul@prod+3)^0,c
  1762   001460                     l1402:
  1763   001460  5019               	movf	___flmul@sign^0,w,c
  1764   001462  1223               	iorwf	(___flmul@prod+3)^0,f,c
  1765   001464  C020  F00D         	movff	___flmul@prod,?___flmul
  1766   001468  C021  F00E         	movff	___flmul@prod+1,?___flmul+1
  1767   00146C  C022  F00F         	movff	___flmul@prod+2,?___flmul+2
  1768   001470  C023  F010         	movff	___flmul@prod+3,?___flmul+3
  1769   001474                     l807:
  1770   001474  0012               	return		;funcret
  1771   001476                     __end_of___flmul:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _Automatic *****************
  1775 ;; Defined at:
  1776 ;;		line 317 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		None
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 6
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_Platform_Mode
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text7
  1805   001C80                     __ptext7:
  1806                           	callstack 0
  1807   001C80                     _Automatic:
  1808                           	callstack 23
  1809   001C80  0012               	return		;funcret
  1810   001C82                     __end_of_Automatic:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _Init_LCD *****************
  1814 ;; Defined at:
  1815 ;;		line 5 in file "LCD_Library.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;Total ram usage:        2 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 8
  1836 ;; This function calls:
  1837 ;;		_Send_Instruction_Data
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text8
  1844   0019C2                     __ptext8:
  1845                           	callstack 0
  1846   0019C2                     _Init_LCD:
  1847                           	callstack 22
  1848   0019C2                     
  1849                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1850   0019C2  0E03               	movlw	3
  1851   0019C4  6E12               	movwf	(??_Init_LCD+1)^0,c
  1852   0019C6  0E08               	movlw	8
  1853   0019C8  6E11               	movwf	??_Init_LCD^0,c
  1854   0019CA  0E77               	movlw	119
  1855   0019CC                     u1077:
  1856   0019CC  2EE8               	decfsz	wreg,f,c
  1857   0019CE  D7FE               	bra	u1077
  1858   0019D0  2E11               	decfsz	??_Init_LCD^0,f,c
  1859   0019D2  D7FC               	bra	u1077
  1860   0019D4  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
  1861   0019D6  D7FA               	bra	u1077
  1862   0019D8  0000               	nop	
  1863   0019DA                     
  1864                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
  1865   0019DA  0E30               	movlw	48
  1866   0019DC  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1867   0019DE  0E00               	movlw	0
  1868   0019E0  EC16  F00E         	call	_Send_Instruction_Data
  1869   0019E4                     
  1870                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1871   0019E4  0E1A               	movlw	26
  1872   0019E6  6E11               	movwf	??_Init_LCD^0,c
  1873   0019E8  0EF8               	movlw	248
  1874   0019EA                     u1087:
  1875   0019EA  2EE8               	decfsz	wreg,f,c
  1876   0019EC  D7FE               	bra	u1087
  1877   0019EE  2E11               	decfsz	??_Init_LCD^0,f,c
  1878   0019F0  D7FC               	bra	u1087
  1879   0019F2  D000               	nop2	
  1880                           
  1881                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
  1882   0019F4  0E30               	movlw	48
  1883   0019F6  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1884   0019F8  0E00               	movlw	0
  1885   0019FA  EC16  F00E         	call	_Send_Instruction_Data
  1886   0019FE                     
  1887                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1888   0019FE  0E1A               	movlw	26
  1889   001A00  6E11               	movwf	??_Init_LCD^0,c
  1890   001A02  0EF8               	movlw	248
  1891   001A04                     u1097:
  1892   001A04  2EE8               	decfsz	wreg,f,c
  1893   001A06  D7FE               	bra	u1097
  1894   001A08  2E11               	decfsz	??_Init_LCD^0,f,c
  1895   001A0A  D7FC               	bra	u1097
  1896   001A0C  D000               	nop2	
  1897   001A0E                     
  1898                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
  1899   001A0E  0E30               	movlw	48
  1900   001A10  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1901   001A12  0E00               	movlw	0
  1902   001A14  EC16  F00E         	call	_Send_Instruction_Data
  1903   001A18                     
  1904                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
  1905   001A18  0E02               	movlw	2
  1906   001A1A  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1907   001A1C  0E00               	movlw	0
  1908   001A1E  EC16  F00E         	call	_Send_Instruction_Data
  1909   001A22                     
  1910                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
  1911   001A22  0E06               	movlw	6
  1912   001A24  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1913   001A26  0E00               	movlw	0
  1914   001A28  EC16  F00E         	call	_Send_Instruction_Data
  1915   001A2C                     
  1916                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
  1917   001A2C  0E0F               	movlw	15
  1918   001A2E  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1919   001A30  0E00               	movlw	0
  1920   001A32  EC16  F00E         	call	_Send_Instruction_Data
  1921   001A36                     
  1922                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
  1923   001A36  0E28               	movlw	40
  1924   001A38  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1925   001A3A  0E00               	movlw	0
  1926   001A3C  EC16  F00E         	call	_Send_Instruction_Data
  1927   001A40                     
  1928                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
  1929   001A40  0E01               	movlw	1
  1930   001A42  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1931   001A44  0E00               	movlw	0
  1932   001A46  EC16  F00E         	call	_Send_Instruction_Data
  1933   001A4A                     
  1934                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1935   001A4A  0E03               	movlw	3
  1936   001A4C  6E12               	movwf	(??_Init_LCD+1)^0,c
  1937   001A4E  0E08               	movlw	8
  1938   001A50  6E11               	movwf	??_Init_LCD^0,c
  1939   001A52  0E77               	movlw	119
  1940   001A54                     u1107:
  1941   001A54  2EE8               	decfsz	wreg,f,c
  1942   001A56  D7FE               	bra	u1107
  1943   001A58  2E11               	decfsz	??_Init_LCD^0,f,c
  1944   001A5A  D7FC               	bra	u1107
  1945   001A5C  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
  1946   001A5E  D7FA               	bra	u1107
  1947   001A60  0000               	nop	
  1948   001A62  0012               	return		;funcret
  1949   001A64                     __end_of_Init_LCD:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function _Send_Instruction_Data *****************
  1953 ;; Defined at:
  1954 ;;		line 24 in file "LCD_Library.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  Instruction     1    wreg     unsigned char 
  1957 ;;  Data            1   14[COMRAM] unsigned char 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  Instruction     1   15[COMRAM] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;Total ram usage:        2 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 7
  1976 ;; This function calls:
  1977 ;;		_LCD_Instruction
  1978 ;; This function is called by:
  1979 ;;		_Init_LCD
  1980 ;;		_Init_Message_Platform
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text9
  1985   001C2C                     __ptext9:
  1986                           	callstack 0
  1987   001C2C                     _Send_Instruction_Data:
  1988                           	callstack 22
  1989                           
  1990                           ;incstack = 0
  1991                           ;Send_Instruction_Data@Instruction stored from wreg
  1992   001C2C  6E10               	movwf	Send_Instruction_Data@Instruction^0,c
  1993   001C2E                     
  1994                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
  1995   001C2E  B010               	btfsc	Send_Instruction_Data@Instruction^0,0,c
  1996   001C30  D002               	bra	u865
  1997   001C32  988B               	bcf	139,4,c	;volatile
  1998   001C34  D001               	bra	u866
  1999   001C36                     u865:
  2000   001C36  888B               	bsf	139,4,c	;volatile
  2001   001C38                     u866:
  2002   001C38                     
  2003                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
  2004   001C38  380F               	swapf	Send_Instruction_Data@Data^0,w,c
  2005   001C3A  0B0F               	andlw	15
  2006   001C3C  ECAE  F00D         	call	_LCD_Instruction
  2007   001C40                     
  2008                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
  2009   001C40  500F               	movf	Send_Instruction_Data@Data^0,w,c
  2010   001C42  0B0F               	andlw	15
  2011   001C44  ECAE  F00D         	call	_LCD_Instruction
  2012   001C48  0012               	return		;funcret
  2013   001C4A                     __end_of_Send_Instruction_Data:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _LCD_Instruction *****************
  2017 ;; Defined at:
  2018 ;;		line 33 in file "LCD_Library.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  Instruction     1    wreg     unsigned char 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  Instruction     1   13[COMRAM] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:        2 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 6
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_Send_Instruction_Data
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text10
  2047   001B5C                     __ptext10:
  2048                           	callstack 0
  2049   001B5C                     _LCD_Instruction:
  2050                           	callstack 22
  2051                           
  2052                           ;incstack = 0
  2053                           ;LCD_Instruction@Instruction stored from wreg
  2054   001B5C  6E0E               	movwf	LCD_Instruction@Instruction^0,c
  2055   001B5E                     
  2056                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  2057   001B5E  8A8B               	bsf	139,5,c	;volatile
  2058   001B60                     
  2059                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2060   001B60  0E4E               	movlw	78
  2061   001B62  6E0D               	movwf	??_LCD_Instruction^0,c
  2062   001B64  0EEB               	movlw	235
  2063   001B66                     u1117:
  2064   001B66  2EE8               	decfsz	wreg,f,c
  2065   001B68  D7FE               	bra	u1117
  2066   001B6A  2E0D               	decfsz	??_LCD_Instruction^0,f,c
  2067   001B6C  D7FC               	bra	u1117
  2068   001B6E  0000               	nop	
  2069   001B70                     
  2070                           ;LCD_Library.c: 37:     LATD = Instruction;
  2071   001B70  C00E  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
  2072   001B74                     
  2073                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2074   001B74  0E4E               	movlw	78
  2075   001B76  6E0D               	movwf	??_LCD_Instruction^0,c
  2076   001B78  0EEB               	movlw	235
  2077   001B7A                     u1127:
  2078   001B7A  2EE8               	decfsz	wreg,f,c
  2079   001B7C  D7FE               	bra	u1127
  2080   001B7E  2E0D               	decfsz	??_LCD_Instruction^0,f,c
  2081   001B80  D7FC               	bra	u1127
  2082   001B82  0000               	nop	
  2083   001B84                     
  2084                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  2085   001B84  9A8B               	bcf	139,5,c	;volatile
  2086   001B86                     
  2087                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2088   001B86  0E4E               	movlw	78
  2089   001B88  6E0D               	movwf	??_LCD_Instruction^0,c
  2090   001B8A  0EEB               	movlw	235
  2091   001B8C                     u1137:
  2092   001B8C  2EE8               	decfsz	wreg,f,c
  2093   001B8E  D7FE               	bra	u1137
  2094   001B90  2E0D               	decfsz	??_LCD_Instruction^0,f,c
  2095   001B92  D7FC               	bra	u1137
  2096   001B94  0000               	nop	
  2097   001B96  0012               	return		;funcret
  2098   001B98                     __end_of_LCD_Instruction:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _Configurations *****************
  2102 ;; Defined at:
  2103 ;;		line 87 in file "main.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 6
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text11
  2132   001A64                     __ptext11:
  2133                           	callstack 0
  2134   001A64                     _Configurations:
  2135                           	callstack 24
  2136   001A64                     
  2137                           ;main.c: 89:     OSCCON = 0x72;
  2138   001A64  0E72               	movlw	114
  2139   001A66  6ED3               	movwf	211,c	;volatile
  2140                           
  2141                           ;main.c: 91:     ANSELC = 0;
  2142   001A68  0E00               	movlw	0
  2143   001A6A  010F               	movlb	15	; () banked
  2144   001A6C  6F3A               	movwf	58,b	;volatile
  2145                           
  2146                           ;main.c: 92:     ANSELD = 0;
  2147   001A6E  0E00               	movlw	0
  2148   001A70  6F3B               	movwf	59,b	;volatile
  2149                           
  2150                           ;main.c: 93:     ANSELE = 0;
  2151   001A72  0E00               	movlw	0
  2152   001A74  6F3C               	movwf	60,b	;volatile
  2153   001A76                     
  2154                           ; BSR set to: 15
  2155                           ;main.c: 97:     TRISCbits.RC4 = 0;
  2156   001A76  9894               	bcf	148,4,c	;volatile
  2157   001A78                     
  2158                           ; BSR set to: 15
  2159                           ;main.c: 98:     TRISCbits.RC5 = 0;
  2160   001A78  9A94               	bcf	148,5,c	;volatile
  2161                           
  2162                           ;main.c: 99:     TRISD = 0;
  2163   001A7A  0E00               	movlw	0
  2164   001A7C  6E95               	movwf	149,c	;volatile
  2165                           
  2166                           ;main.c: 100:     TRISE = 0;
  2167   001A7E  0E00               	movlw	0
  2168   001A80  6E96               	movwf	150,c	;volatile
  2169   001A82                     
  2170                           ; BSR set to: 15
  2171                           ;main.c: 103:     LATCbits.LC4 = 0;
  2172   001A82  988B               	bcf	139,4,c	;volatile
  2173   001A84                     
  2174                           ; BSR set to: 15
  2175                           ;main.c: 104:     LATCbits.LC5 = 0;
  2176   001A84  9A8B               	bcf	139,5,c	;volatile
  2177                           
  2178                           ;main.c: 105:     LATD = 0;
  2179   001A86  0E00               	movlw	0
  2180   001A88  6E8C               	movwf	140,c	;volatile
  2181                           
  2182                           ;main.c: 106:     LATE = 0;
  2183   001A8A  0E00               	movlw	0
  2184   001A8C  6E8D               	movwf	141,c	;volatile
  2185   001A8E                     
  2186                           ; BSR set to: 15
  2187                           ;main.c: 109:     INTCONbits.GIE = 1;
  2188   001A8E  8EF2               	bsf	242,7,c	;volatile
  2189   001A90                     
  2190                           ; BSR set to: 15
  2191                           ;main.c: 110:     INTCONbits.PEIE = 1;
  2192   001A90  8CF2               	bsf	242,6,c	;volatile
  2193   001A92                     
  2194                           ; BSR set to: 15
  2195                           ;main.c: 111:     RCONbits.IPEN = 1;
  2196   001A92  8ED0               	bsf	208,7,c	;volatile
  2197   001A94                     
  2198                           ; BSR set to: 15
  2199                           ;main.c: 113:     PIE1bits.RC1IE = 1;
  2200   001A94  8A9D               	bsf	157,5,c	;volatile
  2201   001A96                     
  2202                           ; BSR set to: 15
  2203                           ;main.c: 114:     PIR1bits.RC1IF = 0;
  2204   001A96  9A9E               	bcf	158,5,c	;volatile
  2205                           
  2206                           ;main.c: 117:     SPBRG = 103;
  2207   001A98  0E67               	movlw	103
  2208   001A9A  6EAF               	movwf	175,c	;volatile
  2209   001A9C                     
  2210                           ; BSR set to: 15
  2211                           ;main.c: 118:     TRISCbits.RC6 = 1;
  2212   001A9C  8C94               	bsf	148,6,c	;volatile
  2213   001A9E                     
  2214                           ; BSR set to: 15
  2215                           ;main.c: 119:     TRISCbits.RC7 = 1;
  2216   001A9E  8E94               	bsf	148,7,c	;volatile
  2217   001AA0                     
  2218                           ; BSR set to: 15
  2219                           ;main.c: 122:     TXSTA1bits.TX91 = 0;
  2220   001AA0  9CAC               	bcf	172,6,c	;volatile
  2221   001AA2                     
  2222                           ; BSR set to: 15
  2223                           ;main.c: 123:     TXSTA1bits.TXEN1 = 1;
  2224   001AA2  8AAC               	bsf	172,5,c	;volatile
  2225   001AA4                     
  2226                           ; BSR set to: 15
  2227                           ;main.c: 124:     TXSTA1bits.SYNC1 = 0;
  2228   001AA4  98AC               	bcf	172,4,c	;volatile
  2229   001AA6                     
  2230                           ; BSR set to: 15
  2231                           ;main.c: 125:     TXSTA1bits.BRGH1 = 1;
  2232   001AA6  84AC               	bsf	172,2,c	;volatile
  2233   001AA8                     
  2234                           ; BSR set to: 15
  2235                           ;main.c: 128:     RCSTAbits.SPEN1 = 1;
  2236   001AA8  8EAB               	bsf	171,7,c	;volatile
  2237   001AAA                     
  2238                           ; BSR set to: 15
  2239                           ;main.c: 129:     RCSTAbits.RX91 = 0;
  2240   001AAA  9CAB               	bcf	171,6,c	;volatile
  2241   001AAC                     
  2242                           ; BSR set to: 15
  2243                           ;main.c: 130:     RCSTAbits.CREN1 = 1;
  2244   001AAC  88AB               	bsf	171,4,c	;volatile
  2245   001AAE                     
  2246                           ; BSR set to: 15
  2247                           ;main.c: 133:     BAUDCON1bits.BRG16 = 0;
  2248   001AAE  96B8               	bcf	184,3,c	;volatile
  2249                           
  2250                           ;main.c: 145:     PR2 = 0xF9;
  2251   001AB0  0EF9               	movlw	249
  2252   001AB2  6EBB               	movwf	187,c	;volatile
  2253                           
  2254                           ;main.c: 146:     T2CON = 0x00;
  2255   001AB4  0E00               	movlw	0
  2256   001AB6  6EBA               	movwf	186,c	;volatile
  2257                           
  2258                           ;main.c: 147:     CCP3CON = 0x0C;
  2259   001AB8  0E0C               	movlw	12
  2260   001ABA  6F5D               	movwf	93,b	;volatile
  2261                           
  2262                           ;main.c: 148:     CCPR3L = 0xFA;
  2263   001ABC  0EFA               	movlw	250
  2264   001ABE  6F5E               	movwf	94,b	;volatile
  2265                           
  2266                           ;main.c: 149:     CCP5CON = 0x0C;
  2267   001AC0  0E0C               	movlw	12
  2268   001AC2  6F54               	movwf	84,b	;volatile
  2269                           
  2270                           ;main.c: 150:     CCPR5L = 0xFA;
  2271   001AC4  0EFA               	movlw	250
  2272   001AC6  6F55               	movwf	85,b	;volatile
  2273   001AC8                     
  2274                           ; BSR set to: 15
  2275                           ;main.c: 151:     T2CONbits.TMR2ON = 1;
  2276   001AC8  84BA               	bsf	186,2,c	;volatile
  2277   001ACA                     
  2278                           ; BSR set to: 15
  2279   001ACA  0012               	return		;funcret
  2280   001ACC                     __end_of_Configurations:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _Interrupt *****************
  2284 ;; Defined at:
  2285 ;;		line 79 in file "main.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		None
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:        1 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 5
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		Interrupt level 1
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	intcodelo
  2314   000018                     __pintcodelo:
  2315                           	callstack 0
  2316   000018                     _Interrupt:
  2317                           	callstack 21
  2318                           
  2319                           ; BSR set to: 15
  2320                           ;incstack = 0
  2321   000018  803C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2322   00001A  CFE0 F00C          	movff	bsr,??_Interrupt
  2323   00001E  C00C  FFE0         	movff	??_Interrupt,bsr
  2324   000022  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2325   000024  0010               	retfie	
  2326   000026                     __end_of_Interrupt:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _Interrupt_Rx *****************
  2330 ;; Defined at:
  2331 ;;		line 71 in file "main.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 4
  2352 ;; This function calls:
  2353 ;;		_Bluetooth_Receiver
  2354 ;; This function is called by:
  2355 ;;		Interrupt level 2
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	intcode
  2360   000008                     __pintcode:
  2361                           	callstack 0
  2362   000008                     _Interrupt_Rx:
  2363                           	callstack 21
  2364                           
  2365                           ;incstack = 0
  2366   000008  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2367   00000A  EF02  F00E         	goto	int_func
  2368                           
  2369                           	psect	intcode_body
  2370   001C04                     __pintcode_body:
  2371                           	callstack 21
  2372   001C04                     int_func:
  2373                           	callstack 21
  2374   001C04  CFF6 F008          	movff	tblptrl,??_Interrupt_Rx
  2375   001C08  CFF7 F009          	movff	tblptrh,??_Interrupt_Rx+1
  2376   001C0C  CFF8 F00A          	movff	tblptru,??_Interrupt_Rx+2
  2377   001C10  CFF5 F00B          	movff	tablat,??_Interrupt_Rx+3
  2378   001C14                     
  2379                           ;main.c: 73:     Bluetooth_Receiver();
  2380   001C14  EC09  F00B         	call	_Bluetooth_Receiver	;wreg free
  2381   001C18  C00B  FFF5         	movff	??_Interrupt_Rx+3,tablat
  2382   001C1C  C00A  FFF8         	movff	??_Interrupt_Rx+2,tblptru
  2383   001C20  C009  FFF7         	movff	??_Interrupt_Rx+1,tblptrh
  2384   001C24  C008  FFF6         	movff	??_Interrupt_Rx,tblptrl
  2385   001C28  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2386   001C2A  0011               	retfie		f
  2387   001C2C                     __end_of_Interrupt_Rx:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _Bluetooth_Receiver *****************
  2391 ;; Defined at:
  2392 ;;		line 157 in file "main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 3
  2413 ;; This function calls:
  2414 ;;		_Send_String
  2415 ;;		i2_Send_Instruction_Data
  2416 ;; This function is called by:
  2417 ;;		_Interrupt_Rx
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text14
  2422   001612                     __ptext14:
  2423                           	callstack 0
  2424   001612                     _Bluetooth_Receiver:
  2425                           	callstack 21
  2426   001612                     
  2427                           ;main.c: 159:     if (PIR1bits.RC1IF) {
  2428   001612  AA9E               	btfss	158,5,c	;volatile
  2429   001614  EF0E  F00B         	goto	i2u97_41
  2430   001618  EF10  F00B         	goto	i2u97_40
  2431   00161C                     i2u97_41:
  2432   00161C  EFB3  F00B         	goto	i2l118
  2433   001620                     i2u97_40:
  2434   001620                     
  2435                           ;main.c: 161:         Rx_Buffer = RCREG1;
  2436   001620  CFAE F03A          	movff	4014,_Rx_Buffer	;volatile
  2437   001624                     
  2438                           ;main.c: 163:         if (Rx_Buffer == 'M') {
  2439   001624  0E4D               	movlw	77
  2440   001626  183A               	xorwf	_Rx_Buffer^0,w,c
  2441   001628  A4D8               	btfss	status,2,c
  2442   00162A  EF19  F00B         	goto	i2u98_41
  2443   00162E  EF1B  F00B         	goto	i2u98_40
  2444   001632                     i2u98_41:
  2445   001632  EF2F  F00B         	goto	i2l1586
  2446   001636                     i2u98_40:
  2447   001636                     
  2448                           ;main.c: 165:             Send_Instruction_Data(0, 0x01);
  2449   001636  0E01               	movlw	1
  2450   001638  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2451   00163A  0E00               	movlw	0
  2452   00163C  EC25  F00E         	call	i2_Send_Instruction_Data
  2453                           
  2454                           ;main.c: 166:             Send_Instruction_Data(0, 0X80);
  2455   001640  0E80               	movlw	128
  2456   001642  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2457   001644  0E00               	movlw	0
  2458   001646  EC25  F00E         	call	i2_Send_Instruction_Data
  2459   00164A                     
  2460                           ;main.c: 167:             Send_String("   Manual Mode");
  2461   00164A  0E32               	movlw	low STR_1
  2462   00164C  6E05               	movwf	Send_String@String^0,c
  2463   00164E  EC8E  F00D         	call	_Send_String	;wreg free
  2464   001652                     
  2465                           ;main.c: 168:             Manual_Direction = '0';
  2466   001652  0E30               	movlw	48
  2467   001654  6E39               	movwf	_Manual_Direction^0,c
  2468   001656                     
  2469                           ;main.c: 169:             Platform_Status = 'M';
  2470   001656  0E4D               	movlw	77
  2471   001658  6E3B               	movwf	_Platform_Status^0,c
  2472                           
  2473                           ;main.c: 172:         } else if (Rx_Buffer == 'A') {
  2474   00165A  EFB3  F00B         	goto	i2l118
  2475   00165E                     i2l1586:
  2476   00165E  0E41               	movlw	65
  2477   001660  183A               	xorwf	_Rx_Buffer^0,w,c
  2478   001662  A4D8               	btfss	status,2,c
  2479   001664  EF36  F00B         	goto	i2u99_41
  2480   001668  EF38  F00B         	goto	i2u99_40
  2481   00166C                     i2u99_41:
  2482   00166C  EF4A  F00B         	goto	i2l1594
  2483   001670                     i2u99_40:
  2484   001670                     
  2485                           ;main.c: 174:             Send_Instruction_Data(0, 0x01);
  2486   001670  0E01               	movlw	1
  2487   001672  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2488   001674  0E00               	movlw	0
  2489   001676  EC25  F00E         	call	i2_Send_Instruction_Data
  2490                           
  2491                           ;main.c: 175:             Send_Instruction_Data(0, 0xC0);
  2492   00167A  0EC0               	movlw	192
  2493   00167C  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2494   00167E  0E00               	movlw	0
  2495   001680  EC25  F00E         	call	i2_Send_Instruction_Data
  2496   001684                     
  2497                           ;main.c: 176:             Send_String("Automatic Mode");
  2498   001684  0E23               	movlw	low STR_2
  2499   001686  6E05               	movwf	Send_String@String^0,c
  2500   001688  EC8E  F00D         	call	_Send_String	;wreg free
  2501   00168C                     
  2502                           ;main.c: 177:             Platform_Status = 'A';
  2503   00168C  0E41               	movlw	65
  2504   00168E  6E3B               	movwf	_Platform_Status^0,c
  2505                           
  2506                           ;main.c: 179:         } else if (Rx_Buffer == 'S') {
  2507   001690  EFB3  F00B         	goto	i2l118
  2508   001694                     i2l1594:
  2509   001694  0E53               	movlw	83
  2510   001696  183A               	xorwf	_Rx_Buffer^0,w,c
  2511   001698  A4D8               	btfss	status,2,c
  2512   00169A  EF51  F00B         	goto	i2u100_41
  2513   00169E  EF53  F00B         	goto	i2u100_40
  2514   0016A2                     i2u100_41:
  2515   0016A2  EF65  F00B         	goto	i2l1602
  2516   0016A6                     i2u100_40:
  2517   0016A6                     
  2518                           ;main.c: 181:             Send_Instruction_Data(0, 0x01);
  2519   0016A6  0E01               	movlw	1
  2520   0016A8  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2521   0016AA  0E00               	movlw	0
  2522   0016AC  EC25  F00E         	call	i2_Send_Instruction_Data
  2523                           
  2524                           ;main.c: 182:             Send_Instruction_Data(0, 0X94);
  2525   0016B0  0E94               	movlw	148
  2526   0016B2  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2527   0016B4  0E00               	movlw	0
  2528   0016B6  EC25  F00E         	call	i2_Send_Instruction_Data
  2529   0016BA                     
  2530                           ;main.c: 183:             Send_String("Semi Mode");
  2531   0016BA  0E41               	movlw	low STR_3
  2532   0016BC  6E05               	movwf	Send_String@String^0,c
  2533   0016BE  EC8E  F00D         	call	_Send_String	;wreg free
  2534   0016C2                     
  2535                           ;main.c: 184:             Platform_Status = 'S';
  2536   0016C2  0E53               	movlw	83
  2537   0016C4  6E3B               	movwf	_Platform_Status^0,c
  2538                           
  2539                           ;main.c: 186:         } else if (Rx_Buffer == 'F') {
  2540   0016C6  EFB3  F00B         	goto	i2l118
  2541   0016CA                     i2l1602:
  2542   0016CA  0E46               	movlw	70
  2543   0016CC  183A               	xorwf	_Rx_Buffer^0,w,c
  2544   0016CE  A4D8               	btfss	status,2,c
  2545   0016D0  EF6C  F00B         	goto	i2u101_41
  2546   0016D4  EF6E  F00B         	goto	i2u101_40
  2547   0016D8                     i2u101_41:
  2548   0016D8  EF72  F00B         	goto	i2l1606
  2549   0016DC                     i2u101_40:
  2550   0016DC                     
  2551                           ;main.c: 188:             Manual_Direction = 'F';
  2552   0016DC  0E46               	movlw	70
  2553   0016DE  6E39               	movwf	_Manual_Direction^0,c
  2554                           
  2555                           ;main.c: 190:         } else if (Rx_Buffer == 'B') {
  2556   0016E0  EFB3  F00B         	goto	i2l118
  2557   0016E4                     i2l1606:
  2558   0016E4  0E42               	movlw	66
  2559   0016E6  183A               	xorwf	_Rx_Buffer^0,w,c
  2560   0016E8  A4D8               	btfss	status,2,c
  2561   0016EA  EF79  F00B         	goto	i2u102_41
  2562   0016EE  EF7B  F00B         	goto	i2u102_40
  2563   0016F2                     i2u102_41:
  2564   0016F2  EF7F  F00B         	goto	i2l1610
  2565   0016F6                     i2u102_40:
  2566   0016F6                     
  2567                           ;main.c: 192:             Manual_Direction = 'B';
  2568   0016F6  0E42               	movlw	66
  2569   0016F8  6E39               	movwf	_Manual_Direction^0,c
  2570                           
  2571                           ;main.c: 194:         } else if (Rx_Buffer == 'T') {
  2572   0016FA  EFB3  F00B         	goto	i2l118
  2573   0016FE                     i2l1610:
  2574   0016FE  0E54               	movlw	84
  2575   001700  183A               	xorwf	_Rx_Buffer^0,w,c
  2576   001702  A4D8               	btfss	status,2,c
  2577   001704  EF86  F00B         	goto	i2u103_41
  2578   001708  EF88  F00B         	goto	i2u103_40
  2579   00170C                     i2u103_41:
  2580   00170C  EF8C  F00B         	goto	i2l1614
  2581   001710                     i2u103_40:
  2582   001710                     
  2583                           ;main.c: 196:             Manual_Direction = 'T';
  2584   001710  0E54               	movlw	84
  2585   001712  6E39               	movwf	_Manual_Direction^0,c
  2586                           
  2587                           ;main.c: 198:         } else if (Rx_Buffer == 'R') {
  2588   001714  EFB3  F00B         	goto	i2l118
  2589   001718                     i2l1614:
  2590   001718  0E52               	movlw	82
  2591   00171A  183A               	xorwf	_Rx_Buffer^0,w,c
  2592   00171C  A4D8               	btfss	status,2,c
  2593   00171E  EF93  F00B         	goto	i2u104_41
  2594   001722  EF95  F00B         	goto	i2u104_40
  2595   001726                     i2u104_41:
  2596   001726  EF99  F00B         	goto	i2l1618
  2597   00172A                     i2u104_40:
  2598   00172A                     
  2599                           ;main.c: 200:             Manual_Direction = 'R';
  2600   00172A  0E52               	movlw	82
  2601   00172C  6E39               	movwf	_Manual_Direction^0,c
  2602                           
  2603                           ;main.c: 202:         } else if (Rx_Buffer == 'L') {
  2604   00172E  EFB3  F00B         	goto	i2l118
  2605   001732                     i2l1618:
  2606   001732  0E4C               	movlw	76
  2607   001734  183A               	xorwf	_Rx_Buffer^0,w,c
  2608   001736  A4D8               	btfss	status,2,c
  2609   001738  EFA0  F00B         	goto	i2u105_41
  2610   00173C  EFA2  F00B         	goto	i2u105_40
  2611   001740                     i2u105_41:
  2612   001740  EFA6  F00B         	goto	i2l1622
  2613   001744                     i2u105_40:
  2614   001744                     
  2615                           ;main.c: 204:             Manual_Direction = 'L';
  2616   001744  0E4C               	movlw	76
  2617   001746  6E39               	movwf	_Manual_Direction^0,c
  2618                           
  2619                           ;main.c: 206:         } else if (Rx_Buffer == 'E') {
  2620   001748  EFB3  F00B         	goto	i2l118
  2621   00174C                     i2l1622:
  2622   00174C  0E45               	movlw	69
  2623   00174E  183A               	xorwf	_Rx_Buffer^0,w,c
  2624   001750  A4D8               	btfss	status,2,c
  2625   001752  EFAD  F00B         	goto	i2u106_41
  2626   001756  EFAF  F00B         	goto	i2u106_40
  2627   00175A                     i2u106_41:
  2628   00175A  EFB3  F00B         	goto	i2l112
  2629   00175E                     i2u106_40:
  2630   00175E                     
  2631                           ;main.c: 208:             Manual_Direction = 'e';
  2632   00175E  0E65               	movlw	101
  2633   001760  6E39               	movwf	_Manual_Direction^0,c
  2634   001762  EFB3  F00B         	goto	i2l118
  2635   001766                     i2l112:
  2636   001766                     i2l118:
  2637   001766  0012               	return		;funcret
  2638   001768                     __end_of_Bluetooth_Receiver:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function _Send_String *****************
  2642 ;; Defined at:
  2643 ;;		line 46 in file "LCD_Library.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  String          1    4[COMRAM] PTR unsigned char 
  2646 ;;		 -> STR_5(17), STR_4(17), STR_3(10), STR_2(15), 
  2647 ;;		 -> STR_1(15), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  i               1    6[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2659 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;Total ram usage:        3 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 2
  2666 ;; This function calls:
  2667 ;;		i2_Send_Instruction_Data
  2668 ;; This function is called by:
  2669 ;;		_Bluetooth_Receiver
  2670 ;;		_Init_Message_Platform
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text15
  2675   001B1C                     __ptext15:
  2676                           	callstack 0
  2677   001B1C                     _Send_String:
  2678                           	callstack 21
  2679   001B1C                     
  2680                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
  2681   001B1C  0E00               	movlw	0
  2682   001B1E  6E07               	movwf	Send_String@i^0,c
  2683   001B20  EF9E  F00D         	goto	i2l1512
  2684   001B24                     i2l1508:
  2685                           
  2686                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
  2687   001B24  5005               	movf	Send_String@String^0,w,c
  2688   001B26  2407               	addwf	Send_String@i^0,w,c
  2689   001B28  6E06               	movwf	??_Send_String^0,c
  2690   001B2A  C006  FFF6         	movff	??_Send_String,tblptrl
  2691   001B2E                     	if	0	;There is only one active tblptr byte
  2692   001B2E                     	endif
  2693   001B2E                     	if	0	;tblptru may be non-zero
  2694   001B2E                     	endif
  2695   001B2E                     	if	0	;tblptru may be non-zero
  2696   001B2E                     	endif
  2697   001B2E  0008               	tblrd		*
  2698   001B30  CFF5 F003          	movff	tablat,i2Send_Instruction_Data@Data
  2699   001B34  0E01               	movlw	1
  2700   001B36  EC25  F00E         	call	i2_Send_Instruction_Data
  2701   001B3A                     
  2702                           ;LCD_Library.c: 52:     }
  2703   001B3A  2A07               	incf	Send_String@i^0,f,c
  2704   001B3C                     i2l1512:
  2705   001B3C  5005               	movf	Send_String@String^0,w,c
  2706   001B3E  2407               	addwf	Send_String@i^0,w,c
  2707   001B40  6E06               	movwf	??_Send_String^0,c
  2708   001B42  C006  FFF6         	movff	??_Send_String,tblptrl
  2709   001B46                     	if	0	;There is only one active tblptr byte
  2710   001B46                     	endif
  2711   001B46                     	if	0	;tblptru may be non-zero
  2712   001B46                     	endif
  2713   001B46                     	if	0	;tblptru may be non-zero
  2714   001B46                     	endif
  2715   001B46  0008               	tblrd		*
  2716   001B48  50F5               	movf	tablat,w,c
  2717   001B4A  0900               	iorlw	0
  2718   001B4C  A4D8               	btfss	status,2,c
  2719   001B4E  EFAB  F00D         	goto	i2u87_41
  2720   001B52  EFAD  F00D         	goto	i2u87_40
  2721   001B56                     i2u87_41:
  2722   001B56  EF92  F00D         	goto	i2l1508
  2723   001B5A                     i2u87_40:
  2724   001B5A  0012               	return		;funcret
  2725   001B5C                     __end_of_Send_String:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function i2_Send_Instruction_Data *****************
  2729 ;; Defined at:
  2730 ;;		line 24 in file "LCD_Library.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  Instruction     1    wreg     unsigned char 
  2733 ;;  Data            1    2[COMRAM] unsigned char 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  Instruction     1    3[COMRAM] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2745 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;Total ram usage:        2 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 1
  2752 ;; This function calls:
  2753 ;;		i2_LCD_Instruction
  2754 ;; This function is called by:
  2755 ;;		_Bluetooth_Receiver
  2756 ;;		_Send_String
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text16
  2761   001C4A                     __ptext16:
  2762                           	callstack 0
  2763   001C4A                     i2_Send_Instruction_Data:
  2764                           	callstack 22
  2765                           
  2766                           ;incstack = 0
  2767                           ;i2Send_Instruction_Data@Instruction stored from wreg
  2768   001C4A  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
  2769   001C4C                     
  2770                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
  2771   001C4C  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
  2772   001C4E  D002               	bra	i2u85_45
  2773   001C50  988B               	bcf	139,4,c	;volatile
  2774   001C52  D001               	bra	i2u85_46
  2775   001C54                     i2u85_45:
  2776   001C54  888B               	bsf	139,4,c	;volatile
  2777   001C56                     i2u85_46:
  2778   001C56                     
  2779                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
  2780   001C56  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
  2781   001C58  0B0F               	andlw	15
  2782   001C5A  ECCC  F00D         	call	i2_LCD_Instruction
  2783   001C5E                     
  2784                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
  2785   001C5E  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
  2786   001C60  0B0F               	andlw	15
  2787   001C62  ECCC  F00D         	call	i2_LCD_Instruction
  2788   001C66  0012               	return		;funcret
  2789   001C68                     __end_ofi2_Send_Instruction_Data:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function i2_LCD_Instruction *****************
  2793 ;; Defined at:
  2794 ;;		line 33 in file "LCD_Library.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  Instruction     1    wreg     unsigned char 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  Instruction     1    1[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		i2_Send_Instruction_Data
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text17
  2822   001B98                     __ptext17:
  2823                           	callstack 0
  2824   001B98                     i2_LCD_Instruction:
  2825                           	callstack 22
  2826                           
  2827                           ;incstack = 0
  2828                           ;i2LCD_Instruction@Instruction stored from wreg
  2829   001B98  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
  2830   001B9A                     
  2831                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  2832   001B9A  8A8B               	bsf	139,5,c	;volatile
  2833   001B9C                     
  2834                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2835   001B9C  0E4E               	movlw	78
  2836   001B9E  6E01               	movwf	??i2_LCD_Instruction^0,c
  2837   001BA0  0EEB               	movlw	235
  2838   001BA2                     i2u114_47:
  2839   001BA2  2EE8               	decfsz	wreg,f,c
  2840   001BA4  D7FE               	bra	i2u114_47
  2841   001BA6  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  2842   001BA8  D7FC               	bra	i2u114_47
  2843   001BAA  0000               	nop	
  2844   001BAC                     
  2845                           ;LCD_Library.c: 37:     LATD = Instruction;
  2846   001BAC  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  2847   001BB0                     
  2848                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2849   001BB0  0E4E               	movlw	78
  2850   001BB2  6E01               	movwf	??i2_LCD_Instruction^0,c
  2851   001BB4  0EEB               	movlw	235
  2852   001BB6                     i2u115_47:
  2853   001BB6  2EE8               	decfsz	wreg,f,c
  2854   001BB8  D7FE               	bra	i2u115_47
  2855   001BBA  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  2856   001BBC  D7FC               	bra	i2u115_47
  2857   001BBE  0000               	nop	
  2858   001BC0                     
  2859                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  2860   001BC0  9A8B               	bcf	139,5,c	;volatile
  2861   001BC2                     
  2862                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2863   001BC2  0E4E               	movlw	78
  2864   001BC4  6E01               	movwf	??i2_LCD_Instruction^0,c
  2865   001BC6  0EEB               	movlw	235
  2866   001BC8                     i2u116_47:
  2867   001BC8  2EE8               	decfsz	wreg,f,c
  2868   001BCA  D7FE               	bra	i2u116_47
  2869   001BCC  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  2870   001BCE  D7FC               	bra	i2u116_47
  2871   001BD0  0000               	nop	
  2872   001BD2  0012               	return		;funcret
  2873   001BD4                     __end_ofi2_LCD_Instruction:
  2874                           	callstack 0
  2875                           
  2876                           	psect	rparam
  2877   000000                     
  2878                           	psect	temp
  2879   00003C                     btemp:
  2880                           	callstack 0
  2881   00003C                     	ds	1
  2882   000000                     int$flags	set	btemp
  2883   000000                     wtemp8	set	btemp+1
  2884   000000                     ttemp5	set	btemp+1
  2885   000000                     ttemp6	set	btemp+4
  2886   000000                     ttemp7	set	btemp+8
  2887                           
  2888                           	psect	config
  2889                           
  2890                           ; Padding undefined space
  2891   300000                     	org	3145728
  2892   300000  FF                 	db	255
  2893                           
  2894                           ;Config register CONFIG1H @ 0x300001
  2895                           ;	Oscillator Selection bits
  2896                           ;	FOSC = INTIO67, Internal oscillator block
  2897                           ;	4X PLL Enable
  2898                           ;	PLLCFG = OFF, Oscillator used directly
  2899                           ;	Primary clock enable bit
  2900                           ;	PRICLKEN = ON, Primary clock is always enabled
  2901                           ;	Fail-Safe Clock Monitor Enable bit
  2902                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2903                           ;	Internal/External Oscillator Switchover bit
  2904                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2905   300001                     	org	3145729
  2906   300001  28                 	db	40
  2907                           
  2908                           ;Config register CONFIG2L @ 0x300002
  2909                           ;	Power-up Timer Enable bit
  2910                           ;	PWRTEN = OFF, Power up timer disabled
  2911                           ;	Brown-out Reset Enable bits
  2912                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2913                           ;	Brown Out Reset Voltage bits
  2914                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2915   300002                     	org	3145730
  2916   300002  1F                 	db	31
  2917                           
  2918                           ;Config register CONFIG2H @ 0x300003
  2919                           ;	Watchdog Timer Enable bits
  2920                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2921                           ;	Watchdog Timer Postscale Select bits
  2922                           ;	WDTPS = 32768, 1:32768
  2923   300003                     	org	3145731
  2924   300003  3C                 	db	60
  2925                           
  2926                           ; Padding undefined space
  2927   300004                     	org	3145732
  2928   300004  FF                 	db	255
  2929                           
  2930                           ;Config register CONFIG3H @ 0x300005
  2931                           ;	CCP2 MUX bit
  2932                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2933                           ;	PORTB A/D Enable bit
  2934                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2935                           ;	P3A/CCP3 Mux bit
  2936                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2937                           ;	HFINTOSC Fast Start-up
  2938                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2939                           ;	Timer3 Clock input mux bit
  2940                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2941                           ;	ECCP2 B output mux bit
  2942                           ;	P2BMX = PORTD2, P2B is on RD2
  2943                           ;	MCLR Pin Enable bit
  2944                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2945   300005                     	org	3145733
  2946   300005  BB                 	db	187
  2947                           
  2948                           ;Config register CONFIG4L @ 0x300006
  2949                           ;	Stack Full/Underflow Reset Enable bit
  2950                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2951                           ;	Single-Supply ICSP Enable bit
  2952                           ;	LVP = OFF, Single-Supply ICSP disabled
  2953                           ;	Extended Instruction Set Enable bit
  2954                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2955                           ;	Background Debug
  2956                           ;	DEBUG = 0x1, unprogrammed default
  2957   300006                     	org	3145734
  2958   300006  81                 	db	129
  2959                           
  2960                           ; Padding undefined space
  2961   300007                     	org	3145735
  2962   300007  FF                 	db	255
  2963                           
  2964                           ;Config register CONFIG5L @ 0x300008
  2965                           ;	Code Protection Block 0
  2966                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2967                           ;	Code Protection Block 1
  2968                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2969                           ;	Code Protection Block 2
  2970                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2971                           ;	Code Protection Block 3
  2972                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2973   300008                     	org	3145736
  2974   300008  0F                 	db	15
  2975                           
  2976                           ;Config register CONFIG5H @ 0x300009
  2977                           ;	Boot Block Code Protection bit
  2978                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2979                           ;	Data EEPROM Code Protection bit
  2980                           ;	CPD = OFF, Data EEPROM not code-protected
  2981   300009                     	org	3145737
  2982   300009  C0                 	db	192
  2983                           
  2984                           ;Config register CONFIG6L @ 0x30000A
  2985                           ;	Write Protection Block 0
  2986                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2987                           ;	Write Protection Block 1
  2988                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2989                           ;	Write Protection Block 2
  2990                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2991                           ;	Write Protection Block 3
  2992                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2993   30000A                     	org	3145738
  2994   30000A  0F                 	db	15
  2995                           
  2996                           ;Config register CONFIG6H @ 0x30000B
  2997                           ;	Configuration Register Write Protection bit
  2998                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2999                           ;	Boot Block Write Protection bit
  3000                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3001                           ;	Data EEPROM Write Protection bit
  3002                           ;	WRTD = OFF, Data EEPROM not write-protected
  3003   30000B                     	org	3145739
  3004   30000B  E0                 	db	224
  3005                           
  3006                           ;Config register CONFIG7L @ 0x30000C
  3007                           ;	Table Read Protection Block 0
  3008                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3009                           ;	Table Read Protection Block 1
  3010                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3011                           ;	Table Read Protection Block 2
  3012                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3013                           ;	Table Read Protection Block 3
  3014                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3015   30000C                     	org	3145740
  3016   30000C  0F                 	db	15
  3017                           
  3018                           ;Config register CONFIG7H @ 0x30000D
  3019                           ;	Boot Block Table Read Protection bit
  3020                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3021   30000D                     	org	3145741
  3022   30000D  40                 	db	64
  3023                           tosu	equ	0xFFF
  3024                           tosh	equ	0xFFE
  3025                           tosl	equ	0xFFD
  3026                           stkptr	equ	0xFFC
  3027                           pclatu	equ	0xFFB
  3028                           pclath	equ	0xFFA
  3029                           pcl	equ	0xFF9
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           prodh	equ	0xFF4
  3035                           prodl	equ	0xFF3
  3036                           indf0	equ	0xFEF
  3037                           postinc0	equ	0xFEE
  3038                           postdec0	equ	0xFED
  3039                           preinc0	equ	0xFEC
  3040                           plusw0	equ	0xFEB
  3041                           fsr0h	equ	0xFEA
  3042                           fsr0l	equ	0xFE9
  3043                           wreg	equ	0xFE8
  3044                           indf1	equ	0xFE7
  3045                           postinc1	equ	0xFE6
  3046                           postdec1	equ	0xFE5
  3047                           preinc1	equ	0xFE4
  3048                           plusw1	equ	0xFE3
  3049                           fsr1h	equ	0xFE2
  3050                           fsr1l	equ	0xFE1
  3051                           bsr	equ	0xFE0
  3052                           indf2	equ	0xFDF
  3053                           postinc2	equ	0xFDE
  3054                           postdec2	equ	0xFDD
  3055                           preinc2	equ	0xFDC
  3056                           plusw2	equ	0xFDB
  3057                           fsr2h	equ	0xFDA
  3058                           fsr2l	equ	0xFD9
  3059                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        1
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[15]), STR_2(CODE[15]), STR_3(CODE[10]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Platform_Mode
    _Platform_Mode->_Manual
    _Manual->_Driver_Control
    _Driver_Control->___flmul
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Bluetooth_Receiver->_Send_String
    _Send_String->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5112
                     _Configurations
                           _Init_LCD
                      _Platform_Mode
 ---------------------------------------------------------------------------------
 (1) _Platform_Mode                                        1     1      0    3921
                                             47 COMRAM     1     1      0
                          _Automatic
                             _Manual
                     _Semi_Automatic
 ---------------------------------------------------------------------------------
 (2) _Semi_Automatic                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Manual                                               1     1      0    3855
                                             46 COMRAM     1     1      0
                     _Driver_Control
 ---------------------------------------------------------------------------------
 (3) _Driver_Control                                       9     0      9    3723
                                             37 COMRAM     9     0      9
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     533
                                             12 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    1896
                                             12 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _Automatic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0    1191
                                             16 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1    1191
                                             14 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt                                            1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupt_Rx                                         4     4      0    1010
                                              7 COMRAM     4     4      0
                 _Bluetooth_Receiver
 ---------------------------------------------------------------------------------
 (7) _Bluetooth_Receiver                                   0     0      0    1010
                        _Send_String
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (8) _Send_String                                          3     2      1     740
                                              4 COMRAM     3     2      1
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (8) i2_Send_Instruction_Data                              2     1      1     270
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Platform_Mode
     _Automatic
     _Manual
       _Driver_Control
         ___flmul
         ___fltol
     _Semi_Automatic

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Bluetooth_Receiver
     _Send_String
       i2_Send_Instruction_Data
         i2_LCD_Instruction
     i2_Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      3B       1       62.8%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRlhhlhh     14      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlhhlhh      8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhhll       6      0       0      44        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRlhhlhh      1      0       0      40        0.0%
BITBIGSFRlhhlhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      50        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Mar 15 17:49:40 2024

                                l97 1ACA                   Send_String@String 0005  
                                bsr 0FE0                                 l130 1610  
                               l124 1610                                 l141 18BA  
                               l150 1C80                                 l153 1C7E  
                               l161 1B1A                                 l147 18BA  
                               l180 1B96                                 l174 1A62  
                               l177 1C48                                 l810 1306  
                               l803 1110                                 l820 1436  
                               l812 137E                                 l813 136C  
                               l486 19C0                                 l807 1474  
                               _PR2 0FBB                                 u600 1120  
                               u601 111C                                 u610 1130  
                               u611 112C                                 u700 13F0  
                               u620 12AA                                 u540 1066  
                               u701 13EC                                 u541 1062  
                               u710 141E                                 u630 1304  
                               u550 1078                                 u711 141A  
                               u631 1300                                 u551 1074  
                               u720 1458                                 u640 1324  
                               u560 1088                                 u800 158C  
                               u721 1454                                 u641 1320  
                               u625 12A0                                 u561 1084  
                               u801 1588                                 u650 1336  
                               u570 10C8                                 u730 18D2  
                               u810 15AA                                 u651 1332  
                               u571 10C4                                 u731 18CE  
                               u811 15A6                                 u660 1364  
                               u580 10DA                                 u740 1906  
                               u820 15C8                                 u900 17F8  
                               u661 1360                                 u581 10D6  
                               u821 15C4                                 u901 17F4  
                               u670 137A                                 u590 10EA  
                               u750 1934                                 u830 15E6  
                               u910 1836                                 u671 1376  
                               u591 10E6                                 u751 1930  
                               u831 15E2                                 u911 1832  
                               u680 138E                                 u760 1948  
                               u840 1604                                 u920 1874  
                               u681 138A                                 u761 1944  
                               u745 18FC                                 u841 1600  
                               u921 1870                                 u690 13A8  
                               u770 1970                                 u930 18B2  
                               u691 13A4                                 u771 196C  
                               u931 18AE                                 u780 1990  
                               u940 1AE0                                 u781 198C  
                               u941 1ADC                                 u790 19A0  
                               u950 1AFC                                 u791 199C  
                               u951 1AF8                                 u880 177C  
                               u960 1B16                                 u865 1C36  
                               u881 1778                                 u961 1B12  
                               u866 1C38                                 u890 17BA  
                               u891 17B6         i2Send_Instruction_Data@Data 0003  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                      ___flmul@aexp 001E                        ___flmul@bexp 001F  
                _Bluetooth_Receiver 1612                        ___flmul@sign 0019  
                      ___flmul@temp 0024                        ___flmul@prod 0020  
                        Manual@Data 002F                        ___fltol@exp1 0016  
                              l1140 1A82                                l1300 10C8  
                              l1150 1A94                                l1142 1A84  
                              l1134 1A64                                l1310 1100  
                              l1302 10CA                                l1160 1AA2  
                              l1152 1A96                                l1144 1A8E  
                              l1136 1A76                                l1080 1B60  
                              l1400 145A                                l1320 1150  
                              l1312 1120                                l1304 10DA  
                              l1170 1AAC                                l1162 1AA4  
                              l1154 1A9C                                l1146 1A90  
                              l1138 1A78                                l1082 1B70  
                              l1402 1460                                l1330 11A0  
                              l1322 115A                                l1314 1130  
                              l1306 10EA                                l1410 18D2  
                              l1172 1AAE                                l1164 1AA6  
                              l1156 1A9E                                l1148 1A92  
                              l1084 1B74                                l1500 1C2E  
                              l1404 1464                                l1340 11E2  
                              l1332 11AC                                l1324 1170  
                              l1308 10FA                                l1420 1922  
                              l1174 1AC8                                l1166 1AA8  
                              l1158 1AA0                                l1086 1B84  
                              l1078 1B5E                                l1502 1C38  
                              l1350 1244                                l1342 11F2  
                              l1334 11BA                                l1326 117C  
                              l1318 1144                                l1430 194C  
                              l1422 1926                                l1414 18E6  
                              l1168 1AAA                                l1088 1B86  
                              l1504 1C40                                l1360 12EC  
                              l1352 1260                                l1344 120C  
                              l1336 11C6                                l1328 1194  
                              l1280 1058                                l1440 1974  
                              l1432 1956                                l1424 1934  
                              l1416 1910                                l1408 18BC  
                              l1520 17BA                                l1370 1328  
                              l1362 12F6                                l1354 128A  
                              l1346 121C                                l1338 11D6  
                              l1290 1098                                l1282 1066  
                              l1442 1980                                l1434 1960  
                              l1418 1912                                l1530 1862  
                              l1522 17E6                                l1514 176A  
                              l1540 19DA                                l1380 139A  
                              l1372 1336                                l1364 1304  
                              l1356 12C0                                l1348 1238  
                              l1292 109E                                l1284 1068  
                              l1444 1990                                l1532 1874  
                              l1524 17F8                                l1516 177C  
                              l1550 1A22                                l1542 19E4  
                              l1390 1404                                l1382 13A8  
                              l1374 1364                                l1366 1316  
                              l1358 12CE                                l1294 10AE  
                              l1286 1078                                l1278 104C  
                              l1446 19A0                                l1470 152C  
                              l1534 18A0                                l1526 1824  
                              l1518 17A8                                l1630 1C70  
                              l1552 1A2C                                l1544 19FE  
                              l1392 141E                                l1384 13D2  
                              l1368 1324                                l1296 10B4  
                              l1288 1088                                l1448 19B0  
                              l1480 15AA                                l1472 1552  
                              l1464 1476                                l1536 18B2  
                              l1528 1836                                l1560 1ACE  
                              l1554 1A36                                l1546 1A0E  
                              l1538 19C2                                l1394 143A  
                              l1378 138E                                l1386 13D6  
                              l1298 10BA                                l1490 15F2  
                              l1482 15B6                                l1474 157A  
                              l1466 14AA                                l1570 1B16  
                              l1562 1AE0                                l1626 1C68  
                              l1556 1A40                                l1548 1A18  
                              l1396 144A                                l1388 13F0  
                              l1492 1604                                l1484 15C8  
                              l1476 158C                                l1468 14D0  
                              l1564 1AEA                                l1628 1C6C  
                              l1558 1A4A                                l1398 1458  
                              l1486 15D4                                l1478 1598  
                              l1566 1AFC                                l1488 15E6  
                              l1568 1B04                                STR_1 1032  
                              STR_2 1023                                STR_3 1041  
                              STR_4 1012                                STR_5 1001  
                              u1107 1A54                                u1117 1B66  
                              u1127 1B7A                                u1137 1B8C  
                              u1077 19CC                                u1087 19EA  
                              _LATD 0F8C                                u1097 1A04  
                              _LATE 0F8D                                i1l94 001E  
                              i2l89 1C18                 ?_Bluetooth_Receiver 0001  
                              _main 1C68                                btemp 003C  
                              prodh 0FF4                                prodl 0FF3  
                              start 0026                     ?_Driver_Control 0026  
                      ___param_bank 0000                     _LCD_Instruction 1B5C  
  Send_Instruction_Data@Instruction 0010  i2Send_Instruction_Data@Instruction 0004  
                      _BAUDCON1bits 0FB8                ??_Bluetooth_Receiver 0008  
                     ___fltol@sign1 0015                               ?_main 0001  
                   __end_of___flmul 1476                     __end_of___fltol 19C2  
                             _T2CON 0FBA                               i2l112 1766  
                             i2l118 1766                               i2l180 1BD2  
                             i2l177 1C66                               i2l186 1B5A  
                             _SPBRG 0FAF                               _TRISD 0F95  
                             _TRISE 0F96        i2LCD_Instruction@Instruction 0002  
                             tablat 0FF5                               ttemp5 003D  
                             ttemp6 0040                               ttemp7 0044  
                             status 0FD8                               wtemp8 003D  
                   __initialization 1BD4                        __end_of_main 1C7E  
                  __end_of_Init_LCD 1A64               _Send_Instruction_Data 1C2C  
                            ??_main 0031                       ??_Send_String 0006  
                     __activetblptr 0001                              _CCPR3L 0F5E  
                            _CCPR5L 0F55                              _ANSELC 0F3A  
                            _ANSELD 0F3B                              _ANSELE 0F3C  
                            i2l1510 1B3A                              i2l1512 1B3C  
                            i2l1600 16C2                              i2l1506 1B1C  
                            i2l1610 16FE                              i2l1602 16CA  
                            i2l1460 1BC0                              i2l1452 1B9A  
                            i2l1508 1B24                              i2l1620 1744  
                            i2l1612 1710                              i2l1604 16DC  
                            i2l1462 1BC2                              i2l1454 1B9C  
                            i2l1622 174C                              i2l1614 1718  
                            i2l1606 16E4                              i2l1456 1BAC  
                            i2l1624 175E                              i2l1616 172A  
                            i2l1608 16F6                              i2l1632 1C14  
                            i2l1458 1BB0                              i2l1618 1732  
                            i2l1580 164A                              i2l1572 1612  
                            i2l1494 1C4C                              i2l1590 1684  
                            i2l1582 1652                              i2l1574 1620  
                            i2l1496 1C56                              i2l1592 168C  
                            i2l1584 1656                              i2l1576 1624  
                            i2l1498 1C5E                              i2l1594 1694  
                            i2l1578 1636                              i2l1586 165E  
                            i2l1596 16A6                              i2l1588 1670  
                            i2l1598 16BA                              _RCREG1 0FAE  
        LCD_Instruction@Instruction 000E                              _OSCCON 0FD3  
                     ?_Interrupt_Rx 0001             __end_of_LCD_Instruction 1B98  
                            _Manual 1768                           ??___flmul 0015  
                         ??___fltol 0011                              clear_0 1BEC  
                            isa$std 0001                    ??_Semi_Automatic 000D  
                      __pdataCOMRAM 003B                        __mediumconst 0000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                 __end_of_Send_String 1B5C  
                        __accesstop 0060             __end_of__initialization 1BF2  
                    ??_Interrupt_Rx 0008                       ___rparam_used 0001  
                        ___fltol@f1 000D                      __pcstackCOMRAM 0001  
            ?_Send_Instruction_Data 000F                   __end_of_Automatic 1C82  
                       _Duty_Cycle1 0035                         _Duty_Cycle2 0031  
                 __end_of_Interrupt 0026                    ??_Driver_Control 002F  
                         ?_Init_LCD 0001                    ?_LCD_Instruction 0001  
                           ?_Manual 0001             i2_Send_Instruction_Data 1C4A  
                           _CCP3CON 0F5D                             _CCP5CON 0F54  
           Driver_Control@Direction 002E                         _Send_String 1B1C  
                           i2u85_45 1C54                             i2u85_46 1C56  
                           i2u87_40 1B5A                             i2u87_41 1B56  
                           i2u97_40 1620                             i2u97_41 161C  
                           i2u98_40 1636                             i2u98_41 1632  
                           i2u99_40 1670                             i2u99_41 166C  
                  _Manual_Direction 0039                          ??_Init_LCD 0011  
                           __Hparam 0000                             __Lparam 0000  
                           ___flmul 104C                             ___fltol 18BC  
                      __psmallconst 1000                             __pcinit 1BD4  
                           __ramtop 1000                             __ptext0 1C68  
                           __ptext1 1ACC                             __ptext2 1C7E  
                           __ptext3 1768                             __ptext4 1476  
                           __ptext5 18BC                             __ptext6 104C  
                           __ptext7 1C80                             __ptext8 19C2  
                           __ptext9 1C2C                __end_of_Interrupt_Rx 1C2C  
                         _T2CONbits 0FBA                      __pintcode_body 1C04  
              end_of_initialization 1BF2                             int_func 1C04  
                     _Platform_Mode 1ACC           ??i2_Send_Instruction_Data 0004  
                         _RCSTAbits 0FAB                             postinc0 0FEE  
                         _TRISCbits 0F94                         ___flmul@grs 001A  
                    ?_Platform_Mode 0001             ??_Send_Instruction_Data 0010  
                    __end_of_Manual 18BC                       __pidataCOMRAM 1C82  
               start_initialization 1BD4                        Send_String@i 0007  
         Send_Instruction_Data@Data 000F                           _Automatic 1C80  
                    _Configurations 1A64                           _Interrupt 0018  
                          ??_Manual 002F                           _Rx_Buffer 003A  
                      ?_Send_String 0005            Driver_Control@PWM_LMotor 002A  
          Driver_Control@PWM_RMotor 0026                           ___flmul@a 0011  
                         ___flmul@b 000D                         __pbssCOMRAM 0031  
                        ?_Automatic 0001              __end_of_Configurations 1ACC  
                   ??_Platform_Mode 0030                          ?_Interrupt 0001  
                      _Interrupt_Rx 0008                           __pintcode 0008  
                          ?___flmul 000D                            ?___fltol 000D  
                       __pintcodelo 0018                         __smallconst 1000  
                   ?_Configurations 0001                            _LATCbits 0F8B  
                          _LATDbits 0F8C                            _PIE1bits 0F9D  
                          i2u100_40 16A6                            i2u100_41 16A2  
                          i2u101_40 16DC                            i2u101_41 16D8  
                          i2u102_40 16F6                            i2u102_41 16F2  
                          i2u103_40 1710                            i2u103_41 170C  
                          i2u104_40 172A                            i2u104_41 1726  
                          i2u105_40 1744                            i2u105_41 1740  
                          i2u106_40 175E                            i2u106_41 175A  
                          i2u114_47 1BA2                            i2u115_47 1BB6  
                          i2u116_47 1BC8                            _PIR1bits 0F9E  
                          _RCONbits 0FD0          __end_of_Bluetooth_Receiver 1768  
                 i2_LCD_Instruction 1B98                  ?i2_LCD_Instruction 0001  
                       ??_Automatic 000D                 ??i2_LCD_Instruction 0001  
                       ??_Interrupt 000C                            _Init_LCD 19C2  
                          __Hrparam 0000                            __Lrparam 0000  
                      __Lsmallconst 1000       __end_of_Send_Instruction_Data 1C4A  
         __end_ofi2_LCD_Instruction 1BD4                     _Platform_Status 003B  
                 ??_LCD_Instruction 000D                            __ptext10 1B5C  
                          __ptext11 1A64                            __ptext14 1612  
                          __ptext15 1B1C                            __ptext16 1C4A  
                          __ptext17 1B98                      _Semi_Automatic 1C7E  
          ?i2_Send_Instruction_Data 0003                            isa$xinst 0000  
                          int$flags 003C                          _INTCONbits 0FF2  
            __end_of_Semi_Automatic 1C80                   Platform_Mode@Data 0030  
                          intlevel1 0000                            intlevel2 0000  
                    _Driver_Control 1476                    ??_Configurations 000D  
                   ?_Semi_Automatic 0001     __end_ofi2_Send_Instruction_Data 1C68  
             __end_of_Platform_Mode 1B1C              __end_of_Driver_Control 1612  
