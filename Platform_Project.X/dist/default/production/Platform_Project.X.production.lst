

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Mar 08 17:08:00 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 12/10/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F46K22 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _LATDbits	set	3980
    65   000000                     _T2CONbits	set	4026
    66   000000                     _ANSELC	set	3898
    67   000000                     _OSCCON	set	4051
    68   000000                     _INTCONbits	set	4082
    69   000000                     _CCP5CON	set	3924
    70   000000                     _CCP3CON	set	3933
    71   000000                     _LATCbits	set	3979
    72   000000                     _TRISCbits	set	3988
    73   000000                     _ANSELE	set	3900
    74   000000                     _ANSELD	set	3899
    75   000000                     _PIE1bits	set	3997
    76   000000                     _RCONbits	set	4048
    77   000000                     _TRISE	set	3990
    78   000000                     _TRISD	set	3989
    79   000000                     _LATE	set	3981
    80   000000                     _LATD	set	3980
    81   000000                     _RCSTAbits	set	4011
    82   000000                     _TXSTA1bits	set	4012
    83   000000                     _SPBRG	set	4015
    84   000000                     _PIR1bits	set	3998
    85   000000                     _BAUDCON1bits	set	4024
    86   000000                     _RCREG1	set	4014
    87   000000                     _T2CON	set	4026
    88   000000                     _PR2	set	4027
    89   000000                     _CCPR3L	set	3934
    90   000000                     _CCPR5L	set	3925
    91                           
    92                           	psect	smallconst
    93   001000                     __psmallconst:
    94                           	callstack 0
    95   001000  00                 	db	0
    96   001001                     STR_5:
    97   001001  20                 	db	32
    98   001002  20                 	db	32
    99   001003  20                 	db	32
   100   001004  49                 	db	73	;'I'
   101   001005  73                 	db	115	;'s'
   102   001006  20                 	db	32
   103   001007  6E                 	db	110	;'n'
   104   001008  6F                 	db	111	;'o'
   105   001009  74                 	db	116	;'t'
   106   00100A  20                 	db	32
   107   00100B  56                 	db	86	;'V'
   108   00100C  61                 	db	97	;'a'
   109   00100D  6C                 	db	108	;'l'
   110   00100E  69                 	db	105	;'i'
   111   00100F  64                 	db	100	;'d'
   112   001010  21                 	db	33
   113   001011  00                 	db	0
   114   001012                     STR_4:
   115   001012  20                 	db	32
   116   001013  20                 	db	32
   117   001014  20                 	db	32
   118   001015  56                 	db	86	;'V'
   119   001016  61                 	db	97	;'a'
   120   001017  6C                 	db	108	;'l'
   121   001018  75                 	db	117	;'u'
   122   001019  65                 	db	101	;'e'
   123   00101A  20                 	db	32
   124   00101B  45                 	db	69	;'E'
   125   00101C  6E                 	db	110	;'n'
   126   00101D  74                 	db	116	;'t'
   127   00101E  65                 	db	101	;'e'
   128   00101F  72                 	db	114	;'r'
   129   001020  65                 	db	101	;'e'
   130   001021  64                 	db	100	;'d'
   131   001022  00                 	db	0
   132   001023  52                 	db	82	;'R'
   133   001024  6F                 	db	111	;'o'
   134   001025  62                 	db	98	;'b'
   135   001026  6F                 	db	111	;'o'
   136   001027  74                 	db	116	;'t'
   137   001028  69                 	db	105	;'i'
   138   001029  63                 	db	99	;'c'
   139   00102A  20                 	db	32
   140   00102B  50                 	db	80	;'P'
   141   00102C  6C                 	db	108	;'l'
   142   00102D  61                 	db	97	;'a'
   143   00102E  74                 	db	116	;'t'
   144   00102F  66                 	db	102	;'f'
   145   001030  6F                 	db	111	;'o'
   146   001031  72                 	db	114	;'r'
   147   001032  6D                 	db	109	;'m'
   148   001033  00                 	db	0
   149   001034  52                 	db	82	;'R'
   150   001035  65                 	db	101	;'e'
   151   001036  73                 	db	115	;'s'
   152   001037  65                 	db	101	;'e'
   153   001038  61                 	db	97	;'a'
   154   001039  72                 	db	114	;'r'
   155   00103A  63                 	db	99	;'c'
   156   00103B  68                 	db	104	;'h'
   157   00103C  20                 	db	32
   158   00103D  50                 	db	80	;'P'
   159   00103E  72                 	db	114	;'r'
   160   00103F  6F                 	db	111	;'o'
   161   001040  6A                 	db	106	;'j'
   162   001041  65                 	db	101	;'e'
   163   001042  63                 	db	99	;'c'
   164   001043  74                 	db	116	;'t'
   165   001044  00                 	db	0
   166   001045                     STR_2:
   167   001045  41                 	db	65	;'A'
   168   001046  75                 	db	117	;'u'
   169   001047  74                 	db	116	;'t'
   170   001048  6F                 	db	111	;'o'
   171   001049  6D                 	db	109	;'m'
   172   00104A  61                 	db	97	;'a'
   173   00104B  74                 	db	116	;'t'
   174   00104C  69                 	db	105	;'i'
   175   00104D  63                 	db	99	;'c'
   176   00104E  20                 	db	32
   177   00104F  4D                 	db	77	;'M'
   178   001050  6F                 	db	111	;'o'
   179   001051  64                 	db	100	;'d'
   180   001052  65                 	db	101	;'e'
   181   001053  00                 	db	0
   182   001054                     STR_1:
   183   001054  4D                 	db	77	;'M'
   184   001055  61                 	db	97	;'a'
   185   001056  6E                 	db	110	;'n'
   186   001057  75                 	db	117	;'u'
   187   001058  61                 	db	97	;'a'
   188   001059  6C                 	db	108	;'l'
   189   00105A  20                 	db	32
   190   00105B  4D                 	db	77	;'M'
   191   00105C  6F                 	db	111	;'o'
   192   00105D  64                 	db	100	;'d'
   193   00105E  65                 	db	101	;'e'
   194   00105F  00                 	db	0
   195   001060                     STR_3:
   196   001060  53                 	db	83	;'S'
   197   001061  65                 	db	101	;'e'
   198   001062  6D                 	db	109	;'m'
   199   001063  69                 	db	105	;'i'
   200   001064  20                 	db	32
   201   001065  4D                 	db	77	;'M'
   202   001066  6F                 	db	111	;'o'
   203   001067  64                 	db	100	;'d'
   204   001068  65                 	db	101	;'e'
   205   001069  00                 	db	0
   206   00106A  00                 	db	0	; dummy byte at the end
   207   000000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211   001BA0                     __pcinit:
   212                           	callstack 0
   213   001BA0                     start_initialization:
   214                           	callstack 0
   215   001BA0                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Clear objects allocated to COMRAM (11 bytes)
   219   001BA0  EE00  F030         	lfsr	0,__pbssCOMRAM
   220   001BA4  0E0B               	movlw	11
   221   001BA6                     clear_0:
   222   001BA6  6AEE               	clrf	postinc0,c
   223   001BA8  06E8               	decf	wreg,f,c
   224   001BAA  E1FD               	bnz	clear_0
   225   001BAC                     end_of_initialization:
   226                           	callstack 0
   227   001BAC                     __end_of__initialization:
   228                           	callstack 0
   229   001BAC  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   230   001BAE  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   231   001BB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   232   001BB2  6EF8               	movwf	tblptru,c
   233   001BB4  0100               	movlb	0
   234   001BB6  EFDD  F00D         	goto	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMRAM
   237   000030                     __pbssCOMRAM:
   238                           	callstack 0
   239   000030                     _Duty_Cycle2:
   240                           	callstack 0
   241   000030                     	ds	4
   242   000034                     _Duty_Cycle1:
   243                           	callstack 0
   244   000034                     	ds	4
   245   000038                     _Direction:
   246                           	callstack 0
   247   000038                     	ds	1
   248   000039                     _Mode:
   249                           	callstack 0
   250   000039                     	ds	1
   251   00003A                     _Rx_Buffer:
   252                           	callstack 0
   253   00003A                     	ds	1
   254                           
   255                           	psect	cstackCOMRAM
   256   000001                     __pcstackCOMRAM:
   257                           	callstack 0
   258   000001                     ??i2_LCD_Instruction:
   259                           
   260                           ; 1 bytes @ 0x0
   261   000001                     	ds	1
   262   000002                     i2LCD_Instruction@Instruction:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266   000002                     	ds	1
   267   000003                     i2Send_Instruction_Data@Data:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x2
   271   000003                     	ds	1
   272   000004                     i2Send_Instruction_Data@Instruction:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x3
   276   000004                     	ds	1
   277   000005                     Send_String@String:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x4
   281   000005                     	ds	1
   282   000006                     ??_Send_String:
   283                           
   284                           ; 1 bytes @ 0x5
   285   000006                     	ds	1
   286   000007                     Send_String@i:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x6
   290   000007                     	ds	1
   291   000008                     ??_Interrupt_Rx:
   292                           
   293                           ; 1 bytes @ 0x7
   294   000008                     	ds	4
   295   00000C                     ??_Interrupt:
   296                           
   297                           ; 1 bytes @ 0xB
   298   00000C                     	ds	1
   299   00000D                     ??_LCD_Instruction:
   300   00000D                     ?___flmul:
   301                           	callstack 0
   302   00000D                     ?___fltol:
   303                           	callstack 0
   304   00000D                     ___fltol@f1:
   305                           	callstack 0
   306   00000D                     ___flmul@b:
   307                           	callstack 0
   308                           
   309                           ; 4 bytes @ 0xC
   310   00000D                     	ds	1
   311   00000E                     LCD_Instruction@Instruction:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0xD
   315   00000E                     	ds	1
   316   00000F                     Send_Instruction_Data@Data:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0xE
   320   00000F                     	ds	1
   321   000010                     Send_Instruction_Data@Instruction:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xF
   325   000010                     	ds	1
   326   000011                     ??_Init_LCD:
   327   000011                     ??___fltol:
   328   000011                     ___flmul@a:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x10
   332   000011                     	ds	4
   333   000015                     ??___flmul:
   334   000015                     ___fltol@sign1:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x14
   338   000015                     	ds	1
   339   000016                     ___fltol@exp1:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x15
   343   000016                     	ds	3
   344   000019                     ___flmul@sign:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x18
   348   000019                     	ds	1
   349   00001A                     ___flmul@grs:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x19
   353   00001A                     	ds	4
   354   00001E                     ___flmul@aexp:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x1D
   358   00001E                     	ds	1
   359   00001F                     ___flmul@bexp:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x1E
   363   00001F                     	ds	1
   364   000020                     ___flmul@prod:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x1F
   368   000020                     	ds	4
   369   000024                     ___flmul@temp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x23
   373   000024                     	ds	2
   374   000026                     Driver_Control@PWM_RMotor:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x25
   378   000026                     	ds	4
   379   00002A                     Driver_Control@PWM_LMotor:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x29
   383   00002A                     	ds	4
   384   00002E                     Driver_Control@Direction:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x2D
   388   00002E                     	ds	1
   389   00002F                     Manual@Data:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x2E
   393   00002F                     	ds	1
   394   000030                     
   395                           ; 1 bytes @ 0x2F
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   398 ;;
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 51 in file "main.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels required when called: 9
   421 ;; This function calls:
   422 ;;		_Configurations
   423 ;;		_Init_LCD
   424 ;;		_Manual
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text0
   431   001BBA                     __ptext0:
   432                           	callstack 0
   433   001BBA                     _main:
   434                           	callstack 22
   435   001BBA                     
   436                           ;main.c: 54:     Configurations();
   437   001BBA  EC0C  F00D         	call	_Configurations	;wreg free
   438   001BBE                     
   439                           ;main.c: 55:     Init_LCD();
   440   001BBE  ECBB  F00C         	call	_Init_LCD	;wreg free
   441   001BC2                     l1568:
   442                           
   443                           ;main.c: 60:         Manual(Direction);
   444   001BC2  5038               	movf	_Direction^0,w,c
   445   001BC4  EC19  F00B         	call	_Manual
   446   001BC8  EFE1  F00D         	goto	l1568
   447   001BCC  EF13  F000         	goto	start
   448   001BD0                     __end_of_main:
   449                           	callstack 0
   450                           
   451 ;; *************** function _Manual *****************
   452 ;; Defined at:
   453 ;;		line 313 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  Data            1    wreg     unsigned char 
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  Data            1   46[COMRAM] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        1 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; Hardware stack levels required when called: 8
   474 ;; This function calls:
   475 ;;		_Driver_Control
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text1
   482   001632                     __ptext1:
   483                           	callstack 0
   484   001632                     _Manual:
   485                           	callstack 22
   486                           
   487                           ;incstack = 0
   488                           ;Manual@Data stored from wreg
   489   001632  6E2F               	movwf	Manual@Data^0,c
   490   001634                     
   491                           ;main.c: 315:     if (Data == '1') {
   492   001634  0E31               	movlw	49
   493   001636  182F               	xorwf	Manual@Data^0,w,c
   494   001638  A4D8               	btfss	status,2,c
   495   00163A  EF21  F00B         	goto	u781
   496   00163E  EF23  F00B         	goto	u780
   497   001642                     u781:
   498   001642  EF39  F00B         	goto	l1510
   499   001646                     u780:
   500   001646                     
   501                           ;main.c: 317:         Driver_Control(1023.00, 1023.00, 'F');
   502   001646  0E00               	movlw	0
   503   001648  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   504   00164A  0EC0               	movlw	192
   505   00164C  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   506   00164E  0E7F               	movlw	127
   507   001650  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   508   001652  0E44               	movlw	68
   509   001654  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   510   001656  0E00               	movlw	0
   511   001658  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   512   00165A  0EC0               	movlw	192
   513   00165C  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   514   00165E  0E7F               	movlw	127
   515   001660  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   516   001662  0E44               	movlw	68
   517   001664  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   518   001666  0E46               	movlw	70
   519   001668  6E2E               	movwf	Driver_Control@Direction^0,c
   520   00166A  EC4B  F00A         	call	_Driver_Control	;wreg free
   521                           
   522                           ;main.c: 319:     } else if (Data == '2') {
   523   00166E  EFB5  F00B         	goto	l149
   524   001672                     l1510:
   525   001672  0E32               	movlw	50
   526   001674  182F               	xorwf	Manual@Data^0,w,c
   527   001676  A4D8               	btfss	status,2,c
   528   001678  EF40  F00B         	goto	u791
   529   00167C  EF42  F00B         	goto	u790
   530   001680                     u791:
   531   001680  EF58  F00B         	goto	l1514
   532   001684                     u790:
   533   001684                     
   534                           ;main.c: 321:         Driver_Control(0.00, 0.00, 'T');
   535   001684  0E00               	movlw	0
   536   001686  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   537   001688  0E00               	movlw	0
   538   00168A  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   539   00168C  0E00               	movlw	0
   540   00168E  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   541   001690  0E00               	movlw	0
   542   001692  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   543   001694  0E00               	movlw	0
   544   001696  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   545   001698  0E00               	movlw	0
   546   00169A  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   547   00169C  0E00               	movlw	0
   548   00169E  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   549   0016A0  0E00               	movlw	0
   550   0016A2  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   551   0016A4  0E54               	movlw	84
   552   0016A6  6E2E               	movwf	Driver_Control@Direction^0,c
   553   0016A8  EC4B  F00A         	call	_Driver_Control	;wreg free
   554                           
   555                           ;main.c: 323:     } else if (Data == '3') {
   556   0016AC  EFB5  F00B         	goto	l149
   557   0016B0                     l1514:
   558   0016B0  0E33               	movlw	51
   559   0016B2  182F               	xorwf	Manual@Data^0,w,c
   560   0016B4  A4D8               	btfss	status,2,c
   561   0016B6  EF5F  F00B         	goto	u801
   562   0016BA  EF61  F00B         	goto	u800
   563   0016BE                     u801:
   564   0016BE  EF77  F00B         	goto	l1518
   565   0016C2                     u800:
   566   0016C2                     
   567                           ;main.c: 325:         Driver_Control(1023.00, 1023.00, 'B');
   568   0016C2  0E00               	movlw	0
   569   0016C4  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   570   0016C6  0EC0               	movlw	192
   571   0016C8  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   572   0016CA  0E7F               	movlw	127
   573   0016CC  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   574   0016CE  0E44               	movlw	68
   575   0016D0  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   576   0016D2  0E00               	movlw	0
   577   0016D4  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   578   0016D6  0EC0               	movlw	192
   579   0016D8  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   580   0016DA  0E7F               	movlw	127
   581   0016DC  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   582   0016DE  0E44               	movlw	68
   583   0016E0  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   584   0016E2  0E42               	movlw	66
   585   0016E4  6E2E               	movwf	Driver_Control@Direction^0,c
   586   0016E6  EC4B  F00A         	call	_Driver_Control	;wreg free
   587                           
   588                           ;main.c: 327:     } else if (Data == '4') {
   589   0016EA  EFB5  F00B         	goto	l149
   590   0016EE                     l1518:
   591   0016EE  0E34               	movlw	52
   592   0016F0  182F               	xorwf	Manual@Data^0,w,c
   593   0016F2  A4D8               	btfss	status,2,c
   594   0016F4  EF7E  F00B         	goto	u811
   595   0016F8  EF80  F00B         	goto	u810
   596   0016FC                     u811:
   597   0016FC  EF96  F00B         	goto	l1522
   598   001700                     u810:
   599   001700                     
   600                           ;main.c: 329:         Driver_Control(511.5, 1023.00, 'L');
   601   001700  0E00               	movlw	0
   602   001702  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   603   001704  0EC0               	movlw	192
   604   001706  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   605   001708  0EFF               	movlw	255
   606   00170A  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   607   00170C  0E43               	movlw	67
   608   00170E  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   609   001710  0E00               	movlw	0
   610   001712  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   611   001714  0EC0               	movlw	192
   612   001716  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   613   001718  0E7F               	movlw	127
   614   00171A  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   615   00171C  0E44               	movlw	68
   616   00171E  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   617   001720  0E4C               	movlw	76
   618   001722  6E2E               	movwf	Driver_Control@Direction^0,c
   619   001724  EC4B  F00A         	call	_Driver_Control	;wreg free
   620                           
   621                           ;main.c: 331:     } else if (Data == '5') {
   622   001728  EFB5  F00B         	goto	l149
   623   00172C                     l1522:
   624   00172C  0E35               	movlw	53
   625   00172E  182F               	xorwf	Manual@Data^0,w,c
   626   001730  A4D8               	btfss	status,2,c
   627   001732  EF9D  F00B         	goto	u821
   628   001736  EF9F  F00B         	goto	u820
   629   00173A                     u821:
   630   00173A  EFB5  F00B         	goto	l143
   631   00173E                     u820:
   632   00173E                     
   633                           ;main.c: 333:         Driver_Control(1023.00, 511.5, 'R');
   634   00173E  0E00               	movlw	0
   635   001740  6E26               	movwf	Driver_Control@PWM_RMotor^0,c
   636   001742  0EC0               	movlw	192
   637   001744  6E27               	movwf	(Driver_Control@PWM_RMotor+1)^0,c
   638   001746  0E7F               	movlw	127
   639   001748  6E28               	movwf	(Driver_Control@PWM_RMotor+2)^0,c
   640   00174A  0E44               	movlw	68
   641   00174C  6E29               	movwf	(Driver_Control@PWM_RMotor+3)^0,c
   642   00174E  0E00               	movlw	0
   643   001750  6E2A               	movwf	Driver_Control@PWM_LMotor^0,c
   644   001752  0EC0               	movlw	192
   645   001754  6E2B               	movwf	(Driver_Control@PWM_LMotor+1)^0,c
   646   001756  0EFF               	movlw	255
   647   001758  6E2C               	movwf	(Driver_Control@PWM_LMotor+2)^0,c
   648   00175A  0E43               	movlw	67
   649   00175C  6E2D               	movwf	(Driver_Control@PWM_LMotor+3)^0,c
   650   00175E  0E52               	movlw	82
   651   001760  6E2E               	movwf	Driver_Control@Direction^0,c
   652   001762  EC4B  F00A         	call	_Driver_Control	;wreg free
   653   001766  EFB5  F00B         	goto	l149
   654   00176A                     l143:
   655   00176A                     l149:
   656   00176A  0012               	return		;funcret
   657   00176C                     __end_of_Manual:
   658                           	callstack 0
   659                           
   660 ;; *************** function _Driver_Control *****************
   661 ;; Defined at:
   662 ;;		line 225 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  PWM_RMotor      4   37[COMRAM] float 
   665 ;;  PWM_LMotor      4   41[COMRAM] float 
   666 ;;  Direction       1   45[COMRAM] unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   678 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;Total ram usage:        9 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 7
   685 ;; This function calls:
   686 ;;		___flmul
   687 ;;		___fltol
   688 ;; This function is called by:
   689 ;;		_Manual
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text2
   694   001496                     __ptext2:
   695                           	callstack 0
   696   001496                     _Driver_Control:
   697                           	callstack 22
   698   001496                     
   699                           ;main.c: 228:     Duty_Cycle1 = (float) (PWM_RMotor * (1000.00 / 1023.00));
   700   001496  C026  F00D         	movff	Driver_Control@PWM_RMotor,___flmul@b
   701   00149A  C027  F00E         	movff	Driver_Control@PWM_RMotor+1,___flmul@b+1
   702   00149E  C028  F00F         	movff	Driver_Control@PWM_RMotor+2,___flmul@b+2
   703   0014A2  C029  F010         	movff	Driver_Control@PWM_RMotor+3,___flmul@b+3
   704   0014A6  0E90               	movlw	144
   705   0014A8  6E11               	movwf	___flmul@a^0,c
   706   0014AA  0E3E               	movlw	62
   707   0014AC  6E12               	movwf	(___flmul@a+1)^0,c
   708   0014AE  0E7A               	movlw	122
   709   0014B0  6E13               	movwf	(___flmul@a+2)^0,c
   710   0014B2  0E3F               	movlw	63
   711   0014B4  6E14               	movwf	(___flmul@a+3)^0,c
   712   0014B6  EC36  F008         	call	___flmul	;wreg free
   713   0014BA  C00D  F034         	movff	?___flmul,_Duty_Cycle1
   714   0014BE  C00E  F035         	movff	?___flmul+1,_Duty_Cycle1+1
   715   0014C2  C00F  F036         	movff	?___flmul+2,_Duty_Cycle1+2
   716   0014C6  C010  F037         	movff	?___flmul+3,_Duty_Cycle1+3
   717   0014CA                     
   718                           ;main.c: 229:     CCPR3L = (int) Duty_Cycle1 >> 2;
   719   0014CA  C034  F00D         	movff	_Duty_Cycle1,___fltol@f1
   720   0014CE  C035  F00E         	movff	_Duty_Cycle1+1,___fltol@f1+1
   721   0014D2  C036  F00F         	movff	_Duty_Cycle1+2,___fltol@f1+2
   722   0014D6  C037  F010         	movff	_Duty_Cycle1+3,___fltol@f1+3
   723   0014DA  ECB6  F00B         	call	___fltol	;wreg free
   724   0014DE  340E               	rlcf	(?___fltol+1)^0,w,c
   725   0014E0  320E               	rrcf	(?___fltol+1)^0,f,c
   726   0014E2  320D               	rrcf	?___fltol^0,f,c
   727   0014E4  340E               	rlcf	(?___fltol+1)^0,w,c
   728   0014E6  320E               	rrcf	(?___fltol+1)^0,f,c
   729   0014E8  320D               	rrcf	?___fltol^0,f,c
   730   0014EA  500D               	movf	?___fltol^0,w,c
   731   0014EC  010F               	movlb	15	; () banked
   732   0014EE  6F5E               	movwf	94,b	;volatile
   733   0014F0                     
   734                           ; BSR set to: 15
   735                           ;main.c: 230:     CCP3CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4));
   736   0014F0  C034  F00D         	movff	_Duty_Cycle1,___fltol@f1
   737   0014F4  C035  F00E         	movff	_Duty_Cycle1+1,___fltol@f1+1
   738   0014F8  C036  F00F         	movff	_Duty_Cycle1+2,___fltol@f1+2
   739   0014FC  C037  F010         	movff	_Duty_Cycle1+3,___fltol@f1+3
   740   001500  ECB6  F00B         	call	___fltol	;wreg free
   741   001504  0E03               	movlw	3
   742   001506  160D               	andwf	?___fltol^0,f,c
   743   001508  3A0D               	swapf	?___fltol^0,f,c
   744   00150A  0EF0               	movlw	240
   745   00150C  160D               	andwf	?___fltol^0,f,c
   746   00150E  010F               	movlb	15	; () banked
   747   001510  515D               	movf	93,w,b	;volatile
   748   001512  0B0F               	andlw	15
   749   001514  100D               	iorwf	?___fltol^0,w,c
   750   001516  6F5D               	movwf	93,b	;volatile
   751                           
   752                           ;main.c: 232:     Duty_Cycle2 = (float) (PWM_LMotor * (1000.00 / 1023.00));
   753   001518  C02A  F00D         	movff	Driver_Control@PWM_LMotor,___flmul@b
   754   00151C  C02B  F00E         	movff	Driver_Control@PWM_LMotor+1,___flmul@b+1
   755   001520  C02C  F00F         	movff	Driver_Control@PWM_LMotor+2,___flmul@b+2
   756   001524  C02D  F010         	movff	Driver_Control@PWM_LMotor+3,___flmul@b+3
   757   001528  0E90               	movlw	144
   758   00152A  6E11               	movwf	___flmul@a^0,c
   759   00152C  0E3E               	movlw	62
   760   00152E  6E12               	movwf	(___flmul@a+1)^0,c
   761   001530  0E7A               	movlw	122
   762   001532  6E13               	movwf	(___flmul@a+2)^0,c
   763   001534  0E3F               	movlw	63
   764   001536  6E14               	movwf	(___flmul@a+3)^0,c
   765   001538  EC36  F008         	call	___flmul	;wreg free
   766   00153C  C00D  F030         	movff	?___flmul,_Duty_Cycle2
   767   001540  C00E  F031         	movff	?___flmul+1,_Duty_Cycle2+1
   768   001544  C00F  F032         	movff	?___flmul+2,_Duty_Cycle2+2
   769   001548  C010  F033         	movff	?___flmul+3,_Duty_Cycle2+3
   770   00154C                     
   771                           ;main.c: 233:     CCPR5L = (int) Duty_Cycle2 >> 2;
   772   00154C  C030  F00D         	movff	_Duty_Cycle2,___fltol@f1
   773   001550  C031  F00E         	movff	_Duty_Cycle2+1,___fltol@f1+1
   774   001554  C032  F00F         	movff	_Duty_Cycle2+2,___fltol@f1+2
   775   001558  C033  F010         	movff	_Duty_Cycle2+3,___fltol@f1+3
   776   00155C  ECB6  F00B         	call	___fltol	;wreg free
   777   001560  340E               	rlcf	(?___fltol+1)^0,w,c
   778   001562  320E               	rrcf	(?___fltol+1)^0,f,c
   779   001564  320D               	rrcf	?___fltol^0,f,c
   780   001566  340E               	rlcf	(?___fltol+1)^0,w,c
   781   001568  320E               	rrcf	(?___fltol+1)^0,f,c
   782   00156A  320D               	rrcf	?___fltol^0,f,c
   783   00156C  500D               	movf	?___fltol^0,w,c
   784   00156E  010F               	movlb	15	; () banked
   785   001570  6F55               	movwf	85,b	;volatile
   786   001572                     
   787                           ; BSR set to: 15
   788                           ;main.c: 234:     CCP5CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4));
   789   001572  C030  F00D         	movff	_Duty_Cycle2,___fltol@f1
   790   001576  C031  F00E         	movff	_Duty_Cycle2+1,___fltol@f1+1
   791   00157A  C032  F00F         	movff	_Duty_Cycle2+2,___fltol@f1+2
   792   00157E  C033  F010         	movff	_Duty_Cycle2+3,___fltol@f1+3
   793   001582  ECB6  F00B         	call	___fltol	;wreg free
   794   001586  0E03               	movlw	3
   795   001588  160D               	andwf	?___fltol^0,f,c
   796   00158A  3A0D               	swapf	?___fltol^0,f,c
   797   00158C  0EF0               	movlw	240
   798   00158E  160D               	andwf	?___fltol^0,f,c
   799   001590  010F               	movlb	15	; () banked
   800   001592  515D               	movf	93,w,b	;volatile
   801   001594  0B0F               	andlw	15
   802   001596  100D               	iorwf	?___fltol^0,w,c
   803   001598  6F54               	movwf	84,b	;volatile
   804   00159A                     
   805                           ; BSR set to: 15
   806                           ;main.c: 237:     if (Direction == 'F') {
   807   00159A  0E46               	movlw	70
   808   00159C  182E               	xorwf	Driver_Control@Direction^0,w,c
   809   00159E  A4D8               	btfss	status,2,c
   810   0015A0  EFD4  F00A         	goto	u731
   811   0015A4  EFD6  F00A         	goto	u730
   812   0015A8                     u731:
   813   0015A8  EFDC  F00A         	goto	l1468
   814   0015AC                     u730:
   815   0015AC                     
   816                           ; BSR set to: 15
   817                           ;main.c: 239:         LATDbits.LD4 = 1;
   818   0015AC  888C               	bsf	140,4,c	;volatile
   819                           
   820                           ;main.c: 240:         LATDbits.LD5 = 0;
   821   0015AE  9A8C               	bcf	140,5,c	;volatile
   822                           
   823                           ;main.c: 241:         LATDbits.LD6 = 0;
   824   0015B0  9C8C               	bcf	140,6,c	;volatile
   825                           
   826                           ;main.c: 242:         LATDbits.LD7 = 1;
   827   0015B2  8E8C               	bsf	140,7,c	;volatile
   828                           
   829                           ;main.c: 244:     } else if (Direction == 'B') {
   830   0015B4  EF18  F00B         	goto	l126
   831   0015B8                     l1468:
   832                           
   833                           ; BSR set to: 15
   834   0015B8  0E42               	movlw	66
   835   0015BA  182E               	xorwf	Driver_Control@Direction^0,w,c
   836   0015BC  A4D8               	btfss	status,2,c
   837   0015BE  EFE3  F00A         	goto	u741
   838   0015C2  EFE5  F00A         	goto	u740
   839   0015C6                     u741:
   840   0015C6  EFEB  F00A         	goto	l1472
   841   0015CA                     u740:
   842   0015CA                     
   843                           ; BSR set to: 15
   844                           ;main.c: 246:         LATDbits.LD4 = 0;
   845   0015CA  988C               	bcf	140,4,c	;volatile
   846                           
   847                           ;main.c: 247:         LATDbits.LD5 = 1;
   848   0015CC  8A8C               	bsf	140,5,c	;volatile
   849                           
   850                           ;main.c: 248:         LATDbits.LD6 = 1;
   851   0015CE  8C8C               	bsf	140,6,c	;volatile
   852                           
   853                           ;main.c: 249:         LATDbits.LD7 = 0;
   854   0015D0  9E8C               	bcf	140,7,c	;volatile
   855                           
   856                           ;main.c: 251:     } else if (Direction == 'R') {
   857   0015D2  EF18  F00B         	goto	l126
   858   0015D6                     l1472:
   859                           
   860                           ; BSR set to: 15
   861   0015D6  0E52               	movlw	82
   862   0015D8  182E               	xorwf	Driver_Control@Direction^0,w,c
   863   0015DA  A4D8               	btfss	status,2,c
   864   0015DC  EFF2  F00A         	goto	u751
   865   0015E0  EFF4  F00A         	goto	u750
   866   0015E4                     u751:
   867   0015E4  EFFA  F00A         	goto	l1476
   868   0015E8                     u750:
   869   0015E8                     
   870                           ; BSR set to: 15
   871                           ;main.c: 253:         LATDbits.LD4 = 1;
   872   0015E8  888C               	bsf	140,4,c	;volatile
   873                           
   874                           ;main.c: 254:         LATDbits.LD5 = 0;
   875   0015EA  9A8C               	bcf	140,5,c	;volatile
   876                           
   877                           ;main.c: 255:         LATDbits.LD6 = 0;
   878   0015EC  9C8C               	bcf	140,6,c	;volatile
   879                           
   880                           ;main.c: 256:         LATDbits.LD7 = 0;
   881   0015EE  9E8C               	bcf	140,7,c	;volatile
   882                           
   883                           ;main.c: 258:     } else if (Direction == 'L') {
   884   0015F0  EF18  F00B         	goto	l126
   885   0015F4                     l1476:
   886                           
   887                           ; BSR set to: 15
   888   0015F4  0E4C               	movlw	76
   889   0015F6  182E               	xorwf	Driver_Control@Direction^0,w,c
   890   0015F8  A4D8               	btfss	status,2,c
   891   0015FA  EF01  F00B         	goto	u761
   892   0015FE  EF03  F00B         	goto	u760
   893   001602                     u761:
   894   001602  EF09  F00B         	goto	l1480
   895   001606                     u760:
   896   001606                     
   897                           ; BSR set to: 15
   898                           ;main.c: 260:         LATDbits.LD4 = 0;
   899   001606  988C               	bcf	140,4,c	;volatile
   900                           
   901                           ;main.c: 261:         LATDbits.LD5 = 0;
   902   001608  9A8C               	bcf	140,5,c	;volatile
   903                           
   904                           ;main.c: 262:         LATDbits.LD6 = 1;
   905   00160A  8C8C               	bsf	140,6,c	;volatile
   906                           
   907                           ;main.c: 263:         LATDbits.LD7 = 0;
   908   00160C  9E8C               	bcf	140,7,c	;volatile
   909                           
   910                           ;main.c: 265:     } else if (Direction == 'T') {
   911   00160E  EF18  F00B         	goto	l126
   912   001612                     l1480:
   913                           
   914                           ; BSR set to: 15
   915   001612  0E54               	movlw	84
   916   001614  182E               	xorwf	Driver_Control@Direction^0,w,c
   917   001616  A4D8               	btfss	status,2,c
   918   001618  EF10  F00B         	goto	u771
   919   00161C  EF12  F00B         	goto	u770
   920   001620                     u771:
   921   001620  EF18  F00B         	goto	l120
   922   001624                     u770:
   923   001624                     
   924                           ; BSR set to: 15
   925                           ;main.c: 267:         LATDbits.LD4 = 0;
   926   001624  988C               	bcf	140,4,c	;volatile
   927                           
   928                           ;main.c: 268:         LATDbits.LD5 = 0;
   929   001626  9A8C               	bcf	140,5,c	;volatile
   930                           
   931                           ;main.c: 269:         LATDbits.LD6 = 0;
   932   001628  9C8C               	bcf	140,6,c	;volatile
   933                           
   934                           ;main.c: 270:         LATDbits.LD7 = 0;
   935   00162A  9E8C               	bcf	140,7,c	;volatile
   936   00162C  EF18  F00B         	goto	l126
   937   001630                     l120:
   938   001630                     l126:
   939                           
   940                           ; BSR set to: 15
   941   001630  0012               	return		;funcret
   942   001632                     __end_of_Driver_Control:
   943                           	callstack 0
   944                           
   945 ;; *************** function ___fltol *****************
   946 ;; Defined at:
   947 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  f1              4   12[COMRAM] void 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  exp1            1   21[COMRAM] unsigned char 
   952 ;;  sign1           1   20[COMRAM] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  4   12[COMRAM] long 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:       10 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 6
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_Driver_Control
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text3
   977   00176C                     __ptext3:
   978                           	callstack 0
   979   00176C                     ___fltol:
   980                           	callstack 22
   981   00176C  340F               	rlcf	(___fltol@f1+2)^0,w,c
   982   00176E  3410               	rlcf	(___fltol@f1+3)^0,w,c
   983   001770  6E16               	movwf	___fltol@exp1^0,c
   984   001772  5016               	movf	___fltol@exp1^0,w,c
   985   001774  A4D8               	btfss	status,2,c
   986   001776  EFBF  F00B         	goto	u631
   987   00177A  EFC1  F00B         	goto	u630
   988   00177E                     u631:
   989   00177E  EFCB  F00B         	goto	l1396
   990   001782                     u630:
   991   001782                     l1392:
   992   001782  0E00               	movlw	0
   993   001784  6E0D               	movwf	?___fltol^0,c
   994   001786  0E00               	movlw	0
   995   001788  6E0E               	movwf	(?___fltol+1)^0,c
   996   00178A  0E00               	movlw	0
   997   00178C  6E0F               	movwf	(?___fltol+2)^0,c
   998   00178E  0E00               	movlw	0
   999   001790  6E10               	movwf	(?___fltol+3)^0,c
  1000   001792  EF38  F00C         	goto	l474
  1001   001796                     l1396:
  1002   001796  C00D  F011         	movff	___fltol@f1,??___fltol
  1003   00179A  C00E  F012         	movff	___fltol@f1+1,??___fltol+1
  1004   00179E  C00F  F013         	movff	___fltol@f1+2,??___fltol+2
  1005   0017A2  C010  F014         	movff	___fltol@f1+3,??___fltol+3
  1006   0017A6  0E20               	movlw	32
  1007   0017A8  EFDB  F00B         	goto	u640
  1008   0017AC                     u645:
  1009   0017AC  90D8               	bcf	status,0,c
  1010   0017AE  3214               	rrcf	(??___fltol+3)^0,f,c
  1011   0017B0  3213               	rrcf	(??___fltol+2)^0,f,c
  1012   0017B2  3212               	rrcf	(??___fltol+1)^0,f,c
  1013   0017B4  3211               	rrcf	??___fltol^0,f,c
  1014   0017B6                     u640:
  1015   0017B6  2EE8               	decfsz	wreg,f,c
  1016   0017B8  EFD6  F00B         	goto	u645
  1017   0017BC  5011               	movf	??___fltol^0,w,c
  1018   0017BE  6E15               	movwf	___fltol@sign1^0,c
  1019   0017C0  8E0F               	bsf	(___fltol@f1+2)^0,7,c
  1020   0017C2  0EFF               	movlw	255
  1021   0017C4  160D               	andwf	___fltol@f1^0,f,c
  1022   0017C6  0EFF               	movlw	255
  1023   0017C8  160E               	andwf	(___fltol@f1+1)^0,f,c
  1024   0017CA  0EFF               	movlw	255
  1025   0017CC  160F               	andwf	(___fltol@f1+2)^0,f,c
  1026   0017CE  0E00               	movlw	0
  1027   0017D0  1610               	andwf	(___fltol@f1+3)^0,f,c
  1028   0017D2  0E96               	movlw	150
  1029   0017D4  5E16               	subwf	___fltol@exp1^0,f,c
  1030   0017D6  BE16               	btfsc	___fltol@exp1^0,7,c
  1031   0017D8  EFF2  F00B         	goto	u650
  1032   0017DC  EFF0  F00B         	goto	u651
  1033   0017E0                     u651:
  1034   0017E0  EF08  F00C         	goto	l1416
  1035   0017E4                     u650:
  1036   0017E4  5016               	movf	___fltol@exp1^0,w,c
  1037   0017E6  0A80               	xorlw	128
  1038   0017E8  0F97               	addlw	151
  1039   0017EA  B0D8               	btfsc	status,0,c
  1040   0017EC  EFFA  F00B         	goto	u661
  1041   0017F0  EFFC  F00B         	goto	u660
  1042   0017F4                     u661:
  1043   0017F4  EFFE  F00B         	goto	l1412
  1044   0017F8                     u660:
  1045   0017F8  EFC1  F00B         	goto	l1392
  1046   0017FC                     l1412:
  1047   0017FC  90D8               	bcf	status,0,c
  1048   0017FE  3210               	rrcf	(___fltol@f1+3)^0,f,c
  1049   001800  320F               	rrcf	(___fltol@f1+2)^0,f,c
  1050   001802  320E               	rrcf	(___fltol@f1+1)^0,f,c
  1051   001804  320D               	rrcf	___fltol@f1^0,f,c
  1052   001806  3E16               	incfsz	___fltol@exp1^0,f,c
  1053   001808  EFFE  F00B         	goto	l1412
  1054   00180C  EF20  F00C         	goto	l1426
  1055   001810                     l1416:
  1056   001810  0E1F               	movlw	31
  1057   001812  6416               	cpfsgt	___fltol@exp1^0,c
  1058   001814  EF0E  F00C         	goto	u671
  1059   001818  EF10  F00C         	goto	u670
  1060   00181C                     u671:
  1061   00181C  EF18  F00C         	goto	l1424
  1062   001820                     u670:
  1063   001820  EFC1  F00B         	goto	l1392
  1064   001824                     l1422:
  1065   001824  90D8               	bcf	status,0,c
  1066   001826  360D               	rlcf	___fltol@f1^0,f,c
  1067   001828  360E               	rlcf	(___fltol@f1+1)^0,f,c
  1068   00182A  360F               	rlcf	(___fltol@f1+2)^0,f,c
  1069   00182C  3610               	rlcf	(___fltol@f1+3)^0,f,c
  1070   00182E  0616               	decf	___fltol@exp1^0,f,c
  1071   001830                     l1424:
  1072   001830  5016               	movf	___fltol@exp1^0,w,c
  1073   001832  A4D8               	btfss	status,2,c
  1074   001834  EF1E  F00C         	goto	u681
  1075   001838  EF20  F00C         	goto	u680
  1076   00183C                     u681:
  1077   00183C  EF12  F00C         	goto	l1422
  1078   001840                     u680:
  1079   001840                     l1426:
  1080   001840  5015               	movf	___fltol@sign1^0,w,c
  1081   001842  B4D8               	btfsc	status,2,c
  1082   001844  EF26  F00C         	goto	u691
  1083   001848  EF28  F00C         	goto	u690
  1084   00184C                     u691:
  1085   00184C  EF30  F00C         	goto	l1430
  1086   001850                     u690:
  1087   001850  1E10               	comf	(___fltol@f1+3)^0,f,c
  1088   001852  1E0F               	comf	(___fltol@f1+2)^0,f,c
  1089   001854  1E0E               	comf	(___fltol@f1+1)^0,f,c
  1090   001856  6C0D               	negf	___fltol@f1^0,c
  1091   001858  0E00               	movlw	0
  1092   00185A  220E               	addwfc	(___fltol@f1+1)^0,f,c
  1093   00185C  220F               	addwfc	(___fltol@f1+2)^0,f,c
  1094   00185E  2210               	addwfc	(___fltol@f1+3)^0,f,c
  1095   001860                     l1430:
  1096   001860  C00D  F00D         	movff	___fltol@f1,?___fltol
  1097   001864  C00E  F00E         	movff	___fltol@f1+1,?___fltol+1
  1098   001868  C00F  F00F         	movff	___fltol@f1+2,?___fltol+2
  1099   00186C  C010  F010         	movff	___fltol@f1+3,?___fltol+3
  1100   001870                     l474:
  1101   001870  0012               	return		;funcret
  1102   001872                     __end_of___fltol:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function ___flmul *****************
  1106 ;; Defined at:
  1107 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  b               4   12[COMRAM] long 
  1110 ;;  a               4   16[COMRAM] long 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  prod            4   31[COMRAM] struct .
  1113 ;;  grs             4   25[COMRAM] unsigned long 
  1114 ;;  temp            2   35[COMRAM] struct .
  1115 ;;  bexp            1   30[COMRAM] unsigned char 
  1116 ;;  aexp            1   29[COMRAM] unsigned char 
  1117 ;;  sign            1   24[COMRAM] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  4   12[COMRAM] unsigned char 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, prodl, prodh
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1127 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;Total ram usage:       25 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 6
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_Driver_Control
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text4
  1142   00106C                     __ptext4:
  1143                           	callstack 0
  1144   00106C                     ___flmul:
  1145                           	callstack 22
  1146   00106C  5010               	movf	(___flmul@b+3)^0,w,c
  1147   00106E  0B80               	andlw	128
  1148   001070  6E19               	movwf	___flmul@sign^0,c
  1149   001072  5010               	movf	(___flmul@b+3)^0,w,c
  1150   001074  2410               	addwf	(___flmul@b+3)^0,w,c
  1151   001076  6E1F               	movwf	___flmul@bexp^0,c
  1152   001078  AE0F               	btfss	(___flmul@b+2)^0,7,c
  1153   00107A  EF41  F008         	goto	u441
  1154   00107E  EF43  F008         	goto	u440
  1155   001082                     u441:
  1156   001082  EF44  F008         	goto	l1266
  1157   001086                     u440:
  1158   001086  801F               	bsf	___flmul@bexp^0,0,c
  1159   001088                     l1266:
  1160   001088  501F               	movf	___flmul@bexp^0,w,c
  1161   00108A  B4D8               	btfsc	status,2,c
  1162   00108C  EF4A  F008         	goto	u451
  1163   001090  EF4C  F008         	goto	u450
  1164   001094                     u451:
  1165   001094  EF5F  F008         	goto	l1274
  1166   001098                     u450:
  1167   001098  281F               	incf	___flmul@bexp^0,w,c
  1168   00109A  A4D8               	btfss	status,2,c
  1169   00109C  EF52  F008         	goto	u461
  1170   0010A0  EF54  F008         	goto	u460
  1171   0010A4                     u461:
  1172   0010A4  EF5C  F008         	goto	l1272
  1173   0010A8                     u460:
  1174   0010A8  0E00               	movlw	0
  1175   0010AA  6E0D               	movwf	___flmul@b^0,c
  1176   0010AC  0E00               	movlw	0
  1177   0010AE  6E0E               	movwf	(___flmul@b+1)^0,c
  1178   0010B0  0E00               	movlw	0
  1179   0010B2  6E0F               	movwf	(___flmul@b+2)^0,c
  1180   0010B4  0E00               	movlw	0
  1181   0010B6  6E10               	movwf	(___flmul@b+3)^0,c
  1182   0010B8                     l1272:
  1183   0010B8  8E0F               	bsf	(___flmul@b+2)^0,7,c
  1184   0010BA  EF67  F008         	goto	l1276
  1185   0010BE                     l1274:
  1186   0010BE  0E00               	movlw	0
  1187   0010C0  6E0D               	movwf	___flmul@b^0,c
  1188   0010C2  0E00               	movlw	0
  1189   0010C4  6E0E               	movwf	(___flmul@b+1)^0,c
  1190   0010C6  0E00               	movlw	0
  1191   0010C8  6E0F               	movwf	(___flmul@b+2)^0,c
  1192   0010CA  0E00               	movlw	0
  1193   0010CC  6E10               	movwf	(___flmul@b+3)^0,c
  1194   0010CE                     l1276:
  1195   0010CE  5014               	movf	(___flmul@a+3)^0,w,c
  1196   0010D0  0B80               	andlw	128
  1197   0010D2  1A19               	xorwf	___flmul@sign^0,f,c
  1198   0010D4  5014               	movf	(___flmul@a+3)^0,w,c
  1199   0010D6  2414               	addwf	(___flmul@a+3)^0,w,c
  1200   0010D8  6E1E               	movwf	___flmul@aexp^0,c
  1201   0010DA  AE13               	btfss	(___flmul@a+2)^0,7,c
  1202   0010DC  EF72  F008         	goto	u471
  1203   0010E0  EF74  F008         	goto	u470
  1204   0010E4                     u471:
  1205   0010E4  EF75  F008         	goto	l1284
  1206   0010E8                     u470:
  1207   0010E8  801E               	bsf	___flmul@aexp^0,0,c
  1208   0010EA                     l1284:
  1209   0010EA  501E               	movf	___flmul@aexp^0,w,c
  1210   0010EC  B4D8               	btfsc	status,2,c
  1211   0010EE  EF7B  F008         	goto	u481
  1212   0010F2  EF7D  F008         	goto	u480
  1213   0010F6                     u481:
  1214   0010F6  EF90  F008         	goto	l1292
  1215   0010FA                     u480:
  1216   0010FA  281E               	incf	___flmul@aexp^0,w,c
  1217   0010FC  A4D8               	btfss	status,2,c
  1218   0010FE  EF83  F008         	goto	u491
  1219   001102  EF85  F008         	goto	u490
  1220   001106                     u491:
  1221   001106  EF8D  F008         	goto	l1290
  1222   00110A                     u490:
  1223   00110A  0E00               	movlw	0
  1224   00110C  6E11               	movwf	___flmul@a^0,c
  1225   00110E  0E00               	movlw	0
  1226   001110  6E12               	movwf	(___flmul@a+1)^0,c
  1227   001112  0E00               	movlw	0
  1228   001114  6E13               	movwf	(___flmul@a+2)^0,c
  1229   001116  0E00               	movlw	0
  1230   001118  6E14               	movwf	(___flmul@a+3)^0,c
  1231   00111A                     l1290:
  1232   00111A  8E13               	bsf	(___flmul@a+2)^0,7,c
  1233   00111C  EF98  F008         	goto	l791
  1234   001120                     l1292:
  1235   001120  0E00               	movlw	0
  1236   001122  6E11               	movwf	___flmul@a^0,c
  1237   001124  0E00               	movlw	0
  1238   001126  6E12               	movwf	(___flmul@a+1)^0,c
  1239   001128  0E00               	movlw	0
  1240   00112A  6E13               	movwf	(___flmul@a+2)^0,c
  1241   00112C  0E00               	movlw	0
  1242   00112E  6E14               	movwf	(___flmul@a+3)^0,c
  1243   001130                     l791:
  1244   001130  501E               	movf	___flmul@aexp^0,w,c
  1245   001132  B4D8               	btfsc	status,2,c
  1246   001134  EF9E  F008         	goto	u501
  1247   001138  EFA0  F008         	goto	u500
  1248   00113C                     u501:
  1249   00113C  EFA8  F008         	goto	l1296
  1250   001140                     u500:
  1251   001140  501F               	movf	___flmul@bexp^0,w,c
  1252   001142  A4D8               	btfss	status,2,c
  1253   001144  EFA6  F008         	goto	u511
  1254   001148  EFA8  F008         	goto	u510
  1255   00114C                     u511:
  1256   00114C  EFB2  F008         	goto	l1300
  1257   001150                     u510:
  1258   001150                     l1296:
  1259   001150  0E00               	movlw	0
  1260   001152  6E0D               	movwf	?___flmul^0,c
  1261   001154  0E00               	movlw	0
  1262   001156  6E0E               	movwf	(?___flmul+1)^0,c
  1263   001158  0E00               	movlw	0
  1264   00115A  6E0F               	movwf	(?___flmul+2)^0,c
  1265   00115C  0E00               	movlw	0
  1266   00115E  6E10               	movwf	(?___flmul+3)^0,c
  1267   001160  EF4A  F00A         	goto	l795
  1268   001164                     l1300:
  1269   001164  5013               	movf	(___flmul@a+2)^0,w,c
  1270   001166  020D               	mulwf	___flmul@b^0,c
  1271   001168  CFF3 F024          	movff	prodl,___flmul@temp
  1272   00116C  CFF4 F025          	movff	prodh,___flmul@temp+1
  1273   001170  5024               	movf	___flmul@temp^0,w,c
  1274   001172  6E1A               	movwf	___flmul@grs^0,c
  1275   001174  6A1B               	clrf	(___flmul@grs+1)^0,c
  1276   001176  6A1C               	clrf	(___flmul@grs+2)^0,c
  1277   001178  6A1D               	clrf	(___flmul@grs+3)^0,c
  1278   00117A  5025               	movf	(___flmul@temp+1)^0,w,c
  1279   00117C  6E20               	movwf	___flmul@prod^0,c
  1280   00117E  6A21               	clrf	(___flmul@prod+1)^0,c
  1281   001180  6A22               	clrf	(___flmul@prod+2)^0,c
  1282   001182  6A23               	clrf	(___flmul@prod+3)^0,c
  1283   001184  5012               	movf	(___flmul@a+1)^0,w,c
  1284   001186  020E               	mulwf	(___flmul@b+1)^0,c
  1285   001188  CFF3 F024          	movff	prodl,___flmul@temp
  1286   00118C  CFF4 F025          	movff	prodh,___flmul@temp+1
  1287   001190  5024               	movf	___flmul@temp^0,w,c
  1288   001192  261A               	addwf	___flmul@grs^0,f,c
  1289   001194  0E00               	movlw	0
  1290   001196  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1291   001198  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1292   00119A  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1293   00119C  5025               	movf	(___flmul@temp+1)^0,w,c
  1294   00119E  2620               	addwf	___flmul@prod^0,f,c
  1295   0011A0  0E00               	movlw	0
  1296   0011A2  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1297   0011A4  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1298   0011A6  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1299   0011A8  5011               	movf	___flmul@a^0,w,c
  1300   0011AA  020F               	mulwf	(___flmul@b+2)^0,c
  1301   0011AC  CFF3 F024          	movff	prodl,___flmul@temp
  1302   0011B0  CFF4 F025          	movff	prodh,___flmul@temp+1
  1303   0011B4  5024               	movf	___flmul@temp^0,w,c
  1304   0011B6  261A               	addwf	___flmul@grs^0,f,c
  1305   0011B8  0E00               	movlw	0
  1306   0011BA  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1307   0011BC  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1308   0011BE  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1309   0011C0  5025               	movf	(___flmul@temp+1)^0,w,c
  1310   0011C2  2620               	addwf	___flmul@prod^0,f,c
  1311   0011C4  0E00               	movlw	0
  1312   0011C6  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1313   0011C8  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1314   0011CA  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1315   0011CC  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  1316   0011D0  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  1317   0011D4  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  1318   0011D8  6A1A               	clrf	___flmul@grs^0,c
  1319   0011DA  5011               	movf	___flmul@a^0,w,c
  1320   0011DC  020E               	mulwf	(___flmul@b+1)^0,c
  1321   0011DE  CFF3 F024          	movff	prodl,___flmul@temp
  1322   0011E2  CFF4 F025          	movff	prodh,___flmul@temp+1
  1323   0011E6  5024               	movf	___flmul@temp^0,w,c
  1324   0011E8  261A               	addwf	___flmul@grs^0,f,c
  1325   0011EA  5025               	movf	(___flmul@temp+1)^0,w,c
  1326   0011EC  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1327   0011EE  0E00               	movlw	0
  1328   0011F0  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1329   0011F2  0E00               	movlw	0
  1330   0011F4  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1331   0011F6  5012               	movf	(___flmul@a+1)^0,w,c
  1332   0011F8  020D               	mulwf	___flmul@b^0,c
  1333   0011FA  CFF3 F024          	movff	prodl,___flmul@temp
  1334   0011FE  CFF4 F025          	movff	prodh,___flmul@temp+1
  1335   001202  5024               	movf	___flmul@temp^0,w,c
  1336   001204  261A               	addwf	___flmul@grs^0,f,c
  1337   001206  5025               	movf	(___flmul@temp+1)^0,w,c
  1338   001208  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1339   00120A  0E00               	movlw	0
  1340   00120C  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1341   00120E  0E00               	movlw	0
  1342   001210  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1343   001212  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  1344   001216  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  1345   00121A  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  1346   00121E  6A1A               	clrf	___flmul@grs^0,c
  1347   001220  5011               	movf	___flmul@a^0,w,c
  1348   001222  020D               	mulwf	___flmul@b^0,c
  1349   001224  CFF3 F024          	movff	prodl,___flmul@temp
  1350   001228  CFF4 F025          	movff	prodh,___flmul@temp+1
  1351   00122C  5024               	movf	___flmul@temp^0,w,c
  1352   00122E  261A               	addwf	___flmul@grs^0,f,c
  1353   001230  5025               	movf	(___flmul@temp+1)^0,w,c
  1354   001232  221B               	addwfc	(___flmul@grs+1)^0,f,c
  1355   001234  0E00               	movlw	0
  1356   001236  221C               	addwfc	(___flmul@grs+2)^0,f,c
  1357   001238  0E00               	movlw	0
  1358   00123A  221D               	addwfc	(___flmul@grs+3)^0,f,c
  1359   00123C  5013               	movf	(___flmul@a+2)^0,w,c
  1360   00123E  020E               	mulwf	(___flmul@b+1)^0,c
  1361   001240  CFF3 F024          	movff	prodl,___flmul@temp
  1362   001244  CFF4 F025          	movff	prodh,___flmul@temp+1
  1363   001248  5024               	movf	___flmul@temp^0,w,c
  1364   00124A  2620               	addwf	___flmul@prod^0,f,c
  1365   00124C  5025               	movf	(___flmul@temp+1)^0,w,c
  1366   00124E  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1367   001250  0E00               	movlw	0
  1368   001252  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1369   001254  0E00               	movlw	0
  1370   001256  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1371   001258  5012               	movf	(___flmul@a+1)^0,w,c
  1372   00125A  020F               	mulwf	(___flmul@b+2)^0,c
  1373   00125C  CFF3 F024          	movff	prodl,___flmul@temp
  1374   001260  CFF4 F025          	movff	prodh,___flmul@temp+1
  1375   001264  5024               	movf	___flmul@temp^0,w,c
  1376   001266  2620               	addwf	___flmul@prod^0,f,c
  1377   001268  5025               	movf	(___flmul@temp+1)^0,w,c
  1378   00126A  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1379   00126C  0E00               	movlw	0
  1380   00126E  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1381   001270  0E00               	movlw	0
  1382   001272  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1383   001274  5013               	movf	(___flmul@a+2)^0,w,c
  1384   001276  020F               	mulwf	(___flmul@b+2)^0,c
  1385   001278  CFF3 F024          	movff	prodl,___flmul@temp
  1386   00127C  CFF4 F025          	movff	prodh,___flmul@temp+1
  1387   001280  5024               	movf	___flmul@temp^0,w,c
  1388   001282  6E15               	movwf	??___flmul^0,c
  1389   001284  5025               	movf	(___flmul@temp+1)^0,w,c
  1390   001286  6E16               	movwf	(??___flmul+1)^0,c
  1391   001288  6A17               	clrf	(??___flmul+2)^0,c
  1392   00128A  6A18               	clrf	(??___flmul+3)^0,c
  1393   00128C  C017  F018         	movff	??___flmul+2,??___flmul+3
  1394   001290  C016  F017         	movff	??___flmul+1,??___flmul+2
  1395   001294  C015  F016         	movff	??___flmul,??___flmul+1
  1396   001298  6A15               	clrf	??___flmul^0,c
  1397   00129A  5015               	movf	??___flmul^0,w,c
  1398   00129C  2620               	addwf	___flmul@prod^0,f,c
  1399   00129E  5016               	movf	(??___flmul+1)^0,w,c
  1400   0012A0  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1401   0012A2  5017               	movf	(??___flmul+2)^0,w,c
  1402   0012A4  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1403   0012A6  5018               	movf	(??___flmul+3)^0,w,c
  1404   0012A8  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1405   0012AA  C01A  F015         	movff	___flmul@grs,??___flmul
  1406   0012AE  C01B  F016         	movff	___flmul@grs+1,??___flmul+1
  1407   0012B2  C01C  F017         	movff	___flmul@grs+2,??___flmul+2
  1408   0012B6  C01D  F018         	movff	___flmul@grs+3,??___flmul+3
  1409   0012BA  0E19               	movlw	25
  1410   0012BC  EF65  F009         	goto	u520
  1411   0012C0                     u525:
  1412   0012C0  90D8               	bcf	status,0,c
  1413   0012C2  3218               	rrcf	(??___flmul+3)^0,f,c
  1414   0012C4  3217               	rrcf	(??___flmul+2)^0,f,c
  1415   0012C6  3216               	rrcf	(??___flmul+1)^0,f,c
  1416   0012C8  3215               	rrcf	??___flmul^0,f,c
  1417   0012CA                     u520:
  1418   0012CA  2EE8               	decfsz	wreg,f,c
  1419   0012CC  EF60  F009         	goto	u525
  1420   0012D0  5015               	movf	??___flmul^0,w,c
  1421   0012D2  2620               	addwf	___flmul@prod^0,f,c
  1422   0012D4  5016               	movf	(??___flmul+1)^0,w,c
  1423   0012D6  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1424   0012D8  5017               	movf	(??___flmul+2)^0,w,c
  1425   0012DA  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1426   0012DC  5018               	movf	(??___flmul+3)^0,w,c
  1427   0012DE  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1428   0012E0  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  1429   0012E4  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  1430   0012E8  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  1431   0012EC  6A1A               	clrf	___flmul@grs^0,c
  1432   0012EE  501E               	movf	___flmul@aexp^0,w,c
  1433   0012F0  C01F  F015         	movff	___flmul@bexp,??___flmul
  1434   0012F4  6A16               	clrf	(??___flmul+1)^0,c
  1435   0012F6  2615               	addwf	??___flmul^0,f,c
  1436   0012F8  0E00               	movlw	0
  1437   0012FA  2216               	addwfc	(??___flmul+1)^0,f,c
  1438   0012FC  0E82               	movlw	130
  1439   0012FE  2415               	addwf	??___flmul^0,w,c
  1440   001300  6E24               	movwf	___flmul@temp^0,c
  1441   001302  0EFF               	movlw	255
  1442   001304  2016               	addwfc	(??___flmul+1)^0,w,c
  1443   001306  6E25               	movwf	(___flmul@temp+1)^0,c
  1444   001308  EF9B  F009         	goto	l1348
  1445   00130C                     l1342:
  1446   00130C  90D8               	bcf	status,0,c
  1447   00130E  3620               	rlcf	___flmul@prod^0,f,c
  1448   001310  3621               	rlcf	(___flmul@prod+1)^0,f,c
  1449   001312  3622               	rlcf	(___flmul@prod+2)^0,f,c
  1450   001314  3623               	rlcf	(___flmul@prod+3)^0,f,c
  1451   001316  AE1D               	btfss	(___flmul@grs+3)^0,7,c
  1452   001318  EF90  F009         	goto	u531
  1453   00131C  EF92  F009         	goto	u530
  1454   001320                     u531:
  1455   001320  EF93  F009         	goto	l798
  1456   001324                     u530:
  1457   001324  8020               	bsf	___flmul@prod^0,0,c
  1458   001326                     l798:
  1459   001326  90D8               	bcf	status,0,c
  1460   001328  361A               	rlcf	___flmul@grs^0,f,c
  1461   00132A  361B               	rlcf	(___flmul@grs+1)^0,f,c
  1462   00132C  361C               	rlcf	(___flmul@grs+2)^0,f,c
  1463   00132E  361D               	rlcf	(___flmul@grs+3)^0,f,c
  1464   001330  0624               	decf	___flmul@temp^0,f,c
  1465   001332  A0D8               	btfss	status,0,c
  1466   001334  0625               	decf	(___flmul@temp+1)^0,f,c
  1467   001336                     l1348:
  1468   001336  AE22               	btfss	(___flmul@prod+2)^0,7,c
  1469   001338  EFA0  F009         	goto	u541
  1470   00133C  EFA2  F009         	goto	u540
  1471   001340                     u541:
  1472   001340  EF86  F009         	goto	l1342
  1473   001344                     u540:
  1474   001344  0E00               	movlw	0
  1475   001346  6E1E               	movwf	___flmul@aexp^0,c
  1476   001348  AE1D               	btfss	(___flmul@grs+3)^0,7,c
  1477   00134A  EFA9  F009         	goto	u551
  1478   00134E  EFAB  F009         	goto	u550
  1479   001352                     u551:
  1480   001352  EFCF  F009         	goto	l800
  1481   001356                     u550:
  1482   001356  0EFF               	movlw	255
  1483   001358  141A               	andwf	___flmul@grs^0,w,c
  1484   00135A  6E15               	movwf	??___flmul^0,c
  1485   00135C  0EFF               	movlw	255
  1486   00135E  141B               	andwf	(___flmul@grs+1)^0,w,c
  1487   001360  6E16               	movwf	(??___flmul+1)^0,c
  1488   001362  0EFF               	movlw	255
  1489   001364  141C               	andwf	(___flmul@grs+2)^0,w,c
  1490   001366  6E17               	movwf	(??___flmul+2)^0,c
  1491   001368  0E7F               	movlw	127
  1492   00136A  141D               	andwf	(___flmul@grs+3)^0,w,c
  1493   00136C  6E18               	movwf	(??___flmul+3)^0,c
  1494   00136E  5015               	movf	??___flmul^0,w,c
  1495   001370  1016               	iorwf	(??___flmul+1)^0,w,c
  1496   001372  1017               	iorwf	(??___flmul+2)^0,w,c
  1497   001374  1018               	iorwf	(??___flmul+3)^0,w,c
  1498   001376  B4D8               	btfsc	status,2,c
  1499   001378  EFC0  F009         	goto	u561
  1500   00137C  EFC2  F009         	goto	u560
  1501   001380                     u561:
  1502   001380  EFC6  F009         	goto	l801
  1503   001384                     u560:
  1504   001384                     l1356:
  1505   001384  0E01               	movlw	1
  1506   001386  6E1E               	movwf	___flmul@aexp^0,c
  1507   001388  EFCF  F009         	goto	l800
  1508   00138C                     l801:
  1509   00138C  A020               	btfss	___flmul@prod^0,0,c
  1510   00138E  EFCB  F009         	goto	u571
  1511   001392  EFCD  F009         	goto	u570
  1512   001396                     u571:
  1513   001396  EFCF  F009         	goto	l800
  1514   00139A                     u570:
  1515   00139A  EFC2  F009         	goto	l1356
  1516   00139E                     l800:
  1517   00139E  501E               	movf	___flmul@aexp^0,w,c
  1518   0013A0  B4D8               	btfsc	status,2,c
  1519   0013A2  EFD5  F009         	goto	u581
  1520   0013A6  EFD7  F009         	goto	u580
  1521   0013AA                     u581:
  1522   0013AA  EFFB  F009         	goto	l1368
  1523   0013AE                     u580:
  1524   0013AE  0E01               	movlw	1
  1525   0013B0  2620               	addwf	___flmul@prod^0,f,c
  1526   0013B2  0E00               	movlw	0
  1527   0013B4  2221               	addwfc	(___flmul@prod+1)^0,f,c
  1528   0013B6  2222               	addwfc	(___flmul@prod+2)^0,f,c
  1529   0013B8  2223               	addwfc	(___flmul@prod+3)^0,f,c
  1530   0013BA  A023               	btfss	(___flmul@prod+3)^0,0,c
  1531   0013BC  EFE2  F009         	goto	u591
  1532   0013C0  EFE4  F009         	goto	u590
  1533   0013C4                     u591:
  1534   0013C4  EFFB  F009         	goto	l1368
  1535   0013C8                     u590:
  1536   0013C8  C020  F015         	movff	___flmul@prod,??___flmul
  1537   0013CC  C021  F016         	movff	___flmul@prod+1,??___flmul+1
  1538   0013D0  C022  F017         	movff	___flmul@prod+2,??___flmul+2
  1539   0013D4  C023  F018         	movff	___flmul@prod+3,??___flmul+3
  1540   0013D8  3418               	rlcf	(??___flmul+3)^0,w,c
  1541   0013DA  3218               	rrcf	(??___flmul+3)^0,f,c
  1542   0013DC  3217               	rrcf	(??___flmul+2)^0,f,c
  1543   0013DE  3216               	rrcf	(??___flmul+1)^0,f,c
  1544   0013E0  3215               	rrcf	??___flmul^0,f,c
  1545   0013E2  C015  F020         	movff	??___flmul,___flmul@prod
  1546   0013E6  C016  F021         	movff	??___flmul+1,___flmul@prod+1
  1547   0013EA  C017  F022         	movff	??___flmul+2,___flmul@prod+2
  1548   0013EE  C018  F023         	movff	??___flmul+3,___flmul@prod+3
  1549   0013F2  4A24               	infsnz	___flmul@temp^0,f,c
  1550   0013F4  2A25               	incf	(___flmul@temp+1)^0,f,c
  1551   0013F6                     l1368:
  1552   0013F6  BE25               	btfsc	(___flmul@temp+1)^0,7,c
  1553   0013F8  EF06  F00A         	goto	u601
  1554   0013FC  5025               	movf	(___flmul@temp+1)^0,w,c
  1555   0013FE  E108               	bnz	u600
  1556   001400  2824               	incf	___flmul@temp^0,w,c
  1557   001402  A0D8               	btfss	status,0,c
  1558   001404  EF06  F00A         	goto	u601
  1559   001408  EF08  F00A         	goto	u600
  1560   00140C                     u601:
  1561   00140C  EF12  F00A         	goto	l1372
  1562   001410                     u600:
  1563   001410  0E00               	movlw	0
  1564   001412  6E20               	movwf	___flmul@prod^0,c
  1565   001414  0E00               	movlw	0
  1566   001416  6E21               	movwf	(___flmul@prod+1)^0,c
  1567   001418  0E80               	movlw	128
  1568   00141A  6E22               	movwf	(___flmul@prod+2)^0,c
  1569   00141C  0E7F               	movlw	127
  1570   00141E  6E23               	movwf	(___flmul@prod+3)^0,c
  1571   001420  EF40  F00A         	goto	l1384
  1572   001424                     l1372:
  1573   001424  BE25               	btfsc	(___flmul@temp+1)^0,7,c
  1574   001426  EF1F  F00A         	goto	u610
  1575   00142A  5025               	movf	(___flmul@temp+1)^0,w,c
  1576   00142C  E106               	bnz	u611
  1577   00142E  0424               	decf	___flmul@temp^0,w,c
  1578   001430  B0D8               	btfsc	status,0,c
  1579   001432  EF1D  F00A         	goto	u611
  1580   001436  EF1F  F00A         	goto	u610
  1581   00143A                     u611:
  1582   00143A  EF2B  F00A         	goto	l808
  1583   00143E                     u610:
  1584   00143E  0E00               	movlw	0
  1585   001440  6E20               	movwf	___flmul@prod^0,c
  1586   001442  0E00               	movlw	0
  1587   001444  6E21               	movwf	(___flmul@prod+1)^0,c
  1588   001446  0E00               	movlw	0
  1589   001448  6E22               	movwf	(___flmul@prod+2)^0,c
  1590   00144A  0E00               	movlw	0
  1591   00144C  6E23               	movwf	(___flmul@prod+3)^0,c
  1592   00144E  0E00               	movlw	0
  1593   001450  6E19               	movwf	___flmul@sign^0,c
  1594   001452  EF40  F00A         	goto	l1384
  1595   001456                     l808:
  1596   001456  C024  F01F         	movff	___flmul@temp,___flmul@bexp
  1597   00145A  0EFF               	movlw	255
  1598   00145C  1620               	andwf	___flmul@prod^0,f,c
  1599   00145E  0EFF               	movlw	255
  1600   001460  1621               	andwf	(___flmul@prod+1)^0,f,c
  1601   001462  0E7F               	movlw	127
  1602   001464  1622               	andwf	(___flmul@prod+2)^0,f,c
  1603   001466  0E00               	movlw	0
  1604   001468  1623               	andwf	(___flmul@prod+3)^0,f,c
  1605   00146A  A01F               	btfss	___flmul@bexp^0,0,c
  1606   00146C  EF3A  F00A         	goto	u621
  1607   001470  EF3C  F00A         	goto	u620
  1608   001474                     u621:
  1609   001474  EF3D  F00A         	goto	l1382
  1610   001478                     u620:
  1611   001478  8E22               	bsf	(___flmul@prod+2)^0,7,c
  1612   00147A                     l1382:
  1613   00147A  90D8               	bcf	status,0,c
  1614   00147C  301F               	rrcf	___flmul@bexp^0,w,c
  1615   00147E  6E23               	movwf	(___flmul@prod+3)^0,c
  1616   001480                     l1384:
  1617   001480  5019               	movf	___flmul@sign^0,w,c
  1618   001482  1223               	iorwf	(___flmul@prod+3)^0,f,c
  1619   001484  C020  F00D         	movff	___flmul@prod,?___flmul
  1620   001488  C021  F00E         	movff	___flmul@prod+1,?___flmul+1
  1621   00148C  C022  F00F         	movff	___flmul@prod+2,?___flmul+2
  1622   001490  C023  F010         	movff	___flmul@prod+3,?___flmul+3
  1623   001494                     l795:
  1624   001494  0012               	return		;funcret
  1625   001496                     __end_of___flmul:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function _Init_LCD *****************
  1629 ;; Defined at:
  1630 ;;		line 5 in file "LCD_Library.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;Total ram usage:        2 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 8
  1651 ;; This function calls:
  1652 ;;		_Send_Instruction_Data
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text5
  1659   001976                     __ptext5:
  1660                           	callstack 0
  1661   001976                     _Init_LCD:
  1662                           	callstack 22
  1663   001976                     
  1664                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1665   001976  0E03               	movlw	3
  1666   001978  6E12               	movwf	(??_Init_LCD+1)^0,c
  1667   00197A  0E08               	movlw	8
  1668   00197C  6E11               	movwf	??_Init_LCD^0,c
  1669   00197E  0E77               	movlw	119
  1670   001980                     u847:
  1671   001980  2EE8               	decfsz	wreg,f,c
  1672   001982  D7FE               	bra	u847
  1673   001984  2E11               	decfsz	??_Init_LCD^0,f,c
  1674   001986  D7FC               	bra	u847
  1675   001988  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
  1676   00198A  D7FA               	bra	u847
  1677   00198C  0000               	nop	
  1678   00198E                     
  1679                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
  1680   00198E  0E30               	movlw	48
  1681   001990  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1682   001992  0E00               	movlw	0
  1683   001994  ECB4  F00D         	call	_Send_Instruction_Data
  1684   001998                     
  1685                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1686   001998  0E1A               	movlw	26
  1687   00199A  6E11               	movwf	??_Init_LCD^0,c
  1688   00199C  0EF8               	movlw	248
  1689   00199E                     u857:
  1690   00199E  2EE8               	decfsz	wreg,f,c
  1691   0019A0  D7FE               	bra	u857
  1692   0019A2  2E11               	decfsz	??_Init_LCD^0,f,c
  1693   0019A4  D7FC               	bra	u857
  1694   0019A6  D000               	nop2	
  1695                           
  1696                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
  1697   0019A8  0E30               	movlw	48
  1698   0019AA  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1699   0019AC  0E00               	movlw	0
  1700   0019AE  ECB4  F00D         	call	_Send_Instruction_Data
  1701   0019B2                     
  1702                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1703   0019B2  0E1A               	movlw	26
  1704   0019B4  6E11               	movwf	??_Init_LCD^0,c
  1705   0019B6  0EF8               	movlw	248
  1706   0019B8                     u867:
  1707   0019B8  2EE8               	decfsz	wreg,f,c
  1708   0019BA  D7FE               	bra	u867
  1709   0019BC  2E11               	decfsz	??_Init_LCD^0,f,c
  1710   0019BE  D7FC               	bra	u867
  1711   0019C0  D000               	nop2	
  1712   0019C2                     
  1713                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
  1714   0019C2  0E30               	movlw	48
  1715   0019C4  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1716   0019C6  0E00               	movlw	0
  1717   0019C8  ECB4  F00D         	call	_Send_Instruction_Data
  1718   0019CC                     
  1719                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
  1720   0019CC  0E02               	movlw	2
  1721   0019CE  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1722   0019D0  0E00               	movlw	0
  1723   0019D2  ECB4  F00D         	call	_Send_Instruction_Data
  1724   0019D6                     
  1725                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
  1726   0019D6  0E06               	movlw	6
  1727   0019D8  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1728   0019DA  0E00               	movlw	0
  1729   0019DC  ECB4  F00D         	call	_Send_Instruction_Data
  1730   0019E0                     
  1731                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
  1732   0019E0  0E0F               	movlw	15
  1733   0019E2  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1734   0019E4  0E00               	movlw	0
  1735   0019E6  ECB4  F00D         	call	_Send_Instruction_Data
  1736   0019EA                     
  1737                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
  1738   0019EA  0E28               	movlw	40
  1739   0019EC  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1740   0019EE  0E00               	movlw	0
  1741   0019F0  ECB4  F00D         	call	_Send_Instruction_Data
  1742   0019F4                     
  1743                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
  1744   0019F4  0E01               	movlw	1
  1745   0019F6  6E0F               	movwf	Send_Instruction_Data@Data^0,c
  1746   0019F8  0E00               	movlw	0
  1747   0019FA  ECB4  F00D         	call	_Send_Instruction_Data
  1748   0019FE                     
  1749                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1750   0019FE  0E03               	movlw	3
  1751   001A00  6E12               	movwf	(??_Init_LCD+1)^0,c
  1752   001A02  0E08               	movlw	8
  1753   001A04  6E11               	movwf	??_Init_LCD^0,c
  1754   001A06  0E77               	movlw	119
  1755   001A08                     u877:
  1756   001A08  2EE8               	decfsz	wreg,f,c
  1757   001A0A  D7FE               	bra	u877
  1758   001A0C  2E11               	decfsz	??_Init_LCD^0,f,c
  1759   001A0E  D7FC               	bra	u877
  1760   001A10  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
  1761   001A12  D7FA               	bra	u877
  1762   001A14  0000               	nop	
  1763   001A16  0012               	return		;funcret
  1764   001A18                     __end_of_Init_LCD:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _Send_Instruction_Data *****************
  1768 ;; Defined at:
  1769 ;;		line 24 in file "LCD_Library.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  Instruction     1    wreg     unsigned char 
  1772 ;;  Data            1   14[COMRAM] unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  Instruction     1   15[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        2 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 7
  1791 ;; This function calls:
  1792 ;;		_LCD_Instruction
  1793 ;; This function is called by:
  1794 ;;		_Init_LCD
  1795 ;;		_Init_Message_Platform
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text6
  1800   001B68                     __ptext6:
  1801                           	callstack 0
  1802   001B68                     _Send_Instruction_Data:
  1803                           	callstack 22
  1804                           
  1805                           ;incstack = 0
  1806                           ;Send_Instruction_Data@Instruction stored from wreg
  1807   001B68  6E10               	movwf	Send_Instruction_Data@Instruction^0,c
  1808   001B6A                     
  1809                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
  1810   001B6A  B010               	btfsc	Send_Instruction_Data@Instruction^0,0,c
  1811   001B6C  D002               	bra	u715
  1812   001B6E  988B               	bcf	139,4,c	;volatile
  1813   001B70  D001               	bra	u716
  1814   001B72                     u715:
  1815   001B72  888B               	bsf	139,4,c	;volatile
  1816   001B74                     u716:
  1817   001B74                     
  1818                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
  1819   001B74  380F               	swapf	Send_Instruction_Data@Data^0,w,c
  1820   001B76  0B0F               	andlw	15
  1821   001B78  EC64  F00D         	call	_LCD_Instruction
  1822   001B7C                     
  1823                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
  1824   001B7C  500F               	movf	Send_Instruction_Data@Data^0,w,c
  1825   001B7E  EC64  F00D         	call	_LCD_Instruction
  1826   001B82  0012               	return		;funcret
  1827   001B84                     __end_of_Send_Instruction_Data:
  1828                           	callstack 0
  1829                           
  1830 ;; *************** function _LCD_Instruction *****************
  1831 ;; Defined at:
  1832 ;;		line 33 in file "LCD_Library.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  Instruction     1    wreg     unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  Instruction     1   13[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;Total ram usage:        2 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 6
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_Send_Instruction_Data
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text7
  1861   001AC8                     __ptext7:
  1862                           	callstack 0
  1863   001AC8                     _LCD_Instruction:
  1864                           	callstack 22
  1865                           
  1866                           ;incstack = 0
  1867                           ;LCD_Instruction@Instruction stored from wreg
  1868   001AC8  6E0E               	movwf	LCD_Instruction@Instruction^0,c
  1869   001ACA                     
  1870                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  1871   001ACA  8A8B               	bsf	139,5,c	;volatile
  1872   001ACC                     
  1873                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1874   001ACC  0E4E               	movlw	78
  1875   001ACE  6E0D               	movwf	??_LCD_Instruction^0,c
  1876   001AD0  0EEB               	movlw	235
  1877   001AD2                     u887:
  1878   001AD2  2EE8               	decfsz	wreg,f,c
  1879   001AD4  D7FE               	bra	u887
  1880   001AD6  2E0D               	decfsz	??_LCD_Instruction^0,f,c
  1881   001AD8  D7FC               	bra	u887
  1882   001ADA  0000               	nop	
  1883   001ADC                     
  1884                           ;LCD_Library.c: 37:     LATD = Instruction;
  1885   001ADC  C00E  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
  1886   001AE0                     
  1887                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1888   001AE0  0E4E               	movlw	78
  1889   001AE2  6E0D               	movwf	??_LCD_Instruction^0,c
  1890   001AE4  0EEB               	movlw	235
  1891   001AE6                     u897:
  1892   001AE6  2EE8               	decfsz	wreg,f,c
  1893   001AE8  D7FE               	bra	u897
  1894   001AEA  2E0D               	decfsz	??_LCD_Instruction^0,f,c
  1895   001AEC  D7FC               	bra	u897
  1896   001AEE  0000               	nop	
  1897   001AF0                     
  1898                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  1899   001AF0  9A8B               	bcf	139,5,c	;volatile
  1900   001AF2                     
  1901                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1902   001AF2  0E4E               	movlw	78
  1903   001AF4  6E0D               	movwf	??_LCD_Instruction^0,c
  1904   001AF6  0EEB               	movlw	235
  1905   001AF8                     u907:
  1906   001AF8  2EE8               	decfsz	wreg,f,c
  1907   001AFA  D7FE               	bra	u907
  1908   001AFC  2E0D               	decfsz	??_LCD_Instruction^0,f,c
  1909   001AFE  D7FC               	bra	u907
  1910   001B00  0000               	nop	
  1911   001B02  0012               	return		;funcret
  1912   001B04                     __end_of_LCD_Instruction:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _Configurations *****************
  1916 ;; Defined at:
  1917 ;;		line 84 in file "main.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 6
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text8
  1946   001A18                     __ptext8:
  1947                           	callstack 0
  1948   001A18                     _Configurations:
  1949                           	callstack 24
  1950   001A18                     
  1951                           ;main.c: 86:     OSCCON = 0x72;
  1952   001A18  0E72               	movlw	114
  1953   001A1A  6ED3               	movwf	211,c	;volatile
  1954                           
  1955                           ;main.c: 88:     ANSELC = 0;
  1956   001A1C  0E00               	movlw	0
  1957   001A1E  010F               	movlb	15	; () banked
  1958   001A20  6F3A               	movwf	58,b	;volatile
  1959                           
  1960                           ;main.c: 89:     ANSELD = 0;
  1961   001A22  0E00               	movlw	0
  1962   001A24  6F3B               	movwf	59,b	;volatile
  1963                           
  1964                           ;main.c: 90:     ANSELE = 0;
  1965   001A26  0E00               	movlw	0
  1966   001A28  6F3C               	movwf	60,b	;volatile
  1967   001A2A                     
  1968                           ; BSR set to: 15
  1969                           ;main.c: 94:     TRISCbits.RC4 = 0;
  1970   001A2A  9894               	bcf	148,4,c	;volatile
  1971   001A2C                     
  1972                           ; BSR set to: 15
  1973                           ;main.c: 95:     TRISCbits.RC5 = 0;
  1974   001A2C  9A94               	bcf	148,5,c	;volatile
  1975                           
  1976                           ;main.c: 96:     TRISD = 0;
  1977   001A2E  0E00               	movlw	0
  1978   001A30  6E95               	movwf	149,c	;volatile
  1979                           
  1980                           ;main.c: 97:     TRISE = 0;
  1981   001A32  0E00               	movlw	0
  1982   001A34  6E96               	movwf	150,c	;volatile
  1983   001A36                     
  1984                           ; BSR set to: 15
  1985                           ;main.c: 100:     LATCbits.LC4 = 0;
  1986   001A36  988B               	bcf	139,4,c	;volatile
  1987   001A38                     
  1988                           ; BSR set to: 15
  1989                           ;main.c: 101:     LATCbits.LC5 = 0;
  1990   001A38  9A8B               	bcf	139,5,c	;volatile
  1991                           
  1992                           ;main.c: 102:     LATD = 0;
  1993   001A3A  0E00               	movlw	0
  1994   001A3C  6E8C               	movwf	140,c	;volatile
  1995                           
  1996                           ;main.c: 103:     LATE = 0;
  1997   001A3E  0E00               	movlw	0
  1998   001A40  6E8D               	movwf	141,c	;volatile
  1999   001A42                     
  2000                           ; BSR set to: 15
  2001                           ;main.c: 106:     INTCONbits.GIE = 1;
  2002   001A42  8EF2               	bsf	242,7,c	;volatile
  2003   001A44                     
  2004                           ; BSR set to: 15
  2005                           ;main.c: 107:     INTCONbits.PEIE = 1;
  2006   001A44  8CF2               	bsf	242,6,c	;volatile
  2007   001A46                     
  2008                           ; BSR set to: 15
  2009                           ;main.c: 108:     RCONbits.IPEN = 1;
  2010   001A46  8ED0               	bsf	208,7,c	;volatile
  2011   001A48                     
  2012                           ; BSR set to: 15
  2013                           ;main.c: 110:     PIE1bits.RC1IE = 1;
  2014   001A48  8A9D               	bsf	157,5,c	;volatile
  2015   001A4A                     
  2016                           ; BSR set to: 15
  2017                           ;main.c: 111:     PIR1bits.RC1IF = 0;
  2018   001A4A  9A9E               	bcf	158,5,c	;volatile
  2019                           
  2020                           ;main.c: 114:     SPBRG = 103;
  2021   001A4C  0E67               	movlw	103
  2022   001A4E  6EAF               	movwf	175,c	;volatile
  2023   001A50                     
  2024                           ; BSR set to: 15
  2025                           ;main.c: 115:     TRISCbits.RC6 = 1;
  2026   001A50  8C94               	bsf	148,6,c	;volatile
  2027   001A52                     
  2028                           ; BSR set to: 15
  2029                           ;main.c: 116:     TRISCbits.RC7 = 1;
  2030   001A52  8E94               	bsf	148,7,c	;volatile
  2031   001A54                     
  2032                           ; BSR set to: 15
  2033                           ;main.c: 119:     TXSTA1bits.TX91 = 0;
  2034   001A54  9CAC               	bcf	172,6,c	;volatile
  2035   001A56                     
  2036                           ; BSR set to: 15
  2037                           ;main.c: 120:     TXSTA1bits.TXEN1 = 1;
  2038   001A56  8AAC               	bsf	172,5,c	;volatile
  2039   001A58                     
  2040                           ; BSR set to: 15
  2041                           ;main.c: 121:     TXSTA1bits.SYNC1 = 0;
  2042   001A58  98AC               	bcf	172,4,c	;volatile
  2043   001A5A                     
  2044                           ; BSR set to: 15
  2045                           ;main.c: 122:     TXSTA1bits.BRGH1 = 1;
  2046   001A5A  84AC               	bsf	172,2,c	;volatile
  2047   001A5C                     
  2048                           ; BSR set to: 15
  2049                           ;main.c: 125:     RCSTAbits.SPEN1 = 1;
  2050   001A5C  8EAB               	bsf	171,7,c	;volatile
  2051   001A5E                     
  2052                           ; BSR set to: 15
  2053                           ;main.c: 126:     RCSTAbits.RX91 = 0;
  2054   001A5E  9CAB               	bcf	171,6,c	;volatile
  2055   001A60                     
  2056                           ; BSR set to: 15
  2057                           ;main.c: 127:     RCSTAbits.CREN1 = 1;
  2058   001A60  88AB               	bsf	171,4,c	;volatile
  2059   001A62                     
  2060                           ; BSR set to: 15
  2061                           ;main.c: 130:     BAUDCON1bits.BRG16 = 0;
  2062   001A62  96B8               	bcf	184,3,c	;volatile
  2063                           
  2064                           ;main.c: 142:     PR2 = 0xF9;
  2065   001A64  0EF9               	movlw	249
  2066   001A66  6EBB               	movwf	187,c	;volatile
  2067                           
  2068                           ;main.c: 143:     T2CON = 0x00;
  2069   001A68  0E00               	movlw	0
  2070   001A6A  6EBA               	movwf	186,c	;volatile
  2071                           
  2072                           ;main.c: 144:     CCP3CON = 0x0C;
  2073   001A6C  0E0C               	movlw	12
  2074   001A6E  6F5D               	movwf	93,b	;volatile
  2075                           
  2076                           ;main.c: 145:     CCPR3L = 0xFA;
  2077   001A70  0EFA               	movlw	250
  2078   001A72  6F5E               	movwf	94,b	;volatile
  2079                           
  2080                           ;main.c: 146:     CCP5CON = 0x0C;
  2081   001A74  0E0C               	movlw	12
  2082   001A76  6F54               	movwf	84,b	;volatile
  2083                           
  2084                           ;main.c: 147:     CCPR5L = 0xFA;
  2085   001A78  0EFA               	movlw	250
  2086   001A7A  6F55               	movwf	85,b	;volatile
  2087   001A7C                     
  2088                           ; BSR set to: 15
  2089                           ;main.c: 148:     T2CONbits.TMR2ON = 1;
  2090   001A7C  84BA               	bsf	186,2,c	;volatile
  2091   001A7E                     
  2092                           ; BSR set to: 15
  2093   001A7E  0012               	return		;funcret
  2094   001A80                     __end_of_Configurations:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _Interrupt *****************
  2098 ;; Defined at:
  2099 ;;		line 76 in file "main.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		None
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        1 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 5
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		Interrupt level 1
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	intcodelo
  2128   000018                     __pintcodelo:
  2129                           	callstack 0
  2130   000018                     _Interrupt:
  2131                           	callstack 22
  2132                           
  2133                           ; BSR set to: 15
  2134                           ;incstack = 0
  2135   000018  803B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2136   00001A  CFE0 F00C          	movff	bsr,??_Interrupt
  2137   00001E  C00C  FFE0         	movff	??_Interrupt,bsr
  2138   000022  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2139   000024  0010               	retfie	
  2140   000026                     __end_of_Interrupt:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _Interrupt_Rx *****************
  2144 ;; Defined at:
  2145 ;;		line 68 in file "main.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;Total ram usage:        4 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 4
  2166 ;; This function calls:
  2167 ;;		_Bluetooth_Receiver
  2168 ;; This function is called by:
  2169 ;;		Interrupt level 2
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	intcode
  2174   000008                     __pintcode:
  2175                           	callstack 0
  2176   000008                     _Interrupt_Rx:
  2177                           	callstack 22
  2178                           
  2179                           ;incstack = 0
  2180   000008  823B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2181   00000A  EFA0  F00D         	goto	int_func
  2182                           
  2183                           	psect	intcode_body
  2184   001B40                     __pintcode_body:
  2185                           	callstack 22
  2186   001B40                     int_func:
  2187                           	callstack 22
  2188   001B40  CFF6 F008          	movff	tblptrl,??_Interrupt_Rx
  2189   001B44  CFF7 F009          	movff	tblptrh,??_Interrupt_Rx+1
  2190   001B48  CFF8 F00A          	movff	tblptru,??_Interrupt_Rx+2
  2191   001B4C  CFF5 F00B          	movff	tablat,??_Interrupt_Rx+3
  2192   001B50                     
  2193                           ;main.c: 70:     Bluetooth_Receiver();
  2194   001B50  EC39  F00C         	call	_Bluetooth_Receiver	;wreg free
  2195   001B54  C00B  FFF5         	movff	??_Interrupt_Rx+3,tablat
  2196   001B58  C00A  FFF8         	movff	??_Interrupt_Rx+2,tblptru
  2197   001B5C  C009  FFF7         	movff	??_Interrupt_Rx+1,tblptrh
  2198   001B60  C008  FFF6         	movff	??_Interrupt_Rx,tblptrl
  2199   001B64  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2200   001B66  0011               	retfie		f
  2201   001B68                     __end_of_Interrupt_Rx:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _Bluetooth_Receiver *****************
  2205 ;; Defined at:
  2206 ;;		line 153 in file "main.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 3
  2227 ;; This function calls:
  2228 ;;		_Send_String
  2229 ;;		i2_Send_Instruction_Data
  2230 ;; This function is called by:
  2231 ;;		_Interrupt_Rx
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text11
  2236   001872                     __ptext11:
  2237                           	callstack 0
  2238   001872                     _Bluetooth_Receiver:
  2239                           	callstack 22
  2240   001872                     
  2241                           ;main.c: 155:     if (PIR1bits.RC1IF) {
  2242   001872  AA9E               	btfss	158,5,c	;volatile
  2243   001874  EF3E  F00C         	goto	i2u83_41
  2244   001878  EF40  F00C         	goto	i2u83_40
  2245   00187C                     i2u83_41:
  2246   00187C  EFBA  F00C         	goto	i2l114
  2247   001880                     i2u83_40:
  2248   001880                     
  2249                           ;main.c: 157:         Rx_Buffer = RCREG1;
  2250   001880  CFAE F03A          	movff	4014,_Rx_Buffer	;volatile
  2251                           
  2252                           ;main.c: 159:         switch (Rx_Buffer) {
  2253   001884  EF9F  F00C         	goto	i2l1562
  2254   001888                     i2l1530:
  2255                           
  2256                           ;main.c: 163:                 Send_Instruction_Data(0, 0x01);
  2257   001888  0E01               	movlw	1
  2258   00188A  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2259   00188C  0E00               	movlw	0
  2260   00188E  ECC2  F00D         	call	i2_Send_Instruction_Data
  2261                           
  2262                           ;main.c: 164:                 Send_Instruction_Data(0, 0X80);
  2263   001892  0E80               	movlw	128
  2264   001894  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2265   001896  0E00               	movlw	0
  2266   001898  ECC2  F00D         	call	i2_Send_Instruction_Data
  2267   00189C                     
  2268                           ;main.c: 165:                 Send_String("Manual Mode");
  2269   00189C  0E54               	movlw	low STR_1
  2270   00189E  6E05               	movwf	Send_String@String^0,c
  2271   0018A0  EC40  F00D         	call	_Send_String	;wreg free
  2272   0018A4                     
  2273                           ;main.c: 166:                 Mode = 'm';
  2274   0018A4  0E6D               	movlw	109
  2275   0018A6  6E39               	movwf	_Mode^0,c
  2276                           
  2277                           ;main.c: 168:                 break;
  2278   0018A8  EFBA  F00C         	goto	i2l114
  2279   0018AC                     i2l1536:
  2280                           
  2281                           ;main.c: 172:                 Send_Instruction_Data(0, 0x01);
  2282   0018AC  0E01               	movlw	1
  2283   0018AE  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2284   0018B0  0E00               	movlw	0
  2285   0018B2  ECC2  F00D         	call	i2_Send_Instruction_Data
  2286                           
  2287                           ;main.c: 173:                 Send_Instruction_Data(0, 0xC0);
  2288   0018B6  0EC0               	movlw	192
  2289   0018B8  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2290   0018BA  0E00               	movlw	0
  2291   0018BC  ECC2  F00D         	call	i2_Send_Instruction_Data
  2292   0018C0                     
  2293                           ;main.c: 174:                 Send_String("Automatic Mode");
  2294   0018C0  0E45               	movlw	low STR_2
  2295   0018C2  6E05               	movwf	Send_String@String^0,c
  2296   0018C4  EC40  F00D         	call	_Send_String	;wreg free
  2297   0018C8                     
  2298                           ;main.c: 175:                 Mode = 'a';
  2299   0018C8  0E61               	movlw	97
  2300   0018CA  6E39               	movwf	_Mode^0,c
  2301                           
  2302                           ;main.c: 177:                 break;
  2303   0018CC  EFBA  F00C         	goto	i2l114
  2304   0018D0                     i2l1542:
  2305                           
  2306                           ;main.c: 181:                 Send_Instruction_Data(0, 0x01);
  2307   0018D0  0E01               	movlw	1
  2308   0018D2  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2309   0018D4  0E00               	movlw	0
  2310   0018D6  ECC2  F00D         	call	i2_Send_Instruction_Data
  2311                           
  2312                           ;main.c: 182:                 Send_Instruction_Data(0, 0X94);
  2313   0018DA  0E94               	movlw	148
  2314   0018DC  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2315   0018DE  0E00               	movlw	0
  2316   0018E0  ECC2  F00D         	call	i2_Send_Instruction_Data
  2317   0018E4                     
  2318                           ;main.c: 183:                 Send_String("Semi Mode");
  2319   0018E4  0E60               	movlw	low STR_3
  2320   0018E6  6E05               	movwf	Send_String@String^0,c
  2321   0018E8  EC40  F00D         	call	_Send_String	;wreg free
  2322   0018EC                     
  2323                           ;main.c: 184:                 Mode = 's';
  2324   0018EC  0E73               	movlw	115
  2325   0018EE  6E39               	movwf	_Mode^0,c
  2326                           
  2327                           ;main.c: 186:                 break;
  2328   0018F0  EFBA  F00C         	goto	i2l114
  2329   0018F4                     i2l1548:
  2330                           
  2331                           ;main.c: 190:                 Direction = '1';
  2332   0018F4  0E31               	movlw	49
  2333   0018F6  6E38               	movwf	_Direction^0,c
  2334                           
  2335                           ;main.c: 192:                 break;
  2336   0018F8  EFBA  F00C         	goto	i2l114
  2337   0018FC                     i2l1550:
  2338                           
  2339                           ;main.c: 196:                 Direction = '2';
  2340   0018FC  0E32               	movlw	50
  2341   0018FE  6E38               	movwf	_Direction^0,c
  2342                           
  2343                           ;main.c: 198:                 break;
  2344   001900  EFBA  F00C         	goto	i2l114
  2345   001904                     i2l1552:
  2346                           
  2347                           ;main.c: 202:                 Direction = '3';
  2348   001904  0E33               	movlw	51
  2349   001906  6E38               	movwf	_Direction^0,c
  2350                           
  2351                           ;main.c: 204:                 break;
  2352   001908  EFBA  F00C         	goto	i2l114
  2353   00190C                     i2l1554:
  2354                           
  2355                           ;main.c: 208:                 Send_Instruction_Data(0, 0x01);
  2356   00190C  0E01               	movlw	1
  2357   00190E  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2358   001910  0E00               	movlw	0
  2359   001912  ECC2  F00D         	call	i2_Send_Instruction_Data
  2360                           
  2361                           ;main.c: 209:                 Send_Instruction_Data(0, 0X80);
  2362   001916  0E80               	movlw	128
  2363   001918  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2364   00191A  0E00               	movlw	0
  2365   00191C  ECC2  F00D         	call	i2_Send_Instruction_Data
  2366   001920                     
  2367                           ;main.c: 210:                 Send_String("   Value Entered");
  2368   001920  0E12               	movlw	low STR_4
  2369   001922  6E05               	movwf	Send_String@String^0,c
  2370   001924  EC40  F00D         	call	_Send_String	;wreg free
  2371   001928                     
  2372                           ;main.c: 211:                 Send_Instruction_Data(0, 0xC0);
  2373   001928  0EC0               	movlw	192
  2374   00192A  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  2375   00192C  0E00               	movlw	0
  2376   00192E  ECC2  F00D         	call	i2_Send_Instruction_Data
  2377                           
  2378                           ;main.c: 212:                 Send_String("   Is not Valid!");
  2379   001932  0E01               	movlw	low STR_5
  2380   001934  6E05               	movwf	Send_String@String^0,c
  2381   001936  EC40  F00D         	call	_Send_String	;wreg free
  2382                           
  2383                           ;main.c: 214:                 break;
  2384   00193A  EFBA  F00C         	goto	i2l114
  2385   00193E                     i2l1562:
  2386   00193E  503A               	movf	_Rx_Buffer^0,w,c
  2387                           
  2388                           ; Switch size 1, requested type "simple"
  2389                           ; Number of cases is 6, Range of values is 49 to 83
  2390                           ; switch strategies available:
  2391                           ; Name         Instructions Cycles
  2392                           ; simple_byte           19    10 (average)
  2393                           ;	Chosen strategy is simple_byte
  2394   001940  0A31               	xorlw	49	; case 49
  2395   001942  B4D8               	btfsc	status,2,c
  2396   001944  EF7A  F00C         	goto	i2l1548
  2397   001948  0A03               	xorlw	3	; case 50
  2398   00194A  B4D8               	btfsc	status,2,c
  2399   00194C  EF7E  F00C         	goto	i2l1550
  2400   001950  0A01               	xorlw	1	; case 51
  2401   001952  B4D8               	btfsc	status,2,c
  2402   001954  EF82  F00C         	goto	i2l1552
  2403   001958  0A72               	xorlw	114	; case 65
  2404   00195A  B4D8               	btfsc	status,2,c
  2405   00195C  EF56  F00C         	goto	i2l1536
  2406   001960  0A0C               	xorlw	12	; case 77
  2407   001962  B4D8               	btfsc	status,2,c
  2408   001964  EF44  F00C         	goto	i2l1530
  2409   001968  0A1E               	xorlw	30	; case 83
  2410   00196A  B4D8               	btfsc	status,2,c
  2411   00196C  EF68  F00C         	goto	i2l1542
  2412   001970  EF86  F00C         	goto	i2l1554
  2413   001974                     i2l114:
  2414   001974  0012               	return		;funcret
  2415   001976                     __end_of_Bluetooth_Receiver:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _Send_String *****************
  2419 ;; Defined at:
  2420 ;;		line 46 in file "LCD_Library.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  String          1    4[COMRAM] PTR unsigned char 
  2423 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  2424 ;;		 -> STR_3(10), STR_2(15), STR_1(12), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  i               1    6[COMRAM] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2436 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;Total ram usage:        3 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 2
  2443 ;; This function calls:
  2444 ;;		i2_Send_Instruction_Data
  2445 ;; This function is called by:
  2446 ;;		_Bluetooth_Receiver
  2447 ;;		_Init_Message_Platform
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text12
  2452   001A80                     __ptext12:
  2453                           	callstack 0
  2454   001A80                     _Send_String:
  2455                           	callstack 22
  2456   001A80                     
  2457                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
  2458   001A80  0E00               	movlw	0
  2459   001A82  6E07               	movwf	Send_String@i^0,c
  2460   001A84  EF52  F00D         	goto	i2l1452
  2461   001A88                     i2l1448:
  2462                           
  2463                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
  2464   001A88  5005               	movf	Send_String@String^0,w,c
  2465   001A8A  2407               	addwf	Send_String@i^0,w,c
  2466   001A8C  6E06               	movwf	??_Send_String^0,c
  2467   001A8E  C006  FFF6         	movff	??_Send_String,tblptrl
  2468   001A92                     	if	1	;There is more than 1 active tblptr byte
  2469   001A92  0E10               	movlw	high __smallconst
  2470   001A94  6EF7               	movwf	tblptrh,c
  2471   001A96                     	endif
  2472   001A96                     	if	0	;tblptru may be non-zero
  2473   001A96                     	endif
  2474   001A96                     	if	0	;tblptru may be non-zero
  2475   001A96                     	endif
  2476   001A96  0008               	tblrd		*
  2477   001A98  CFF5 F003          	movff	tablat,i2Send_Instruction_Data@Data
  2478   001A9C  0E01               	movlw	1
  2479   001A9E  ECC2  F00D         	call	i2_Send_Instruction_Data
  2480   001AA2                     
  2481                           ;LCD_Library.c: 52:     }
  2482   001AA2  2A07               	incf	Send_String@i^0,f,c
  2483   001AA4                     i2l1452:
  2484   001AA4  5005               	movf	Send_String@String^0,w,c
  2485   001AA6  2407               	addwf	Send_String@i^0,w,c
  2486   001AA8  6E06               	movwf	??_Send_String^0,c
  2487   001AAA  C006  FFF6         	movff	??_Send_String,tblptrl
  2488   001AAE                     	if	1	;There is more than 1 active tblptr byte
  2489   001AAE  0E10               	movlw	high __smallconst
  2490   001AB0  6EF7               	movwf	tblptrh,c
  2491   001AB2                     	endif
  2492   001AB2                     	if	0	;tblptru may be non-zero
  2493   001AB2                     	endif
  2494   001AB2                     	if	0	;tblptru may be non-zero
  2495   001AB2                     	endif
  2496   001AB2  0008               	tblrd		*
  2497   001AB4  50F5               	movf	tablat,w,c
  2498   001AB6  0900               	iorlw	0
  2499   001AB8  A4D8               	btfss	status,2,c
  2500   001ABA  EF61  F00D         	goto	i2u72_41
  2501   001ABE  EF63  F00D         	goto	i2u72_40
  2502   001AC2                     i2u72_41:
  2503   001AC2  EF44  F00D         	goto	i2l1448
  2504   001AC6                     i2u72_40:
  2505   001AC6  0012               	return		;funcret
  2506   001AC8                     __end_of_Send_String:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function i2_Send_Instruction_Data *****************
  2510 ;; Defined at:
  2511 ;;		line 24 in file "LCD_Library.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  Instruction     1    wreg     unsigned char 
  2514 ;;  Data            1    2[COMRAM] unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  Instruction     1    3[COMRAM] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:        2 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 1
  2533 ;; This function calls:
  2534 ;;		i2_LCD_Instruction
  2535 ;; This function is called by:
  2536 ;;		_Bluetooth_Receiver
  2537 ;;		_Send_String
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text13
  2542   001B84                     __ptext13:
  2543                           	callstack 0
  2544   001B84                     i2_Send_Instruction_Data:
  2545                           	callstack 23
  2546                           
  2547                           ;incstack = 0
  2548                           ;i2Send_Instruction_Data@Instruction stored from wreg
  2549   001B84  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
  2550   001B86                     
  2551                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
  2552   001B86  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
  2553   001B88  D002               	bra	i2u70_45
  2554   001B8A  988B               	bcf	139,4,c	;volatile
  2555   001B8C  D001               	bra	i2u70_46
  2556   001B8E                     i2u70_45:
  2557   001B8E  888B               	bsf	139,4,c	;volatile
  2558   001B90                     i2u70_46:
  2559   001B90                     
  2560                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
  2561   001B90  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
  2562   001B92  0B0F               	andlw	15
  2563   001B94  EC82  F00D         	call	i2_LCD_Instruction
  2564   001B98                     
  2565                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
  2566   001B98  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
  2567   001B9A  EC82  F00D         	call	i2_LCD_Instruction
  2568   001B9E  0012               	return		;funcret
  2569   001BA0                     __end_ofi2_Send_Instruction_Data:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function i2_LCD_Instruction *****************
  2573 ;; Defined at:
  2574 ;;		line 33 in file "LCD_Library.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  Instruction     1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  Instruction     1    1[COMRAM] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        2 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		i2_Send_Instruction_Data
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text14
  2602   001B04                     __ptext14:
  2603                           	callstack 0
  2604   001B04                     i2_LCD_Instruction:
  2605                           	callstack 23
  2606                           
  2607                           ;incstack = 0
  2608                           ;i2LCD_Instruction@Instruction stored from wreg
  2609   001B04  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
  2610   001B06                     
  2611                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  2612   001B06  8A8B               	bsf	139,5,c	;volatile
  2613   001B08                     
  2614                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2615   001B08  0E4E               	movlw	78
  2616   001B0A  6E01               	movwf	??i2_LCD_Instruction^0,c
  2617   001B0C  0EEB               	movlw	235
  2618   001B0E                     i2u91_47:
  2619   001B0E  2EE8               	decfsz	wreg,f,c
  2620   001B10  D7FE               	bra	i2u91_47
  2621   001B12  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  2622   001B14  D7FC               	bra	i2u91_47
  2623   001B16  0000               	nop	
  2624   001B18                     
  2625                           ;LCD_Library.c: 37:     LATD = Instruction;
  2626   001B18  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  2627   001B1C                     
  2628                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2629   001B1C  0E4E               	movlw	78
  2630   001B1E  6E01               	movwf	??i2_LCD_Instruction^0,c
  2631   001B20  0EEB               	movlw	235
  2632   001B22                     i2u92_47:
  2633   001B22  2EE8               	decfsz	wreg,f,c
  2634   001B24  D7FE               	bra	i2u92_47
  2635   001B26  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  2636   001B28  D7FC               	bra	i2u92_47
  2637   001B2A  0000               	nop	
  2638   001B2C                     
  2639                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  2640   001B2C  9A8B               	bcf	139,5,c	;volatile
  2641   001B2E                     
  2642                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  2643   001B2E  0E4E               	movlw	78
  2644   001B30  6E01               	movwf	??i2_LCD_Instruction^0,c
  2645   001B32  0EEB               	movlw	235
  2646   001B34                     i2u93_47:
  2647   001B34  2EE8               	decfsz	wreg,f,c
  2648   001B36  D7FE               	bra	i2u93_47
  2649   001B38  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  2650   001B3A  D7FC               	bra	i2u93_47
  2651   001B3C  0000               	nop	
  2652   001B3E  0012               	return		;funcret
  2653   001B40                     __end_ofi2_LCD_Instruction:
  2654                           	callstack 0
  2655                           
  2656                           	psect	rparam
  2657   000000                     
  2658                           	psect	temp
  2659   00003B                     btemp:
  2660                           	callstack 0
  2661   00003B                     	ds	1
  2662   000000                     int$flags	set	btemp
  2663   000000                     wtemp8	set	btemp+1
  2664   000000                     ttemp5	set	btemp+1
  2665   000000                     ttemp6	set	btemp+4
  2666   000000                     ttemp7	set	btemp+8
  2667                           
  2668                           	psect	config
  2669                           
  2670                           ; Padding undefined space
  2671   300000                     	org	3145728
  2672   300000  FF                 	db	255
  2673                           
  2674                           ;Config register CONFIG1H @ 0x300001
  2675                           ;	Oscillator Selection bits
  2676                           ;	FOSC = INTIO67, Internal oscillator block
  2677                           ;	4X PLL Enable
  2678                           ;	PLLCFG = OFF, Oscillator used directly
  2679                           ;	Primary clock enable bit
  2680                           ;	PRICLKEN = ON, Primary clock is always enabled
  2681                           ;	Fail-Safe Clock Monitor Enable bit
  2682                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2683                           ;	Internal/External Oscillator Switchover bit
  2684                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2685   300001                     	org	3145729
  2686   300001  28                 	db	40
  2687                           
  2688                           ;Config register CONFIG2L @ 0x300002
  2689                           ;	Power-up Timer Enable bit
  2690                           ;	PWRTEN = OFF, Power up timer disabled
  2691                           ;	Brown-out Reset Enable bits
  2692                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2693                           ;	Brown Out Reset Voltage bits
  2694                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2695   300002                     	org	3145730
  2696   300002  1F                 	db	31
  2697                           
  2698                           ;Config register CONFIG2H @ 0x300003
  2699                           ;	Watchdog Timer Enable bits
  2700                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2701                           ;	Watchdog Timer Postscale Select bits
  2702                           ;	WDTPS = 32768, 1:32768
  2703   300003                     	org	3145731
  2704   300003  3C                 	db	60
  2705                           
  2706                           ; Padding undefined space
  2707   300004                     	org	3145732
  2708   300004  FF                 	db	255
  2709                           
  2710                           ;Config register CONFIG3H @ 0x300005
  2711                           ;	CCP2 MUX bit
  2712                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2713                           ;	PORTB A/D Enable bit
  2714                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2715                           ;	P3A/CCP3 Mux bit
  2716                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2717                           ;	HFINTOSC Fast Start-up
  2718                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2719                           ;	Timer3 Clock input mux bit
  2720                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2721                           ;	ECCP2 B output mux bit
  2722                           ;	P2BMX = PORTD2, P2B is on RD2
  2723                           ;	MCLR Pin Enable bit
  2724                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2725   300005                     	org	3145733
  2726   300005  BB                 	db	187
  2727                           
  2728                           ;Config register CONFIG4L @ 0x300006
  2729                           ;	Stack Full/Underflow Reset Enable bit
  2730                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2731                           ;	Single-Supply ICSP Enable bit
  2732                           ;	LVP = OFF, Single-Supply ICSP disabled
  2733                           ;	Extended Instruction Set Enable bit
  2734                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2735                           ;	Background Debug
  2736                           ;	DEBUG = 0x1, unprogrammed default
  2737   300006                     	org	3145734
  2738   300006  81                 	db	129
  2739                           
  2740                           ; Padding undefined space
  2741   300007                     	org	3145735
  2742   300007  FF                 	db	255
  2743                           
  2744                           ;Config register CONFIG5L @ 0x300008
  2745                           ;	Code Protection Block 0
  2746                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2747                           ;	Code Protection Block 1
  2748                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2749                           ;	Code Protection Block 2
  2750                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2751                           ;	Code Protection Block 3
  2752                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2753   300008                     	org	3145736
  2754   300008  0F                 	db	15
  2755                           
  2756                           ;Config register CONFIG5H @ 0x300009
  2757                           ;	Boot Block Code Protection bit
  2758                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2759                           ;	Data EEPROM Code Protection bit
  2760                           ;	CPD = OFF, Data EEPROM not code-protected
  2761   300009                     	org	3145737
  2762   300009  C0                 	db	192
  2763                           
  2764                           ;Config register CONFIG6L @ 0x30000A
  2765                           ;	Write Protection Block 0
  2766                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2767                           ;	Write Protection Block 1
  2768                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2769                           ;	Write Protection Block 2
  2770                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2771                           ;	Write Protection Block 3
  2772                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2773   30000A                     	org	3145738
  2774   30000A  0F                 	db	15
  2775                           
  2776                           ;Config register CONFIG6H @ 0x30000B
  2777                           ;	Configuration Register Write Protection bit
  2778                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2779                           ;	Boot Block Write Protection bit
  2780                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2781                           ;	Data EEPROM Write Protection bit
  2782                           ;	WRTD = OFF, Data EEPROM not write-protected
  2783   30000B                     	org	3145739
  2784   30000B  E0                 	db	224
  2785                           
  2786                           ;Config register CONFIG7L @ 0x30000C
  2787                           ;	Table Read Protection Block 0
  2788                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2789                           ;	Table Read Protection Block 1
  2790                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2791                           ;	Table Read Protection Block 2
  2792                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2793                           ;	Table Read Protection Block 3
  2794                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2795   30000C                     	org	3145740
  2796   30000C  0F                 	db	15
  2797                           
  2798                           ;Config register CONFIG7H @ 0x30000D
  2799                           ;	Boot Block Table Read Protection bit
  2800                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2801   30000D                     	org	3145741
  2802   30000D  40                 	db	64
  2803                           tosu	equ	0xFFF
  2804                           tosh	equ	0xFFE
  2805                           tosl	equ	0xFFD
  2806                           stkptr	equ	0xFFC
  2807                           pclatu	equ	0xFFB
  2808                           pclath	equ	0xFFA
  2809                           pcl	equ	0xFF9
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           prodh	equ	0xFF4
  2815                           prodl	equ	0xFF3
  2816                           indf0	equ	0xFEF
  2817                           postinc0	equ	0xFEE
  2818                           postdec0	equ	0xFED
  2819                           preinc0	equ	0xFEC
  2820                           plusw0	equ	0xFEB
  2821                           fsr0h	equ	0xFEA
  2822                           fsr0l	equ	0xFE9
  2823                           wreg	equ	0xFE8
  2824                           indf1	equ	0xFE7
  2825                           postinc1	equ	0xFE6
  2826                           postdec1	equ	0xFE5
  2827                           preinc1	equ	0xFE4
  2828                           plusw1	equ	0xFE3
  2829                           fsr1h	equ	0xFE2
  2830                           fsr1l	equ	0xFE1
  2831                           bsr	equ	0xFE0
  2832                           indf2	equ	0xFDF
  2833                           postinc2	equ	0xFDE
  2834                           postdec2	equ	0xFDD
  2835                           preinc2	equ	0xFDC
  2836                           plusw2	equ	0xFDB
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8

Data Sizes:
    Strings     105
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      58
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[12]), STR_2(CODE[15]), STR_3(CODE[10]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Manual
    _Manual->_Driver_Control
    _Driver_Control->___flmul
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Bluetooth_Receiver->_Send_String
    _Send_String->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5174
                     _Configurations
                           _Init_LCD
                             _Manual
 ---------------------------------------------------------------------------------
 (1) _Manual                                               1     1      0    3833
                                             46 COMRAM     1     1      0
                     _Driver_Control
 ---------------------------------------------------------------------------------
 (2) _Driver_Control                                       9     0      9    3723
                                             37 COMRAM     9     0      9
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             12 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                             12 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0    1341
                                             16 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1    1341
                                             14 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         4     4      0    1318
                                              7 COMRAM     4     4      0
                 _Bluetooth_Receiver
 ---------------------------------------------------------------------------------
 (6) _Bluetooth_Receiver                                   0     0      0    1318
                        _Send_String
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (7) _Send_String                                          3     2      1     970
                                              4 COMRAM     3     2      1
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (7) i2_Send_Instruction_Data                              2     1      1     348
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Manual
     _Driver_Control
       ___flmul
       ___fltol

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Bluetooth_Receiver
     _Send_String
       i2_Send_Instruction_Data
         i2_LCD_Instruction
     i2_Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      3A       1       61.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRlhhlhh     14      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlhhlhh      8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhhll       6      0       0      44        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRlhhlhh      1      0       0      40        0.0%
BITBIGSFRlhhlhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      50        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Mar 08 17:08:00 2024

                 Send_String@String 0005                                  bsr 0FE0  
                               l101 1A7E                                 l120 1630  
                               l126 1630                                 l143 176A  
                               l162 1A16                                 l165 1B82  
                               l149 176A                                 l168 1B02  
                               l800 139E                                 l801 138C  
                               l474 1870                                 l808 1456  
                               l870 1AF0                                 l862 1ACA  
                               l791 1130                                 l872 1AF2  
                               l864 1ACC                                 l866 1ADC  
                               l795 1494                                 l868 1AE0  
                               l798 1326                                 u500 1140  
                               u501 113C                                 u510 1150  
                               _PR2 0FBB                                 u511 114C  
                               u600 1410                                 u520 12CA  
                               u440 1086                                 u601 140C  
                               u441 1082                                 u610 143E  
                               u530 1324                                 u450 1098  
                               u611 143A                                 u531 1320  
                               u451 1094                                 u620 1478  
                               u540 1344                                 u460 10A8  
                               u621 1474                                 u541 1340  
                               u525 12C0                                 u461 10A4  
                               u550 1356                                 u470 10E8  
                               u630 1782                                 u551 1352  
                               u471 10E4                                 u631 177E  
                               u560 1384                                 u480 10FA  
                               u640 17B6                                 u800 16C2  
                               u561 1380                                 u481 10F6  
                               u801 16BE                                 u570 139A  
                               u490 110A                                 u650 17E4  
                               u730 15AC                                 u810 1700  
                               u715 1B72                                 u571 1396  
                               u491 1106                                 u651 17E0  
                               u731 15A8                                 u811 16FC  
                               u716 1B74                                 u580 13AE  
                               u660 17F8                                 u740 15CA  
                               u820 173E                                 u581 13AA  
                               u661 17F4                                 u645 17AC  
                               u741 15C6                                 u821 173A  
                               u590 13C8                                 u670 1820  
                               u750 15E8                                 u591 13C4  
                               u671 181C                                 u751 15E4  
                               u680 1840                                 u760 1606  
                               u681 183C                                 u761 1602  
                               u690 1850                                 u770 1624  
                               u907 1AF8                                 u691 184C  
                               u771 1620                                 u780 1646  
                               u781 1642                                 u790 1684  
                               u847 1980                                 u791 1680  
                               u857 199E                                 u867 19B8  
                               u877 1A08                                 u887 1AD2  
                               u897 1AE6         i2Send_Instruction_Data@Data 0003  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                      ___flmul@aexp 001E                        ___flmul@bexp 001F  
                _Bluetooth_Receiver 1872                        ___flmul@sign 0019  
                      ___flmul@temp 0024                        ___flmul@prod 0020  
                        Manual@Data 002F                        ___fltol@exp1 0016  
                              l1100 1A2A                                l1110 1A44  
                              l1102 1A2C                                l1120 1A52  
                              l1112 1A46                                l1104 1A36  
                              l1130 1A5C                                l1122 1A54  
                              l1114 1A48                                l1106 1A38  
                              l1132 1A5E                                l1124 1A56  
                              l1116 1A4A                                l1108 1A42  
                              l1300 1164                                l1134 1A60  
                              l1126 1A58                                l1118 1A50  
                              l1310 11B4                                l1302 1170  
                              l1136 1A62                                l1128 1A5A  
                              l1320 11F6                                l1312 11C0  
                              l1304 117A                                l1400 17C2  
                              l1138 1A7C                                l1330 1258  
                              l1322 1202                                l1314 11CC  
                              l1306 1190                                l1402 17D2  
                              l1500 19EA                                l1340 12EE  
                              l1332 1264                                l1324 1212  
                              l1316 11DA                                l1308 119C  
                              l1260 106C                                l1412 17FC  
                              l1404 17D6                                l1502 19F4  
                              l1350 1344                                l1342 130C  
                              l1334 1280                                l1326 122C  
                              l1318 11E6                                l1270 10A8  
                              l1262 1078                                l1430 1860  
                              l1422 1824                                l1414 1806  
                              l1406 17E4                                l1510 1672  
                              l1440 1B6A                                l1504 19FE  
                              l1360 13AE                                l1352 1348  
                              l1344 1316                                l1336 12AA  
                              l1328 123C                                l1280 10DA  
                              l1272 10B8                                l1264 1086  
                              l1424 1830                                l1416 1810  
                              l1520 1700                                l1512 1684  
                              l1098 1A18                                l1442 1B74  
                              l1370 1410                                l1362 13BA  
                              l1354 1356                                l1346 1324  
                              l1338 12E0                                l1290 111A  
                              l1282 10E8                                l1274 10BE  
                              l1266 1088                                l1426 1840  
                              l1522 172C                                l1514 16B0  
                              l1506 1634                                l1444 1B7C  
                              l1380 1478                                l1372 1424  
                              l1364 13C8                                l1356 1384  
                              l1348 1336                                l1292 1120  
                              l1284 10EA                                l1276 10CE  
                              l1268 1098                                l1428 1850  
                              l1460 154C                                l1524 173E  
                              l1516 16C2                                l1508 1646  
                              l1382 147A                                l1374 143E  
                              l1366 13F2                                l1294 1140  
                              l1286 10FA                                l1278 10D4  
                              l1390 176C                                l1470 15CA  
                              l1462 1572                                l1454 1496  
                              l1518 16EE                                l1376 145A  
                              l1384 1480                                l1368 13F6  
                              l1296 1150                                l1288 110A  
                              l1392 1782                                l1480 1612  
                              l1472 15D6                                l1464 159A  
                              l1456 14CA                                l1490 19B2  
                              l1386 1484                                l1378 146A  
                              l1482 1624                                l1474 15E8  
                              l1466 15AC                                l1458 14F0  
                              l1492 19C2                                l1484 1976  
                              l1396 1796                                l1476 15F4  
                              l1468 15B8                                l1564 1BBA  
                              l1494 19CC                                l1486 198E  
                              l1398 17C0                                l1478 1606  
                              l1566 1BBE                                l1496 19D6  
                              l1488 1998                                l1568 1BC2  
                              l1498 19E0                                STR_1 1054  
                              STR_2 1045                                STR_3 1060  
                              STR_4 1012                                STR_5 1001  
                              STR_6 1034                                STR_7 1023  
                              _LATD 0F8C                                _LATE 0F8D  
                              i1l98 001E                                i2l93 1B54  
                              _Mode 0039                 ?_Bluetooth_Receiver 0001  
                              _main 1BBA                                btemp 003B  
                              prodh 0FF4                                prodl 0FF3  
                              start 0026                     ?_Driver_Control 0026  
                      ___param_bank 0000                     _LCD_Instruction 1AC8  
  Send_Instruction_Data@Instruction 0010  i2Send_Instruction_Data@Instruction 0004  
                      _BAUDCON1bits 0FB8                ??_Bluetooth_Receiver 0008  
                     ___fltol@sign1 0015                               ?_main 0001  
                   __end_of___flmul 1496                     __end_of___fltol 1872  
                             _T2CON 0FBA                               i2l114 1974  
                             i2l165 1B9E                               i2l174 1AC6  
                             i2l168 1B3E                               _SPBRG 0FAF  
                             _TRISD 0F95                               _TRISE 0F96  
      i2LCD_Instruction@Instruction 0002                               tablat 0FF5  
                             ttemp5 003C                               ttemp6 003F  
                             ttemp7 0043                               status 0FD8  
                             wtemp8 003C                     __initialization 1BA0  
                      __end_of_main 1BD0                    __end_of_Init_LCD 1A18  
             _Send_Instruction_Data 1B68                              ??_main 0030  
                     ??_Send_String 0006                       __activetblptr 0002  
                            _CCPR3L 0F5E                              _CCPR5L 0F55  
                            _ANSELC 0F3A                              _ANSELD 0F3B  
                            _ANSELE 0F3C                              i2l1250 1B08  
                            i2l1252 1B18                              i2l1254 1B1C  
                            i2l1256 1B2C                              i2l1248 1B06  
                            i2l1258 1B2E                              i2l1434 1B86  
                            i2l1450 1AA2                              i2l1530 1888  
                            i2l1436 1B90                              i2l1452 1AA4  
                            i2l1540 18C8                              i2l1532 189C  
                            i2l1438 1B98                              i2l1446 1A80  
                            i2l1550 18FC                              i2l1542 18D0  
                            i2l1534 18A4                              i2l1526 1872  
                            i2l1448 1A88                              i2l1552 1904  
                            i2l1544 18E4                              i2l1536 18AC  
                            i2l1528 1880                              i2l1554 190C  
                            i2l1546 18EC                              i2l1538 18C0  
                            i2l1562 193E                              i2l1570 1B50  
                            i2l1556 1920                              i2l1548 18F4  
                            i2l1558 1928                              _RCREG1 0FAE  
        LCD_Instruction@Instruction 000E                              _OSCCON 0FD3  
                     ?_Interrupt_Rx 0001             __end_of_LCD_Instruction 1B04  
                            _Manual 1632                           ??___flmul 0015  
                         ??___fltol 0011                              clear_0 1BA6  
                            isa$std 0001                        __mediumconst 0000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                 __end_of_Send_String 1AC8  
                        __accesstop 0060             __end_of__initialization 1BAC  
                    ??_Interrupt_Rx 0008                       ___rparam_used 0001  
                        ___fltol@f1 000D                      __pcstackCOMRAM 0001  
            ?_Send_Instruction_Data 000F                         _Duty_Cycle1 0034  
                       _Duty_Cycle2 0030                   __end_of_Interrupt 0026  
                  ??_Driver_Control 002F                           ?_Init_LCD 0001  
                  ?_LCD_Instruction 0001                             ?_Manual 0001  
           i2_Send_Instruction_Data 1B84                             _CCP3CON 0F5D  
                           _CCP5CON 0F54             Driver_Control@Direction 002E  
                       _Send_String 1A80                             i2u70_45 1B8E  
                           i2u70_46 1B90                             i2u72_40 1AC6  
                           i2u72_41 1AC2                             i2u83_40 1880  
                           i2u83_41 187C                             i2u91_47 1B0E  
                           i2u92_47 1B22                             i2u93_47 1B34  
                        ??_Init_LCD 0011                             __Hparam 0000  
                           __Lparam 0000                             ___flmul 106C  
                           ___fltol 176C                        __psmallconst 1000  
                           __pcinit 1BA0                             __ramtop 1000  
                           __ptext0 1BBA                             __ptext1 1632  
                           __ptext2 1496                             __ptext3 176C  
                           __ptext4 106C                             __ptext5 1976  
                           __ptext6 1B68                             __ptext7 1AC8  
                           __ptext8 1A18                __end_of_Interrupt_Rx 1B68  
                         _T2CONbits 0FBA                      __pintcode_body 1B40  
              end_of_initialization 1BAC                       __Lmediumconst 0000  
                           int_func 1B40           ??i2_Send_Instruction_Data 0004  
                         _RCSTAbits 0FAB                             postinc0 0FEE  
                         _TRISCbits 0F94                         ___flmul@grs 001A  
           ??_Send_Instruction_Data 0010                      __end_of_Manual 176C  
                         _Direction 0038                 start_initialization 1BA0  
                      Send_String@i 0007           Send_Instruction_Data@Data 000F  
                    _Configurations 1A18                           _Interrupt 0018  
                          ??_Manual 002F                           _Rx_Buffer 003A  
                      ?_Send_String 0005            Driver_Control@PWM_LMotor 002A  
          Driver_Control@PWM_RMotor 0026                           ___flmul@a 0011  
                         ___flmul@b 000D                         __pbssCOMRAM 0030  
            __end_of_Configurations 1A80                          ?_Interrupt 0001  
                      _Interrupt_Rx 0008                           __pintcode 0008  
                          ?___flmul 000D                            ?___fltol 000D  
                       __pintcodelo 0018                         __smallconst 1000  
                   ?_Configurations 0001                            _LATCbits 0F8B  
                          _LATDbits 0F8C                            _PIE1bits 0F9D  
                          _PIR1bits 0F9E                            _RCONbits 0FD0  
        __end_of_Bluetooth_Receiver 1976                   i2_LCD_Instruction 1B04  
                ?i2_LCD_Instruction 0001                 ??i2_LCD_Instruction 0001  
                       ??_Interrupt 000C                            _Init_LCD 1976  
                          __Hrparam 0000                            __Lrparam 0000  
     __end_of_Send_Instruction_Data 1B84           __end_ofi2_LCD_Instruction 1B40  
                 ??_LCD_Instruction 000D                            __ptext11 1872  
                          __ptext12 1A80                            __ptext13 1B84  
                          __ptext14 1B04            ?i2_Send_Instruction_Data 0003  
                          isa$xinst 0000                            int$flags 003B  
                        _INTCONbits 0FF2                            intlevel1 0000  
                          intlevel2 0000                      _Driver_Control 1496  
                  ??_Configurations 000D     __end_ofi2_Send_Instruction_Data 1BA0  
            __end_of_Driver_Control 1632  
