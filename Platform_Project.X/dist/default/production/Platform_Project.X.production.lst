

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Mar 08 16:15:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F46K22 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _LATDbits	set	3980
    62   000000                     _T2CONbits	set	4026
    63   000000                     _ANSELC	set	3898
    64   000000                     _OSCCON	set	4051
    65   000000                     _INTCONbits	set	4082
    66   000000                     _CCP5CON	set	3924
    67   000000                     _CCP3CON	set	3933
    68   000000                     _LATCbits	set	3979
    69   000000                     _TRISCbits	set	3988
    70   000000                     _ANSELE	set	3900
    71   000000                     _ANSELD	set	3899
    72   000000                     _PIE1bits	set	3997
    73   000000                     _RCONbits	set	4048
    74   000000                     _TRISE	set	3990
    75   000000                     _TRISD	set	3989
    76   000000                     _LATE	set	3981
    77   000000                     _LATD	set	3980
    78   000000                     _RCSTAbits	set	4011
    79   000000                     _TXSTA1bits	set	4012
    80   000000                     _SPBRG	set	4015
    81   000000                     _PIR1bits	set	3998
    82   000000                     _BAUDCON1bits	set	4024
    83   000000                     _RCREG1	set	4014
    84   000000                     _T2CON	set	4026
    85   000000                     _PR2	set	4027
    86   000000                     _CCPR3L	set	3934
    87   000000                     _CCPR5L	set	3925
    88                           
    89                           	psect	smallconst
    90   001000                     __psmallconst:
    91                           	callstack 0
    92   001000  00                 	db	0
    93   001001  52                 	db	82	;'R'
    94   001002  6F                 	db	111	;'o'
    95   001003  62                 	db	98	;'b'
    96   001004  6F                 	db	111	;'o'
    97   001005  74                 	db	116	;'t'
    98   001006  69                 	db	105	;'i'
    99   001007  63                 	db	99	;'c'
   100   001008  20                 	db	32
   101   001009  50                 	db	80	;'P'
   102   00100A  6C                 	db	108	;'l'
   103   00100B  61                 	db	97	;'a'
   104   00100C  74                 	db	116	;'t'
   105   00100D  66                 	db	102	;'f'
   106   00100E  6F                 	db	111	;'o'
   107   00100F  72                 	db	114	;'r'
   108   001010  6D                 	db	109	;'m'
   109   001011  00                 	db	0
   110   001012  52                 	db	82	;'R'
   111   001013  65                 	db	101	;'e'
   112   001014  73                 	db	115	;'s'
   113   001015  65                 	db	101	;'e'
   114   001016  61                 	db	97	;'a'
   115   001017  72                 	db	114	;'r'
   116   001018  63                 	db	99	;'c'
   117   001019  68                 	db	104	;'h'
   118   00101A  20                 	db	32
   119   00101B  50                 	db	80	;'P'
   120   00101C  72                 	db	114	;'r'
   121   00101D  6F                 	db	111	;'o'
   122   00101E  6A                 	db	106	;'j'
   123   00101F  65                 	db	101	;'e'
   124   001020  63                 	db	99	;'c'
   125   001021  74                 	db	116	;'t'
   126   001022  00                 	db	0
   127   001023  00                 	db	0	; dummy byte at the end
   128   000000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   0018C4                     __pcinit:
   133                           	callstack 0
   134   0018C4                     start_initialization:
   135                           	callstack 0
   136   0018C4                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Clear objects allocated to COMRAM (9 bytes)
   140   0018C4  EE00  F02B         	lfsr	0,__pbssCOMRAM
   141   0018C8  0E09               	movlw	9
   142   0018CA                     clear_0:
   143   0018CA  6AEE               	clrf	postinc0,c
   144   0018CC  06E8               	decf	wreg,f,c
   145   0018CE  E1FD               	bnz	clear_0
   146   0018D0                     end_of_initialization:
   147                           	callstack 0
   148   0018D0                     __end_of__initialization:
   149                           	callstack 0
   150   0018D0  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151   0018D2  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152   0018D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   153   0018D6  6EF8               	movwf	tblptru,c
   154   0018D8  0E10               	movlw	high __Lsmallconst
   155   0018DA  6EF7               	movwf	tblptrh,c
   156   0018DC  0100               	movlb	0
   157   0018DE  EF8B  F00C         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   00002B                     __pbssCOMRAM:
   161                           	callstack 0
   162   00002B                     _Duty_Cycle2:
   163                           	callstack 0
   164   00002B                     	ds	4
   165   00002F                     _Duty_Cycle1:
   166                           	callstack 0
   167   00002F                     	ds	4
   168   000033                     _Rx_Buffer:
   169                           	callstack 0
   170   000033                     	ds	1
   171                           
   172                           	psect	cstackCOMRAM
   173   000001                     __pcstackCOMRAM:
   174                           	callstack 0
   175   000001                     ?___flmul:
   176                           	callstack 0
   177   000001                     ?___fltol:
   178                           	callstack 0
   179   000001                     Manage_Motor_Direction@in2:
   180                           	callstack 0
   181   000001                     ___fltol@f1:
   182                           	callstack 0
   183   000001                     ___flmul@b:
   184                           	callstack 0
   185                           
   186                           ; 4 bytes @ 0x0
   187   000001                     	ds	1
   188   000002                     Manage_Motor_Direction@in3:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x1
   192   000002                     	ds	1
   193   000003                     Manage_Motor_Direction@in4:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x2
   197   000003                     	ds	1
   198   000004                     Manage_Motor_Direction@in1:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x3
   202   000004                     	ds	1
   203   000005                     ??___fltol:
   204   000005                     ___flmul@a:
   205                           	callstack 0
   206                           
   207                           ; 4 bytes @ 0x4
   208   000005                     	ds	4
   209   000009                     ??___flmul:
   210   000009                     ___fltol@sign1:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x8
   214   000009                     	ds	1
   215   00000A                     ___fltol@exp1:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x9
   219   00000A                     	ds	3
   220   00000D                     ___flmul@sign:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0xC
   224   00000D                     	ds	1
   225   00000E                     ___flmul@grs:
   226                           	callstack 0
   227                           
   228                           ; 4 bytes @ 0xD
   229   00000E                     	ds	4
   230   000012                     ___flmul@aexp:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x11
   234   000012                     	ds	1
   235   000013                     ___flmul@bexp:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x12
   239   000013                     	ds	1
   240   000014                     ___flmul@prod:
   241                           	callstack 0
   242                           
   243                           ; 4 bytes @ 0x13
   244   000014                     	ds	4
   245   000018                     ___flmul@temp:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x17
   249   000018                     	ds	2
   250   00001A                     Send_PWM_Motors@PWM_RMotor:
   251                           	callstack 0
   252                           
   253                           ; 4 bytes @ 0x19
   254   00001A                     	ds	4
   255   00001E                     Send_PWM_Motors@PWM_LMotor:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0x1D
   259   00001E                     	ds	4
   260   000022                     ??_Interrupt_Rx:
   261                           
   262                           ; 1 bytes @ 0x21
   263   000022                     	ds	2
   264   000024                     ??_Interrupt:
   265                           
   266                           ; 1 bytes @ 0x23
   267   000024                     	ds	1
   268   000025                     ??_LCD_Instruction:
   269                           
   270                           ; 1 bytes @ 0x24
   271   000025                     	ds	1
   272   000026                     LCD_Instruction@Instruction:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x25
   276   000026                     	ds	1
   277   000027                     Send_Instruction_Data@Data:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x26
   281   000027                     	ds	1
   282   000028                     Send_Instruction_Data@Instruction:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x27
   286   000028                     	ds	1
   287   000029                     ??_Init_LCD:
   288                           
   289                           ; 1 bytes @ 0x28
   290   000029                     	ds	2
   291   00002B                     
   292                           ; 1 bytes @ 0x2A
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 48 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels required when called: 8
   318 ;; This function calls:
   319 ;;		_Configurations
   320 ;;		_Init_LCD
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text0
   327   001916                     __ptext0:
   328                           	callstack 0
   329   001916                     _main:
   330                           	callstack 23
   331   001916                     
   332                           ;main.c: 51:     Configurations();
   333   001916  ECFA  F00B         	call	_Configurations	;wreg free
   334   00191A                     
   335                           ;main.c: 52:     Init_LCD();
   336   00191A  ECA9  F00B         	call	_Init_LCD	;wreg free
   337   00191E                     l79:
   338   00191E  EF8F  F00C         	goto	l79
   339   001922  EF13  F000         	goto	start
   340   001926                     __end_of_main:
   341                           	callstack 0
   342                           
   343 ;; *************** function _Init_LCD *****************
   344 ;; Defined at:
   345 ;;		line 5 in file "LCD_Library.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels used: 1
   365 ;; Hardware stack levels required when called: 7
   366 ;; This function calls:
   367 ;;		_Send_Instruction_Data
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text1
   374   001752                     __ptext1:
   375                           	callstack 0
   376   001752                     _Init_LCD:
   377                           	callstack 23
   378   001752                     
   379                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   380   001752  0E03               	movlw	3
   381   001754  6E2A               	movwf	(??_Init_LCD+1)^0,c
   382   001756  0E08               	movlw	8
   383   001758  6E29               	movwf	??_Init_LCD^0,c
   384   00175A  0E77               	movlw	119
   385   00175C                     u737:
   386   00175C  2EE8               	decfsz	wreg,f,c
   387   00175E  D7FE               	bra	u737
   388   001760  2E29               	decfsz	??_Init_LCD^0,f,c
   389   001762  D7FC               	bra	u737
   390   001764  2E2A               	decfsz	(??_Init_LCD+1)^0,f,c
   391   001766  D7FA               	bra	u737
   392   001768  0000               	nop	
   393   00176A                     
   394                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   395   00176A  0E30               	movlw	48
   396   00176C  6E27               	movwf	Send_Instruction_Data@Data^0,c
   397   00176E  0E00               	movlw	0
   398   001770  EC71  F00C         	call	_Send_Instruction_Data
   399   001774                     
   400                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   401   001774  0E1A               	movlw	26
   402   001776  6E29               	movwf	??_Init_LCD^0,c
   403   001778  0EF8               	movlw	248
   404   00177A                     u747:
   405   00177A  2EE8               	decfsz	wreg,f,c
   406   00177C  D7FE               	bra	u747
   407   00177E  2E29               	decfsz	??_Init_LCD^0,f,c
   408   001780  D7FC               	bra	u747
   409   001782  D000               	nop2	
   410                           
   411                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   412   001784  0E30               	movlw	48
   413   001786  6E27               	movwf	Send_Instruction_Data@Data^0,c
   414   001788  0E00               	movlw	0
   415   00178A  EC71  F00C         	call	_Send_Instruction_Data
   416   00178E                     
   417                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   418   00178E  0E1A               	movlw	26
   419   001790  6E29               	movwf	??_Init_LCD^0,c
   420   001792  0EF8               	movlw	248
   421   001794                     u757:
   422   001794  2EE8               	decfsz	wreg,f,c
   423   001796  D7FE               	bra	u757
   424   001798  2E29               	decfsz	??_Init_LCD^0,f,c
   425   00179A  D7FC               	bra	u757
   426   00179C  D000               	nop2	
   427   00179E                     
   428                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   429   00179E  0E30               	movlw	48
   430   0017A0  6E27               	movwf	Send_Instruction_Data@Data^0,c
   431   0017A2  0E00               	movlw	0
   432   0017A4  EC71  F00C         	call	_Send_Instruction_Data
   433   0017A8                     
   434                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   435   0017A8  0E02               	movlw	2
   436   0017AA  6E27               	movwf	Send_Instruction_Data@Data^0,c
   437   0017AC  0E00               	movlw	0
   438   0017AE  EC71  F00C         	call	_Send_Instruction_Data
   439   0017B2                     
   440                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   441   0017B2  0E06               	movlw	6
   442   0017B4  6E27               	movwf	Send_Instruction_Data@Data^0,c
   443   0017B6  0E00               	movlw	0
   444   0017B8  EC71  F00C         	call	_Send_Instruction_Data
   445   0017BC                     
   446                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   447   0017BC  0E0F               	movlw	15
   448   0017BE  6E27               	movwf	Send_Instruction_Data@Data^0,c
   449   0017C0  0E00               	movlw	0
   450   0017C2  EC71  F00C         	call	_Send_Instruction_Data
   451   0017C6                     
   452                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   453   0017C6  0E28               	movlw	40
   454   0017C8  6E27               	movwf	Send_Instruction_Data@Data^0,c
   455   0017CA  0E00               	movlw	0
   456   0017CC  EC71  F00C         	call	_Send_Instruction_Data
   457   0017D0                     
   458                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   459   0017D0  0E01               	movlw	1
   460   0017D2  6E27               	movwf	Send_Instruction_Data@Data^0,c
   461   0017D4  0E00               	movlw	0
   462   0017D6  EC71  F00C         	call	_Send_Instruction_Data
   463   0017DA                     
   464                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   465   0017DA  0E03               	movlw	3
   466   0017DC  6E2A               	movwf	(??_Init_LCD+1)^0,c
   467   0017DE  0E08               	movlw	8
   468   0017E0  6E29               	movwf	??_Init_LCD^0,c
   469   0017E2  0E77               	movlw	119
   470   0017E4                     u767:
   471   0017E4  2EE8               	decfsz	wreg,f,c
   472   0017E6  D7FE               	bra	u767
   473   0017E8  2E29               	decfsz	??_Init_LCD^0,f,c
   474   0017EA  D7FC               	bra	u767
   475   0017EC  2E2A               	decfsz	(??_Init_LCD+1)^0,f,c
   476   0017EE  D7FA               	bra	u767
   477   0017F0  0000               	nop	
   478   0017F2  0012               	return		;funcret
   479   0017F4                     __end_of_Init_LCD:
   480                           	callstack 0
   481                           
   482 ;; *************** function _Send_Instruction_Data *****************
   483 ;; Defined at:
   484 ;;		line 24 in file "LCD_Library.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  Instruction     1    wreg     unsigned char 
   487 ;;  Data            1   38[COMRAM] unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  Instruction     1   39[COMRAM] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   499 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;Total ram usage:        2 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 6
   506 ;; This function calls:
   507 ;;		_LCD_Instruction
   508 ;; This function is called by:
   509 ;;		_Init_LCD
   510 ;;		_Init_Message_Platform
   511 ;;		_Send_String
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text2
   516   0018E2                     __ptext2:
   517                           	callstack 0
   518   0018E2                     _Send_Instruction_Data:
   519                           	callstack 23
   520                           
   521                           ;incstack = 0
   522                           ;Send_Instruction_Data@Instruction stored from wreg
   523   0018E2  6E28               	movwf	Send_Instruction_Data@Instruction^0,c
   524   0018E4                     
   525                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   526   0018E4  B028               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   527   0018E6  D002               	bra	u675
   528   0018E8  988B               	bcf	139,4,c	;volatile
   529   0018EA  D001               	bra	u676
   530   0018EC                     u675:
   531   0018EC  888B               	bsf	139,4,c	;volatile
   532   0018EE                     u676:
   533   0018EE                     
   534                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   535   0018EE  3827               	swapf	Send_Instruction_Data@Data^0,w,c
   536   0018F0  0B0F               	andlw	15
   537   0018F2  EC2E  F00C         	call	_LCD_Instruction
   538   0018F6                     
   539                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
   540   0018F6  5027               	movf	Send_Instruction_Data@Data^0,w,c
   541   0018F8  EC2E  F00C         	call	_LCD_Instruction
   542   0018FC  0012               	return		;funcret
   543   0018FE                     __end_of_Send_Instruction_Data:
   544                           	callstack 0
   545                           
   546 ;; *************** function _LCD_Instruction *****************
   547 ;; Defined at:
   548 ;;		line 33 in file "LCD_Library.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  Instruction     1    wreg     unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  Instruction     1   37[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        2 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 5
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_Send_Instruction_Data
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text3
   577   00185C                     __ptext3:
   578                           	callstack 0
   579   00185C                     _LCD_Instruction:
   580                           	callstack 23
   581                           
   582                           ;incstack = 0
   583                           ;LCD_Instruction@Instruction stored from wreg
   584   00185C  6E26               	movwf	LCD_Instruction@Instruction^0,c
   585   00185E                     
   586                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   587   00185E  8A8B               	bsf	139,5,c	;volatile
   588   001860                     
   589                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   590   001860  0E4E               	movlw	78
   591   001862  6E25               	movwf	??_LCD_Instruction^0,c
   592   001864  0EEB               	movlw	235
   593   001866                     u777:
   594   001866  2EE8               	decfsz	wreg,f,c
   595   001868  D7FE               	bra	u777
   596   00186A  2E25               	decfsz	??_LCD_Instruction^0,f,c
   597   00186C  D7FC               	bra	u777
   598   00186E  0000               	nop	
   599   001870                     
   600                           ;LCD_Library.c: 37:     LATD = Instruction;
   601   001870  C026  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   602   001874                     
   603                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   604   001874  0E4E               	movlw	78
   605   001876  6E25               	movwf	??_LCD_Instruction^0,c
   606   001878  0EEB               	movlw	235
   607   00187A                     u787:
   608   00187A  2EE8               	decfsz	wreg,f,c
   609   00187C  D7FE               	bra	u787
   610   00187E  2E25               	decfsz	??_LCD_Instruction^0,f,c
   611   001880  D7FC               	bra	u787
   612   001882  0000               	nop	
   613   001884                     
   614                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   615   001884  9A8B               	bcf	139,5,c	;volatile
   616   001886                     
   617                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   618   001886  0E4E               	movlw	78
   619   001888  6E25               	movwf	??_LCD_Instruction^0,c
   620   00188A  0EEB               	movlw	235
   621   00188C                     u797:
   622   00188C  2EE8               	decfsz	wreg,f,c
   623   00188E  D7FE               	bra	u797
   624   001890  2E25               	decfsz	??_LCD_Instruction^0,f,c
   625   001892  D7FC               	bra	u797
   626   001894  0000               	nop	
   627   001896  0012               	return		;funcret
   628   001898                     __end_of_LCD_Instruction:
   629                           	callstack 0
   630                           
   631 ;; *************** function _Configurations *****************
   632 ;; Defined at:
   633 ;;		line 81 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 5
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text4
   662   0017F4                     __ptext4:
   663                           	callstack 0
   664   0017F4                     _Configurations:
   665                           	callstack 25
   666   0017F4                     
   667                           ;main.c: 83:     OSCCON = 0x72;
   668   0017F4  0E72               	movlw	114
   669   0017F6  6ED3               	movwf	211,c	;volatile
   670                           
   671                           ;main.c: 85:     ANSELC = 0;
   672   0017F8  0E00               	movlw	0
   673   0017FA  010F               	movlb	15	; () banked
   674   0017FC  6F3A               	movwf	58,b	;volatile
   675                           
   676                           ;main.c: 86:     ANSELD = 0;
   677   0017FE  0E00               	movlw	0
   678   001800  6F3B               	movwf	59,b	;volatile
   679                           
   680                           ;main.c: 87:     ANSELE = 0;
   681   001802  0E00               	movlw	0
   682   001804  6F3C               	movwf	60,b	;volatile
   683   001806                     
   684                           ; BSR set to: 15
   685                           ;main.c: 90:     TRISCbits.RC4 = 0;
   686   001806  9894               	bcf	148,4,c	;volatile
   687   001808                     
   688                           ; BSR set to: 15
   689                           ;main.c: 91:     TRISCbits.RC5 = 0;
   690   001808  9A94               	bcf	148,5,c	;volatile
   691                           
   692                           ;main.c: 92:     TRISD = 0;
   693   00180A  0E00               	movlw	0
   694   00180C  6E95               	movwf	149,c	;volatile
   695                           
   696                           ;main.c: 93:     TRISE = 0;
   697   00180E  0E00               	movlw	0
   698   001810  6E96               	movwf	150,c	;volatile
   699   001812                     
   700                           ; BSR set to: 15
   701                           ;main.c: 96:     LATCbits.LC4 = 0;
   702   001812  988B               	bcf	139,4,c	;volatile
   703   001814                     
   704                           ; BSR set to: 15
   705                           ;main.c: 97:     LATCbits.LC5 = 0;
   706   001814  9A8B               	bcf	139,5,c	;volatile
   707                           
   708                           ;main.c: 98:     LATD = 0;
   709   001816  0E00               	movlw	0
   710   001818  6E8C               	movwf	140,c	;volatile
   711                           
   712                           ;main.c: 99:     LATE = 0;
   713   00181A  0E00               	movlw	0
   714   00181C  6E8D               	movwf	141,c	;volatile
   715   00181E                     
   716                           ; BSR set to: 15
   717                           ;main.c: 102:     INTCONbits.GIE = 1;
   718   00181E  8EF2               	bsf	242,7,c	;volatile
   719   001820                     
   720                           ; BSR set to: 15
   721                           ;main.c: 103:     INTCONbits.PEIE = 1;
   722   001820  8CF2               	bsf	242,6,c	;volatile
   723   001822                     
   724                           ; BSR set to: 15
   725                           ;main.c: 104:     RCONbits.IPEN = 1;
   726   001822  8ED0               	bsf	208,7,c	;volatile
   727   001824                     
   728                           ; BSR set to: 15
   729                           ;main.c: 106:     PIE1bits.RC1IE = 1;
   730   001824  8A9D               	bsf	157,5,c	;volatile
   731   001826                     
   732                           ; BSR set to: 15
   733                           ;main.c: 107:     PIR1bits.RC1IF = 0;
   734   001826  9A9E               	bcf	158,5,c	;volatile
   735                           
   736                           ;main.c: 110:     SPBRG = 103;
   737   001828  0E67               	movlw	103
   738   00182A  6EAF               	movwf	175,c	;volatile
   739   00182C                     
   740                           ; BSR set to: 15
   741                           ;main.c: 111:     TRISCbits.RC6 = 1;
   742   00182C  8C94               	bsf	148,6,c	;volatile
   743   00182E                     
   744                           ; BSR set to: 15
   745                           ;main.c: 112:     TRISCbits.RC7 = 1;
   746   00182E  8E94               	bsf	148,7,c	;volatile
   747   001830                     
   748                           ; BSR set to: 15
   749                           ;main.c: 115:     TXSTA1bits.TX91 = 0;
   750   001830  9CAC               	bcf	172,6,c	;volatile
   751   001832                     
   752                           ; BSR set to: 15
   753                           ;main.c: 116:     TXSTA1bits.TXEN1 = 1;
   754   001832  8AAC               	bsf	172,5,c	;volatile
   755   001834                     
   756                           ; BSR set to: 15
   757                           ;main.c: 117:     TXSTA1bits.SYNC1 = 0;
   758   001834  98AC               	bcf	172,4,c	;volatile
   759   001836                     
   760                           ; BSR set to: 15
   761                           ;main.c: 118:     TXSTA1bits.BRGH1 = 1;
   762   001836  84AC               	bsf	172,2,c	;volatile
   763   001838                     
   764                           ; BSR set to: 15
   765                           ;main.c: 121:     RCSTAbits.SPEN1 = 1;
   766   001838  8EAB               	bsf	171,7,c	;volatile
   767   00183A                     
   768                           ; BSR set to: 15
   769                           ;main.c: 122:     RCSTAbits.RX91 = 0;
   770   00183A  9CAB               	bcf	171,6,c	;volatile
   771   00183C                     
   772                           ; BSR set to: 15
   773                           ;main.c: 123:     RCSTAbits.CREN1 = 1;
   774   00183C  88AB               	bsf	171,4,c	;volatile
   775   00183E                     
   776                           ; BSR set to: 15
   777                           ;main.c: 126:     BAUDCON1bits.BRG16 = 0;
   778   00183E  96B8               	bcf	184,3,c	;volatile
   779                           
   780                           ;main.c: 138:     PR2 = 0xF9;
   781   001840  0EF9               	movlw	249
   782   001842  6EBB               	movwf	187,c	;volatile
   783                           
   784                           ;main.c: 139:     T2CON = 0x00;
   785   001844  0E00               	movlw	0
   786   001846  6EBA               	movwf	186,c	;volatile
   787                           
   788                           ;main.c: 140:     CCP3CON = 0x0C;
   789   001848  0E0C               	movlw	12
   790   00184A  6F5D               	movwf	93,b	;volatile
   791                           
   792                           ;main.c: 141:     CCPR3L = 0xFA;
   793   00184C  0EFA               	movlw	250
   794   00184E  6F5E               	movwf	94,b	;volatile
   795                           
   796                           ;main.c: 142:     CCP5CON = 0x0C;
   797   001850  0E0C               	movlw	12
   798   001852  6F54               	movwf	84,b	;volatile
   799                           
   800                           ;main.c: 143:     CCPR5L = 0xFA;
   801   001854  0EFA               	movlw	250
   802   001856  6F55               	movwf	85,b	;volatile
   803   001858                     
   804                           ; BSR set to: 15
   805                           ;main.c: 144:     T2CONbits.TMR2ON = 1;
   806   001858  84BA               	bsf	186,2,c	;volatile
   807   00185A                     
   808                           ; BSR set to: 15
   809   00185A  0012               	return		;funcret
   810   00185C                     __end_of_Configurations:
   811                           	callstack 0
   812                           
   813 ;; *************** function _Interrupt *****************
   814 ;; Defined at:
   815 ;;		line 73 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		None
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        1 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 4
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		Interrupt level 1
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	intcodelo
   844   000018                     __pintcodelo:
   845                           	callstack 0
   846   000018                     _Interrupt:
   847                           	callstack 23
   848                           
   849                           ; BSR set to: 15
   850                           ;incstack = 0
   851   000018  8034               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   852   00001A  CFE0 F024          	movff	bsr,??_Interrupt
   853   00001E  C024  FFE0         	movff	??_Interrupt,bsr
   854   000022  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   855   000024  0010               	retfie	
   856   000026                     __end_of_Interrupt:
   857                           	callstack 0
   858                           
   859 ;; *************** function _Interrupt_Rx *****************
   860 ;; Defined at:
   861 ;;		line 65 in file "main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:        2 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 3
   882 ;; This function calls:
   883 ;;		_Bluetooth_Interrupt
   884 ;; This function is called by:
   885 ;;		Interrupt level 2
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	intcode
   890   000008                     __pintcode:
   891                           	callstack 0
   892   000008                     _Interrupt_Rx:
   893                           	callstack 23
   894                           
   895                           ;incstack = 0
   896   000008  8234               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   897   00000A  EF7F  F00C         	goto	int_func
   898                           
   899                           	psect	intcode_body
   900   0018FE                     __pintcode_body:
   901                           	callstack 23
   902   0018FE                     int_func:
   903                           	callstack 23
   904   0018FE  CFF3 F022          	movff	prodl,??_Interrupt_Rx
   905   001902  CFF4 F023          	movff	prodh,??_Interrupt_Rx+1
   906   001906                     
   907                           ;main.c: 67:     Bluetooth_Interrupt();
   908   001906  EC2D  F00B         	call	_Bluetooth_Interrupt	;wreg free
   909   00190A  C023  FFF4         	movff	??_Interrupt_Rx+1,prodh
   910   00190E  C022  FFF3         	movff	??_Interrupt_Rx,prodl
   911   001912  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   912   001914  0011               	retfie		f
   913   001916                     __end_of_Interrupt_Rx:
   914                           	callstack 0
   915                           
   916 ;; *************** function _Bluetooth_Interrupt *****************
   917 ;; Defined at:
   918 ;;		line 148 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 2
   939 ;; This function calls:
   940 ;;		_Manage_Motor_Direction
   941 ;;		_Send_PWM_Motors
   942 ;; This function is called by:
   943 ;;		_Interrupt_Rx
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text7
   948   00165A                     __ptext7:
   949                           	callstack 0
   950   00165A                     _Bluetooth_Interrupt:
   951                           	callstack 23
   952   00165A                     
   953                           ;main.c: 150:     if (PIR1bits.RC1IF) {
   954   00165A  AA9E               	btfss	158,5,c	;volatile
   955   00165C  EF32  F00B         	goto	i2u68_41
   956   001660  EF34  F00B         	goto	i2u68_40
   957   001664                     i2u68_41:
   958   001664  EFA8  F00B         	goto	i2l104
   959   001668                     i2u68_40:
   960   001668                     
   961                           ;main.c: 152:         Rx_Buffer = RCREG1;
   962   001668  CFAE F033          	movff	4014,_Rx_Buffer	;volatile
   963   00166C                     
   964                           ;main.c: 154:         if (Rx_Buffer == 'M') {
   965   00166C  0E4D               	movlw	77
   966   00166E  1833               	xorwf	_Rx_Buffer^0,w,c
   967   001670  A4D8               	btfss	status,2,c
   968   001672  EF3D  F00B         	goto	i2u69_41
   969   001676  EF3F  F00B         	goto	i2u69_40
   970   00167A                     i2u69_41:
   971   00167A  EF5C  F00B         	goto	i2l1360
   972   00167E                     i2u69_40:
   973   00167E                     
   974                           ;main.c: 156:             Send_PWM_Motors(1023.00, 1023.00);
   975   00167E  0E00               	movlw	0
   976   001680  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
   977   001682  0EC0               	movlw	192
   978   001684  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
   979   001686  0E7F               	movlw	127
   980   001688  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
   981   00168A  0E44               	movlw	68
   982   00168C  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
   983   00168E  0E00               	movlw	0
   984   001690  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
   985   001692  0EC0               	movlw	192
   986   001694  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
   987   001696  0E7F               	movlw	127
   988   001698  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
   989   00169A  0E44               	movlw	68
   990   00169C  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
   991   00169E  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
   992   0016A2                     
   993                           ;main.c: 157:             Manage_Motor_Direction(1, 0, 0, 1);
   994   0016A2  0E00               	movlw	0
   995   0016A4  6E01               	movwf	Manage_Motor_Direction@in2^0,c
   996   0016A6  0E00               	movlw	0
   997   0016A8  6E02               	movwf	Manage_Motor_Direction@in3^0,c
   998   0016AA  0E01               	movlw	1
   999   0016AC  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1000   0016AE  0E01               	movlw	1
  1001   0016B0  EC4C  F00C         	call	_Manage_Motor_Direction
  1002                           
  1003                           ;main.c: 159:         } else if (Rx_Buffer == 'A') {
  1004   0016B4  EFA8  F00B         	goto	i2l104
  1005   0016B8                     i2l1360:
  1006   0016B8  0E41               	movlw	65
  1007   0016BA  1833               	xorwf	_Rx_Buffer^0,w,c
  1008   0016BC  A4D8               	btfss	status,2,c
  1009   0016BE  EF63  F00B         	goto	i2u70_41
  1010   0016C2  EF65  F00B         	goto	i2u70_40
  1011   0016C6                     i2u70_41:
  1012   0016C6  EF82  F00B         	goto	i2l1366
  1013   0016CA                     i2u70_40:
  1014   0016CA                     
  1015                           ;main.c: 161:             Send_PWM_Motors(1023.00, 1023.00);
  1016   0016CA  0E00               	movlw	0
  1017   0016CC  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
  1018   0016CE  0EC0               	movlw	192
  1019   0016D0  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
  1020   0016D2  0E7F               	movlw	127
  1021   0016D4  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
  1022   0016D6  0E44               	movlw	68
  1023   0016D8  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
  1024   0016DA  0E00               	movlw	0
  1025   0016DC  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
  1026   0016DE  0EC0               	movlw	192
  1027   0016E0  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
  1028   0016E2  0E7F               	movlw	127
  1029   0016E4  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
  1030   0016E6  0E44               	movlw	68
  1031   0016E8  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
  1032   0016EA  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
  1033   0016EE                     
  1034                           ;main.c: 162:             Manage_Motor_Direction(0, 1, 1, 0);
  1035   0016EE  0E01               	movlw	1
  1036   0016F0  6E01               	movwf	Manage_Motor_Direction@in2^0,c
  1037   0016F2  0E01               	movlw	1
  1038   0016F4  6E02               	movwf	Manage_Motor_Direction@in3^0,c
  1039   0016F6  0E00               	movlw	0
  1040   0016F8  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1041   0016FA  0E00               	movlw	0
  1042   0016FC  EC4C  F00C         	call	_Manage_Motor_Direction
  1043                           
  1044                           ;main.c: 164:         } else if (Rx_Buffer == 'T') {
  1045   001700  EFA8  F00B         	goto	i2l104
  1046   001704                     i2l1366:
  1047   001704  0E54               	movlw	84
  1048   001706  1833               	xorwf	_Rx_Buffer^0,w,c
  1049   001708  A4D8               	btfss	status,2,c
  1050   00170A  EF89  F00B         	goto	i2u71_41
  1051   00170E  EF8B  F00B         	goto	i2u71_40
  1052   001712                     i2u71_41:
  1053   001712  EFA8  F00B         	goto	i2l100
  1054   001716                     i2u71_40:
  1055   001716                     
  1056                           ;main.c: 166:             Send_PWM_Motors(0.00, 0.00);
  1057   001716  0E00               	movlw	0
  1058   001718  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
  1059   00171A  0E00               	movlw	0
  1060   00171C  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
  1061   00171E  0E00               	movlw	0
  1062   001720  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
  1063   001722  0E00               	movlw	0
  1064   001724  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
  1065   001726  0E00               	movlw	0
  1066   001728  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
  1067   00172A  0E00               	movlw	0
  1068   00172C  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
  1069   00172E  0E00               	movlw	0
  1070   001730  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
  1071   001732  0E00               	movlw	0
  1072   001734  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
  1073   001736  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
  1074   00173A                     
  1075                           ;main.c: 167:             Manage_Motor_Direction(0, 0, 0, 0);
  1076   00173A  0E00               	movlw	0
  1077   00173C  6E01               	movwf	Manage_Motor_Direction@in2^0,c
  1078   00173E  0E00               	movlw	0
  1079   001740  6E02               	movwf	Manage_Motor_Direction@in3^0,c
  1080   001742  0E00               	movlw	0
  1081   001744  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1082   001746  0E00               	movlw	0
  1083   001748  EC4C  F00C         	call	_Manage_Motor_Direction
  1084   00174C  EFA8  F00B         	goto	i2l104
  1085   001750                     i2l100:
  1086   001750                     i2l104:
  1087   001750  0012               	return		;funcret
  1088   001752                     __end_of_Bluetooth_Interrupt:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _Send_PWM_Motors *****************
  1092 ;; Defined at:
  1093 ;;		line 179 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  PWM_RMotor      4   25[COMRAM] float 
  1096 ;;  PWM_LMotor      4   29[COMRAM] float 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1108 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;Total ram usage:        8 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 1
  1115 ;; This function calls:
  1116 ;;		___flmul
  1117 ;;		___fltol
  1118 ;; This function is called by:
  1119 ;;		_Bluetooth_Interrupt
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text8
  1124   00144E                     __ptext8:
  1125                           	callstack 0
  1126   00144E                     _Send_PWM_Motors:
  1127                           	callstack 23
  1128   00144E                     
  1129                           ;main.c: 181:     Duty_Cycle1 = (float) (PWM_RMotor * (1000.00 / 1023.00));
  1130   00144E  C01A  F001         	movff	Send_PWM_Motors@PWM_RMotor,___flmul@b
  1131   001452  C01B  F002         	movff	Send_PWM_Motors@PWM_RMotor+1,___flmul@b+1
  1132   001456  C01C  F003         	movff	Send_PWM_Motors@PWM_RMotor+2,___flmul@b+2
  1133   00145A  C01D  F004         	movff	Send_PWM_Motors@PWM_RMotor+3,___flmul@b+3
  1134   00145E  0E90               	movlw	144
  1135   001460  6E05               	movwf	___flmul@a^0,c
  1136   001462  0E3E               	movlw	62
  1137   001464  6E06               	movwf	(___flmul@a+1)^0,c
  1138   001466  0E7A               	movlw	122
  1139   001468  6E07               	movwf	(___flmul@a+2)^0,c
  1140   00146A  0E3F               	movlw	63
  1141   00146C  6E08               	movwf	(___flmul@a+3)^0,c
  1142   00146E  EC12  F008         	call	___flmul	;wreg free
  1143   001472  C001  F02F         	movff	?___flmul,_Duty_Cycle1
  1144   001476  C002  F030         	movff	?___flmul+1,_Duty_Cycle1+1
  1145   00147A  C003  F031         	movff	?___flmul+2,_Duty_Cycle1+2
  1146   00147E  C004  F032         	movff	?___flmul+3,_Duty_Cycle1+3
  1147   001482                     
  1148                           ;main.c: 182:     CCPR3L = (int) Duty_Cycle1 >> 2;
  1149   001482  C02F  F001         	movff	_Duty_Cycle1,___fltol@f1
  1150   001486  C030  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1151   00148A  C031  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1152   00148E  C032  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1153   001492  ECAA  F00A         	call	___fltol	;wreg free
  1154   001496  3402               	rlcf	(?___fltol+1)^0,w,c
  1155   001498  3202               	rrcf	(?___fltol+1)^0,f,c
  1156   00149A  3201               	rrcf	?___fltol^0,f,c
  1157   00149C  3402               	rlcf	(?___fltol+1)^0,w,c
  1158   00149E  3202               	rrcf	(?___fltol+1)^0,f,c
  1159   0014A0  3201               	rrcf	?___fltol^0,f,c
  1160   0014A2  5001               	movf	?___fltol^0,w,c
  1161   0014A4  010F               	movlb	15	; () banked
  1162   0014A6  6F5E               	movwf	94,b	;volatile
  1163   0014A8                     
  1164                           ; BSR set to: 15
  1165                           ;main.c: 183:     CCP3CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4));
  1166   0014A8  C02F  F001         	movff	_Duty_Cycle1,___fltol@f1
  1167   0014AC  C030  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1168   0014B0  C031  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1169   0014B4  C032  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1170   0014B8  ECAA  F00A         	call	___fltol	;wreg free
  1171   0014BC  0E03               	movlw	3
  1172   0014BE  1601               	andwf	?___fltol^0,f,c
  1173   0014C0  3A01               	swapf	?___fltol^0,f,c
  1174   0014C2  0EF0               	movlw	240
  1175   0014C4  1601               	andwf	?___fltol^0,f,c
  1176   0014C6  010F               	movlb	15	; () banked
  1177   0014C8  515D               	movf	93,w,b	;volatile
  1178   0014CA  0B0F               	andlw	15
  1179   0014CC  1001               	iorwf	?___fltol^0,w,c
  1180   0014CE  6F5D               	movwf	93,b	;volatile
  1181                           
  1182                           ;main.c: 185:     Duty_Cycle2 = (float) (PWM_LMotor * (1000.00 / 1023.00));
  1183   0014D0  C01E  F001         	movff	Send_PWM_Motors@PWM_LMotor,___flmul@b
  1184   0014D4  C01F  F002         	movff	Send_PWM_Motors@PWM_LMotor+1,___flmul@b+1
  1185   0014D8  C020  F003         	movff	Send_PWM_Motors@PWM_LMotor+2,___flmul@b+2
  1186   0014DC  C021  F004         	movff	Send_PWM_Motors@PWM_LMotor+3,___flmul@b+3
  1187   0014E0  0E90               	movlw	144
  1188   0014E2  6E05               	movwf	___flmul@a^0,c
  1189   0014E4  0E3E               	movlw	62
  1190   0014E6  6E06               	movwf	(___flmul@a+1)^0,c
  1191   0014E8  0E7A               	movlw	122
  1192   0014EA  6E07               	movwf	(___flmul@a+2)^0,c
  1193   0014EC  0E3F               	movlw	63
  1194   0014EE  6E08               	movwf	(___flmul@a+3)^0,c
  1195   0014F0  EC12  F008         	call	___flmul	;wreg free
  1196   0014F4  C001  F02B         	movff	?___flmul,_Duty_Cycle2
  1197   0014F8  C002  F02C         	movff	?___flmul+1,_Duty_Cycle2+1
  1198   0014FC  C003  F02D         	movff	?___flmul+2,_Duty_Cycle2+2
  1199   001500  C004  F02E         	movff	?___flmul+3,_Duty_Cycle2+3
  1200   001504                     
  1201                           ;main.c: 186:     CCPR5L = (int) Duty_Cycle2 >> 2;
  1202   001504  C02B  F001         	movff	_Duty_Cycle2,___fltol@f1
  1203   001508  C02C  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1204   00150C  C02D  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1205   001510  C02E  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1206   001514  ECAA  F00A         	call	___fltol	;wreg free
  1207   001518  3402               	rlcf	(?___fltol+1)^0,w,c
  1208   00151A  3202               	rrcf	(?___fltol+1)^0,f,c
  1209   00151C  3201               	rrcf	?___fltol^0,f,c
  1210   00151E  3402               	rlcf	(?___fltol+1)^0,w,c
  1211   001520  3202               	rrcf	(?___fltol+1)^0,f,c
  1212   001522  3201               	rrcf	?___fltol^0,f,c
  1213   001524  5001               	movf	?___fltol^0,w,c
  1214   001526  010F               	movlb	15	; () banked
  1215   001528  6F55               	movwf	85,b	;volatile
  1216   00152A                     
  1217                           ; BSR set to: 15
  1218                           ;main.c: 187:     CCP5CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4));
  1219   00152A  C02B  F001         	movff	_Duty_Cycle2,___fltol@f1
  1220   00152E  C02C  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1221   001532  C02D  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1222   001536  C02E  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1223   00153A  ECAA  F00A         	call	___fltol	;wreg free
  1224   00153E  0E03               	movlw	3
  1225   001540  1601               	andwf	?___fltol^0,f,c
  1226   001542  3A01               	swapf	?___fltol^0,f,c
  1227   001544  0EF0               	movlw	240
  1228   001546  1601               	andwf	?___fltol^0,f,c
  1229   001548  010F               	movlb	15	; () banked
  1230   00154A  515D               	movf	93,w,b	;volatile
  1231   00154C  0B0F               	andlw	15
  1232   00154E  1001               	iorwf	?___fltol^0,w,c
  1233   001550  6F54               	movwf	84,b	;volatile
  1234   001552                     
  1235                           ; BSR set to: 15
  1236   001552  0012               	return		;funcret
  1237   001554                     __end_of_Send_PWM_Motors:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function ___fltol *****************
  1241 ;; Defined at:
  1242 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  f1              4    0[COMRAM] void 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  exp1            1    9[COMRAM] unsigned char 
  1247 ;;  sign1           1    8[COMRAM] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  4    0[COMRAM] long 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;Total ram usage:       10 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_Send_PWM_Motors
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text9
  1271   001554                     __ptext9:
  1272                           	callstack 0
  1273   001554                     ___fltol:
  1274                           	callstack 23
  1275   001554  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1276   001556  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1277   001558  6E0A               	movwf	___fltol@exp1^0,c
  1278   00155A  500A               	movf	___fltol@exp1^0,w,c
  1279   00155C  A4D8               	btfss	status,2,c
  1280   00155E  EFB3  F00A         	goto	i2u56_41
  1281   001562  EFB5  F00A         	goto	i2u56_40
  1282   001566                     i2u56_41:
  1283   001566  EFBF  F00A         	goto	i2l1266
  1284   00156A                     i2u56_40:
  1285   00156A                     i2l1262:
  1286   00156A  0E00               	movlw	0
  1287   00156C  6E01               	movwf	?___fltol^0,c
  1288   00156E  0E00               	movlw	0
  1289   001570  6E02               	movwf	(?___fltol+1)^0,c
  1290   001572  0E00               	movlw	0
  1291   001574  6E03               	movwf	(?___fltol+2)^0,c
  1292   001576  0E00               	movlw	0
  1293   001578  6E04               	movwf	(?___fltol+3)^0,c
  1294   00157A  EF2C  F00B         	goto	i2l438
  1295   00157E                     i2l1266:
  1296   00157E  C001  F005         	movff	___fltol@f1,??___fltol
  1297   001582  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1298   001586  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1299   00158A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1300   00158E  0E20               	movlw	32
  1301   001590  EFCF  F00A         	goto	i2u57_40
  1302   001594                     i2u57_45:
  1303   001594  90D8               	bcf	status,0,c
  1304   001596  3208               	rrcf	(??___fltol+3)^0,f,c
  1305   001598  3207               	rrcf	(??___fltol+2)^0,f,c
  1306   00159A  3206               	rrcf	(??___fltol+1)^0,f,c
  1307   00159C  3205               	rrcf	??___fltol^0,f,c
  1308   00159E                     i2u57_40:
  1309   00159E  2EE8               	decfsz	wreg,f,c
  1310   0015A0  EFCA  F00A         	goto	i2u57_45
  1311   0015A4  5005               	movf	??___fltol^0,w,c
  1312   0015A6  6E09               	movwf	___fltol@sign1^0,c
  1313   0015A8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1314   0015AA  0EFF               	movlw	255
  1315   0015AC  1601               	andwf	___fltol@f1^0,f,c
  1316   0015AE  0EFF               	movlw	255
  1317   0015B0  1602               	andwf	(___fltol@f1+1)^0,f,c
  1318   0015B2  0EFF               	movlw	255
  1319   0015B4  1603               	andwf	(___fltol@f1+2)^0,f,c
  1320   0015B6  0E00               	movlw	0
  1321   0015B8  1604               	andwf	(___fltol@f1+3)^0,f,c
  1322   0015BA  0E96               	movlw	150
  1323   0015BC  5E0A               	subwf	___fltol@exp1^0,f,c
  1324   0015BE  BE0A               	btfsc	___fltol@exp1^0,7,c
  1325   0015C0  EFE6  F00A         	goto	i2u58_40
  1326   0015C4  EFE4  F00A         	goto	i2u58_41
  1327   0015C8                     i2u58_41:
  1328   0015C8  EFFC  F00A         	goto	i2l1286
  1329   0015CC                     i2u58_40:
  1330   0015CC  500A               	movf	___fltol@exp1^0,w,c
  1331   0015CE  0A80               	xorlw	128
  1332   0015D0  0F97               	addlw	151
  1333   0015D2  B0D8               	btfsc	status,0,c
  1334   0015D4  EFEE  F00A         	goto	i2u59_41
  1335   0015D8  EFF0  F00A         	goto	i2u59_40
  1336   0015DC                     i2u59_41:
  1337   0015DC  EFF2  F00A         	goto	i2l1282
  1338   0015E0                     i2u59_40:
  1339   0015E0  EFB5  F00A         	goto	i2l1262
  1340   0015E4                     i2l1282:
  1341   0015E4  90D8               	bcf	status,0,c
  1342   0015E6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1343   0015E8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1344   0015EA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1345   0015EC  3201               	rrcf	___fltol@f1^0,f,c
  1346   0015EE  3E0A               	incfsz	___fltol@exp1^0,f,c
  1347   0015F0  EFF2  F00A         	goto	i2l1282
  1348   0015F4  EF14  F00B         	goto	i2l1296
  1349   0015F8                     i2l1286:
  1350   0015F8  0E1F               	movlw	31
  1351   0015FA  640A               	cpfsgt	___fltol@exp1^0,c
  1352   0015FC  EF02  F00B         	goto	i2u60_41
  1353   001600  EF04  F00B         	goto	i2u60_40
  1354   001604                     i2u60_41:
  1355   001604  EF0C  F00B         	goto	i2l1294
  1356   001608                     i2u60_40:
  1357   001608  EFB5  F00A         	goto	i2l1262
  1358   00160C                     i2l1292:
  1359   00160C  90D8               	bcf	status,0,c
  1360   00160E  3601               	rlcf	___fltol@f1^0,f,c
  1361   001610  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1362   001612  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1363   001614  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1364   001616  060A               	decf	___fltol@exp1^0,f,c
  1365   001618                     i2l1294:
  1366   001618  500A               	movf	___fltol@exp1^0,w,c
  1367   00161A  A4D8               	btfss	status,2,c
  1368   00161C  EF12  F00B         	goto	i2u61_41
  1369   001620  EF14  F00B         	goto	i2u61_40
  1370   001624                     i2u61_41:
  1371   001624  EF06  F00B         	goto	i2l1292
  1372   001628                     i2u61_40:
  1373   001628                     i2l1296:
  1374   001628  5009               	movf	___fltol@sign1^0,w,c
  1375   00162A  B4D8               	btfsc	status,2,c
  1376   00162C  EF1A  F00B         	goto	i2u62_41
  1377   001630  EF1C  F00B         	goto	i2u62_40
  1378   001634                     i2u62_41:
  1379   001634  EF24  F00B         	goto	i2l1300
  1380   001638                     i2u62_40:
  1381   001638  1E04               	comf	(___fltol@f1+3)^0,f,c
  1382   00163A  1E03               	comf	(___fltol@f1+2)^0,f,c
  1383   00163C  1E02               	comf	(___fltol@f1+1)^0,f,c
  1384   00163E  6C01               	negf	___fltol@f1^0,c
  1385   001640  0E00               	movlw	0
  1386   001642  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1387   001644  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1388   001646  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1389   001648                     i2l1300:
  1390   001648  C001  F001         	movff	___fltol@f1,?___fltol
  1391   00164C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1392   001650  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1393   001654  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1394   001658                     i2l438:
  1395   001658  0012               	return		;funcret
  1396   00165A                     __end_of___fltol:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function ___flmul *****************
  1400 ;; Defined at:
  1401 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  b               4    0[COMRAM] long 
  1404 ;;  a               4    4[COMRAM] long 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  prod            4   19[COMRAM] struct .
  1407 ;;  grs             4   13[COMRAM] unsigned long 
  1408 ;;  temp            2   23[COMRAM] struct .
  1409 ;;  bexp            1   18[COMRAM] unsigned char 
  1410 ;;  aexp            1   17[COMRAM] unsigned char 
  1411 ;;  sign            1   12[COMRAM] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  4    0[COMRAM] unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0, prodl, prodh
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;Total ram usage:       25 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_Send_PWM_Motors
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text10
  1435   001024                     __ptext10:
  1436                           	callstack 0
  1437   001024                     ___flmul:
  1438                           	callstack 23
  1439   001024  5004               	movf	(___flmul@b+3)^0,w,c
  1440   001026  0B80               	andlw	128
  1441   001028  6E0D               	movwf	___flmul@sign^0,c
  1442   00102A  5004               	movf	(___flmul@b+3)^0,w,c
  1443   00102C  2404               	addwf	(___flmul@b+3)^0,w,c
  1444   00102E  6E13               	movwf	___flmul@bexp^0,c
  1445   001030  AE03               	btfss	(___flmul@b+2)^0,7,c
  1446   001032  EF1D  F008         	goto	i2u37_41
  1447   001036  EF1F  F008         	goto	i2u37_40
  1448   00103A                     i2u37_41:
  1449   00103A  EF20  F008         	goto	i2l1136
  1450   00103E                     i2u37_40:
  1451   00103E  8013               	bsf	___flmul@bexp^0,0,c
  1452   001040                     i2l1136:
  1453   001040  5013               	movf	___flmul@bexp^0,w,c
  1454   001042  B4D8               	btfsc	status,2,c
  1455   001044  EF26  F008         	goto	i2u38_41
  1456   001048  EF28  F008         	goto	i2u38_40
  1457   00104C                     i2u38_41:
  1458   00104C  EF3B  F008         	goto	i2l1144
  1459   001050                     i2u38_40:
  1460   001050  2813               	incf	___flmul@bexp^0,w,c
  1461   001052  A4D8               	btfss	status,2,c
  1462   001054  EF2E  F008         	goto	i2u39_41
  1463   001058  EF30  F008         	goto	i2u39_40
  1464   00105C                     i2u39_41:
  1465   00105C  EF38  F008         	goto	i2l1142
  1466   001060                     i2u39_40:
  1467   001060  0E00               	movlw	0
  1468   001062  6E01               	movwf	___flmul@b^0,c
  1469   001064  0E00               	movlw	0
  1470   001066  6E02               	movwf	(___flmul@b+1)^0,c
  1471   001068  0E00               	movlw	0
  1472   00106A  6E03               	movwf	(___flmul@b+2)^0,c
  1473   00106C  0E00               	movlw	0
  1474   00106E  6E04               	movwf	(___flmul@b+3)^0,c
  1475   001070                     i2l1142:
  1476   001070  8E03               	bsf	(___flmul@b+2)^0,7,c
  1477   001072  EF43  F008         	goto	i2l1146
  1478   001076                     i2l1144:
  1479   001076  0E00               	movlw	0
  1480   001078  6E01               	movwf	___flmul@b^0,c
  1481   00107A  0E00               	movlw	0
  1482   00107C  6E02               	movwf	(___flmul@b+1)^0,c
  1483   00107E  0E00               	movlw	0
  1484   001080  6E03               	movwf	(___flmul@b+2)^0,c
  1485   001082  0E00               	movlw	0
  1486   001084  6E04               	movwf	(___flmul@b+3)^0,c
  1487   001086                     i2l1146:
  1488   001086  5008               	movf	(___flmul@a+3)^0,w,c
  1489   001088  0B80               	andlw	128
  1490   00108A  1A0D               	xorwf	___flmul@sign^0,f,c
  1491   00108C  5008               	movf	(___flmul@a+3)^0,w,c
  1492   00108E  2408               	addwf	(___flmul@a+3)^0,w,c
  1493   001090  6E12               	movwf	___flmul@aexp^0,c
  1494   001092  AE07               	btfss	(___flmul@a+2)^0,7,c
  1495   001094  EF4E  F008         	goto	i2u40_41
  1496   001098  EF50  F008         	goto	i2u40_40
  1497   00109C                     i2u40_41:
  1498   00109C  EF51  F008         	goto	i2l1154
  1499   0010A0                     i2u40_40:
  1500   0010A0  8012               	bsf	___flmul@aexp^0,0,c
  1501   0010A2                     i2l1154:
  1502   0010A2  5012               	movf	___flmul@aexp^0,w,c
  1503   0010A4  B4D8               	btfsc	status,2,c
  1504   0010A6  EF57  F008         	goto	i2u41_41
  1505   0010AA  EF59  F008         	goto	i2u41_40
  1506   0010AE                     i2u41_41:
  1507   0010AE  EF6C  F008         	goto	i2l1162
  1508   0010B2                     i2u41_40:
  1509   0010B2  2812               	incf	___flmul@aexp^0,w,c
  1510   0010B4  A4D8               	btfss	status,2,c
  1511   0010B6  EF5F  F008         	goto	i2u42_41
  1512   0010BA  EF61  F008         	goto	i2u42_40
  1513   0010BE                     i2u42_41:
  1514   0010BE  EF69  F008         	goto	i2l1160
  1515   0010C2                     i2u42_40:
  1516   0010C2  0E00               	movlw	0
  1517   0010C4  6E05               	movwf	___flmul@a^0,c
  1518   0010C6  0E00               	movlw	0
  1519   0010C8  6E06               	movwf	(___flmul@a+1)^0,c
  1520   0010CA  0E00               	movlw	0
  1521   0010CC  6E07               	movwf	(___flmul@a+2)^0,c
  1522   0010CE  0E00               	movlw	0
  1523   0010D0  6E08               	movwf	(___flmul@a+3)^0,c
  1524   0010D2                     i2l1160:
  1525   0010D2  8E07               	bsf	(___flmul@a+2)^0,7,c
  1526   0010D4  EF74  F008         	goto	i2l755
  1527   0010D8                     i2l1162:
  1528   0010D8  0E00               	movlw	0
  1529   0010DA  6E05               	movwf	___flmul@a^0,c
  1530   0010DC  0E00               	movlw	0
  1531   0010DE  6E06               	movwf	(___flmul@a+1)^0,c
  1532   0010E0  0E00               	movlw	0
  1533   0010E2  6E07               	movwf	(___flmul@a+2)^0,c
  1534   0010E4  0E00               	movlw	0
  1535   0010E6  6E08               	movwf	(___flmul@a+3)^0,c
  1536   0010E8                     i2l755:
  1537   0010E8  5012               	movf	___flmul@aexp^0,w,c
  1538   0010EA  B4D8               	btfsc	status,2,c
  1539   0010EC  EF7A  F008         	goto	i2u43_41
  1540   0010F0  EF7C  F008         	goto	i2u43_40
  1541   0010F4                     i2u43_41:
  1542   0010F4  EF84  F008         	goto	i2l1166
  1543   0010F8                     i2u43_40:
  1544   0010F8  5013               	movf	___flmul@bexp^0,w,c
  1545   0010FA  A4D8               	btfss	status,2,c
  1546   0010FC  EF82  F008         	goto	i2u44_41
  1547   001100  EF84  F008         	goto	i2u44_40
  1548   001104                     i2u44_41:
  1549   001104  EF8E  F008         	goto	i2l1170
  1550   001108                     i2u44_40:
  1551   001108                     i2l1166:
  1552   001108  0E00               	movlw	0
  1553   00110A  6E01               	movwf	?___flmul^0,c
  1554   00110C  0E00               	movlw	0
  1555   00110E  6E02               	movwf	(?___flmul+1)^0,c
  1556   001110  0E00               	movlw	0
  1557   001112  6E03               	movwf	(?___flmul+2)^0,c
  1558   001114  0E00               	movlw	0
  1559   001116  6E04               	movwf	(?___flmul+3)^0,c
  1560   001118  EF26  F00A         	goto	i2l759
  1561   00111C                     i2l1170:
  1562   00111C  5007               	movf	(___flmul@a+2)^0,w,c
  1563   00111E  0201               	mulwf	___flmul@b^0,c
  1564   001120  CFF3 F018          	movff	prodl,___flmul@temp
  1565   001124  CFF4 F019          	movff	prodh,___flmul@temp+1
  1566   001128  5018               	movf	___flmul@temp^0,w,c
  1567   00112A  6E0E               	movwf	___flmul@grs^0,c
  1568   00112C  6A0F               	clrf	(___flmul@grs+1)^0,c
  1569   00112E  6A10               	clrf	(___flmul@grs+2)^0,c
  1570   001130  6A11               	clrf	(___flmul@grs+3)^0,c
  1571   001132  5019               	movf	(___flmul@temp+1)^0,w,c
  1572   001134  6E14               	movwf	___flmul@prod^0,c
  1573   001136  6A15               	clrf	(___flmul@prod+1)^0,c
  1574   001138  6A16               	clrf	(___flmul@prod+2)^0,c
  1575   00113A  6A17               	clrf	(___flmul@prod+3)^0,c
  1576   00113C  5006               	movf	(___flmul@a+1)^0,w,c
  1577   00113E  0202               	mulwf	(___flmul@b+1)^0,c
  1578   001140  CFF3 F018          	movff	prodl,___flmul@temp
  1579   001144  CFF4 F019          	movff	prodh,___flmul@temp+1
  1580   001148  5018               	movf	___flmul@temp^0,w,c
  1581   00114A  260E               	addwf	___flmul@grs^0,f,c
  1582   00114C  0E00               	movlw	0
  1583   00114E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1584   001150  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1585   001152  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1586   001154  5019               	movf	(___flmul@temp+1)^0,w,c
  1587   001156  2614               	addwf	___flmul@prod^0,f,c
  1588   001158  0E00               	movlw	0
  1589   00115A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1590   00115C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1591   00115E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1592   001160  5005               	movf	___flmul@a^0,w,c
  1593   001162  0203               	mulwf	(___flmul@b+2)^0,c
  1594   001164  CFF3 F018          	movff	prodl,___flmul@temp
  1595   001168  CFF4 F019          	movff	prodh,___flmul@temp+1
  1596   00116C  5018               	movf	___flmul@temp^0,w,c
  1597   00116E  260E               	addwf	___flmul@grs^0,f,c
  1598   001170  0E00               	movlw	0
  1599   001172  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1600   001174  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1601   001176  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1602   001178  5019               	movf	(___flmul@temp+1)^0,w,c
  1603   00117A  2614               	addwf	___flmul@prod^0,f,c
  1604   00117C  0E00               	movlw	0
  1605   00117E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1606   001180  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1607   001182  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1608   001184  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1609   001188  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1610   00118C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1611   001190  6A0E               	clrf	___flmul@grs^0,c
  1612   001192  5005               	movf	___flmul@a^0,w,c
  1613   001194  0202               	mulwf	(___flmul@b+1)^0,c
  1614   001196  CFF3 F018          	movff	prodl,___flmul@temp
  1615   00119A  CFF4 F019          	movff	prodh,___flmul@temp+1
  1616   00119E  5018               	movf	___flmul@temp^0,w,c
  1617   0011A0  260E               	addwf	___flmul@grs^0,f,c
  1618   0011A2  5019               	movf	(___flmul@temp+1)^0,w,c
  1619   0011A4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1620   0011A6  0E00               	movlw	0
  1621   0011A8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1622   0011AA  0E00               	movlw	0
  1623   0011AC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1624   0011AE  5006               	movf	(___flmul@a+1)^0,w,c
  1625   0011B0  0201               	mulwf	___flmul@b^0,c
  1626   0011B2  CFF3 F018          	movff	prodl,___flmul@temp
  1627   0011B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  1628   0011BA  5018               	movf	___flmul@temp^0,w,c
  1629   0011BC  260E               	addwf	___flmul@grs^0,f,c
  1630   0011BE  5019               	movf	(___flmul@temp+1)^0,w,c
  1631   0011C0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1632   0011C2  0E00               	movlw	0
  1633   0011C4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1634   0011C6  0E00               	movlw	0
  1635   0011C8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1636   0011CA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1637   0011CE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1638   0011D2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1639   0011D6  6A0E               	clrf	___flmul@grs^0,c
  1640   0011D8  5005               	movf	___flmul@a^0,w,c
  1641   0011DA  0201               	mulwf	___flmul@b^0,c
  1642   0011DC  CFF3 F018          	movff	prodl,___flmul@temp
  1643   0011E0  CFF4 F019          	movff	prodh,___flmul@temp+1
  1644   0011E4  5018               	movf	___flmul@temp^0,w,c
  1645   0011E6  260E               	addwf	___flmul@grs^0,f,c
  1646   0011E8  5019               	movf	(___flmul@temp+1)^0,w,c
  1647   0011EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1648   0011EC  0E00               	movlw	0
  1649   0011EE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1650   0011F0  0E00               	movlw	0
  1651   0011F2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1652   0011F4  5007               	movf	(___flmul@a+2)^0,w,c
  1653   0011F6  0202               	mulwf	(___flmul@b+1)^0,c
  1654   0011F8  CFF3 F018          	movff	prodl,___flmul@temp
  1655   0011FC  CFF4 F019          	movff	prodh,___flmul@temp+1
  1656   001200  5018               	movf	___flmul@temp^0,w,c
  1657   001202  2614               	addwf	___flmul@prod^0,f,c
  1658   001204  5019               	movf	(___flmul@temp+1)^0,w,c
  1659   001206  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1660   001208  0E00               	movlw	0
  1661   00120A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1662   00120C  0E00               	movlw	0
  1663   00120E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1664   001210  5006               	movf	(___flmul@a+1)^0,w,c
  1665   001212  0203               	mulwf	(___flmul@b+2)^0,c
  1666   001214  CFF3 F018          	movff	prodl,___flmul@temp
  1667   001218  CFF4 F019          	movff	prodh,___flmul@temp+1
  1668   00121C  5018               	movf	___flmul@temp^0,w,c
  1669   00121E  2614               	addwf	___flmul@prod^0,f,c
  1670   001220  5019               	movf	(___flmul@temp+1)^0,w,c
  1671   001222  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1672   001224  0E00               	movlw	0
  1673   001226  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1674   001228  0E00               	movlw	0
  1675   00122A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1676   00122C  5007               	movf	(___flmul@a+2)^0,w,c
  1677   00122E  0203               	mulwf	(___flmul@b+2)^0,c
  1678   001230  CFF3 F018          	movff	prodl,___flmul@temp
  1679   001234  CFF4 F019          	movff	prodh,___flmul@temp+1
  1680   001238  5018               	movf	___flmul@temp^0,w,c
  1681   00123A  6E09               	movwf	??___flmul^0,c
  1682   00123C  5019               	movf	(___flmul@temp+1)^0,w,c
  1683   00123E  6E0A               	movwf	(??___flmul+1)^0,c
  1684   001240  6A0B               	clrf	(??___flmul+2)^0,c
  1685   001242  6A0C               	clrf	(??___flmul+3)^0,c
  1686   001244  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  1687   001248  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  1688   00124C  C009  F00A         	movff	??___flmul,??___flmul+1
  1689   001250  6A09               	clrf	??___flmul^0,c
  1690   001252  5009               	movf	??___flmul^0,w,c
  1691   001254  2614               	addwf	___flmul@prod^0,f,c
  1692   001256  500A               	movf	(??___flmul+1)^0,w,c
  1693   001258  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1694   00125A  500B               	movf	(??___flmul+2)^0,w,c
  1695   00125C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1696   00125E  500C               	movf	(??___flmul+3)^0,w,c
  1697   001260  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1698   001262  C00E  F009         	movff	___flmul@grs,??___flmul
  1699   001266  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  1700   00126A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  1701   00126E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  1702   001272  0E19               	movlw	25
  1703   001274  EF41  F009         	goto	i2u45_40
  1704   001278                     i2u45_45:
  1705   001278  90D8               	bcf	status,0,c
  1706   00127A  320C               	rrcf	(??___flmul+3)^0,f,c
  1707   00127C  320B               	rrcf	(??___flmul+2)^0,f,c
  1708   00127E  320A               	rrcf	(??___flmul+1)^0,f,c
  1709   001280  3209               	rrcf	??___flmul^0,f,c
  1710   001282                     i2u45_40:
  1711   001282  2EE8               	decfsz	wreg,f,c
  1712   001284  EF3C  F009         	goto	i2u45_45
  1713   001288  5009               	movf	??___flmul^0,w,c
  1714   00128A  2614               	addwf	___flmul@prod^0,f,c
  1715   00128C  500A               	movf	(??___flmul+1)^0,w,c
  1716   00128E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1717   001290  500B               	movf	(??___flmul+2)^0,w,c
  1718   001292  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1719   001294  500C               	movf	(??___flmul+3)^0,w,c
  1720   001296  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1721   001298  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1722   00129C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1723   0012A0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1724   0012A4  6A0E               	clrf	___flmul@grs^0,c
  1725   0012A6  5012               	movf	___flmul@aexp^0,w,c
  1726   0012A8  C013  F009         	movff	___flmul@bexp,??___flmul
  1727   0012AC  6A0A               	clrf	(??___flmul+1)^0,c
  1728   0012AE  2609               	addwf	??___flmul^0,f,c
  1729   0012B0  0E00               	movlw	0
  1730   0012B2  220A               	addwfc	(??___flmul+1)^0,f,c
  1731   0012B4  0E82               	movlw	130
  1732   0012B6  2409               	addwf	??___flmul^0,w,c
  1733   0012B8  6E18               	movwf	___flmul@temp^0,c
  1734   0012BA  0EFF               	movlw	255
  1735   0012BC  200A               	addwfc	(??___flmul+1)^0,w,c
  1736   0012BE  6E19               	movwf	(___flmul@temp+1)^0,c
  1737   0012C0  EF77  F009         	goto	i2l1218
  1738   0012C4                     i2l1212:
  1739   0012C4  90D8               	bcf	status,0,c
  1740   0012C6  3614               	rlcf	___flmul@prod^0,f,c
  1741   0012C8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  1742   0012CA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  1743   0012CC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  1744   0012CE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1745   0012D0  EF6C  F009         	goto	i2u46_41
  1746   0012D4  EF6E  F009         	goto	i2u46_40
  1747   0012D8                     i2u46_41:
  1748   0012D8  EF6F  F009         	goto	i2l762
  1749   0012DC                     i2u46_40:
  1750   0012DC  8014               	bsf	___flmul@prod^0,0,c
  1751   0012DE                     i2l762:
  1752   0012DE  90D8               	bcf	status,0,c
  1753   0012E0  360E               	rlcf	___flmul@grs^0,f,c
  1754   0012E2  360F               	rlcf	(___flmul@grs+1)^0,f,c
  1755   0012E4  3610               	rlcf	(___flmul@grs+2)^0,f,c
  1756   0012E6  3611               	rlcf	(___flmul@grs+3)^0,f,c
  1757   0012E8  0618               	decf	___flmul@temp^0,f,c
  1758   0012EA  A0D8               	btfss	status,0,c
  1759   0012EC  0619               	decf	(___flmul@temp+1)^0,f,c
  1760   0012EE                     i2l1218:
  1761   0012EE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  1762   0012F0  EF7C  F009         	goto	i2u47_41
  1763   0012F4  EF7E  F009         	goto	i2u47_40
  1764   0012F8                     i2u47_41:
  1765   0012F8  EF62  F009         	goto	i2l1212
  1766   0012FC                     i2u47_40:
  1767   0012FC  0E00               	movlw	0
  1768   0012FE  6E12               	movwf	___flmul@aexp^0,c
  1769   001300  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1770   001302  EF85  F009         	goto	i2u48_41
  1771   001306  EF87  F009         	goto	i2u48_40
  1772   00130A                     i2u48_41:
  1773   00130A  EFAB  F009         	goto	i2l764
  1774   00130E                     i2u48_40:
  1775   00130E  0EFF               	movlw	255
  1776   001310  140E               	andwf	___flmul@grs^0,w,c
  1777   001312  6E09               	movwf	??___flmul^0,c
  1778   001314  0EFF               	movlw	255
  1779   001316  140F               	andwf	(___flmul@grs+1)^0,w,c
  1780   001318  6E0A               	movwf	(??___flmul+1)^0,c
  1781   00131A  0EFF               	movlw	255
  1782   00131C  1410               	andwf	(___flmul@grs+2)^0,w,c
  1783   00131E  6E0B               	movwf	(??___flmul+2)^0,c
  1784   001320  0E7F               	movlw	127
  1785   001322  1411               	andwf	(___flmul@grs+3)^0,w,c
  1786   001324  6E0C               	movwf	(??___flmul+3)^0,c
  1787   001326  5009               	movf	??___flmul^0,w,c
  1788   001328  100A               	iorwf	(??___flmul+1)^0,w,c
  1789   00132A  100B               	iorwf	(??___flmul+2)^0,w,c
  1790   00132C  100C               	iorwf	(??___flmul+3)^0,w,c
  1791   00132E  B4D8               	btfsc	status,2,c
  1792   001330  EF9C  F009         	goto	i2u49_41
  1793   001334  EF9E  F009         	goto	i2u49_40
  1794   001338                     i2u49_41:
  1795   001338  EFA2  F009         	goto	i2l765
  1796   00133C                     i2u49_40:
  1797   00133C                     i2l1226:
  1798   00133C  0E01               	movlw	1
  1799   00133E  6E12               	movwf	___flmul@aexp^0,c
  1800   001340  EFAB  F009         	goto	i2l764
  1801   001344                     i2l765:
  1802   001344  A014               	btfss	___flmul@prod^0,0,c
  1803   001346  EFA7  F009         	goto	i2u50_41
  1804   00134A  EFA9  F009         	goto	i2u50_40
  1805   00134E                     i2u50_41:
  1806   00134E  EFAB  F009         	goto	i2l764
  1807   001352                     i2u50_40:
  1808   001352  EF9E  F009         	goto	i2l1226
  1809   001356                     i2l764:
  1810   001356  5012               	movf	___flmul@aexp^0,w,c
  1811   001358  B4D8               	btfsc	status,2,c
  1812   00135A  EFB1  F009         	goto	i2u51_41
  1813   00135E  EFB3  F009         	goto	i2u51_40
  1814   001362                     i2u51_41:
  1815   001362  EFD7  F009         	goto	i2l1238
  1816   001366                     i2u51_40:
  1817   001366  0E01               	movlw	1
  1818   001368  2614               	addwf	___flmul@prod^0,f,c
  1819   00136A  0E00               	movlw	0
  1820   00136C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1821   00136E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1822   001370  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1823   001372  A017               	btfss	(___flmul@prod+3)^0,0,c
  1824   001374  EFBE  F009         	goto	i2u52_41
  1825   001378  EFC0  F009         	goto	i2u52_40
  1826   00137C                     i2u52_41:
  1827   00137C  EFD7  F009         	goto	i2l1238
  1828   001380                     i2u52_40:
  1829   001380  C014  F009         	movff	___flmul@prod,??___flmul
  1830   001384  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  1831   001388  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  1832   00138C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  1833   001390  340C               	rlcf	(??___flmul+3)^0,w,c
  1834   001392  320C               	rrcf	(??___flmul+3)^0,f,c
  1835   001394  320B               	rrcf	(??___flmul+2)^0,f,c
  1836   001396  320A               	rrcf	(??___flmul+1)^0,f,c
  1837   001398  3209               	rrcf	??___flmul^0,f,c
  1838   00139A  C009  F014         	movff	??___flmul,___flmul@prod
  1839   00139E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  1840   0013A2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  1841   0013A6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  1842   0013AA  4A18               	infsnz	___flmul@temp^0,f,c
  1843   0013AC  2A19               	incf	(___flmul@temp+1)^0,f,c
  1844   0013AE                     i2l1238:
  1845   0013AE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1846   0013B0  EFE2  F009         	goto	i2u53_41
  1847   0013B4  5019               	movf	(___flmul@temp+1)^0,w,c
  1848   0013B6  E108               	bnz	i2u53_40
  1849   0013B8  2818               	incf	___flmul@temp^0,w,c
  1850   0013BA  A0D8               	btfss	status,0,c
  1851   0013BC  EFE2  F009         	goto	i2u53_41
  1852   0013C0  EFE4  F009         	goto	i2u53_40
  1853   0013C4                     i2u53_41:
  1854   0013C4  EFEE  F009         	goto	i2l1242
  1855   0013C8                     i2u53_40:
  1856   0013C8  0E00               	movlw	0
  1857   0013CA  6E14               	movwf	___flmul@prod^0,c
  1858   0013CC  0E00               	movlw	0
  1859   0013CE  6E15               	movwf	(___flmul@prod+1)^0,c
  1860   0013D0  0E80               	movlw	128
  1861   0013D2  6E16               	movwf	(___flmul@prod+2)^0,c
  1862   0013D4  0E7F               	movlw	127
  1863   0013D6  6E17               	movwf	(___flmul@prod+3)^0,c
  1864   0013D8  EF1C  F00A         	goto	i2l1254
  1865   0013DC                     i2l1242:
  1866   0013DC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1867   0013DE  EFFB  F009         	goto	i2u54_40
  1868   0013E2  5019               	movf	(___flmul@temp+1)^0,w,c
  1869   0013E4  E106               	bnz	i2u54_41
  1870   0013E6  0418               	decf	___flmul@temp^0,w,c
  1871   0013E8  B0D8               	btfsc	status,0,c
  1872   0013EA  EFF9  F009         	goto	i2u54_41
  1873   0013EE  EFFB  F009         	goto	i2u54_40
  1874   0013F2                     i2u54_41:
  1875   0013F2  EF07  F00A         	goto	i2l772
  1876   0013F6                     i2u54_40:
  1877   0013F6  0E00               	movlw	0
  1878   0013F8  6E14               	movwf	___flmul@prod^0,c
  1879   0013FA  0E00               	movlw	0
  1880   0013FC  6E15               	movwf	(___flmul@prod+1)^0,c
  1881   0013FE  0E00               	movlw	0
  1882   001400  6E16               	movwf	(___flmul@prod+2)^0,c
  1883   001402  0E00               	movlw	0
  1884   001404  6E17               	movwf	(___flmul@prod+3)^0,c
  1885   001406  0E00               	movlw	0
  1886   001408  6E0D               	movwf	___flmul@sign^0,c
  1887   00140A  EF1C  F00A         	goto	i2l1254
  1888   00140E                     i2l772:
  1889   00140E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  1890   001412  0EFF               	movlw	255
  1891   001414  1614               	andwf	___flmul@prod^0,f,c
  1892   001416  0EFF               	movlw	255
  1893   001418  1615               	andwf	(___flmul@prod+1)^0,f,c
  1894   00141A  0E7F               	movlw	127
  1895   00141C  1616               	andwf	(___flmul@prod+2)^0,f,c
  1896   00141E  0E00               	movlw	0
  1897   001420  1617               	andwf	(___flmul@prod+3)^0,f,c
  1898   001422  A013               	btfss	___flmul@bexp^0,0,c
  1899   001424  EF16  F00A         	goto	i2u55_41
  1900   001428  EF18  F00A         	goto	i2u55_40
  1901   00142C                     i2u55_41:
  1902   00142C  EF19  F00A         	goto	i2l1252
  1903   001430                     i2u55_40:
  1904   001430  8E16               	bsf	(___flmul@prod+2)^0,7,c
  1905   001432                     i2l1252:
  1906   001432  90D8               	bcf	status,0,c
  1907   001434  3013               	rrcf	___flmul@bexp^0,w,c
  1908   001436  6E17               	movwf	(___flmul@prod+3)^0,c
  1909   001438                     i2l1254:
  1910   001438  500D               	movf	___flmul@sign^0,w,c
  1911   00143A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  1912   00143C  C014  F001         	movff	___flmul@prod,?___flmul
  1913   001440  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  1914   001444  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  1915   001448  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  1916   00144C                     i2l759:
  1917   00144C  0012               	return		;funcret
  1918   00144E                     __end_of___flmul:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _Manage_Motor_Direction *****************
  1922 ;; Defined at:
  1923 ;;		line 193 in file "main.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  in1             1    wreg     unsigned char 
  1926 ;;  in2             1    0[COMRAM] unsigned char 
  1927 ;;  in3             1    1[COMRAM] unsigned char 
  1928 ;;  in4             1    2[COMRAM] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  in1             1    3[COMRAM] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        4 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_Bluetooth_Interrupt
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text11
  1954   001898                     __ptext11:
  1955                           	callstack 0
  1956   001898                     _Manage_Motor_Direction:
  1957                           	callstack 24
  1958                           
  1959                           ;incstack = 0
  1960                           ;Manage_Motor_Direction@in1 stored from wreg
  1961   001898  6E04               	movwf	Manage_Motor_Direction@in1^0,c
  1962   00189A                     
  1963                           ;main.c: 195:     LATDbits.LD4 = in1;
  1964   00189A  B004               	btfsc	Manage_Motor_Direction@in1^0,0,c
  1965   00189C  D002               	bra	i2u63_45
  1966   00189E  988C               	bcf	140,4,c	;volatile
  1967   0018A0  D001               	bra	i2u63_46
  1968   0018A2                     i2u63_45:
  1969   0018A2  888C               	bsf	140,4,c	;volatile
  1970   0018A4                     i2u63_46:
  1971   0018A4                     
  1972                           ;main.c: 196:     LATDbits.LD5 = in2;
  1973   0018A4  B001               	btfsc	Manage_Motor_Direction@in2^0,0,c
  1974   0018A6  D002               	bra	i2u64_45
  1975   0018A8  9A8C               	bcf	140,5,c	;volatile
  1976   0018AA  D001               	bra	i2u64_46
  1977   0018AC                     i2u64_45:
  1978   0018AC  8A8C               	bsf	140,5,c	;volatile
  1979   0018AE                     i2u64_46:
  1980   0018AE                     
  1981                           ;main.c: 197:     LATDbits.LD6 = in3;
  1982   0018AE  B002               	btfsc	Manage_Motor_Direction@in3^0,0,c
  1983   0018B0  D002               	bra	i2u65_45
  1984   0018B2  9C8C               	bcf	140,6,c	;volatile
  1985   0018B4  D001               	bra	i2u65_46
  1986   0018B6                     i2u65_45:
  1987   0018B6  8C8C               	bsf	140,6,c	;volatile
  1988   0018B8                     i2u65_46:
  1989   0018B8                     
  1990                           ;main.c: 198:     LATDbits.LD7 = in4;
  1991   0018B8  B003               	btfsc	Manage_Motor_Direction@in4^0,0,c
  1992   0018BA  D002               	bra	i2u66_45
  1993   0018BC  9E8C               	bcf	140,7,c	;volatile
  1994   0018BE  D001               	bra	i2u66_46
  1995   0018C0                     i2u66_45:
  1996   0018C0  8E8C               	bsf	140,7,c	;volatile
  1997   0018C2                     i2u66_46:
  1998   0018C2  0012               	return		;funcret
  1999   0018C4                     __end_of_Manage_Motor_Direction:
  2000                           	callstack 0
  2001                           
  2002                           	psect	rparam
  2003   000000                     
  2004                           	psect	temp
  2005   000034                     btemp:
  2006                           	callstack 0
  2007   000034                     	ds	1
  2008   000000                     int$flags	set	btemp
  2009   000000                     wtemp8	set	btemp+1
  2010   000000                     ttemp5	set	btemp+1
  2011   000000                     ttemp6	set	btemp+4
  2012   000000                     ttemp7	set	btemp+8
  2013                           
  2014                           	psect	config
  2015                           
  2016                           ; Padding undefined space
  2017   300000                     	org	3145728
  2018   300000  FF                 	db	255
  2019                           
  2020                           ;Config register CONFIG1H @ 0x300001
  2021                           ;	Oscillator Selection bits
  2022                           ;	FOSC = INTIO67, Internal oscillator block
  2023                           ;	4X PLL Enable
  2024                           ;	PLLCFG = OFF, Oscillator used directly
  2025                           ;	Primary clock enable bit
  2026                           ;	PRICLKEN = ON, Primary clock is always enabled
  2027                           ;	Fail-Safe Clock Monitor Enable bit
  2028                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2029                           ;	Internal/External Oscillator Switchover bit
  2030                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2031   300001                     	org	3145729
  2032   300001  28                 	db	40
  2033                           
  2034                           ;Config register CONFIG2L @ 0x300002
  2035                           ;	Power-up Timer Enable bit
  2036                           ;	PWRTEN = OFF, Power up timer disabled
  2037                           ;	Brown-out Reset Enable bits
  2038                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2039                           ;	Brown Out Reset Voltage bits
  2040                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2041   300002                     	org	3145730
  2042   300002  1F                 	db	31
  2043                           
  2044                           ;Config register CONFIG2H @ 0x300003
  2045                           ;	Watchdog Timer Enable bits
  2046                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2047                           ;	Watchdog Timer Postscale Select bits
  2048                           ;	WDTPS = 32768, 1:32768
  2049   300003                     	org	3145731
  2050   300003  3C                 	db	60
  2051                           
  2052                           ; Padding undefined space
  2053   300004                     	org	3145732
  2054   300004  FF                 	db	255
  2055                           
  2056                           ;Config register CONFIG3H @ 0x300005
  2057                           ;	CCP2 MUX bit
  2058                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2059                           ;	PORTB A/D Enable bit
  2060                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2061                           ;	P3A/CCP3 Mux bit
  2062                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2063                           ;	HFINTOSC Fast Start-up
  2064                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2065                           ;	Timer3 Clock input mux bit
  2066                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2067                           ;	ECCP2 B output mux bit
  2068                           ;	P2BMX = PORTD2, P2B is on RD2
  2069                           ;	MCLR Pin Enable bit
  2070                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2071   300005                     	org	3145733
  2072   300005  BB                 	db	187
  2073                           
  2074                           ;Config register CONFIG4L @ 0x300006
  2075                           ;	Stack Full/Underflow Reset Enable bit
  2076                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2077                           ;	Single-Supply ICSP Enable bit
  2078                           ;	LVP = OFF, Single-Supply ICSP disabled
  2079                           ;	Extended Instruction Set Enable bit
  2080                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2081                           ;	Background Debug
  2082                           ;	DEBUG = 0x1, unprogrammed default
  2083   300006                     	org	3145734
  2084   300006  81                 	db	129
  2085                           
  2086                           ; Padding undefined space
  2087   300007                     	org	3145735
  2088   300007  FF                 	db	255
  2089                           
  2090                           ;Config register CONFIG5L @ 0x300008
  2091                           ;	Code Protection Block 0
  2092                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2093                           ;	Code Protection Block 1
  2094                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2095                           ;	Code Protection Block 2
  2096                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2097                           ;	Code Protection Block 3
  2098                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2099   300008                     	org	3145736
  2100   300008  0F                 	db	15
  2101                           
  2102                           ;Config register CONFIG5H @ 0x300009
  2103                           ;	Boot Block Code Protection bit
  2104                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2105                           ;	Data EEPROM Code Protection bit
  2106                           ;	CPD = OFF, Data EEPROM not code-protected
  2107   300009                     	org	3145737
  2108   300009  C0                 	db	192
  2109                           
  2110                           ;Config register CONFIG6L @ 0x30000A
  2111                           ;	Write Protection Block 0
  2112                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2113                           ;	Write Protection Block 1
  2114                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2115                           ;	Write Protection Block 2
  2116                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2117                           ;	Write Protection Block 3
  2118                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2119   30000A                     	org	3145738
  2120   30000A  0F                 	db	15
  2121                           
  2122                           ;Config register CONFIG6H @ 0x30000B
  2123                           ;	Configuration Register Write Protection bit
  2124                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2125                           ;	Boot Block Write Protection bit
  2126                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2127                           ;	Data EEPROM Write Protection bit
  2128                           ;	WRTD = OFF, Data EEPROM not write-protected
  2129   30000B                     	org	3145739
  2130   30000B  E0                 	db	224
  2131                           
  2132                           ;Config register CONFIG7L @ 0x30000C
  2133                           ;	Table Read Protection Block 0
  2134                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2135                           ;	Table Read Protection Block 1
  2136                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2137                           ;	Table Read Protection Block 2
  2138                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2139                           ;	Table Read Protection Block 3
  2140                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2141   30000C                     	org	3145740
  2142   30000C  0F                 	db	15
  2143                           
  2144                           ;Config register CONFIG7H @ 0x30000D
  2145                           ;	Boot Block Table Read Protection bit
  2146                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2147   30000D                     	org	3145741
  2148   30000D  40                 	db	64
  2149                           tosu	equ	0xFFF
  2150                           tosh	equ	0xFFE
  2151                           tosl	equ	0xFFD
  2152                           stkptr	equ	0xFFC
  2153                           pclatu	equ	0xFFB
  2154                           pclath	equ	0xFFA
  2155                           pcl	equ	0xFF9
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           prodh	equ	0xFF4
  2161                           prodl	equ	0xFF3
  2162                           indf0	equ	0xFEF
  2163                           postinc0	equ	0xFEE
  2164                           postdec0	equ	0xFED
  2165                           preinc0	equ	0xFEC
  2166                           plusw0	equ	0xFEB
  2167                           fsr0h	equ	0xFEA
  2168                           fsr0l	equ	0xFE9
  2169                           wreg	equ	0xFE8
  2170                           indf1	equ	0xFE7
  2171                           postinc1	equ	0xFE6
  2172                           postdec1	equ	0xFE5
  2173                           preinc1	equ	0xFE4
  2174                           plusw1	equ	0xFE3
  2175                           fsr1h	equ	0xFE2
  2176                           fsr1l	equ	0xFE1
  2177                           bsr	equ	0xFE0
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           postdec2	equ	0xFDD
  2181                           preinc2	equ	0xFDC
  2182                           plusw2	equ	0xFDB
  2183                           fsr2h	equ	0xFDA
  2184                           fsr2l	equ	0xFD9
  2185                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Bluetooth_Interrupt->_Send_PWM_Motors
    _Send_PWM_Motors->___flmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     917
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     917
                                             40 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     917
                                             38 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             36 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         2     2      0    3701
                                             33 COMRAM     2     2      0
                _Bluetooth_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Bluetooth_Interrupt                                  0     0      0    3701
             _Manage_Motor_Direction
                    _Send_PWM_Motors
 ---------------------------------------------------------------------------------
 (7) _Send_PWM_Motors                                      8     0      8    2929
                                             25 COMRAM     8     0      8
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    1896
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Motor_Direction                               4     1      3     772
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Bluetooth_Interrupt
     _Manage_Motor_Direction
     _Send_PWM_Motors
       ___flmul
       ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      33       1       54.3%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRlhhlhh     14      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlhhlhh      8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhhll       6      0       0      44        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRlhhlhh      1      0       0      40        0.0%
BITBIGSFRlhhlhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      50        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Mar 08 16:15:24 2024

                              l80 191E                                l95 185A                                l79 191E  
                              bsr 0FE0                               l132 1896                               l126 17F2  
                             l129 18FC                               l820 1874                               l822 1884  
                             l814 185E                               l824 1886                               l816 1860  
                             l818 1870                               _PR2 0FBB                               u737 175C  
                             u675 18EC                               u747 177A                               u676 18EE  
                             u757 1794                               u767 17E4                               u777 1866  
                             u787 187A                               u797 188C                               wreg 0FE8  
                      _TXSTA1bits 0FAC                      ___flmul@aexp 0012                      ___flmul@bexp 0013  
                    ___flmul@sign 000D                      ___flmul@temp 0018                      ___flmul@prod 0014  
                    ___fltol@exp1 000A                              l1030 1812                              l1040 1824  
                            l1032 1814                              l1024 17F4                              l1050 1832  
                            l1042 1826                              l1034 181E                              l1026 1806  
                            l1060 183C                              l1052 1834                              l1044 182C  
                            l1036 1820                              l1028 1808                              l1062 183E  
                            l1054 1836                              l1046 182E                              l1038 1822  
                            l1064 1858                              l1056 1838                              l1048 1830  
                            l1058 183A                              l1322 18E4                              l1330 176A  
                            l1324 18EE                              l1340 17B2                              l1332 1774  
                            l1326 18F6                              l1342 17BC                              l1334 178E  
                            l1344 17C6                              l1336 179E                              l1328 1752  
                            l1346 17D0                              l1338 17A8                              l1348 17DA  
                            l1372 1916                              l1374 191A                              STR_1 1012  
                            STR_2 1001                              _LATD 0F8C                              _LATE 0F8D  
                            i1l92 001E                              i2l87 190A                              _main 1916  
                            btemp 0034                              prodh 0FF4                              prodl 0FF3  
                            start 0026                      ___param_bank 0000               _Bluetooth_Interrupt 165A  
                 _LCD_Instruction 185C  Send_Instruction_Data@Instruction 0028                      _BAUDCON1bits 0FB8  
                   ___fltol@sign1 0009                             ?_main 0001                   __end_of___flmul 144E  
                 __end_of___fltol 165A                             _T2CON 0FBA                             i2l100 1750  
                           i2l110 18C2                             i2l104 1750                             i2l107 1552  
                           i2l438 1658                             i2l762 12DE                             i2l755 10E8  
                           i2l772 140E                             i2l764 1356                             i2l765 1344  
                           i2l759 144C                             _SPBRG 0FAF                             _TRISD 0F95  
                           _TRISE 0F96              ?_Bluetooth_Interrupt 0001                             ttemp5 0035  
                           ttemp6 0038                             ttemp7 003C                             status 0FD8  
                           wtemp8 0035                   __initialization 18C4                      __end_of_main 1926  
                __end_of_Init_LCD 17F4             _Send_Instruction_Data 18E2          ??_Manage_Motor_Direction 0004  
                          ??_main 002B                     __activetblptr 0001             ??_Bluetooth_Interrupt 0022  
                          _CCPR3L 0F5E                            _CCPR5L 0F55                            _ANSELC 0F3A  
                          _ANSELD 0F3B                            _ANSELE 0F3C                            i2l1200 1210  
                          i2l1210 12A6                            i2l1202 121C                            i2l1130 1024  
                          i2l1220 12FC                            i2l1212 12C4                            i2l1204 1238  
                          i2l1140 1060                            i2l1132 1030                            i2l1300 1648  
                          i2l1230 1366                            i2l1222 1300                            i2l1214 12CE  
                          i2l1206 1262                            i2l1150 1092                            i2l1142 1070  
                          i2l1134 103E                            i2l1310 1504                            i2l1320 18B8  
                          i2l1240 13C8                            i2l1232 1372                            i2l1224 130E  
                          i2l1216 12DC                            i2l1208 1298                            i2l1160 10D2  
                          i2l1152 10A0                            i2l1144 1076                            i2l1136 1040  
                          i2l1312 152A                            i2l1304 144E                            i2l1314 189A  
                          i2l1250 1430                            i2l1242 13DC                            i2l1234 1380  
                          i2l1226 133C                            i2l1218 12EE                            i2l1170 111C  
                          i2l1162 10D8                            i2l1154 10A2                            i2l1146 1086  
                          i2l1138 1050                            i2l1306 1482                            i2l1316 18A4  
                          i2l1252 1432                            i2l1244 13F6                            i2l1236 13AA  
                          i2l1180 116C                            i2l1172 1128                            i2l1164 10F8  
                          i2l1156 10B2                            i2l1148 108C                            i2l1260 1554  
                          i2l1308 14A8                            i2l1318 18AE                            i2l1246 1412  
                          i2l1254 1438                            i2l1238 13AE                            i2l1190 11AE  
                          i2l1182 1178                            i2l1174 1132                            i2l1166 1108  
                          i2l1158 10C2                            i2l1270 15AA                            i2l1262 156A  
                          i2l1350 165A                            i2l1256 143C                            i2l1248 1422  
                          i2l1192 11BA                            i2l1184 1184                            i2l1176 1148  
                          i2l1272 15BA                            i2l1360 16B8                            i2l1352 1668  
                          i2l1194 11CA                            i2l1186 1192                            i2l1178 1154  
                          i2l1282 15E4                            i2l1274 15BE                            i2l1266 157E  
                          i2l1370 173A                            i2l1362 16CA                            i2l1354 166C  
                          i2l1196 11E4                            i2l1188 119E                            i2l1292 160C  
                          i2l1284 15EE                            i2l1276 15CC                            i2l1268 15A8  
                          i2l1364 16EE                            i2l1356 167E                            i2l1198 11F4  
                          i2l1294 1618                            i2l1286 15F8                            i2l1366 1704  
                          i2l1358 16A2                            i2l1296 1628                            i2l1368 1716  
                          i2l1376 1906                            i2l1298 1638                            _RCREG1 0FAE  
      LCD_Instruction@Instruction 0026                            _OSCCON 0FD3                     ?_Interrupt_Rx 0001  
         __end_of_LCD_Instruction 1898                         ??___flmul 0009                         ??___fltol 0005  
                          clear_0 18CA                            isa$std 0001                 ??_Send_PWM_Motors 0022  
                    __mediumconst 0000                            tblptrh 0FF7                            tblptru 0FF8  
                      __accesstop 0060           __end_of__initialization 18D0                    ??_Interrupt_Rx 0022  
                   ___rparam_used 0001                        ___fltol@f1 0001                    __pcstackCOMRAM 0001  
          ?_Send_Instruction_Data 0027                       _Duty_Cycle1 002F                       _Duty_Cycle2 002B  
               __end_of_Interrupt 0026                         ?_Init_LCD 0001                  ?_LCD_Instruction 0001  
                         _CCP3CON 0F5D                           _CCP5CON 0F54                           i2u40_40 10A0  
                         i2u40_41 109C                           i2u41_40 10B2                           i2u41_41 10AE  
                         i2u50_40 1352                           i2u42_40 10C2                           i2u50_41 134E  
                         i2u42_41 10BE                           i2u51_40 1366                           i2u43_40 10F8  
                         i2u51_41 1362                           i2u43_41 10F4                           i2u52_40 1380  
                         i2u44_40 1108                           i2u60_40 1608                           i2u52_41 137C  
                         i2u44_41 1104                           i2u60_41 1604                           i2u53_40 13C8  
                         i2u45_40 1282                           i2u37_40 103E                           i2u61_40 1628  
                         i2u53_41 13C4                           i2u37_41 103A                           i2u61_41 1624  
                         i2u45_45 1278                           i2u54_40 13F6                           i2u46_40 12DC  
                         i2u38_40 1050                           i2u62_40 1638                           i2u70_40 16CA  
                         i2u54_41 13F2                           i2u46_41 12D8                           i2u38_41 104C  
                         i2u62_41 1634                           i2u70_41 16C6                           i2u55_40 1430  
                         i2u47_40 12FC                           i2u39_40 1060                           i2u71_40 1716  
                         i2u55_41 142C                           i2u47_41 12F8                           i2u39_41 105C  
                         i2u71_41 1712                           i2u63_45 18A2                           i2u63_46 18A4  
                         i2u48_40 130E                           i2u56_40 156A                           i2u48_41 130A  
                         i2u56_41 1566                           i2u64_45 18AC                           i2u64_46 18AE  
                         i2u49_40 133C                           i2u57_40 159E                           i2u49_41 1338  
                         i2u65_45 18B6                           i2u57_45 1594                           i2u65_46 18B8  
                         i2u58_40 15CC                           i2u58_41 15C8                           i2u66_45 18C0  
                         i2u66_46 18C2                           i2u59_40 15E0                           i2u59_41 15DC  
                         i2u68_40 1668                           i2u68_41 1664                           i2u69_40 167E  
                         i2u69_41 167A                        ??_Init_LCD 0029            _Manage_Motor_Direction 1898  
                         __Hparam 0000                           __Lparam 0000                           ___flmul 1024  
                         ___fltol 1554                      __psmallconst 1000                           __pcinit 18C4  
                         __ramtop 1000                           __ptext0 1916                           __ptext1 1752  
                         __ptext2 18E2                           __ptext3 185C                           __ptext4 17F4  
                         __ptext7 165A                           __ptext8 144E                           __ptext9 1554  
            __end_of_Interrupt_Rx 1916                         _T2CONbits 0FBA                    __pintcode_body 18FE  
            end_of_initialization 18D0                           int_func 18FE                   _Send_PWM_Motors 144E  
                       _RCSTAbits 0FAB                           postinc0 0FEE       __end_of_Bluetooth_Interrupt 1752  
                       _TRISCbits 0F94                       ___flmul@grs 000E           ??_Send_Instruction_Data 0028  
             start_initialization 18C4         Send_Instruction_Data@Data 0027                    _Configurations 17F4  
                       _Interrupt 0018           __end_of_Send_PWM_Motors 1554                         _Rx_Buffer 0033  
                       ___flmul@a 0005                         ___flmul@b 0001                       __pbssCOMRAM 002B  
          __end_of_Configurations 185C           ?_Manage_Motor_Direction 0001                        ?_Interrupt 0001  
                    _Interrupt_Rx 0008                         __pintcode 0008                          ?___flmul 0001  
                        ?___fltol 0001                       __pintcodelo 0018                       __smallconst 1000  
                 ?_Configurations 0001    __end_of_Manage_Motor_Direction 18C4                  ?_Send_PWM_Motors 001A  
                        _LATCbits 0F8B                          _LATDbits 0F8C                          _PIE1bits 0F9D  
                        _PIR1bits 0F9E                          _RCONbits 0FD0                       ??_Interrupt 0024  
                        _Init_LCD 1752                          __Hrparam 0000                          __Lrparam 0000  
                    __Lsmallconst 1000     __end_of_Send_Instruction_Data 18FE                 ??_LCD_Instruction 0025  
       Send_PWM_Motors@PWM_LMotor 001E                          __ptext10 1024                          __ptext11 1898  
       Send_PWM_Motors@PWM_RMotor 001A                          isa$xinst 0000                          int$flags 0034  
                      _INTCONbits 0FF2                          intlevel1 0000                          intlevel2 0000  
                ??_Configurations 0025         Manage_Motor_Direction@in1 0004         Manage_Motor_Direction@in2 0001  
       Manage_Motor_Direction@in3 0002         Manage_Motor_Direction@in4 0003  
