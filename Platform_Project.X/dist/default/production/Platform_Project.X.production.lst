

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 28 12:55:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F46K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _LATEbits	set	3981
    63   000000                     _T2CONbits	set	4026
    64   000000                     _ANSELC	set	3898
    65   000000                     _PIR1bits	set	3998
    66   000000                     _RCSTAbits	set	4011
    67   000000                     _TXSTA1bits	set	4012
    68   000000                     _SPBRG	set	4015
    69   000000                     _RCONbits	set	4048
    70   000000                     _OSCCON	set	4051
    71   000000                     _INTCONbits	set	4082
    72   000000                     _CCP5CON	set	3924
    73   000000                     _CCP3CON	set	3933
    74   000000                     _LATCbits	set	3979
    75   000000                     _TRISCbits	set	3988
    76   000000                     _ANSELE	set	3900
    77   000000                     _ANSELD	set	3899
    78   000000                     _PIE1bits	set	3997
    79   000000                     _TRISE	set	3990
    80   000000                     _TRISD	set	3989
    81   000000                     _LATE	set	3981
    82   000000                     _LATD	set	3980
    83   000000                     _BAUDCON1bits	set	4024
    84   000000                     _RCREG1	set	4014
    85   000000                     _T2CON	set	4026
    86   000000                     _PR2	set	4027
    87   000000                     _CCPR3L	set	3934
    88   000000                     _CCPR5L	set	3925
    89                           
    90                           	psect	smallconst
    91   001000                     __psmallconst:
    92                           	callstack 0
    93   001000  00                 	db	0
    94   001001                     STR_2:
    95   001001  52                 	db	82	;'R'
    96   001002  6F                 	db	111	;'o'
    97   001003  62                 	db	98	;'b'
    98   001004  6F                 	db	111	;'o'
    99   001005  74                 	db	116	;'t'
   100   001006  69                 	db	105	;'i'
   101   001007  63                 	db	99	;'c'
   102   001008  20                 	db	32
   103   001009  50                 	db	80	;'P'
   104   00100A  6C                 	db	108	;'l'
   105   00100B  61                 	db	97	;'a'
   106   00100C  74                 	db	116	;'t'
   107   00100D  66                 	db	102	;'f'
   108   00100E  6F                 	db	111	;'o'
   109   00100F  72                 	db	114	;'r'
   110   001010  6D                 	db	109	;'m'
   111   001011  00                 	db	0
   112   001012                     STR_1:
   113   001012  52                 	db	82	;'R'
   114   001013  65                 	db	101	;'e'
   115   001014  73                 	db	115	;'s'
   116   001015  65                 	db	101	;'e'
   117   001016  61                 	db	97	;'a'
   118   001017  72                 	db	114	;'r'
   119   001018  63                 	db	99	;'c'
   120   001019  68                 	db	104	;'h'
   121   00101A  20                 	db	32
   122   00101B  50                 	db	80	;'P'
   123   00101C  72                 	db	114	;'r'
   124   00101D  6F                 	db	111	;'o'
   125   00101E  6A                 	db	106	;'j'
   126   00101F  65                 	db	101	;'e'
   127   001020  63                 	db	99	;'c'
   128   001021  74                 	db	116	;'t'
   129   001022  00                 	db	0
   130   001023  00                 	db	0	; dummy byte at the end
   131   000000                     
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135   0012CE                     __pcinit:
   136                           	callstack 0
   137   0012CE                     start_initialization:
   138                           	callstack 0
   139   0012CE                     __initialization:
   140                           	callstack 0
   141                           
   142                           ; Clear objects allocated to COMRAM (1 bytes)
   143   0012CE  6A13               	clrf	__pbssCOMRAM& (0+255),c
   144   0012D0                     end_of_initialization:
   145                           	callstack 0
   146   0012D0                     __end_of__initialization:
   147                           	callstack 0
   148   0012D0  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   149   0012D2  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   150   0012D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   151   0012D6  6EF8               	movwf	tblptru,c
   152   0012D8  0100               	movlb	0
   153   0012DA  EF6F  F009         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMRAM
   156   000013                     __pbssCOMRAM:
   157                           	callstack 0
   158   000013                     _Rx_Buffer:
   159                           	callstack 0
   160   000013                     	ds	1
   161                           
   162                           	psect	cstackCOMRAM
   163   000001                     __pcstackCOMRAM:
   164                           	callstack 0
   165   000001                     ??i2_LCD_Instruction:
   166   000001                     Moving_Platform@Command:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x0
   170   000001                     	ds	1
   171   000002                     i2LCD_Instruction@Instruction:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x1
   175   000002                     	ds	1
   176   000003                     i2Send_Instruction_Data@Data:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x2
   180   000003                     	ds	1
   181   000004                     i2Send_Instruction_Data@Instruction:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x3
   185   000004                     	ds	1
   186   000005                     Send_String@String:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x4
   190   000005                     	ds	1
   191   000006                     ??_Send_String:
   192                           
   193                           ; 1 bytes @ 0x5
   194   000006                     	ds	1
   195   000007                     Send_String@i:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x6
   199   000007                     	ds	1
   200   000008                     ??_Interrupt_Rx:
   201                           
   202                           ; 1 bytes @ 0x7
   203   000008                     	ds	4
   204   00000C                     ??_Interrupt:
   205                           
   206                           ; 1 bytes @ 0xB
   207   00000C                     	ds	1
   208   00000D                     ??_LCD_Instruction:
   209                           
   210                           ; 1 bytes @ 0xC
   211   00000D                     	ds	1
   212   00000E                     LCD_Instruction@Instruction:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xD
   216   00000E                     	ds	1
   217   00000F                     Send_Instruction_Data@Data:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xE
   221   00000F                     	ds	1
   222   000010                     Send_Instruction_Data@Instruction:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0xF
   226   000010                     	ds	1
   227   000011                     ??_Init_LCD:
   228                           
   229                           ; 1 bytes @ 0x10
   230   000011                     	ds	2
   231   000013                     
   232                           ; 1 bytes @ 0x12
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 35 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 10
   258 ;; This function calls:
   259 ;;		_Configurations
   260 ;;		_Init_LCD
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           	psect	text0
   267   0012DE                     __ptext0:
   268                           	callstack 0
   269   0012DE                     _main:
   270                           	callstack 21
   271   0012DE                     
   272                           ;main.c: 38:     Configurations();
   273   0012DE  EC63  F008         	call	_Configurations	;wreg free
   274   0012E2                     
   275                           ;main.c: 39:     Init_LCD();
   276   0012E2  EC12  F008         	call	_Init_LCD	;wreg free
   277   0012E6                     l75:
   278   0012E6  EF73  F009         	goto	l75
   279   0012EA  EF13  F000         	goto	start
   280   0012EE                     __end_of_main:
   281                           	callstack 0
   282                           
   283 ;; *************** function _Init_LCD *****************
   284 ;; Defined at:
   285 ;;		line 5 in file "LCD_Library.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;Total ram usage:        2 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; Hardware stack levels required when called: 9
   306 ;; This function calls:
   307 ;;		_Send_Instruction_Data
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text1
   314   001024                     __ptext1:
   315                           	callstack 0
   316   001024                     _Init_LCD:
   317                           	callstack 21
   318   001024                     
   319                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   320   001024  0E03               	movlw	3
   321   001026  6E12               	movwf	(??_Init_LCD+1)^0,c
   322   001028  0E08               	movlw	8
   323   00102A  6E11               	movwf	??_Init_LCD^0,c
   324   00102C  0E77               	movlw	119
   325   00102E                     u97:
   326   00102E  2EE8               	decfsz	wreg,f,c
   327   001030  D7FE               	bra	u97
   328   001032  2E11               	decfsz	??_Init_LCD^0,f,c
   329   001034  D7FC               	bra	u97
   330   001036  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
   331   001038  D7FA               	bra	u97
   332   00103A  0000               	nop	
   333   00103C                     
   334                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   335   00103C  0E30               	movlw	48
   336   00103E  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   337   001040  0E00               	movlw	0
   338   001042  EC4B  F009         	call	_Send_Instruction_Data
   339   001046                     
   340                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   341   001046  0E1A               	movlw	26
   342   001048  6E11               	movwf	??_Init_LCD^0,c
   343   00104A  0EF8               	movlw	248
   344   00104C                     u107:
   345   00104C  2EE8               	decfsz	wreg,f,c
   346   00104E  D7FE               	bra	u107
   347   001050  2E11               	decfsz	??_Init_LCD^0,f,c
   348   001052  D7FC               	bra	u107
   349   001054  D000               	nop2	
   350                           
   351                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   352   001056  0E30               	movlw	48
   353   001058  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   354   00105A  0E00               	movlw	0
   355   00105C  EC4B  F009         	call	_Send_Instruction_Data
   356   001060                     
   357                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   358   001060  0E1A               	movlw	26
   359   001062  6E11               	movwf	??_Init_LCD^0,c
   360   001064  0EF8               	movlw	248
   361   001066                     u117:
   362   001066  2EE8               	decfsz	wreg,f,c
   363   001068  D7FE               	bra	u117
   364   00106A  2E11               	decfsz	??_Init_LCD^0,f,c
   365   00106C  D7FC               	bra	u117
   366   00106E  D000               	nop2	
   367   001070                     
   368                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   369   001070  0E30               	movlw	48
   370   001072  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   371   001074  0E00               	movlw	0
   372   001076  EC4B  F009         	call	_Send_Instruction_Data
   373   00107A                     
   374                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   375   00107A  0E02               	movlw	2
   376   00107C  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   377   00107E  0E00               	movlw	0
   378   001080  EC4B  F009         	call	_Send_Instruction_Data
   379   001084                     
   380                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   381   001084  0E06               	movlw	6
   382   001086  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   383   001088  0E00               	movlw	0
   384   00108A  EC4B  F009         	call	_Send_Instruction_Data
   385   00108E                     
   386                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   387   00108E  0E0F               	movlw	15
   388   001090  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   389   001092  0E00               	movlw	0
   390   001094  EC4B  F009         	call	_Send_Instruction_Data
   391   001098                     
   392                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   393   001098  0E28               	movlw	40
   394   00109A  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   395   00109C  0E00               	movlw	0
   396   00109E  EC4B  F009         	call	_Send_Instruction_Data
   397   0010A2                     
   398                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   399   0010A2  0E01               	movlw	1
   400   0010A4  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   401   0010A6  0E00               	movlw	0
   402   0010A8  EC4B  F009         	call	_Send_Instruction_Data
   403   0010AC                     
   404                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   405   0010AC  0E03               	movlw	3
   406   0010AE  6E12               	movwf	(??_Init_LCD+1)^0,c
   407   0010B0  0E08               	movlw	8
   408   0010B2  6E11               	movwf	??_Init_LCD^0,c
   409   0010B4  0E77               	movlw	119
   410   0010B6                     u127:
   411   0010B6  2EE8               	decfsz	wreg,f,c
   412   0010B8  D7FE               	bra	u127
   413   0010BA  2E11               	decfsz	??_Init_LCD^0,f,c
   414   0010BC  D7FC               	bra	u127
   415   0010BE  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
   416   0010C0  D7FA               	bra	u127
   417   0010C2  0000               	nop	
   418   0010C4  0012               	return		;funcret
   419   0010C6                     __end_of_Init_LCD:
   420                           	callstack 0
   421                           
   422 ;; *************** function _Send_Instruction_Data *****************
   423 ;; Defined at:
   424 ;;		line 24 in file "LCD_Library.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  Instruction     1    wreg     unsigned char 
   427 ;;  Data            1   14[COMRAM] unsigned char 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  Instruction     1   15[COMRAM] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   439 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;Total ram usage:        2 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; Hardware stack levels required when called: 8
   446 ;; This function calls:
   447 ;;		_LCD_Instruction
   448 ;; This function is called by:
   449 ;;		_Init_LCD
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text2
   454   001296                     __ptext2:
   455                           	callstack 0
   456   001296                     _Send_Instruction_Data:
   457                           	callstack 21
   458                           
   459                           ;incstack = 0
   460                           ;Send_Instruction_Data@Instruction stored from wreg
   461   001296  6E10               	movwf	Send_Instruction_Data@Instruction^0,c
   462   001298                     
   463                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   464   001298  B010               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   465   00129A  D002               	bra	u75
   466   00129C  988B               	bcf	139,4,c	;volatile
   467   00129E  D001               	bra	u76
   468   0012A0                     u75:
   469   0012A0  888B               	bsf	139,4,c	;volatile
   470   0012A2                     u76:
   471   0012A2                     
   472                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   473   0012A2  380F               	swapf	Send_Instruction_Data@Data^0,w,c
   474   0012A4  0B0F               	andlw	15
   475   0012A6  ECE1  F008         	call	_LCD_Instruction
   476   0012AA                     
   477                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
   478   0012AA  500F               	movf	Send_Instruction_Data@Data^0,w,c
   479   0012AC  ECE1  F008         	call	_LCD_Instruction
   480   0012B0  0012               	return		;funcret
   481   0012B2                     __end_of_Send_Instruction_Data:
   482                           	callstack 0
   483                           
   484 ;; *************** function _LCD_Instruction *****************
   485 ;; Defined at:
   486 ;;		line 33 in file "LCD_Library.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;  Instruction     1    wreg     unsigned char 
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  Instruction     1   13[COMRAM] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; Hardware stack levels required when called: 7
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_Send_Instruction_Data
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text3
   515   0011C2                     __ptext3:
   516                           	callstack 0
   517   0011C2                     _LCD_Instruction:
   518                           	callstack 21
   519                           
   520                           ;incstack = 0
   521                           ;LCD_Instruction@Instruction stored from wreg
   522   0011C2  6E0E               	movwf	LCD_Instruction@Instruction^0,c
   523   0011C4                     
   524                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   525   0011C4  8A8B               	bsf	139,5,c	;volatile
   526   0011C6                     
   527                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   528   0011C6  0E4E               	movlw	78
   529   0011C8  6E0D               	movwf	??_LCD_Instruction^0,c
   530   0011CA  0EEB               	movlw	235
   531   0011CC                     u137:
   532   0011CC  2EE8               	decfsz	wreg,f,c
   533   0011CE  D7FE               	bra	u137
   534   0011D0  2E0D               	decfsz	??_LCD_Instruction^0,f,c
   535   0011D2  D7FC               	bra	u137
   536   0011D4  0000               	nop	
   537   0011D6                     
   538                           ;LCD_Library.c: 37:     LATD = Instruction;
   539   0011D6  C00E  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   540   0011DA                     
   541                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   542   0011DA  0E4E               	movlw	78
   543   0011DC  6E0D               	movwf	??_LCD_Instruction^0,c
   544   0011DE  0EEB               	movlw	235
   545   0011E0                     u147:
   546   0011E0  2EE8               	decfsz	wreg,f,c
   547   0011E2  D7FE               	bra	u147
   548   0011E4  2E0D               	decfsz	??_LCD_Instruction^0,f,c
   549   0011E6  D7FC               	bra	u147
   550   0011E8  0000               	nop	
   551   0011EA                     
   552                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   553   0011EA  9A8B               	bcf	139,5,c	;volatile
   554   0011EC                     
   555                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   556   0011EC  0E4E               	movlw	78
   557   0011EE  6E0D               	movwf	??_LCD_Instruction^0,c
   558   0011F0  0EEB               	movlw	235
   559   0011F2                     u157:
   560   0011F2  2EE8               	decfsz	wreg,f,c
   561   0011F4  D7FE               	bra	u157
   562   0011F6  2E0D               	decfsz	??_LCD_Instruction^0,f,c
   563   0011F8  D7FC               	bra	u157
   564   0011FA  0000               	nop	
   565   0011FC  0012               	return		;funcret
   566   0011FE                     __end_of_LCD_Instruction:
   567                           	callstack 0
   568                           
   569 ;; *************** function _Configurations *****************
   570 ;; Defined at:
   571 ;;		line 72 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 7
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text4
   600   0010C6                     __ptext4:
   601                           	callstack 0
   602   0010C6                     _Configurations:
   603                           	callstack 23
   604   0010C6                     
   605                           ;main.c: 74:     OSCCON = 0x72;
   606   0010C6  0E72               	movlw	114
   607   0010C8  6ED3               	movwf	211,c	;volatile
   608                           
   609                           ;main.c: 76:     ANSELC = 0;
   610   0010CA  0E00               	movlw	0
   611   0010CC  010F               	movlb	15	; () banked
   612   0010CE  6F3A               	movwf	58,b	;volatile
   613                           
   614                           ;main.c: 77:     ANSELD = 0;
   615   0010D0  0E00               	movlw	0
   616   0010D2  6F3B               	movwf	59,b	;volatile
   617                           
   618                           ;main.c: 78:     ANSELE = 0;
   619   0010D4  0E00               	movlw	0
   620   0010D6  6F3C               	movwf	60,b	;volatile
   621   0010D8                     
   622                           ; BSR set to: 15
   623                           ;main.c: 80:     TRISCbits.RC4 = 0;
   624   0010D8  9894               	bcf	148,4,c	;volatile
   625   0010DA                     
   626                           ; BSR set to: 15
   627                           ;main.c: 81:     TRISCbits.RC5 = 0;
   628   0010DA  9A94               	bcf	148,5,c	;volatile
   629                           
   630                           ;main.c: 82:     TRISD = 0;
   631   0010DC  0E00               	movlw	0
   632   0010DE  6E95               	movwf	149,c	;volatile
   633                           
   634                           ;main.c: 83:     TRISE = 0;
   635   0010E0  0E00               	movlw	0
   636   0010E2  6E96               	movwf	150,c	;volatile
   637   0010E4                     
   638                           ; BSR set to: 15
   639                           ;main.c: 86:     LATCbits.LC4 = 0;
   640   0010E4  988B               	bcf	139,4,c	;volatile
   641   0010E6                     
   642                           ; BSR set to: 15
   643                           ;main.c: 87:     LATCbits.LC5 = 0;
   644   0010E6  9A8B               	bcf	139,5,c	;volatile
   645                           
   646                           ;main.c: 88:     LATD = 0;
   647   0010E8  0E00               	movlw	0
   648   0010EA  6E8C               	movwf	140,c	;volatile
   649                           
   650                           ;main.c: 89:     LATE = 0;
   651   0010EC  0E00               	movlw	0
   652   0010EE  6E8D               	movwf	141,c	;volatile
   653   0010F0                     
   654                           ; BSR set to: 15
   655                           ;main.c: 92:     INTCONbits.GIE = 1;
   656   0010F0  8EF2               	bsf	242,7,c	;volatile
   657   0010F2                     
   658                           ; BSR set to: 15
   659                           ;main.c: 93:     INTCONbits.PEIE = 1;
   660   0010F2  8CF2               	bsf	242,6,c	;volatile
   661   0010F4                     
   662                           ; BSR set to: 15
   663                           ;main.c: 94:     RCONbits.IPEN = 1;
   664   0010F4  8ED0               	bsf	208,7,c	;volatile
   665   0010F6                     
   666                           ; BSR set to: 15
   667                           ;main.c: 96:     PIE1bits.RC1IE = 1;
   668   0010F6  8A9D               	bsf	157,5,c	;volatile
   669   0010F8                     
   670                           ; BSR set to: 15
   671                           ;main.c: 97:     PIR1bits.RC1IF = 0;
   672   0010F8  9A9E               	bcf	158,5,c	;volatile
   673                           
   674                           ;main.c: 100:     SPBRG = 103;
   675   0010FA  0E67               	movlw	103
   676   0010FC  6EAF               	movwf	175,c	;volatile
   677   0010FE                     
   678                           ; BSR set to: 15
   679                           ;main.c: 101:     TRISCbits.RC6 = 1;
   680   0010FE  8C94               	bsf	148,6,c	;volatile
   681   001100                     
   682                           ; BSR set to: 15
   683                           ;main.c: 102:     TRISCbits.RC7 = 1;
   684   001100  8E94               	bsf	148,7,c	;volatile
   685   001102                     
   686                           ; BSR set to: 15
   687                           ;main.c: 105:     TXSTA1bits.TX91 = 0;
   688   001102  9CAC               	bcf	172,6,c	;volatile
   689   001104                     
   690                           ; BSR set to: 15
   691                           ;main.c: 106:     TXSTA1bits.TXEN1 = 1;
   692   001104  8AAC               	bsf	172,5,c	;volatile
   693   001106                     
   694                           ; BSR set to: 15
   695                           ;main.c: 107:     TXSTA1bits.SYNC1 = 0;
   696   001106  98AC               	bcf	172,4,c	;volatile
   697   001108                     
   698                           ; BSR set to: 15
   699                           ;main.c: 108:     TXSTA1bits.BRGH1 = 1;
   700   001108  84AC               	bsf	172,2,c	;volatile
   701   00110A                     
   702                           ; BSR set to: 15
   703                           ;main.c: 111:     RCSTAbits.SPEN1 = 1;
   704   00110A  8EAB               	bsf	171,7,c	;volatile
   705   00110C                     
   706                           ; BSR set to: 15
   707                           ;main.c: 112:     RCSTAbits.RX91 = 0;
   708   00110C  9CAB               	bcf	171,6,c	;volatile
   709   00110E                     
   710                           ; BSR set to: 15
   711                           ;main.c: 113:     RCSTAbits.CREN1 = 1;
   712   00110E  88AB               	bsf	171,4,c	;volatile
   713   001110                     
   714                           ; BSR set to: 15
   715                           ;main.c: 116:     BAUDCON1bits.BRG16 = 0;
   716   001110  96B8               	bcf	184,3,c	;volatile
   717                           
   718                           ;main.c: 128:     PR2 = 0xF9;
   719   001112  0EF9               	movlw	249
   720   001114  6EBB               	movwf	187,c	;volatile
   721                           
   722                           ;main.c: 129:     CCP3CON = 0x00;
   723   001116  0E00               	movlw	0
   724   001118  6F5D               	movwf	93,b	;volatile
   725                           
   726                           ;main.c: 130:     CCPR3L = 0xFA;
   727   00111A  0EFA               	movlw	250
   728   00111C  6F5E               	movwf	94,b	;volatile
   729                           
   730                           ;main.c: 131:     CCP5CON = 0x00;
   731   00111E  0E00               	movlw	0
   732   001120  6F54               	movwf	84,b	;volatile
   733                           
   734                           ;main.c: 132:     CCPR5L = 0xFA;
   735   001122  0EFA               	movlw	250
   736   001124  6F55               	movwf	85,b	;volatile
   737                           
   738                           ;main.c: 133:     T2CON = 0x00;
   739   001126  0E00               	movlw	0
   740   001128  6EBA               	movwf	186,c	;volatile
   741   00112A                     
   742                           ; BSR set to: 15
   743                           ;main.c: 134:     T2CONbits.TMR2ON = 1;
   744   00112A  84BA               	bsf	186,2,c	;volatile
   745   00112C                     
   746                           ; BSR set to: 15
   747   00112C  0012               	return		;funcret
   748   00112E                     __end_of_Configurations:
   749                           	callstack 0
   750                           
   751 ;; *************** function _Interrupt *****************
   752 ;; Defined at:
   753 ;;		line 64 in file "main.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		None
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:        1 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 6
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		Interrupt level 1
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	intcodelo
   782   000018                     __pintcodelo:
   783                           	callstack 0
   784   000018                     _Interrupt:
   785                           	callstack 21
   786                           
   787                           ; BSR set to: 15
   788                           ;incstack = 0
   789   000018  8014               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   790   00001A  CFE0 F00C          	movff	bsr,??_Interrupt
   791   00001E  C00C  FFE0         	movff	??_Interrupt,bsr
   792   000022  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   793   000024  0010               	retfie	
   794   000026                     __end_of_Interrupt:
   795                           	callstack 0
   796                           
   797 ;; *************** function _Interrupt_Rx *****************
   798 ;; Defined at:
   799 ;;		line 52 in file "main.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;Total ram usage:        4 bytes
   818 ;; Hardware stack levels used: 1
   819 ;; Hardware stack levels required when called: 5
   820 ;; This function calls:
   821 ;;		_Receive_Interrupt
   822 ;; This function is called by:
   823 ;;		Interrupt level 2
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	intcode
   828   000008                     __pintcode:
   829                           	callstack 0
   830   000008                     _Interrupt_Rx:
   831                           	callstack 21
   832                           
   833                           ;incstack = 0
   834   000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   835   00000A  EF1D  F009         	goto	int_func
   836                           
   837                           	psect	intcode_body
   838   00123A                     __pintcode_body:
   839                           	callstack 21
   840   00123A                     int_func:
   841                           	callstack 21
   842   00123A  CFF6 F008          	movff	tblptrl,??_Interrupt_Rx
   843   00123E  CFF7 F009          	movff	tblptrh,??_Interrupt_Rx+1
   844   001242  CFF8 F00A          	movff	tblptru,??_Interrupt_Rx+2
   845   001246  CFF5 F00B          	movff	tablat,??_Interrupt_Rx+3
   846   00124A                     
   847                           ;main.c: 54:     if (PIR1bits.RC1IF) {
   848   00124A  AA9E               	btfss	158,5,c	;volatile
   849   00124C  EF2A  F009         	goto	i2u8_41
   850   001250  EF2C  F009         	goto	i2u8_40
   851   001254                     i2u8_41:
   852   001254  EF2E  F009         	goto	i2l84
   853   001258                     i2u8_40:
   854   001258                     
   855                           ;main.c: 56:         Receive_Interrupt();
   856   001258  EC97  F008         	call	_Receive_Interrupt	;wreg free
   857   00125C                     i2l84:
   858   00125C  C00B  FFF5         	movff	??_Interrupt_Rx+3,tablat
   859   001260  C00A  FFF8         	movff	??_Interrupt_Rx+2,tblptru
   860   001264  C009  FFF7         	movff	??_Interrupt_Rx+1,tblptrh
   861   001268  C008  FFF6         	movff	??_Interrupt_Rx,tblptrl
   862   00126C  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   863   00126E  0011               	retfie		f
   864   001270                     __end_of_Interrupt_Rx:
   865                           	callstack 0
   866                           
   867 ;; *************** function _Receive_Interrupt *****************
   868 ;; Defined at:
   869 ;;		line 138 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 4
   890 ;; This function calls:
   891 ;;		_Init_Message_Platform
   892 ;;		_Moving_Platform
   893 ;; This function is called by:
   894 ;;		_Interrupt_Rx
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text7
   899   00112E                     __ptext7:
   900                           	callstack 0
   901   00112E                     _Receive_Interrupt:
   902                           	callstack 21
   903   00112E                     
   904                           ;main.c: 140:     Rx_Buffer = RCREG1;
   905   00112E  CFAE F013          	movff	4014,_Rx_Buffer	;volatile
   906                           
   907                           ;main.c: 142:     switch (Rx_Buffer) {
   908   001132  EFAD  F008         	goto	i2l1020
   909   001136                     i2l1010:
   910                           
   911                           ;main.c: 145:             Moving_Platform(0b10100000);
   912   001136  0EA0               	movlw	160
   913   001138  EC77  F009         	call	_Moving_Platform
   914                           
   915                           ;main.c: 147:             break;
   916   00113C  EFBC  F008         	goto	i2l101
   917   001140                     i2l1012:
   918                           
   919                           ;main.c: 150:             Moving_Platform(0b01010000);
   920   001140  0E50               	movlw	80
   921   001142  EC77  F009         	call	_Moving_Platform
   922                           
   923                           ;main.c: 151:             break;
   924   001146  EFBC  F008         	goto	i2l101
   925   00114A                     i2l1014:
   926                           
   927                           ;main.c: 154:             Init_Message_Platform();
   928   00114A  EC38  F009         	call	_Init_Message_Platform	;wreg free
   929                           
   930                           ;main.c: 155:             break;
   931   00114E  EFBC  F008         	goto	i2l101
   932   001152                     i2l1016:
   933                           
   934                           ;main.c: 158:             LATD = 0x00;
   935   001152  0E00               	movlw	0
   936   001154  6E8C               	movwf	140,c	;volatile
   937                           
   938                           ;main.c: 159:             break;
   939   001156  EFBC  F008         	goto	i2l101
   940   00115A                     i2l1020:
   941   00115A  5013               	movf	_Rx_Buffer^0,w,c
   942                           
   943                           ; Switch size 1, requested type "simple"
   944                           ; Number of cases is 3, Range of values is 65 to 81
   945                           ; switch strategies available:
   946                           ; Name         Instructions Cycles
   947                           ; simple_byte           10     6 (average)
   948                           ;	Chosen strategy is simple_byte
   949   00115C  0A41               	xorlw	65	; case 65
   950   00115E  B4D8               	btfsc	status,2,c
   951   001160  EFA0  F008         	goto	i2l1012
   952   001164  0A0C               	xorlw	12	; case 77
   953   001166  B4D8               	btfsc	status,2,c
   954   001168  EF9B  F008         	goto	i2l1010
   955   00116C  0A1C               	xorlw	28	; case 81
   956   00116E  B4D8               	btfsc	status,2,c
   957   001170  EFA5  F008         	goto	i2l1014
   958   001174  EFA9  F008         	goto	i2l1016
   959   001178                     i2l101:
   960   001178  0012               	return		;funcret
   961   00117A                     __end_of_Receive_Interrupt:
   962                           	callstack 0
   963                           
   964 ;; *************** function _Moving_Platform *****************
   965 ;; Defined at:
   966 ;;		line 165 in file "main.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  Command         1    wreg     unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  Command         1    0[COMRAM] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:        1 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_Receive_Interrupt
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text8
   994   0012EE                     __ptext8:
   995                           	callstack 0
   996   0012EE                     _Moving_Platform:
   997                           	callstack 24
   998                           
   999                           ;incstack = 0
  1000                           ;Moving_Platform@Command stored from wreg
  1001   0012EE  6E01               	movwf	Moving_Platform@Command^0,c
  1002   0012F0                     
  1003                           ;main.c: 167:     LATEbits.LATE0 = 1;
  1004   0012F0  808D               	bsf	141,0,c	;volatile
  1005                           
  1006                           ;main.c: 168:     LATEbits.LATE2 = 1;
  1007   0012F2  848D               	bsf	141,2,c	;volatile
  1008   0012F4                     
  1009                           ;main.c: 169:     LATD = Command;
  1010   0012F4  C001  FF8C         	movff	Moving_Platform@Command,3980	;volatile
  1011   0012F8  0012               	return		;funcret
  1012   0012FA                     __end_of_Moving_Platform:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _Init_Message_Platform *****************
  1016 ;; Defined at:
  1017 ;;		line 175 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 3
  1038 ;; This function calls:
  1039 ;;		_Send_String
  1040 ;;		i2_Send_Instruction_Data
  1041 ;; This function is called by:
  1042 ;;		_Receive_Interrupt
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text9
  1047   001270                     __ptext9:
  1048                           	callstack 0
  1049   001270                     _Init_Message_Platform:
  1050                           	callstack 21
  1051   001270                     
  1052                           ;main.c: 177:     Send_Instruction_Data(0, 0X80);
  1053   001270  0E80               	movlw	128
  1054   001272  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1055   001274  0E00               	movlw	0
  1056   001276  EC59  F009         	call	i2_Send_Instruction_Data
  1057   00127A                     
  1058                           ;main.c: 178:     Send_String("Research Project");
  1059   00127A  0E12               	movlw	low STR_1
  1060   00127C  6E05               	movwf	Send_String@String^0,c
  1061   00127E  ECBD  F008         	call	_Send_String	;wreg free
  1062   001282                     
  1063                           ;main.c: 179:     Send_Instruction_Data(0, 0xC0);
  1064   001282  0EC0               	movlw	192
  1065   001284  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1066   001286  0E00               	movlw	0
  1067   001288  EC59  F009         	call	i2_Send_Instruction_Data
  1068                           
  1069                           ;main.c: 180:     Send_String("Robotic Platform");
  1070   00128C  0E01               	movlw	low STR_2
  1071   00128E  6E05               	movwf	Send_String@String^0,c
  1072   001290  ECBD  F008         	call	_Send_String	;wreg free
  1073   001294  0012               	return		;funcret
  1074   001296                     __end_of_Init_Message_Platform:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _Send_String *****************
  1078 ;; Defined at:
  1079 ;;		line 46 in file "LCD_Library.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  String          1    4[COMRAM] PTR unsigned char 
  1082 ;;		 -> STR_2(17), STR_1(17), 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  i               1    6[COMRAM] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;Total ram usage:        3 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 2
  1101 ;; This function calls:
  1102 ;;		i2_Send_Instruction_Data
  1103 ;; This function is called by:
  1104 ;;		_Init_Message_Platform
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text10
  1109   00117A                     __ptext10:
  1110                           	callstack 0
  1111   00117A                     _Send_String:
  1112                           	callstack 21
  1113   00117A                     
  1114                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
  1115   00117A  0E00               	movlw	0
  1116   00117C  6E07               	movwf	Send_String@i^0,c
  1117   00117E  EFCF  F008         	goto	i2l972
  1118   001182                     i2l968:
  1119                           
  1120                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
  1121   001182  5005               	movf	Send_String@String^0,w,c
  1122   001184  2407               	addwf	Send_String@i^0,w,c
  1123   001186  6E06               	movwf	??_Send_String^0,c
  1124   001188  C006  FFF6         	movff	??_Send_String,tblptrl
  1125   00118C                     	if	1	;There is more than 1 active tblptr byte
  1126   00118C  0E10               	movlw	high __smallconst
  1127   00118E  6EF7               	movwf	tblptrh,c
  1128   001190                     	endif
  1129   001190                     	if	0	;tblptru may be non-zero
  1130   001190                     	endif
  1131   001190                     	if	0	;tblptru may be non-zero
  1132   001190                     	endif
  1133   001190  0008               	tblrd		*
  1134   001192  CFF5 F003          	movff	tablat,i2Send_Instruction_Data@Data
  1135   001196  0E01               	movlw	1
  1136   001198  EC59  F009         	call	i2_Send_Instruction_Data
  1137   00119C                     
  1138                           ;LCD_Library.c: 52:     }
  1139   00119C  2A07               	incf	Send_String@i^0,f,c
  1140   00119E                     i2l972:
  1141   00119E  5005               	movf	Send_String@String^0,w,c
  1142   0011A0  2407               	addwf	Send_String@i^0,w,c
  1143   0011A2  6E06               	movwf	??_Send_String^0,c
  1144   0011A4  C006  FFF6         	movff	??_Send_String,tblptrl
  1145   0011A8                     	if	1	;There is more than 1 active tblptr byte
  1146   0011A8  0E10               	movlw	high __smallconst
  1147   0011AA  6EF7               	movwf	tblptrh,c
  1148   0011AC                     	endif
  1149   0011AC                     	if	0	;tblptru may be non-zero
  1150   0011AC                     	endif
  1151   0011AC                     	if	0	;tblptru may be non-zero
  1152   0011AC                     	endif
  1153   0011AC  0008               	tblrd		*
  1154   0011AE  50F5               	movf	tablat,w,c
  1155   0011B0  0900               	iorlw	0
  1156   0011B2  A4D8               	btfss	status,2,c
  1157   0011B4  EFDE  F008         	goto	i2u6_41
  1158   0011B8  EFE0  F008         	goto	i2u6_40
  1159   0011BC                     i2u6_41:
  1160   0011BC  EFC1  F008         	goto	i2l968
  1161   0011C0                     i2u6_40:
  1162   0011C0  0012               	return		;funcret
  1163   0011C2                     __end_of_Send_String:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function i2_Send_Instruction_Data *****************
  1167 ;; Defined at:
  1168 ;;		line 24 in file "LCD_Library.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  Instruction     1    wreg     unsigned char 
  1171 ;;  Data            1    2[COMRAM] unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  Instruction     1    3[COMRAM] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1183 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;Total ram usage:        2 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 1
  1190 ;; This function calls:
  1191 ;;		i2_LCD_Instruction
  1192 ;; This function is called by:
  1193 ;;		_Init_Message_Platform
  1194 ;;		_Send_String
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text11
  1199   0012B2                     __ptext11:
  1200                           	callstack 0
  1201   0012B2                     i2_Send_Instruction_Data:
  1202                           	callstack 22
  1203                           
  1204                           ;incstack = 0
  1205                           ;i2Send_Instruction_Data@Instruction stored from wreg
  1206   0012B2  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
  1207   0012B4                     
  1208                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
  1209   0012B4  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
  1210   0012B6  D002               	bra	i2u5_45
  1211   0012B8  988B               	bcf	139,4,c	;volatile
  1212   0012BA  D001               	bra	i2u5_46
  1213   0012BC                     i2u5_45:
  1214   0012BC  888B               	bsf	139,4,c	;volatile
  1215   0012BE                     i2u5_46:
  1216   0012BE                     
  1217                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
  1218   0012BE  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
  1219   0012C0  0B0F               	andlw	15
  1220   0012C2  ECFF  F008         	call	i2_LCD_Instruction
  1221   0012C6                     
  1222                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
  1223   0012C6  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
  1224   0012C8  ECFF  F008         	call	i2_LCD_Instruction
  1225   0012CC  0012               	return		;funcret
  1226   0012CE                     __end_ofi2_Send_Instruction_Data:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function i2_LCD_Instruction *****************
  1230 ;; Defined at:
  1231 ;;		line 33 in file "LCD_Library.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  Instruction     1    wreg     unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  Instruction     1    1[COMRAM] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;Total ram usage:        2 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		i2_Send_Instruction_Data
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text12
  1259   0011FE                     __ptext12:
  1260                           	callstack 0
  1261   0011FE                     i2_LCD_Instruction:
  1262                           	callstack 22
  1263                           
  1264                           ;incstack = 0
  1265                           ;i2LCD_Instruction@Instruction stored from wreg
  1266   0011FE  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
  1267   001200                     
  1268                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  1269   001200  8A8B               	bsf	139,5,c	;volatile
  1270   001202                     
  1271                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1272   001202  0E4E               	movlw	78
  1273   001204  6E01               	movwf	??i2_LCD_Instruction^0,c
  1274   001206  0EEB               	movlw	235
  1275   001208                     i2u16_47:
  1276   001208  2EE8               	decfsz	wreg,f,c
  1277   00120A  D7FE               	bra	i2u16_47
  1278   00120C  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1279   00120E  D7FC               	bra	i2u16_47
  1280   001210  0000               	nop	
  1281   001212                     
  1282                           ;LCD_Library.c: 37:     LATD = Instruction;
  1283   001212  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  1284   001216                     
  1285                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1286   001216  0E4E               	movlw	78
  1287   001218  6E01               	movwf	??i2_LCD_Instruction^0,c
  1288   00121A  0EEB               	movlw	235
  1289   00121C                     i2u17_47:
  1290   00121C  2EE8               	decfsz	wreg,f,c
  1291   00121E  D7FE               	bra	i2u17_47
  1292   001220  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1293   001222  D7FC               	bra	i2u17_47
  1294   001224  0000               	nop	
  1295   001226                     
  1296                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  1297   001226  9A8B               	bcf	139,5,c	;volatile
  1298   001228                     
  1299                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1300   001228  0E4E               	movlw	78
  1301   00122A  6E01               	movwf	??i2_LCD_Instruction^0,c
  1302   00122C  0EEB               	movlw	235
  1303   00122E                     i2u18_47:
  1304   00122E  2EE8               	decfsz	wreg,f,c
  1305   001230  D7FE               	bra	i2u18_47
  1306   001232  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1307   001234  D7FC               	bra	i2u18_47
  1308   001236  0000               	nop	
  1309   001238  0012               	return		;funcret
  1310   00123A                     __end_ofi2_LCD_Instruction:
  1311                           	callstack 0
  1312                           
  1313                           	psect	rparam
  1314   000000                     
  1315                           	psect	temp
  1316   000014                     btemp:
  1317                           	callstack 0
  1318   000014                     	ds	1
  1319   000000                     int$flags	set	btemp
  1320   000000                     wtemp8	set	btemp+1
  1321   000000                     ttemp5	set	btemp+1
  1322   000000                     ttemp6	set	btemp+4
  1323   000000                     ttemp7	set	btemp+8
  1324                           
  1325                           	psect	config
  1326                           
  1327                           ; Padding undefined space
  1328   300000                     	org	3145728
  1329   300000  FF                 	db	255
  1330                           
  1331                           ;Config register CONFIG1H @ 0x300001
  1332                           ;	Oscillator Selection bits
  1333                           ;	FOSC = INTIO67, Internal oscillator block
  1334                           ;	4X PLL Enable
  1335                           ;	PLLCFG = OFF, Oscillator used directly
  1336                           ;	Primary clock enable bit
  1337                           ;	PRICLKEN = ON, Primary clock is always enabled
  1338                           ;	Fail-Safe Clock Monitor Enable bit
  1339                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1340                           ;	Internal/External Oscillator Switchover bit
  1341                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1342   300001                     	org	3145729
  1343   300001  28                 	db	40
  1344                           
  1345                           ;Config register CONFIG2L @ 0x300002
  1346                           ;	Power-up Timer Enable bit
  1347                           ;	PWRTEN = OFF, Power up timer disabled
  1348                           ;	Brown-out Reset Enable bits
  1349                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1350                           ;	Brown Out Reset Voltage bits
  1351                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1352   300002                     	org	3145730
  1353   300002  1F                 	db	31
  1354                           
  1355                           ;Config register CONFIG2H @ 0x300003
  1356                           ;	Watchdog Timer Enable bits
  1357                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1358                           ;	Watchdog Timer Postscale Select bits
  1359                           ;	WDTPS = 32768, 1:32768
  1360   300003                     	org	3145731
  1361   300003  3C                 	db	60
  1362                           
  1363                           ; Padding undefined space
  1364   300004                     	org	3145732
  1365   300004  FF                 	db	255
  1366                           
  1367                           ;Config register CONFIG3H @ 0x300005
  1368                           ;	CCP2 MUX bit
  1369                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1370                           ;	PORTB A/D Enable bit
  1371                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1372                           ;	P3A/CCP3 Mux bit
  1373                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1374                           ;	HFINTOSC Fast Start-up
  1375                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1376                           ;	Timer3 Clock input mux bit
  1377                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1378                           ;	ECCP2 B output mux bit
  1379                           ;	P2BMX = PORTD2, P2B is on RD2
  1380                           ;	MCLR Pin Enable bit
  1381                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1382   300005                     	org	3145733
  1383   300005  BB                 	db	187
  1384                           
  1385                           ;Config register CONFIG4L @ 0x300006
  1386                           ;	Stack Full/Underflow Reset Enable bit
  1387                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1388                           ;	Single-Supply ICSP Enable bit
  1389                           ;	LVP = OFF, Single-Supply ICSP disabled
  1390                           ;	Extended Instruction Set Enable bit
  1391                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1392                           ;	Background Debug
  1393                           ;	DEBUG = 0x1, unprogrammed default
  1394   300006                     	org	3145734
  1395   300006  81                 	db	129
  1396                           
  1397                           ; Padding undefined space
  1398   300007                     	org	3145735
  1399   300007  FF                 	db	255
  1400                           
  1401                           ;Config register CONFIG5L @ 0x300008
  1402                           ;	Code Protection Block 0
  1403                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1404                           ;	Code Protection Block 1
  1405                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1406                           ;	Code Protection Block 2
  1407                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1408                           ;	Code Protection Block 3
  1409                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1410   300008                     	org	3145736
  1411   300008  0F                 	db	15
  1412                           
  1413                           ;Config register CONFIG5H @ 0x300009
  1414                           ;	Boot Block Code Protection bit
  1415                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1416                           ;	Data EEPROM Code Protection bit
  1417                           ;	CPD = OFF, Data EEPROM not code-protected
  1418   300009                     	org	3145737
  1419   300009  C0                 	db	192
  1420                           
  1421                           ;Config register CONFIG6L @ 0x30000A
  1422                           ;	Write Protection Block 0
  1423                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1424                           ;	Write Protection Block 1
  1425                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1426                           ;	Write Protection Block 2
  1427                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1428                           ;	Write Protection Block 3
  1429                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1430   30000A                     	org	3145738
  1431   30000A  0F                 	db	15
  1432                           
  1433                           ;Config register CONFIG6H @ 0x30000B
  1434                           ;	Configuration Register Write Protection bit
  1435                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1436                           ;	Boot Block Write Protection bit
  1437                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1438                           ;	Data EEPROM Write Protection bit
  1439                           ;	WRTD = OFF, Data EEPROM not write-protected
  1440   30000B                     	org	3145739
  1441   30000B  E0                 	db	224
  1442                           
  1443                           ;Config register CONFIG7L @ 0x30000C
  1444                           ;	Table Read Protection Block 0
  1445                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1446                           ;	Table Read Protection Block 1
  1447                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1448                           ;	Table Read Protection Block 2
  1449                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1450                           ;	Table Read Protection Block 3
  1451                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1452   30000C                     	org	3145740
  1453   30000C  0F                 	db	15
  1454                           
  1455                           ;Config register CONFIG7H @ 0x30000D
  1456                           ;	Boot Block Table Read Protection bit
  1457                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1458   30000D                     	org	3145741
  1459   30000D  40                 	db	64
  1460                           tosu	equ	0xFFF
  1461                           tosh	equ	0xFFE
  1462                           tosl	equ	0xFFD
  1463                           stkptr	equ	0xFFC
  1464                           pclatu	equ	0xFFB
  1465                           pclath	equ	0xFFA
  1466                           pcl	equ	0xFF9
  1467                           tblptru	equ	0xFF8
  1468                           tblptrh	equ	0xFF7
  1469                           tblptrl	equ	0xFF6
  1470                           tablat	equ	0xFF5
  1471                           prodh	equ	0xFF4
  1472                           prodl	equ	0xFF3
  1473                           indf0	equ	0xFEF
  1474                           postinc0	equ	0xFEE
  1475                           postdec0	equ	0xFED
  1476                           preinc0	equ	0xFEC
  1477                           plusw0	equ	0xFEB
  1478                           fsr0h	equ	0xFEA
  1479                           fsr0l	equ	0xFE9
  1480                           wreg	equ	0xFE8
  1481                           indf1	equ	0xFE7
  1482                           postinc1	equ	0xFE6
  1483                           postdec1	equ	0xFE5
  1484                           preinc1	equ	0xFE4
  1485                           plusw1	equ	0xFE3
  1486                           fsr1h	equ	0xFE2
  1487                           fsr1l	equ	0xFE1
  1488                           bsr	equ	0xFE0
  1489                           indf2	equ	0xFDF
  1490                           postinc2	equ	0xFDE
  1491                           postdec2	equ	0xFDD
  1492                           preinc2	equ	0xFDC
  1493                           plusw2	equ	0xFDB
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Init_Message_Platform->_Send_String
    _Send_String->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     839
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     839
                                             16 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     839
                                             14 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         4     4      0     589
                                              7 COMRAM     4     4      0
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Receive_Interrupt                                    0     0      0     589
              _Init_Message_Platform
                    _Moving_Platform
 ---------------------------------------------------------------------------------
 (7) _Moving_Platform                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Init_Message_Platform                                0     0      0     574
                        _Send_String
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (8) _Send_String                                          3     2      1     408
                                              4 COMRAM     3     2      1
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (8) i2_Send_Instruction_Data                              2     1      1     166
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Init_Message_Platform
       _Send_String
         i2_Send_Instruction_Data
           i2_LCD_Instruction
       i2_Send_Instruction_Data
     _Moving_Platform

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      13       1       20.2%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRhllhhh     14      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      43        0.0%
BITBIGSFRhllhl       8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhh         6      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRhllhhl      1      0       0      40        0.0%
BITBIGSFRhlllh       1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      50        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 28 12:55:57 2024

                                l75 12E6                                  l92 112C  
                                l76 12E6                                  u75 12A0  
                                u76 12A2                                  u97 102E  
                 Send_String@String 0005                                  bsr 0FE0  
                               l120 10C4                                 l123 12B0  
                               l126 11FC                                 l900 1110  
                               l902 112A                                 l840 11DA  
                               l842 11EA                                 l834 11C4  
                               l844 11EC                                 l836 11C6  
                               l870 10E6                                 l862 10C6  
                               l838 11D6                                 l880 10F8  
                               l872 10F0                                 l864 10D8  
                               l890 1106                                 l882 10FE  
                               l874 10F2                                 l866 10DA  
                               l892 1108                                 l884 1100  
                               l876 10F4                                 l868 10E4  
                               l980 1298                                 l894 110A  
                               l886 1102                                 l878 10F6  
                               l982 12A2                                 l990 1046  
                               l896 110C                                 l888 1104  
                               l984 12AA                                 l992 1060  
                               l898 110E                                 l994 1070  
                               l986 1024                                 l996 107A  
                               l988 103C                                 l998 1084  
                               u107 104C                                 u117 1066  
                               u127 10B6                                 u137 11CC  
                               u147 11E0                                 u157 11F2  
                               _PR2 0FBB         i2Send_Instruction_Data@Data 0003  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                              l1000 108E                                l1002 1098  
                              l1004 10A2                                l1006 10AC  
                              l1022 12DE                                l1024 12E2  
                              STR_1 1012                                STR_2 1001  
                              _LATD 0F8C                                _LATE 0F8D  
                              i1l89 001E                                i2l84 125C  
                              _main 12DE                                btemp 0014  
                              start 0026                        ___param_bank 0000  
                   _LCD_Instruction 11C2    Send_Instruction_Data@Instruction 0010  
i2Send_Instruction_Data@Instruction 0004                        _BAUDCON1bits 0FB8  
                             ?_main 0001                               _T2CON 0FBA  
                             i2l101 1178                               i2l104 12F8  
                             i2l123 12CC                               i2l107 1294  
                             i2l132 11C0                               i2l126 1238  
                             i2l950 1202                               i2l846 12F0  
                             i2l952 1212                               i2l960 12B4  
                             i2l848 12F4                               i2l954 1216  
                             i2l962 12BE                               i2l970 119C  
                             i2l956 1226                               i2l948 1200  
                             i2l964 12C6                               i2l972 119E  
                             i2l958 1228                               i2l966 117A  
                             i2l974 1270                               i2l968 1182  
                             i2l976 127A                               i2l978 1282  
                             _SPBRG 0FAF                               _TRISD 0F95  
                             _TRISE 0F96        i2LCD_Instruction@Instruction 0002  
                             tablat 0FF5                               ttemp5 0015  
                             ttemp6 0018                               ttemp7 001C  
                             status 0FD8                               wtemp8 0015  
                   __initialization 12CE                        __end_of_main 12EE  
                  __end_of_Init_LCD 10C6               _Send_Instruction_Data 1296  
                            ??_main 0013                       ??_Send_String 0006  
                     __activetblptr 0002                              _CCPR3L 0F5E  
                            _CCPR5L 0F55                   ??_Moving_Platform 0001  
                            _ANSELC 0F3A                              _ANSELD 0F3B  
                            _ANSELE 0F3C                              i2l1010 1136  
                            i2l1012 1140                              i2l1020 115A  
                            i2l1014 114A                              i2l1016 1152  
                            i2l1008 112E                              i2l1026 124A  
                            i2l1028 1258                              _RCREG1 0FAE  
        LCD_Instruction@Instruction 000E                              _OSCCON 0FD3  
                            i2u5_45 12BC                              i2u5_46 12BE  
                            i2u6_40 11C0                              i2u6_41 11BC  
                            i2u8_40 1258                              i2u8_41 1254  
                     ?_Interrupt_Rx 0001             __end_of_LCD_Instruction 11FE  
     __end_of_Init_Message_Platform 1296                              isa$std 0001  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
               __end_of_Send_String 11C2                          __accesstop 0060  
           __end_of__initialization 12D0                      ??_Interrupt_Rx 0008  
                     ___rparam_used 0001                      __pcstackCOMRAM 0001  
                 _Receive_Interrupt 112E              ?_Send_Instruction_Data 000F  
                ?_Receive_Interrupt 0001                 ??_Receive_Interrupt 0008  
                 __end_of_Interrupt 0026                           ?_Init_LCD 0001  
                  ?_LCD_Instruction 0001           __end_of_Receive_Interrupt 117A  
           i2_Send_Instruction_Data 12B2                             _CCP3CON 0F5D  
                           _CCP5CON 0F54                         _Send_String 117A  
                           i2u16_47 1208                             i2u17_47 121C  
                           i2u18_47 122E                          ??_Init_LCD 0011  
                           __Hparam 0000                             __Lparam 0000  
                      __psmallconst 1000                             __pcinit 12CE  
                           __ramtop 1000                             __ptext0 12DE  
                           __ptext1 1024                             __ptext2 1296  
                           __ptext3 11C2                             __ptext4 10C6  
                           __ptext7 112E                             __ptext8 12EE  
                           __ptext9 1270                     _Moving_Platform 12EE  
              __end_of_Interrupt_Rx 1270                           _T2CONbits 0FBA  
                    __pintcode_body 123A                end_of_initialization 12D0  
                     __Lmediumconst 0000                             int_func 123A  
         ??i2_Send_Instruction_Data 0004                           _RCSTAbits 0FAB  
                         _TRISCbits 0F94             ??_Send_Instruction_Data 0010  
           __end_of_Moving_Platform 12FA               _Init_Message_Platform 1270  
               start_initialization 12CE                        Send_String@i 0007  
         Send_Instruction_Data@Data 000F                      _Configurations 10C6  
                         _Interrupt 0018                           _Rx_Buffer 0013  
                      ?_Send_String 0005                         __pbssCOMRAM 0013  
            __end_of_Configurations 112E                          ?_Interrupt 0001  
                      _Interrupt_Rx 0008              ?_Init_Message_Platform 0001  
                         __pintcode 0008                    ?_Moving_Platform 0001  
                       __pintcodelo 0018                         __smallconst 1000  
                   ?_Configurations 0001                            _LATCbits 0F8B  
                          _LATEbits 0F8D                            _PIE1bits 0F9D  
                          _PIR1bits 0F9E                            _RCONbits 0FD0  
                 i2_LCD_Instruction 11FE                  ?i2_LCD_Instruction 0001  
               ??i2_LCD_Instruction 0001                         ??_Interrupt 000C  
                          _Init_LCD 1024              Moving_Platform@Command 0001  
                          __Hrparam 0000                            __Lrparam 0000  
     __end_of_Send_Instruction_Data 12B2           __end_ofi2_LCD_Instruction 123A  
                 ??_LCD_Instruction 000D                            __ptext10 117A  
                          __ptext11 12B2                            __ptext12 11FE  
          ?i2_Send_Instruction_Data 0003                            isa$xinst 0000  
                          int$flags 0014                          _INTCONbits 0FF2  
                          intlevel1 0000                            intlevel2 0000  
           ??_Init_Message_Platform 0008                    ??_Configurations 000D  
   __end_ofi2_Send_Instruction_Data 12CE  
