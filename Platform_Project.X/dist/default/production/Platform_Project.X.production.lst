

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 28 18:30:40 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F46K22 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _LATDbits	set	3980
    62   000000                     _T2CONbits	set	4026
    63   000000                     _ANSELC	set	3898
    64   000000                     _PIR1bits	set	3998
    65   000000                     _RCSTAbits	set	4011
    66   000000                     _TXSTA1bits	set	4012
    67   000000                     _SPBRG	set	4015
    68   000000                     _RCONbits	set	4048
    69   000000                     _OSCCON	set	4051
    70   000000                     _INTCONbits	set	4082
    71   000000                     _CCP5CON	set	3924
    72   000000                     _CCP3CON	set	3933
    73   000000                     _LATCbits	set	3979
    74   000000                     _TRISCbits	set	3988
    75   000000                     _ANSELE	set	3900
    76   000000                     _ANSELD	set	3899
    77   000000                     _PIE1bits	set	3997
    78   000000                     _TRISE	set	3990
    79   000000                     _TRISD	set	3989
    80   000000                     _LATE	set	3981
    81   000000                     _LATD	set	3980
    82   000000                     _BAUDCON1bits	set	4024
    83   000000                     _RCREG1	set	4014
    84   000000                     _T2CON	set	4026
    85   000000                     _PR2	set	4027
    86   000000                     _CCPR3L	set	3934
    87   000000                     _CCPR5L	set	3925
    88                           
    89                           	psect	smallconst
    90   001000                     __psmallconst:
    91                           	callstack 0
    92   001000  00                 	db	0
    93   001001  52                 	db	82	;'R'
    94   001002  6F                 	db	111	;'o'
    95   001003  62                 	db	98	;'b'
    96   001004  6F                 	db	111	;'o'
    97   001005  74                 	db	116	;'t'
    98   001006  69                 	db	105	;'i'
    99   001007  63                 	db	99	;'c'
   100   001008  20                 	db	32
   101   001009  50                 	db	80	;'P'
   102   00100A  6C                 	db	108	;'l'
   103   00100B  61                 	db	97	;'a'
   104   00100C  74                 	db	116	;'t'
   105   00100D  66                 	db	102	;'f'
   106   00100E  6F                 	db	111	;'o'
   107   00100F  72                 	db	114	;'r'
   108   001010  6D                 	db	109	;'m'
   109   001011  00                 	db	0
   110   001012  52                 	db	82	;'R'
   111   001013  65                 	db	101	;'e'
   112   001014  73                 	db	115	;'s'
   113   001015  65                 	db	101	;'e'
   114   001016  61                 	db	97	;'a'
   115   001017  72                 	db	114	;'r'
   116   001018  63                 	db	99	;'c'
   117   001019  68                 	db	104	;'h'
   118   00101A  20                 	db	32
   119   00101B  50                 	db	80	;'P'
   120   00101C  72                 	db	114	;'r'
   121   00101D  6F                 	db	111	;'o'
   122   00101E  6A                 	db	106	;'j'
   123   00101F  65                 	db	101	;'e'
   124   001020  63                 	db	99	;'c'
   125   001021  74                 	db	116	;'t'
   126   001022  00                 	db	0
   127   001023  00                 	db	0	; dummy byte at the end
   128   000000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   001854                     __pcinit:
   133                           	callstack 0
   134   001854                     start_initialization:
   135                           	callstack 0
   136   001854                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Clear objects allocated to COMRAM (9 bytes)
   140   001854  EE00  F029         	lfsr	0,__pbssCOMRAM
   141   001858  0E09               	movlw	9
   142   00185A                     clear_0:
   143   00185A  6AEE               	clrf	postinc0,c
   144   00185C  06E8               	decf	wreg,f,c
   145   00185E  E1FD               	bnz	clear_0
   146   001860                     end_of_initialization:
   147                           	callstack 0
   148   001860                     __end_of__initialization:
   149                           	callstack 0
   150   001860  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151   001862  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152   001864  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153   001866  6EF8               	movwf	tblptru,c
   154   001868  0100               	movlb	0
   155   00186A  EF37  F00C         	goto	_main	;jump to C main() function
   156                           
   157                           	psect	bssCOMRAM
   158   000029                     __pbssCOMRAM:
   159                           	callstack 0
   160   000029                     _Duty_Cycle2:
   161                           	callstack 0
   162   000029                     	ds	4
   163   00002D                     _Duty_Cycle1:
   164                           	callstack 0
   165   00002D                     	ds	4
   166   000031                     _Rx_Buffer:
   167                           	callstack 0
   168   000031                     	ds	1
   169                           
   170                           	psect	cstackCOMRAM
   171   000001                     __pcstackCOMRAM:
   172                           	callstack 0
   173   000001                     ?___flmul:
   174                           	callstack 0
   175   000001                     ?___fltol:
   176                           	callstack 0
   177   000001                     ___fltol@f1:
   178                           	callstack 0
   179   000001                     ___flmul@b:
   180                           	callstack 0
   181                           
   182                           ; 4 bytes @ 0x0
   183   000001                     	ds	4
   184   000005                     ??___fltol:
   185   000005                     ___flmul@a:
   186                           	callstack 0
   187                           
   188                           ; 4 bytes @ 0x4
   189   000005                     	ds	4
   190   000009                     ??___flmul:
   191   000009                     ___fltol@sign1:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x8
   195   000009                     	ds	1
   196   00000A                     ___fltol@exp1:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x9
   200   00000A                     	ds	3
   201   00000D                     ___flmul@sign:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0xC
   205   00000D                     	ds	1
   206   00000E                     ___flmul@grs:
   207                           	callstack 0
   208                           
   209                           ; 4 bytes @ 0xD
   210   00000E                     	ds	4
   211   000012                     ___flmul@aexp:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x11
   215   000012                     	ds	1
   216   000013                     ___flmul@bexp:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x12
   220   000013                     	ds	1
   221   000014                     ___flmul@prod:
   222                           	callstack 0
   223                           
   224                           ; 4 bytes @ 0x13
   225   000014                     	ds	4
   226   000018                     ___flmul@temp:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x17
   230   000018                     	ds	2
   231   00001A                     Set_PWM_Right_Motor@value1_pwm:
   232                           	callstack 0
   233   00001A                     Set_PWM_Left_Motor@value2_pwm:
   234                           	callstack 0
   235                           
   236                           ; 4 bytes @ 0x19
   237   00001A                     	ds	4
   238   00001E                     ??_Receive_Interrupt:
   239   00001E                     
   240                           ; 1 bytes @ 0x1D
   241   00001E                     	ds	2
   242   000020                     ??_Interrupt_Rx:
   243                           
   244                           ; 1 bytes @ 0x1F
   245   000020                     	ds	2
   246   000022                     ??_Interrupt:
   247                           
   248                           ; 1 bytes @ 0x21
   249   000022                     	ds	1
   250   000023                     ??_LCD_Instruction:
   251                           
   252                           ; 1 bytes @ 0x22
   253   000023                     	ds	1
   254   000024                     LCD_Instruction@Instruction:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x23
   258   000024                     	ds	1
   259   000025                     Send_Instruction_Data@Data:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x24
   263   000025                     	ds	1
   264   000026                     Send_Instruction_Data@Instruction:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x25
   268   000026                     	ds	1
   269   000027                     ??_Init_LCD:
   270                           
   271                           ; 1 bytes @ 0x26
   272   000027                     	ds	2
   273   000029                     
   274                           ; 1 bytes @ 0x28
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 40 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels required when called: 8
   300 ;; This function calls:
   301 ;;		_Configurations
   302 ;;		_Init_LCD
   303 ;; This function is called by:
   304 ;;		Startup code after reset
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text0
   309   00186E                     __ptext0:
   310                           	callstack 0
   311   00186E                     _main:
   312                           	callstack 23
   313   00186E                     
   314                           ;main.c: 43:     Configurations();
   315   00186E  ECB7  F00B         	call	_Configurations	;wreg free
   316   001872                     
   317                           ;main.c: 44:     Init_LCD();
   318   001872  ECAA  F00A         	call	_Init_LCD	;wreg free
   319   001876                     l81:
   320   001876  EF3B  F00C         	goto	l81
   321   00187A  EF13  F000         	goto	start
   322   00187E                     __end_of_main:
   323                           	callstack 0
   324                           
   325 ;; *************** function _Init_LCD *****************
   326 ;; Defined at:
   327 ;;		line 5 in file "LCD_Library.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;Total ram usage:        2 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 7
   348 ;; This function calls:
   349 ;;		_Send_Instruction_Data
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356   001554                     __ptext1:
   357                           	callstack 0
   358   001554                     _Init_LCD:
   359                           	callstack 23
   360   001554                     
   361                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   362   001554  0E03               	movlw	3
   363   001556  6E28               	movwf	(??_Init_LCD+1)^0,c
   364   001558  0E08               	movlw	8
   365   00155A  6E27               	movwf	??_Init_LCD^0,c
   366   00155C  0E77               	movlw	119
   367   00155E                     u597:
   368   00155E  2EE8               	decfsz	wreg,f,c
   369   001560  D7FE               	bra	u597
   370   001562  2E27               	decfsz	??_Init_LCD^0,f,c
   371   001564  D7FC               	bra	u597
   372   001566  2E28               	decfsz	(??_Init_LCD+1)^0,f,c
   373   001568  D7FA               	bra	u597
   374   00156A  0000               	nop	
   375   00156C                     
   376                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   377   00156C  0E30               	movlw	48
   378   00156E  6E25               	movwf	Send_Instruction_Data@Data^0,c
   379   001570  0E00               	movlw	0
   380   001572  EC1C  F00C         	call	_Send_Instruction_Data
   381   001576                     
   382                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   383   001576  0E1A               	movlw	26
   384   001578  6E27               	movwf	??_Init_LCD^0,c
   385   00157A  0EF8               	movlw	248
   386   00157C                     u607:
   387   00157C  2EE8               	decfsz	wreg,f,c
   388   00157E  D7FE               	bra	u607
   389   001580  2E27               	decfsz	??_Init_LCD^0,f,c
   390   001582  D7FC               	bra	u607
   391   001584  D000               	nop2	
   392                           
   393                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   394   001586  0E30               	movlw	48
   395   001588  6E25               	movwf	Send_Instruction_Data@Data^0,c
   396   00158A  0E00               	movlw	0
   397   00158C  EC1C  F00C         	call	_Send_Instruction_Data
   398   001590                     
   399                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   400   001590  0E1A               	movlw	26
   401   001592  6E27               	movwf	??_Init_LCD^0,c
   402   001594  0EF8               	movlw	248
   403   001596                     u617:
   404   001596  2EE8               	decfsz	wreg,f,c
   405   001598  D7FE               	bra	u617
   406   00159A  2E27               	decfsz	??_Init_LCD^0,f,c
   407   00159C  D7FC               	bra	u617
   408   00159E  D000               	nop2	
   409   0015A0                     
   410                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   411   0015A0  0E30               	movlw	48
   412   0015A2  6E25               	movwf	Send_Instruction_Data@Data^0,c
   413   0015A4  0E00               	movlw	0
   414   0015A6  EC1C  F00C         	call	_Send_Instruction_Data
   415   0015AA                     
   416                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   417   0015AA  0E02               	movlw	2
   418   0015AC  6E25               	movwf	Send_Instruction_Data@Data^0,c
   419   0015AE  0E00               	movlw	0
   420   0015B0  EC1C  F00C         	call	_Send_Instruction_Data
   421   0015B4                     
   422                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   423   0015B4  0E06               	movlw	6
   424   0015B6  6E25               	movwf	Send_Instruction_Data@Data^0,c
   425   0015B8  0E00               	movlw	0
   426   0015BA  EC1C  F00C         	call	_Send_Instruction_Data
   427   0015BE                     
   428                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   429   0015BE  0E0F               	movlw	15
   430   0015C0  6E25               	movwf	Send_Instruction_Data@Data^0,c
   431   0015C2  0E00               	movlw	0
   432   0015C4  EC1C  F00C         	call	_Send_Instruction_Data
   433   0015C8                     
   434                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   435   0015C8  0E28               	movlw	40
   436   0015CA  6E25               	movwf	Send_Instruction_Data@Data^0,c
   437   0015CC  0E00               	movlw	0
   438   0015CE  EC1C  F00C         	call	_Send_Instruction_Data
   439   0015D2                     
   440                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   441   0015D2  0E01               	movlw	1
   442   0015D4  6E25               	movwf	Send_Instruction_Data@Data^0,c
   443   0015D6  0E00               	movlw	0
   444   0015D8  EC1C  F00C         	call	_Send_Instruction_Data
   445   0015DC                     
   446                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   447   0015DC  0E03               	movlw	3
   448   0015DE  6E28               	movwf	(??_Init_LCD+1)^0,c
   449   0015E0  0E08               	movlw	8
   450   0015E2  6E27               	movwf	??_Init_LCD^0,c
   451   0015E4  0E77               	movlw	119
   452   0015E6                     u627:
   453   0015E6  2EE8               	decfsz	wreg,f,c
   454   0015E8  D7FE               	bra	u627
   455   0015EA  2E27               	decfsz	??_Init_LCD^0,f,c
   456   0015EC  D7FC               	bra	u627
   457   0015EE  2E28               	decfsz	(??_Init_LCD+1)^0,f,c
   458   0015F0  D7FA               	bra	u627
   459   0015F2  0000               	nop	
   460   0015F4  0012               	return		;funcret
   461   0015F6                     __end_of_Init_LCD:
   462                           	callstack 0
   463                           
   464 ;; *************** function _Send_Instruction_Data *****************
   465 ;; Defined at:
   466 ;;		line 24 in file "LCD_Library.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  Instruction     1    wreg     unsigned char 
   469 ;;  Data            1   36[COMRAM] unsigned char 
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  Instruction     1   37[COMRAM] unsigned char 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   481 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;Total ram usage:        2 bytes
   486 ;; Hardware stack levels used: 1
   487 ;; Hardware stack levels required when called: 6
   488 ;; This function calls:
   489 ;;		_LCD_Instruction
   490 ;; This function is called by:
   491 ;;		_Init_LCD
   492 ;;		_Init_Message_Platform
   493 ;;		_Send_String
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text2
   498   001838                     __ptext2:
   499                           	callstack 0
   500   001838                     _Send_Instruction_Data:
   501                           	callstack 23
   502                           
   503                           ;incstack = 0
   504                           ;Send_Instruction_Data@Instruction stored from wreg
   505   001838  6E26               	movwf	Send_Instruction_Data@Instruction^0,c
   506   00183A                     
   507                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   508   00183A  B026               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   509   00183C  D002               	bra	u565
   510   00183E  988B               	bcf	139,4,c	;volatile
   511   001840  D001               	bra	u566
   512   001842                     u565:
   513   001842  888B               	bsf	139,4,c	;volatile
   514   001844                     u566:
   515   001844                     
   516                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   517   001844  3825               	swapf	Send_Instruction_Data@Data^0,w,c
   518   001846  0B0F               	andlw	15
   519   001848  ECEB  F00B         	call	_LCD_Instruction
   520   00184C                     
   521                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
   522   00184C  5025               	movf	Send_Instruction_Data@Data^0,w,c
   523   00184E  ECEB  F00B         	call	_LCD_Instruction
   524   001852  0012               	return		;funcret
   525   001854                     __end_of_Send_Instruction_Data:
   526                           	callstack 0
   527                           
   528 ;; *************** function _LCD_Instruction *****************
   529 ;; Defined at:
   530 ;;		line 33 in file "LCD_Library.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  Instruction     1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  Instruction     1   35[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;Total ram usage:        2 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 5
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_Send_Instruction_Data
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text3
   559   0017D6                     __ptext3:
   560                           	callstack 0
   561   0017D6                     _LCD_Instruction:
   562                           	callstack 23
   563                           
   564                           ;incstack = 0
   565                           ;LCD_Instruction@Instruction stored from wreg
   566   0017D6  6E24               	movwf	LCD_Instruction@Instruction^0,c
   567   0017D8                     
   568                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   569   0017D8  8A8B               	bsf	139,5,c	;volatile
   570   0017DA                     
   571                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   572   0017DA  0E4E               	movlw	78
   573   0017DC  6E23               	movwf	??_LCD_Instruction^0,c
   574   0017DE  0EEB               	movlw	235
   575   0017E0                     u637:
   576   0017E0  2EE8               	decfsz	wreg,f,c
   577   0017E2  D7FE               	bra	u637
   578   0017E4  2E23               	decfsz	??_LCD_Instruction^0,f,c
   579   0017E6  D7FC               	bra	u637
   580   0017E8  0000               	nop	
   581   0017EA                     
   582                           ;LCD_Library.c: 37:     LATD = Instruction;
   583   0017EA  C024  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   584   0017EE                     
   585                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   586   0017EE  0E4E               	movlw	78
   587   0017F0  6E23               	movwf	??_LCD_Instruction^0,c
   588   0017F2  0EEB               	movlw	235
   589   0017F4                     u647:
   590   0017F4  2EE8               	decfsz	wreg,f,c
   591   0017F6  D7FE               	bra	u647
   592   0017F8  2E23               	decfsz	??_LCD_Instruction^0,f,c
   593   0017FA  D7FC               	bra	u647
   594   0017FC  0000               	nop	
   595   0017FE                     
   596                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   597   0017FE  9A8B               	bcf	139,5,c	;volatile
   598   001800                     
   599                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   600   001800  0E4E               	movlw	78
   601   001802  6E23               	movwf	??_LCD_Instruction^0,c
   602   001804  0EEB               	movlw	235
   603   001806                     u657:
   604   001806  2EE8               	decfsz	wreg,f,c
   605   001808  D7FE               	bra	u657
   606   00180A  2E23               	decfsz	??_LCD_Instruction^0,f,c
   607   00180C  D7FC               	bra	u657
   608   00180E  0000               	nop	
   609   001810  0012               	return		;funcret
   610   001812                     __end_of_LCD_Instruction:
   611                           	callstack 0
   612                           
   613 ;; *************** function _Configurations *****************
   614 ;; Defined at:
   615 ;;		line 77 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;Total ram usage:        0 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 5
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text4
   644   00176E                     __ptext4:
   645                           	callstack 0
   646   00176E                     _Configurations:
   647                           	callstack 25
   648   00176E                     
   649                           ;main.c: 79:     OSCCON = 0x72;
   650   00176E  0E72               	movlw	114
   651   001770  6ED3               	movwf	211,c	;volatile
   652                           
   653                           ;main.c: 81:     ANSELC = 0;
   654   001772  0E00               	movlw	0
   655   001774  010F               	movlb	15	; () banked
   656   001776  6F3A               	movwf	58,b	;volatile
   657                           
   658                           ;main.c: 82:     ANSELD = 0;
   659   001778  0E00               	movlw	0
   660   00177A  6F3B               	movwf	59,b	;volatile
   661                           
   662                           ;main.c: 83:     ANSELE = 0;
   663   00177C  0E00               	movlw	0
   664   00177E  6F3C               	movwf	60,b	;volatile
   665   001780                     
   666                           ; BSR set to: 15
   667                           ;main.c: 86:     TRISCbits.RC4 = 0;
   668   001780  9894               	bcf	148,4,c	;volatile
   669   001782                     
   670                           ; BSR set to: 15
   671                           ;main.c: 87:     TRISCbits.RC5 = 0;
   672   001782  9A94               	bcf	148,5,c	;volatile
   673                           
   674                           ;main.c: 88:     TRISD = 0;
   675   001784  0E00               	movlw	0
   676   001786  6E95               	movwf	149,c	;volatile
   677                           
   678                           ;main.c: 89:     TRISE = 0;
   679   001788  0E00               	movlw	0
   680   00178A  6E96               	movwf	150,c	;volatile
   681   00178C                     
   682                           ; BSR set to: 15
   683                           ;main.c: 92:     LATCbits.LC4 = 0;
   684   00178C  988B               	bcf	139,4,c	;volatile
   685   00178E                     
   686                           ; BSR set to: 15
   687                           ;main.c: 93:     LATCbits.LC5 = 0;
   688   00178E  9A8B               	bcf	139,5,c	;volatile
   689                           
   690                           ;main.c: 94:     LATD = 0;
   691   001790  0E00               	movlw	0
   692   001792  6E8C               	movwf	140,c	;volatile
   693                           
   694                           ;main.c: 95:     LATE = 0;
   695   001794  0E00               	movlw	0
   696   001796  6E8D               	movwf	141,c	;volatile
   697   001798                     
   698                           ; BSR set to: 15
   699                           ;main.c: 98:     INTCONbits.GIE = 1;
   700   001798  8EF2               	bsf	242,7,c	;volatile
   701   00179A                     
   702                           ; BSR set to: 15
   703                           ;main.c: 99:     INTCONbits.PEIE = 1;
   704   00179A  8CF2               	bsf	242,6,c	;volatile
   705   00179C                     
   706                           ; BSR set to: 15
   707                           ;main.c: 100:     RCONbits.IPEN = 1;
   708   00179C  8ED0               	bsf	208,7,c	;volatile
   709   00179E                     
   710                           ; BSR set to: 15
   711                           ;main.c: 102:     PIE1bits.RC1IE = 1;
   712   00179E  8A9D               	bsf	157,5,c	;volatile
   713   0017A0                     
   714                           ; BSR set to: 15
   715                           ;main.c: 103:     PIR1bits.RC1IF = 0;
   716   0017A0  9A9E               	bcf	158,5,c	;volatile
   717                           
   718                           ;main.c: 106:     SPBRG = 103;
   719   0017A2  0E67               	movlw	103
   720   0017A4  6EAF               	movwf	175,c	;volatile
   721   0017A6                     
   722                           ; BSR set to: 15
   723                           ;main.c: 107:     TRISCbits.RC6 = 1;
   724   0017A6  8C94               	bsf	148,6,c	;volatile
   725   0017A8                     
   726                           ; BSR set to: 15
   727                           ;main.c: 108:     TRISCbits.RC7 = 1;
   728   0017A8  8E94               	bsf	148,7,c	;volatile
   729   0017AA                     
   730                           ; BSR set to: 15
   731                           ;main.c: 111:     TXSTA1bits.TX91 = 0;
   732   0017AA  9CAC               	bcf	172,6,c	;volatile
   733   0017AC                     
   734                           ; BSR set to: 15
   735                           ;main.c: 112:     TXSTA1bits.TXEN1 = 1;
   736   0017AC  8AAC               	bsf	172,5,c	;volatile
   737   0017AE                     
   738                           ; BSR set to: 15
   739                           ;main.c: 113:     TXSTA1bits.SYNC1 = 0;
   740   0017AE  98AC               	bcf	172,4,c	;volatile
   741   0017B0                     
   742                           ; BSR set to: 15
   743                           ;main.c: 114:     TXSTA1bits.BRGH1 = 1;
   744   0017B0  84AC               	bsf	172,2,c	;volatile
   745   0017B2                     
   746                           ; BSR set to: 15
   747                           ;main.c: 117:     RCSTAbits.SPEN1 = 1;
   748   0017B2  8EAB               	bsf	171,7,c	;volatile
   749   0017B4                     
   750                           ; BSR set to: 15
   751                           ;main.c: 118:     RCSTAbits.RX91 = 0;
   752   0017B4  9CAB               	bcf	171,6,c	;volatile
   753   0017B6                     
   754                           ; BSR set to: 15
   755                           ;main.c: 119:     RCSTAbits.CREN1 = 1;
   756   0017B6  88AB               	bsf	171,4,c	;volatile
   757   0017B8                     
   758                           ; BSR set to: 15
   759                           ;main.c: 122:     BAUDCON1bits.BRG16 = 0;
   760   0017B8  96B8               	bcf	184,3,c	;volatile
   761                           
   762                           ;main.c: 134:     PR2 = 0xF9;
   763   0017BA  0EF9               	movlw	249
   764   0017BC  6EBB               	movwf	187,c	;volatile
   765                           
   766                           ;main.c: 135:     T2CON = 0x00;
   767   0017BE  0E00               	movlw	0
   768   0017C0  6EBA               	movwf	186,c	;volatile
   769                           
   770                           ;main.c: 136:     CCP3CON = 0x0C;
   771   0017C2  0E0C               	movlw	12
   772   0017C4  6F5D               	movwf	93,b	;volatile
   773                           
   774                           ;main.c: 137:     CCPR3L = 0xFA;
   775   0017C6  0EFA               	movlw	250
   776   0017C8  6F5E               	movwf	94,b	;volatile
   777                           
   778                           ;main.c: 138:     CCP5CON = 0x0C;
   779   0017CA  0E0C               	movlw	12
   780   0017CC  6F54               	movwf	84,b	;volatile
   781                           
   782                           ;main.c: 139:     CCPR5L = 0xFA;
   783   0017CE  0EFA               	movlw	250
   784   0017D0  6F55               	movwf	85,b	;volatile
   785   0017D2                     
   786                           ; BSR set to: 15
   787                           ;main.c: 140:     T2CONbits.TMR2ON = 1;
   788   0017D2  84BA               	bsf	186,2,c	;volatile
   789   0017D4                     
   790                           ; BSR set to: 15
   791   0017D4  0012               	return		;funcret
   792   0017D6                     __end_of_Configurations:
   793                           	callstack 0
   794                           
   795 ;; *************** function _Interrupt *****************
   796 ;; Defined at:
   797 ;;		line 69 in file "main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		None
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:        1 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 4
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		Interrupt level 1
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	intcodelo
   826   000018                     __pintcodelo:
   827                           	callstack 0
   828   000018                     _Interrupt:
   829                           	callstack 23
   830                           
   831                           ; BSR set to: 15
   832                           ;incstack = 0
   833   000018  8032               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   834   00001A  CFE0 F022          	movff	bsr,??_Interrupt
   835   00001E  C022  FFE0         	movff	??_Interrupt,bsr
   836   000022  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   837   000024  0010               	retfie	
   838   000026                     __end_of_Interrupt:
   839                           	callstack 0
   840                           
   841 ;; *************** function _Interrupt_Rx *****************
   842 ;; Defined at:
   843 ;;		line 57 in file "main.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 3
   864 ;; This function calls:
   865 ;;		_Receive_Interrupt
   866 ;; This function is called by:
   867 ;;		Interrupt level 2
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	intcode
   872   000008                     __pintcode:
   873                           	callstack 0
   874   000008                     _Interrupt_Rx:
   875                           	callstack 23
   876                           
   877                           ;incstack = 0
   878   000008  8232               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   879   00000A  EF09  F00C         	goto	int_func
   880                           
   881                           	psect	intcode_body
   882   001812                     __pintcode_body:
   883                           	callstack 23
   884   001812                     int_func:
   885                           	callstack 23
   886   001812  CFF3 F020          	movff	prodl,??_Interrupt_Rx
   887   001816  CFF4 F021          	movff	prodh,??_Interrupt_Rx+1
   888   00181A                     
   889                           ;main.c: 59:     if (PIR1bits.RC1IF) {
   890   00181A  AA9E               	btfss	158,5,c	;volatile
   891   00181C  EF12  F00C         	goto	i2u57_41
   892   001820  EF14  F00C         	goto	i2u57_40
   893   001824                     i2u57_41:
   894   001824  EF16  F00C         	goto	i2l90
   895   001828                     i2u57_40:
   896   001828                     
   897                           ;main.c: 61:         Receive_Interrupt();
   898   001828  EC7F  F00B         	call	_Receive_Interrupt	;wreg free
   899   00182C                     i2l90:
   900   00182C  C021  FFF4         	movff	??_Interrupt_Rx+1,prodh
   901   001830  C020  FFF3         	movff	??_Interrupt_Rx,prodl
   902   001834  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   903   001836  0011               	retfie		f
   904   001838                     __end_of_Interrupt_Rx:
   905                           	callstack 0
   906                           
   907 ;; *************** function _Receive_Interrupt *****************
   908 ;; Defined at:
   909 ;;		line 144 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;Total ram usage:        2 bytes
   928 ;; Hardware stack levels used: 1
   929 ;; Hardware stack levels required when called: 2
   930 ;; This function calls:
   931 ;;		_Set_PWM_Left_Motor
   932 ;;		_Set_PWM_Right_Motor
   933 ;; This function is called by:
   934 ;;		_Interrupt_Rx
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text7
   939   0016FE                     __ptext7:
   940                           	callstack 0
   941   0016FE                     _Receive_Interrupt:
   942                           	callstack 23
   943   0016FE                     
   944                           ;main.c: 146:     Rx_Buffer = RCREG1;
   945   0016FE  CFAE F031          	movff	4014,_Rx_Buffer	;volatile
   946                           
   947                           ;main.c: 148:     switch (Rx_Buffer) {
   948   001702  EFAF  F00B         	goto	i2l1353
   949   001706                     i2l1339:
   950                           
   951                           ;main.c: 152:             Set_PWM_Right_Motor(800.00);
   952   001706  0E00               	movlw	0
   953   001708  6E1A               	movwf	Set_PWM_Right_Motor@value1_pwm^0,c
   954   00170A  0E00               	movlw	0
   955   00170C  6E1B               	movwf	(Set_PWM_Right_Motor@value1_pwm+1)^0,c
   956   00170E  0E48               	movlw	72
   957   001710  6E1C               	movwf	(Set_PWM_Right_Motor@value1_pwm+2)^0,c
   958   001712  0E44               	movlw	68
   959   001714  6E1D               	movwf	(Set_PWM_Right_Motor@value1_pwm+3)^0,c
   960   001716  ECFB  F00A         	call	_Set_PWM_Right_Motor	;wreg free
   961   00171A                     
   962                           ;main.c: 153:             LATDbits.LD4 = 0;
   963   00171A  988C               	bcf	140,4,c	;volatile
   964   00171C                     
   965                           ;main.c: 154:             LATDbits.LD5 = 1;
   966   00171C  8A8C               	bsf	140,5,c	;volatile
   967                           
   968                           ;main.c: 155:             Set_PWM_Left_Motor(800.00);
   969   00171E  0E00               	movlw	0
   970   001720  6E1A               	movwf	Set_PWM_Left_Motor@value2_pwm^0,c
   971   001722  0E00               	movlw	0
   972   001724  6E1B               	movwf	(Set_PWM_Left_Motor@value2_pwm+1)^0,c
   973   001726  0E48               	movlw	72
   974   001728  6E1C               	movwf	(Set_PWM_Left_Motor@value2_pwm+2)^0,c
   975   00172A  0E44               	movlw	68
   976   00172C  6E1D               	movwf	(Set_PWM_Left_Motor@value2_pwm+3)^0,c
   977   00172E  EC3D  F00B         	call	_Set_PWM_Left_Motor	;wreg free
   978   001732                     
   979                           ;main.c: 156:             LATDbits.LD6 = 1;
   980   001732  8C8C               	bsf	140,6,c	;volatile
   981   001734                     
   982                           ;main.c: 157:             LATDbits.LD7 = 0;
   983   001734  9E8C               	bcf	140,7,c	;volatile
   984   001736                     
   985                           ;main.c: 159:             _delay((unsigned long)((5000)*(16000000/4000.0)));
   986   001736  0E66               	movlw	102
   987   001738  6E1F               	movwf	(??_Receive_Interrupt+1)^0,c
   988   00173A  0E76               	movlw	118
   989   00173C  6E1E               	movwf	??_Receive_Interrupt^0,c
   990   00173E  0EC1               	movlw	193
   991   001740                     i2u66_47:
   992   001740  2EE8               	decfsz	wreg,f,c
   993   001742  D7FE               	bra	i2u66_47
   994   001744  2E1E               	decfsz	??_Receive_Interrupt^0,f,c
   995   001746  D7FC               	bra	i2u66_47
   996   001748  2E1F               	decfsz	(??_Receive_Interrupt+1)^0,f,c
   997   00174A  D7FA               	bra	i2u66_47
   998   00174C  0000               	nop	
   999                           
  1000                           ;main.c: 161:             break;
  1001   00174E  EFB6  F00B         	goto	i2l105
  1002   001752                     i2l104:
  1003                           
  1004                           ;main.c: 165:             LATDbits.LD4 = 0;
  1005   001752  988C               	bcf	140,4,c	;volatile
  1006                           
  1007                           ;main.c: 166:             LATDbits.LD5 = 0;
  1008   001754  9A8C               	bcf	140,5,c	;volatile
  1009                           
  1010                           ;main.c: 167:             LATDbits.LD6 = 0;
  1011   001756  9C8C               	bcf	140,6,c	;volatile
  1012                           
  1013                           ;main.c: 168:             LATDbits.LD7 = 0;
  1014   001758  9E8C               	bcf	140,7,c	;volatile
  1015                           
  1016                           ;main.c: 170:             break;
  1017   00175A  EFB6  F00B         	goto	i2l105
  1018   00175E                     i2l1353:
  1019   00175E  5031               	movf	_Rx_Buffer^0,w,c
  1020                           
  1021                           ; Switch size 1, requested type "simple"
  1022                           ; Number of cases is 1, Range of values is 77 to 77
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte            4     3 (average)
  1026                           ;	Chosen strategy is simple_byte
  1027   001760  0A4D               	xorlw	77	; case 77
  1028   001762  B4D8               	btfsc	status,2,c
  1029   001764  EF83  F00B         	goto	i2l1339
  1030   001768  EFA9  F00B         	goto	i2l104
  1031   00176C                     i2l105:
  1032   00176C  0012               	return		;funcret
  1033   00176E                     __end_of_Receive_Interrupt:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _Set_PWM_Right_Motor *****************
  1037 ;; Defined at:
  1038 ;;		line 178 in file "main.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  value1_pwm      4   25[COMRAM] float 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;Total ram usage:        4 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; Hardware stack levels required when called: 1
  1059 ;; This function calls:
  1060 ;;		___flmul
  1061 ;;		___fltol
  1062 ;; This function is called by:
  1063 ;;		_Receive_Interrupt
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text8
  1068   0015F6                     __ptext8:
  1069                           	callstack 0
  1070   0015F6                     _Set_PWM_Right_Motor:
  1071                           	callstack 23
  1072   0015F6                     
  1073                           ;main.c: 180:     Duty_Cycle1 = (float) (value1_pwm * (1000.00 / 1023.00));
  1074   0015F6  C01A  F001         	movff	Set_PWM_Right_Motor@value1_pwm,___flmul@b
  1075   0015FA  C01B  F002         	movff	Set_PWM_Right_Motor@value1_pwm+1,___flmul@b+1
  1076   0015FE  C01C  F003         	movff	Set_PWM_Right_Motor@value1_pwm+2,___flmul@b+2
  1077   001602  C01D  F004         	movff	Set_PWM_Right_Motor@value1_pwm+3,___flmul@b+3
  1078   001606  0E90               	movlw	144
  1079   001608  6E05               	movwf	___flmul@a^0,c
  1080   00160A  0E3E               	movlw	62
  1081   00160C  6E06               	movwf	(___flmul@a+1)^0,c
  1082   00160E  0E7A               	movlw	122
  1083   001610  6E07               	movwf	(___flmul@a+2)^0,c
  1084   001612  0E3F               	movlw	63
  1085   001614  6E08               	movwf	(___flmul@a+3)^0,c
  1086   001616  EC12  F008         	call	___flmul	;wreg free
  1087   00161A  C001  F02D         	movff	?___flmul,_Duty_Cycle1
  1088   00161E  C002  F02E         	movff	?___flmul+1,_Duty_Cycle1+1
  1089   001622  C003  F02F         	movff	?___flmul+2,_Duty_Cycle1+2
  1090   001626  C004  F030         	movff	?___flmul+3,_Duty_Cycle1+3
  1091   00162A                     
  1092                           ;main.c: 181:     CCPR3L = (int) Duty_Cycle1 >> 2;
  1093   00162A  C02D  F001         	movff	_Duty_Cycle1,___fltol@f1
  1094   00162E  C02E  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1095   001632  C02F  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1096   001636  C030  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1097   00163A  EC27  F00A         	call	___fltol	;wreg free
  1098   00163E  3402               	rlcf	(?___fltol+1)^0,w,c
  1099   001640  3202               	rrcf	(?___fltol+1)^0,f,c
  1100   001642  3201               	rrcf	?___fltol^0,f,c
  1101   001644  3402               	rlcf	(?___fltol+1)^0,w,c
  1102   001646  3202               	rrcf	(?___fltol+1)^0,f,c
  1103   001648  3201               	rrcf	?___fltol^0,f,c
  1104   00164A  5001               	movf	?___fltol^0,w,c
  1105   00164C  010F               	movlb	15	; () banked
  1106   00164E  6F5E               	movwf	94,b	;volatile
  1107   001650                     
  1108                           ; BSR set to: 15
  1109                           ;main.c: 182:     CCP3CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4));
  1110   001650  C02D  F001         	movff	_Duty_Cycle1,___fltol@f1
  1111   001654  C02E  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1112   001658  C02F  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1113   00165C  C030  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1114   001660  EC27  F00A         	call	___fltol	;wreg free
  1115   001664  0E03               	movlw	3
  1116   001666  1601               	andwf	?___fltol^0,f,c
  1117   001668  3A01               	swapf	?___fltol^0,f,c
  1118   00166A  0EF0               	movlw	240
  1119   00166C  1601               	andwf	?___fltol^0,f,c
  1120   00166E  010F               	movlb	15	; () banked
  1121   001670  515D               	movf	93,w,b	;volatile
  1122   001672  0B0F               	andlw	15
  1123   001674  1001               	iorwf	?___fltol^0,w,c
  1124   001676  6F5D               	movwf	93,b	;volatile
  1125   001678                     
  1126                           ; BSR set to: 15
  1127   001678  0012               	return		;funcret
  1128   00167A                     __end_of_Set_PWM_Right_Motor:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _Set_PWM_Left_Motor *****************
  1132 ;; Defined at:
  1133 ;;		line 188 in file "main.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  value2_pwm      4   25[COMRAM] float 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;Total ram usage:        4 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 1
  1154 ;; This function calls:
  1155 ;;		___flmul
  1156 ;;		___fltol
  1157 ;; This function is called by:
  1158 ;;		_Receive_Interrupt
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text9
  1163   00167A                     __ptext9:
  1164                           	callstack 0
  1165   00167A                     _Set_PWM_Left_Motor:
  1166                           	callstack 23
  1167   00167A                     
  1168                           ;main.c: 190:     Duty_Cycle2 = (float) (value2_pwm * (1000.00 / 1023.00));
  1169   00167A  C01A  F001         	movff	Set_PWM_Left_Motor@value2_pwm,___flmul@b
  1170   00167E  C01B  F002         	movff	Set_PWM_Left_Motor@value2_pwm+1,___flmul@b+1
  1171   001682  C01C  F003         	movff	Set_PWM_Left_Motor@value2_pwm+2,___flmul@b+2
  1172   001686  C01D  F004         	movff	Set_PWM_Left_Motor@value2_pwm+3,___flmul@b+3
  1173   00168A  0E90               	movlw	144
  1174   00168C  6E05               	movwf	___flmul@a^0,c
  1175   00168E  0E3E               	movlw	62
  1176   001690  6E06               	movwf	(___flmul@a+1)^0,c
  1177   001692  0E7A               	movlw	122
  1178   001694  6E07               	movwf	(___flmul@a+2)^0,c
  1179   001696  0E3F               	movlw	63
  1180   001698  6E08               	movwf	(___flmul@a+3)^0,c
  1181   00169A  EC12  F008         	call	___flmul	;wreg free
  1182   00169E  C001  F029         	movff	?___flmul,_Duty_Cycle2
  1183   0016A2  C002  F02A         	movff	?___flmul+1,_Duty_Cycle2+1
  1184   0016A6  C003  F02B         	movff	?___flmul+2,_Duty_Cycle2+2
  1185   0016AA  C004  F02C         	movff	?___flmul+3,_Duty_Cycle2+3
  1186   0016AE                     
  1187                           ;main.c: 191:     CCPR5L = (int) Duty_Cycle2 >> 2;
  1188   0016AE  C029  F001         	movff	_Duty_Cycle2,___fltol@f1
  1189   0016B2  C02A  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1190   0016B6  C02B  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1191   0016BA  C02C  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1192   0016BE  EC27  F00A         	call	___fltol	;wreg free
  1193   0016C2  3402               	rlcf	(?___fltol+1)^0,w,c
  1194   0016C4  3202               	rrcf	(?___fltol+1)^0,f,c
  1195   0016C6  3201               	rrcf	?___fltol^0,f,c
  1196   0016C8  3402               	rlcf	(?___fltol+1)^0,w,c
  1197   0016CA  3202               	rrcf	(?___fltol+1)^0,f,c
  1198   0016CC  3201               	rrcf	?___fltol^0,f,c
  1199   0016CE  5001               	movf	?___fltol^0,w,c
  1200   0016D0  010F               	movlb	15	; () banked
  1201   0016D2  6F55               	movwf	85,b	;volatile
  1202   0016D4                     
  1203                           ; BSR set to: 15
  1204                           ;main.c: 192:     CCP5CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4));
  1205   0016D4  C029  F001         	movff	_Duty_Cycle2,___fltol@f1
  1206   0016D8  C02A  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1207   0016DC  C02B  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1208   0016E0  C02C  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1209   0016E4  EC27  F00A         	call	___fltol	;wreg free
  1210   0016E8  0E03               	movlw	3
  1211   0016EA  1601               	andwf	?___fltol^0,f,c
  1212   0016EC  3A01               	swapf	?___fltol^0,f,c
  1213   0016EE  0EF0               	movlw	240
  1214   0016F0  1601               	andwf	?___fltol^0,f,c
  1215   0016F2  010F               	movlb	15	; () banked
  1216   0016F4  515D               	movf	93,w,b	;volatile
  1217   0016F6  0B0F               	andlw	15
  1218   0016F8  1001               	iorwf	?___fltol^0,w,c
  1219   0016FA  6F54               	movwf	84,b	;volatile
  1220   0016FC                     
  1221                           ; BSR set to: 15
  1222   0016FC  0012               	return		;funcret
  1223   0016FE                     __end_of_Set_PWM_Left_Motor:
  1224                           	callstack 0
  1225                           
  1226 ;; *************** function ___fltol *****************
  1227 ;; Defined at:
  1228 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  f1              4    0[COMRAM] void 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  exp1            1    9[COMRAM] unsigned char 
  1233 ;;  sign1           1    8[COMRAM] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  4    0[COMRAM] long 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;Total ram usage:       10 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_Set_PWM_Right_Motor
  1253 ;;		_Set_PWM_Left_Motor
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text10
  1258   00144E                     __ptext10:
  1259                           	callstack 0
  1260   00144E                     ___fltol:
  1261                           	callstack 23
  1262   00144E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1263   001450  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1264   001452  6E0A               	movwf	___fltol@exp1^0,c
  1265   001454  500A               	movf	___fltol@exp1^0,w,c
  1266   001456  A4D8               	btfss	status,2,c
  1267   001458  EF30  F00A         	goto	i2u49_41
  1268   00145C  EF32  F00A         	goto	i2u49_40
  1269   001460                     i2u49_41:
  1270   001460  EF3C  F00A         	goto	i2l1259
  1271   001464                     i2u49_40:
  1272   001464                     i2l1255:
  1273   001464  0E00               	movlw	0
  1274   001466  6E01               	movwf	?___fltol^0,c
  1275   001468  0E00               	movlw	0
  1276   00146A  6E02               	movwf	(?___fltol+1)^0,c
  1277   00146C  0E00               	movlw	0
  1278   00146E  6E03               	movwf	(?___fltol+2)^0,c
  1279   001470  0E00               	movlw	0
  1280   001472  6E04               	movwf	(?___fltol+3)^0,c
  1281   001474  EFA9  F00A         	goto	i2l439
  1282   001478                     i2l1259:
  1283   001478  C001  F005         	movff	___fltol@f1,??___fltol
  1284   00147C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1285   001480  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1286   001484  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1287   001488  0E20               	movlw	32
  1288   00148A  EF4C  F00A         	goto	i2u50_40
  1289   00148E                     i2u50_45:
  1290   00148E  90D8               	bcf	status,0,c
  1291   001490  3208               	rrcf	(??___fltol+3)^0,f,c
  1292   001492  3207               	rrcf	(??___fltol+2)^0,f,c
  1293   001494  3206               	rrcf	(??___fltol+1)^0,f,c
  1294   001496  3205               	rrcf	??___fltol^0,f,c
  1295   001498                     i2u50_40:
  1296   001498  2EE8               	decfsz	wreg,f,c
  1297   00149A  EF47  F00A         	goto	i2u50_45
  1298   00149E  5005               	movf	??___fltol^0,w,c
  1299   0014A0  6E09               	movwf	___fltol@sign1^0,c
  1300   0014A2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1301   0014A4  0EFF               	movlw	255
  1302   0014A6  1601               	andwf	___fltol@f1^0,f,c
  1303   0014A8  0EFF               	movlw	255
  1304   0014AA  1602               	andwf	(___fltol@f1+1)^0,f,c
  1305   0014AC  0EFF               	movlw	255
  1306   0014AE  1603               	andwf	(___fltol@f1+2)^0,f,c
  1307   0014B0  0E00               	movlw	0
  1308   0014B2  1604               	andwf	(___fltol@f1+3)^0,f,c
  1309   0014B4  0E96               	movlw	150
  1310   0014B6  5E0A               	subwf	___fltol@exp1^0,f,c
  1311   0014B8  BE0A               	btfsc	___fltol@exp1^0,7,c
  1312   0014BA  EF63  F00A         	goto	i2u51_40
  1313   0014BE  EF61  F00A         	goto	i2u51_41
  1314   0014C2                     i2u51_41:
  1315   0014C2  EF79  F00A         	goto	i2l1279
  1316   0014C6                     i2u51_40:
  1317   0014C6  500A               	movf	___fltol@exp1^0,w,c
  1318   0014C8  0A80               	xorlw	128
  1319   0014CA  0F97               	addlw	151
  1320   0014CC  B0D8               	btfsc	status,0,c
  1321   0014CE  EF6B  F00A         	goto	i2u52_41
  1322   0014D2  EF6D  F00A         	goto	i2u52_40
  1323   0014D6                     i2u52_41:
  1324   0014D6  EF6F  F00A         	goto	i2l1275
  1325   0014DA                     i2u52_40:
  1326   0014DA  EF32  F00A         	goto	i2l1255
  1327   0014DE                     i2l1275:
  1328   0014DE  90D8               	bcf	status,0,c
  1329   0014E0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1330   0014E2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1331   0014E4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1332   0014E6  3201               	rrcf	___fltol@f1^0,f,c
  1333   0014E8  3E0A               	incfsz	___fltol@exp1^0,f,c
  1334   0014EA  EF6F  F00A         	goto	i2l1275
  1335   0014EE  EF91  F00A         	goto	i2l1289
  1336   0014F2                     i2l1279:
  1337   0014F2  0E1F               	movlw	31
  1338   0014F4  640A               	cpfsgt	___fltol@exp1^0,c
  1339   0014F6  EF7F  F00A         	goto	i2u53_41
  1340   0014FA  EF81  F00A         	goto	i2u53_40
  1341   0014FE                     i2u53_41:
  1342   0014FE  EF89  F00A         	goto	i2l1287
  1343   001502                     i2u53_40:
  1344   001502  EF32  F00A         	goto	i2l1255
  1345   001506                     i2l1285:
  1346   001506  90D8               	bcf	status,0,c
  1347   001508  3601               	rlcf	___fltol@f1^0,f,c
  1348   00150A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1349   00150C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1350   00150E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1351   001510  060A               	decf	___fltol@exp1^0,f,c
  1352   001512                     i2l1287:
  1353   001512  500A               	movf	___fltol@exp1^0,w,c
  1354   001514  A4D8               	btfss	status,2,c
  1355   001516  EF8F  F00A         	goto	i2u54_41
  1356   00151A  EF91  F00A         	goto	i2u54_40
  1357   00151E                     i2u54_41:
  1358   00151E  EF83  F00A         	goto	i2l1285
  1359   001522                     i2u54_40:
  1360   001522                     i2l1289:
  1361   001522  5009               	movf	___fltol@sign1^0,w,c
  1362   001524  B4D8               	btfsc	status,2,c
  1363   001526  EF97  F00A         	goto	i2u55_41
  1364   00152A  EF99  F00A         	goto	i2u55_40
  1365   00152E                     i2u55_41:
  1366   00152E  EFA1  F00A         	goto	i2l1293
  1367   001532                     i2u55_40:
  1368   001532  1E04               	comf	(___fltol@f1+3)^0,f,c
  1369   001534  1E03               	comf	(___fltol@f1+2)^0,f,c
  1370   001536  1E02               	comf	(___fltol@f1+1)^0,f,c
  1371   001538  6C01               	negf	___fltol@f1^0,c
  1372   00153A  0E00               	movlw	0
  1373   00153C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1374   00153E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1375   001540  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1376   001542                     i2l1293:
  1377   001542  C001  F001         	movff	___fltol@f1,?___fltol
  1378   001546  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1379   00154A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1380   00154E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1381   001552                     i2l439:
  1382   001552  0012               	return		;funcret
  1383   001554                     __end_of___fltol:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function ___flmul *****************
  1387 ;; Defined at:
  1388 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  b               4    0[COMRAM] long 
  1391 ;;  a               4    4[COMRAM] long 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  prod            4   19[COMRAM] struct .
  1394 ;;  grs             4   13[COMRAM] unsigned long 
  1395 ;;  temp            2   23[COMRAM] struct .
  1396 ;;  bexp            1   18[COMRAM] unsigned char 
  1397 ;;  aexp            1   17[COMRAM] unsigned char 
  1398 ;;  sign            1   12[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  4    0[COMRAM] unsigned char 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0, prodl, prodh
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;Total ram usage:       25 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_Set_PWM_Right_Motor
  1418 ;;		_Set_PWM_Left_Motor
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text11
  1423   001024                     __ptext11:
  1424                           	callstack 0
  1425   001024                     ___flmul:
  1426                           	callstack 23
  1427   001024  5004               	movf	(___flmul@b+3)^0,w,c
  1428   001026  0B80               	andlw	128
  1429   001028  6E0D               	movwf	___flmul@sign^0,c
  1430   00102A  5004               	movf	(___flmul@b+3)^0,w,c
  1431   00102C  2404               	addwf	(___flmul@b+3)^0,w,c
  1432   00102E  6E13               	movwf	___flmul@bexp^0,c
  1433   001030  AE03               	btfss	(___flmul@b+2)^0,7,c
  1434   001032  EF1D  F008         	goto	i2u30_41
  1435   001036  EF1F  F008         	goto	i2u30_40
  1436   00103A                     i2u30_41:
  1437   00103A  EF20  F008         	goto	i2l1129
  1438   00103E                     i2u30_40:
  1439   00103E  8013               	bsf	___flmul@bexp^0,0,c
  1440   001040                     i2l1129:
  1441   001040  5013               	movf	___flmul@bexp^0,w,c
  1442   001042  B4D8               	btfsc	status,2,c
  1443   001044  EF26  F008         	goto	i2u31_41
  1444   001048  EF28  F008         	goto	i2u31_40
  1445   00104C                     i2u31_41:
  1446   00104C  EF3B  F008         	goto	i2l1137
  1447   001050                     i2u31_40:
  1448   001050  2813               	incf	___flmul@bexp^0,w,c
  1449   001052  A4D8               	btfss	status,2,c
  1450   001054  EF2E  F008         	goto	i2u32_41
  1451   001058  EF30  F008         	goto	i2u32_40
  1452   00105C                     i2u32_41:
  1453   00105C  EF38  F008         	goto	i2l1135
  1454   001060                     i2u32_40:
  1455   001060  0E00               	movlw	0
  1456   001062  6E01               	movwf	___flmul@b^0,c
  1457   001064  0E00               	movlw	0
  1458   001066  6E02               	movwf	(___flmul@b+1)^0,c
  1459   001068  0E00               	movlw	0
  1460   00106A  6E03               	movwf	(___flmul@b+2)^0,c
  1461   00106C  0E00               	movlw	0
  1462   00106E  6E04               	movwf	(___flmul@b+3)^0,c
  1463   001070                     i2l1135:
  1464   001070  8E03               	bsf	(___flmul@b+2)^0,7,c
  1465   001072  EF43  F008         	goto	i2l1139
  1466   001076                     i2l1137:
  1467   001076  0E00               	movlw	0
  1468   001078  6E01               	movwf	___flmul@b^0,c
  1469   00107A  0E00               	movlw	0
  1470   00107C  6E02               	movwf	(___flmul@b+1)^0,c
  1471   00107E  0E00               	movlw	0
  1472   001080  6E03               	movwf	(___flmul@b+2)^0,c
  1473   001082  0E00               	movlw	0
  1474   001084  6E04               	movwf	(___flmul@b+3)^0,c
  1475   001086                     i2l1139:
  1476   001086  5008               	movf	(___flmul@a+3)^0,w,c
  1477   001088  0B80               	andlw	128
  1478   00108A  1A0D               	xorwf	___flmul@sign^0,f,c
  1479   00108C  5008               	movf	(___flmul@a+3)^0,w,c
  1480   00108E  2408               	addwf	(___flmul@a+3)^0,w,c
  1481   001090  6E12               	movwf	___flmul@aexp^0,c
  1482   001092  AE07               	btfss	(___flmul@a+2)^0,7,c
  1483   001094  EF4E  F008         	goto	i2u33_41
  1484   001098  EF50  F008         	goto	i2u33_40
  1485   00109C                     i2u33_41:
  1486   00109C  EF51  F008         	goto	i2l1147
  1487   0010A0                     i2u33_40:
  1488   0010A0  8012               	bsf	___flmul@aexp^0,0,c
  1489   0010A2                     i2l1147:
  1490   0010A2  5012               	movf	___flmul@aexp^0,w,c
  1491   0010A4  B4D8               	btfsc	status,2,c
  1492   0010A6  EF57  F008         	goto	i2u34_41
  1493   0010AA  EF59  F008         	goto	i2u34_40
  1494   0010AE                     i2u34_41:
  1495   0010AE  EF6C  F008         	goto	i2l1155
  1496   0010B2                     i2u34_40:
  1497   0010B2  2812               	incf	___flmul@aexp^0,w,c
  1498   0010B4  A4D8               	btfss	status,2,c
  1499   0010B6  EF5F  F008         	goto	i2u35_41
  1500   0010BA  EF61  F008         	goto	i2u35_40
  1501   0010BE                     i2u35_41:
  1502   0010BE  EF69  F008         	goto	i2l1153
  1503   0010C2                     i2u35_40:
  1504   0010C2  0E00               	movlw	0
  1505   0010C4  6E05               	movwf	___flmul@a^0,c
  1506   0010C6  0E00               	movlw	0
  1507   0010C8  6E06               	movwf	(___flmul@a+1)^0,c
  1508   0010CA  0E00               	movlw	0
  1509   0010CC  6E07               	movwf	(___flmul@a+2)^0,c
  1510   0010CE  0E00               	movlw	0
  1511   0010D0  6E08               	movwf	(___flmul@a+3)^0,c
  1512   0010D2                     i2l1153:
  1513   0010D2  8E07               	bsf	(___flmul@a+2)^0,7,c
  1514   0010D4  EF74  F008         	goto	i2l756
  1515   0010D8                     i2l1155:
  1516   0010D8  0E00               	movlw	0
  1517   0010DA  6E05               	movwf	___flmul@a^0,c
  1518   0010DC  0E00               	movlw	0
  1519   0010DE  6E06               	movwf	(___flmul@a+1)^0,c
  1520   0010E0  0E00               	movlw	0
  1521   0010E2  6E07               	movwf	(___flmul@a+2)^0,c
  1522   0010E4  0E00               	movlw	0
  1523   0010E6  6E08               	movwf	(___flmul@a+3)^0,c
  1524   0010E8                     i2l756:
  1525   0010E8  5012               	movf	___flmul@aexp^0,w,c
  1526   0010EA  B4D8               	btfsc	status,2,c
  1527   0010EC  EF7A  F008         	goto	i2u36_41
  1528   0010F0  EF7C  F008         	goto	i2u36_40
  1529   0010F4                     i2u36_41:
  1530   0010F4  EF84  F008         	goto	i2l1159
  1531   0010F8                     i2u36_40:
  1532   0010F8  5013               	movf	___flmul@bexp^0,w,c
  1533   0010FA  A4D8               	btfss	status,2,c
  1534   0010FC  EF82  F008         	goto	i2u37_41
  1535   001100  EF84  F008         	goto	i2u37_40
  1536   001104                     i2u37_41:
  1537   001104  EF8E  F008         	goto	i2l1163
  1538   001108                     i2u37_40:
  1539   001108                     i2l1159:
  1540   001108  0E00               	movlw	0
  1541   00110A  6E01               	movwf	?___flmul^0,c
  1542   00110C  0E00               	movlw	0
  1543   00110E  6E02               	movwf	(?___flmul+1)^0,c
  1544   001110  0E00               	movlw	0
  1545   001112  6E03               	movwf	(?___flmul+2)^0,c
  1546   001114  0E00               	movlw	0
  1547   001116  6E04               	movwf	(?___flmul+3)^0,c
  1548   001118  EF26  F00A         	goto	i2l760
  1549   00111C                     i2l1163:
  1550   00111C  5007               	movf	(___flmul@a+2)^0,w,c
  1551   00111E  0201               	mulwf	___flmul@b^0,c
  1552   001120  CFF3 F018          	movff	prodl,___flmul@temp
  1553   001124  CFF4 F019          	movff	prodh,___flmul@temp+1
  1554   001128  5018               	movf	___flmul@temp^0,w,c
  1555   00112A  6E0E               	movwf	___flmul@grs^0,c
  1556   00112C  6A0F               	clrf	(___flmul@grs+1)^0,c
  1557   00112E  6A10               	clrf	(___flmul@grs+2)^0,c
  1558   001130  6A11               	clrf	(___flmul@grs+3)^0,c
  1559   001132  5019               	movf	(___flmul@temp+1)^0,w,c
  1560   001134  6E14               	movwf	___flmul@prod^0,c
  1561   001136  6A15               	clrf	(___flmul@prod+1)^0,c
  1562   001138  6A16               	clrf	(___flmul@prod+2)^0,c
  1563   00113A  6A17               	clrf	(___flmul@prod+3)^0,c
  1564   00113C  5006               	movf	(___flmul@a+1)^0,w,c
  1565   00113E  0202               	mulwf	(___flmul@b+1)^0,c
  1566   001140  CFF3 F018          	movff	prodl,___flmul@temp
  1567   001144  CFF4 F019          	movff	prodh,___flmul@temp+1
  1568   001148  5018               	movf	___flmul@temp^0,w,c
  1569   00114A  260E               	addwf	___flmul@grs^0,f,c
  1570   00114C  0E00               	movlw	0
  1571   00114E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1572   001150  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1573   001152  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1574   001154  5019               	movf	(___flmul@temp+1)^0,w,c
  1575   001156  2614               	addwf	___flmul@prod^0,f,c
  1576   001158  0E00               	movlw	0
  1577   00115A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1578   00115C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1579   00115E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1580   001160  5005               	movf	___flmul@a^0,w,c
  1581   001162  0203               	mulwf	(___flmul@b+2)^0,c
  1582   001164  CFF3 F018          	movff	prodl,___flmul@temp
  1583   001168  CFF4 F019          	movff	prodh,___flmul@temp+1
  1584   00116C  5018               	movf	___flmul@temp^0,w,c
  1585   00116E  260E               	addwf	___flmul@grs^0,f,c
  1586   001170  0E00               	movlw	0
  1587   001172  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1588   001174  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1589   001176  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1590   001178  5019               	movf	(___flmul@temp+1)^0,w,c
  1591   00117A  2614               	addwf	___flmul@prod^0,f,c
  1592   00117C  0E00               	movlw	0
  1593   00117E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1594   001180  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1595   001182  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1596   001184  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1597   001188  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1598   00118C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1599   001190  6A0E               	clrf	___flmul@grs^0,c
  1600   001192  5005               	movf	___flmul@a^0,w,c
  1601   001194  0202               	mulwf	(___flmul@b+1)^0,c
  1602   001196  CFF3 F018          	movff	prodl,___flmul@temp
  1603   00119A  CFF4 F019          	movff	prodh,___flmul@temp+1
  1604   00119E  5018               	movf	___flmul@temp^0,w,c
  1605   0011A0  260E               	addwf	___flmul@grs^0,f,c
  1606   0011A2  5019               	movf	(___flmul@temp+1)^0,w,c
  1607   0011A4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1608   0011A6  0E00               	movlw	0
  1609   0011A8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1610   0011AA  0E00               	movlw	0
  1611   0011AC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1612   0011AE  5006               	movf	(___flmul@a+1)^0,w,c
  1613   0011B0  0201               	mulwf	___flmul@b^0,c
  1614   0011B2  CFF3 F018          	movff	prodl,___flmul@temp
  1615   0011B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  1616   0011BA  5018               	movf	___flmul@temp^0,w,c
  1617   0011BC  260E               	addwf	___flmul@grs^0,f,c
  1618   0011BE  5019               	movf	(___flmul@temp+1)^0,w,c
  1619   0011C0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1620   0011C2  0E00               	movlw	0
  1621   0011C4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1622   0011C6  0E00               	movlw	0
  1623   0011C8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1624   0011CA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1625   0011CE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1626   0011D2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1627   0011D6  6A0E               	clrf	___flmul@grs^0,c
  1628   0011D8  5005               	movf	___flmul@a^0,w,c
  1629   0011DA  0201               	mulwf	___flmul@b^0,c
  1630   0011DC  CFF3 F018          	movff	prodl,___flmul@temp
  1631   0011E0  CFF4 F019          	movff	prodh,___flmul@temp+1
  1632   0011E4  5018               	movf	___flmul@temp^0,w,c
  1633   0011E6  260E               	addwf	___flmul@grs^0,f,c
  1634   0011E8  5019               	movf	(___flmul@temp+1)^0,w,c
  1635   0011EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1636   0011EC  0E00               	movlw	0
  1637   0011EE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1638   0011F0  0E00               	movlw	0
  1639   0011F2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1640   0011F4  5007               	movf	(___flmul@a+2)^0,w,c
  1641   0011F6  0202               	mulwf	(___flmul@b+1)^0,c
  1642   0011F8  CFF3 F018          	movff	prodl,___flmul@temp
  1643   0011FC  CFF4 F019          	movff	prodh,___flmul@temp+1
  1644   001200  5018               	movf	___flmul@temp^0,w,c
  1645   001202  2614               	addwf	___flmul@prod^0,f,c
  1646   001204  5019               	movf	(___flmul@temp+1)^0,w,c
  1647   001206  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1648   001208  0E00               	movlw	0
  1649   00120A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1650   00120C  0E00               	movlw	0
  1651   00120E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1652   001210  5006               	movf	(___flmul@a+1)^0,w,c
  1653   001212  0203               	mulwf	(___flmul@b+2)^0,c
  1654   001214  CFF3 F018          	movff	prodl,___flmul@temp
  1655   001218  CFF4 F019          	movff	prodh,___flmul@temp+1
  1656   00121C  5018               	movf	___flmul@temp^0,w,c
  1657   00121E  2614               	addwf	___flmul@prod^0,f,c
  1658   001220  5019               	movf	(___flmul@temp+1)^0,w,c
  1659   001222  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1660   001224  0E00               	movlw	0
  1661   001226  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1662   001228  0E00               	movlw	0
  1663   00122A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1664   00122C  5007               	movf	(___flmul@a+2)^0,w,c
  1665   00122E  0203               	mulwf	(___flmul@b+2)^0,c
  1666   001230  CFF3 F018          	movff	prodl,___flmul@temp
  1667   001234  CFF4 F019          	movff	prodh,___flmul@temp+1
  1668   001238  5018               	movf	___flmul@temp^0,w,c
  1669   00123A  6E09               	movwf	??___flmul^0,c
  1670   00123C  5019               	movf	(___flmul@temp+1)^0,w,c
  1671   00123E  6E0A               	movwf	(??___flmul+1)^0,c
  1672   001240  6A0B               	clrf	(??___flmul+2)^0,c
  1673   001242  6A0C               	clrf	(??___flmul+3)^0,c
  1674   001244  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  1675   001248  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  1676   00124C  C009  F00A         	movff	??___flmul,??___flmul+1
  1677   001250  6A09               	clrf	??___flmul^0,c
  1678   001252  5009               	movf	??___flmul^0,w,c
  1679   001254  2614               	addwf	___flmul@prod^0,f,c
  1680   001256  500A               	movf	(??___flmul+1)^0,w,c
  1681   001258  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1682   00125A  500B               	movf	(??___flmul+2)^0,w,c
  1683   00125C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1684   00125E  500C               	movf	(??___flmul+3)^0,w,c
  1685   001260  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1686   001262  C00E  F009         	movff	___flmul@grs,??___flmul
  1687   001266  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  1688   00126A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  1689   00126E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  1690   001272  0E19               	movlw	25
  1691   001274  EF41  F009         	goto	i2u38_40
  1692   001278                     i2u38_45:
  1693   001278  90D8               	bcf	status,0,c
  1694   00127A  320C               	rrcf	(??___flmul+3)^0,f,c
  1695   00127C  320B               	rrcf	(??___flmul+2)^0,f,c
  1696   00127E  320A               	rrcf	(??___flmul+1)^0,f,c
  1697   001280  3209               	rrcf	??___flmul^0,f,c
  1698   001282                     i2u38_40:
  1699   001282  2EE8               	decfsz	wreg,f,c
  1700   001284  EF3C  F009         	goto	i2u38_45
  1701   001288  5009               	movf	??___flmul^0,w,c
  1702   00128A  2614               	addwf	___flmul@prod^0,f,c
  1703   00128C  500A               	movf	(??___flmul+1)^0,w,c
  1704   00128E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1705   001290  500B               	movf	(??___flmul+2)^0,w,c
  1706   001292  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1707   001294  500C               	movf	(??___flmul+3)^0,w,c
  1708   001296  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1709   001298  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1710   00129C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1711   0012A0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1712   0012A4  6A0E               	clrf	___flmul@grs^0,c
  1713   0012A6  5012               	movf	___flmul@aexp^0,w,c
  1714   0012A8  C013  F009         	movff	___flmul@bexp,??___flmul
  1715   0012AC  6A0A               	clrf	(??___flmul+1)^0,c
  1716   0012AE  2609               	addwf	??___flmul^0,f,c
  1717   0012B0  0E00               	movlw	0
  1718   0012B2  220A               	addwfc	(??___flmul+1)^0,f,c
  1719   0012B4  0E82               	movlw	130
  1720   0012B6  2409               	addwf	??___flmul^0,w,c
  1721   0012B8  6E18               	movwf	___flmul@temp^0,c
  1722   0012BA  0EFF               	movlw	255
  1723   0012BC  200A               	addwfc	(??___flmul+1)^0,w,c
  1724   0012BE  6E19               	movwf	(___flmul@temp+1)^0,c
  1725   0012C0  EF77  F009         	goto	i2l1211
  1726   0012C4                     i2l1205:
  1727   0012C4  90D8               	bcf	status,0,c
  1728   0012C6  3614               	rlcf	___flmul@prod^0,f,c
  1729   0012C8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  1730   0012CA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  1731   0012CC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  1732   0012CE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1733   0012D0  EF6C  F009         	goto	i2u39_41
  1734   0012D4  EF6E  F009         	goto	i2u39_40
  1735   0012D8                     i2u39_41:
  1736   0012D8  EF6F  F009         	goto	i2l763
  1737   0012DC                     i2u39_40:
  1738   0012DC  8014               	bsf	___flmul@prod^0,0,c
  1739   0012DE                     i2l763:
  1740   0012DE  90D8               	bcf	status,0,c
  1741   0012E0  360E               	rlcf	___flmul@grs^0,f,c
  1742   0012E2  360F               	rlcf	(___flmul@grs+1)^0,f,c
  1743   0012E4  3610               	rlcf	(___flmul@grs+2)^0,f,c
  1744   0012E6  3611               	rlcf	(___flmul@grs+3)^0,f,c
  1745   0012E8  0618               	decf	___flmul@temp^0,f,c
  1746   0012EA  A0D8               	btfss	status,0,c
  1747   0012EC  0619               	decf	(___flmul@temp+1)^0,f,c
  1748   0012EE                     i2l1211:
  1749   0012EE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  1750   0012F0  EF7C  F009         	goto	i2u40_41
  1751   0012F4  EF7E  F009         	goto	i2u40_40
  1752   0012F8                     i2u40_41:
  1753   0012F8  EF62  F009         	goto	i2l1205
  1754   0012FC                     i2u40_40:
  1755   0012FC  0E00               	movlw	0
  1756   0012FE  6E12               	movwf	___flmul@aexp^0,c
  1757   001300  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1758   001302  EF85  F009         	goto	i2u41_41
  1759   001306  EF87  F009         	goto	i2u41_40
  1760   00130A                     i2u41_41:
  1761   00130A  EFAB  F009         	goto	i2l765
  1762   00130E                     i2u41_40:
  1763   00130E  0EFF               	movlw	255
  1764   001310  140E               	andwf	___flmul@grs^0,w,c
  1765   001312  6E09               	movwf	??___flmul^0,c
  1766   001314  0EFF               	movlw	255
  1767   001316  140F               	andwf	(___flmul@grs+1)^0,w,c
  1768   001318  6E0A               	movwf	(??___flmul+1)^0,c
  1769   00131A  0EFF               	movlw	255
  1770   00131C  1410               	andwf	(___flmul@grs+2)^0,w,c
  1771   00131E  6E0B               	movwf	(??___flmul+2)^0,c
  1772   001320  0E7F               	movlw	127
  1773   001322  1411               	andwf	(___flmul@grs+3)^0,w,c
  1774   001324  6E0C               	movwf	(??___flmul+3)^0,c
  1775   001326  5009               	movf	??___flmul^0,w,c
  1776   001328  100A               	iorwf	(??___flmul+1)^0,w,c
  1777   00132A  100B               	iorwf	(??___flmul+2)^0,w,c
  1778   00132C  100C               	iorwf	(??___flmul+3)^0,w,c
  1779   00132E  B4D8               	btfsc	status,2,c
  1780   001330  EF9C  F009         	goto	i2u42_41
  1781   001334  EF9E  F009         	goto	i2u42_40
  1782   001338                     i2u42_41:
  1783   001338  EFA2  F009         	goto	i2l766
  1784   00133C                     i2u42_40:
  1785   00133C                     i2l1219:
  1786   00133C  0E01               	movlw	1
  1787   00133E  6E12               	movwf	___flmul@aexp^0,c
  1788   001340  EFAB  F009         	goto	i2l765
  1789   001344                     i2l766:
  1790   001344  A014               	btfss	___flmul@prod^0,0,c
  1791   001346  EFA7  F009         	goto	i2u43_41
  1792   00134A  EFA9  F009         	goto	i2u43_40
  1793   00134E                     i2u43_41:
  1794   00134E  EFAB  F009         	goto	i2l765
  1795   001352                     i2u43_40:
  1796   001352  EF9E  F009         	goto	i2l1219
  1797   001356                     i2l765:
  1798   001356  5012               	movf	___flmul@aexp^0,w,c
  1799   001358  B4D8               	btfsc	status,2,c
  1800   00135A  EFB1  F009         	goto	i2u44_41
  1801   00135E  EFB3  F009         	goto	i2u44_40
  1802   001362                     i2u44_41:
  1803   001362  EFD7  F009         	goto	i2l1231
  1804   001366                     i2u44_40:
  1805   001366  0E01               	movlw	1
  1806   001368  2614               	addwf	___flmul@prod^0,f,c
  1807   00136A  0E00               	movlw	0
  1808   00136C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1809   00136E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1810   001370  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1811   001372  A017               	btfss	(___flmul@prod+3)^0,0,c
  1812   001374  EFBE  F009         	goto	i2u45_41
  1813   001378  EFC0  F009         	goto	i2u45_40
  1814   00137C                     i2u45_41:
  1815   00137C  EFD7  F009         	goto	i2l1231
  1816   001380                     i2u45_40:
  1817   001380  C014  F009         	movff	___flmul@prod,??___flmul
  1818   001384  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  1819   001388  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  1820   00138C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  1821   001390  340C               	rlcf	(??___flmul+3)^0,w,c
  1822   001392  320C               	rrcf	(??___flmul+3)^0,f,c
  1823   001394  320B               	rrcf	(??___flmul+2)^0,f,c
  1824   001396  320A               	rrcf	(??___flmul+1)^0,f,c
  1825   001398  3209               	rrcf	??___flmul^0,f,c
  1826   00139A  C009  F014         	movff	??___flmul,___flmul@prod
  1827   00139E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  1828   0013A2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  1829   0013A6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  1830   0013AA  4A18               	infsnz	___flmul@temp^0,f,c
  1831   0013AC  2A19               	incf	(___flmul@temp+1)^0,f,c
  1832   0013AE                     i2l1231:
  1833   0013AE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1834   0013B0  EFE2  F009         	goto	i2u46_41
  1835   0013B4  5019               	movf	(___flmul@temp+1)^0,w,c
  1836   0013B6  E108               	bnz	i2u46_40
  1837   0013B8  2818               	incf	___flmul@temp^0,w,c
  1838   0013BA  A0D8               	btfss	status,0,c
  1839   0013BC  EFE2  F009         	goto	i2u46_41
  1840   0013C0  EFE4  F009         	goto	i2u46_40
  1841   0013C4                     i2u46_41:
  1842   0013C4  EFEE  F009         	goto	i2l1235
  1843   0013C8                     i2u46_40:
  1844   0013C8  0E00               	movlw	0
  1845   0013CA  6E14               	movwf	___flmul@prod^0,c
  1846   0013CC  0E00               	movlw	0
  1847   0013CE  6E15               	movwf	(___flmul@prod+1)^0,c
  1848   0013D0  0E80               	movlw	128
  1849   0013D2  6E16               	movwf	(___flmul@prod+2)^0,c
  1850   0013D4  0E7F               	movlw	127
  1851   0013D6  6E17               	movwf	(___flmul@prod+3)^0,c
  1852   0013D8  EF1C  F00A         	goto	i2l1247
  1853   0013DC                     i2l1235:
  1854   0013DC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1855   0013DE  EFFB  F009         	goto	i2u47_40
  1856   0013E2  5019               	movf	(___flmul@temp+1)^0,w,c
  1857   0013E4  E106               	bnz	i2u47_41
  1858   0013E6  0418               	decf	___flmul@temp^0,w,c
  1859   0013E8  B0D8               	btfsc	status,0,c
  1860   0013EA  EFF9  F009         	goto	i2u47_41
  1861   0013EE  EFFB  F009         	goto	i2u47_40
  1862   0013F2                     i2u47_41:
  1863   0013F2  EF07  F00A         	goto	i2l773
  1864   0013F6                     i2u47_40:
  1865   0013F6  0E00               	movlw	0
  1866   0013F8  6E14               	movwf	___flmul@prod^0,c
  1867   0013FA  0E00               	movlw	0
  1868   0013FC  6E15               	movwf	(___flmul@prod+1)^0,c
  1869   0013FE  0E00               	movlw	0
  1870   001400  6E16               	movwf	(___flmul@prod+2)^0,c
  1871   001402  0E00               	movlw	0
  1872   001404  6E17               	movwf	(___flmul@prod+3)^0,c
  1873   001406  0E00               	movlw	0
  1874   001408  6E0D               	movwf	___flmul@sign^0,c
  1875   00140A  EF1C  F00A         	goto	i2l1247
  1876   00140E                     i2l773:
  1877   00140E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  1878   001412  0EFF               	movlw	255
  1879   001414  1614               	andwf	___flmul@prod^0,f,c
  1880   001416  0EFF               	movlw	255
  1881   001418  1615               	andwf	(___flmul@prod+1)^0,f,c
  1882   00141A  0E7F               	movlw	127
  1883   00141C  1616               	andwf	(___flmul@prod+2)^0,f,c
  1884   00141E  0E00               	movlw	0
  1885   001420  1617               	andwf	(___flmul@prod+3)^0,f,c
  1886   001422  A013               	btfss	___flmul@bexp^0,0,c
  1887   001424  EF16  F00A         	goto	i2u48_41
  1888   001428  EF18  F00A         	goto	i2u48_40
  1889   00142C                     i2u48_41:
  1890   00142C  EF19  F00A         	goto	i2l1245
  1891   001430                     i2u48_40:
  1892   001430  8E16               	bsf	(___flmul@prod+2)^0,7,c
  1893   001432                     i2l1245:
  1894   001432  90D8               	bcf	status,0,c
  1895   001434  3013               	rrcf	___flmul@bexp^0,w,c
  1896   001436  6E17               	movwf	(___flmul@prod+3)^0,c
  1897   001438                     i2l1247:
  1898   001438  500D               	movf	___flmul@sign^0,w,c
  1899   00143A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  1900   00143C  C014  F001         	movff	___flmul@prod,?___flmul
  1901   001440  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  1902   001444  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  1903   001448  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  1904   00144C                     i2l760:
  1905   00144C  0012               	return		;funcret
  1906   00144E                     __end_of___flmul:
  1907                           	callstack 0
  1908                           
  1909                           	psect	rparam
  1910   000000                     
  1911                           	psect	temp
  1912   000032                     btemp:
  1913                           	callstack 0
  1914   000032                     	ds	1
  1915   000000                     int$flags	set	btemp
  1916   000000                     wtemp8	set	btemp+1
  1917   000000                     ttemp5	set	btemp+1
  1918   000000                     ttemp6	set	btemp+4
  1919   000000                     ttemp7	set	btemp+8
  1920                           
  1921                           	psect	config
  1922                           
  1923                           ; Padding undefined space
  1924   300000                     	org	3145728
  1925   300000  FF                 	db	255
  1926                           
  1927                           ;Config register CONFIG1H @ 0x300001
  1928                           ;	Oscillator Selection bits
  1929                           ;	FOSC = INTIO67, Internal oscillator block
  1930                           ;	4X PLL Enable
  1931                           ;	PLLCFG = OFF, Oscillator used directly
  1932                           ;	Primary clock enable bit
  1933                           ;	PRICLKEN = ON, Primary clock is always enabled
  1934                           ;	Fail-Safe Clock Monitor Enable bit
  1935                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1936                           ;	Internal/External Oscillator Switchover bit
  1937                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1938   300001                     	org	3145729
  1939   300001  28                 	db	40
  1940                           
  1941                           ;Config register CONFIG2L @ 0x300002
  1942                           ;	Power-up Timer Enable bit
  1943                           ;	PWRTEN = OFF, Power up timer disabled
  1944                           ;	Brown-out Reset Enable bits
  1945                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1946                           ;	Brown Out Reset Voltage bits
  1947                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1948   300002                     	org	3145730
  1949   300002  1F                 	db	31
  1950                           
  1951                           ;Config register CONFIG2H @ 0x300003
  1952                           ;	Watchdog Timer Enable bits
  1953                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1954                           ;	Watchdog Timer Postscale Select bits
  1955                           ;	WDTPS = 32768, 1:32768
  1956   300003                     	org	3145731
  1957   300003  3C                 	db	60
  1958                           
  1959                           ; Padding undefined space
  1960   300004                     	org	3145732
  1961   300004  FF                 	db	255
  1962                           
  1963                           ;Config register CONFIG3H @ 0x300005
  1964                           ;	CCP2 MUX bit
  1965                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1966                           ;	PORTB A/D Enable bit
  1967                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1968                           ;	P3A/CCP3 Mux bit
  1969                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1970                           ;	HFINTOSC Fast Start-up
  1971                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1972                           ;	Timer3 Clock input mux bit
  1973                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1974                           ;	ECCP2 B output mux bit
  1975                           ;	P2BMX = PORTD2, P2B is on RD2
  1976                           ;	MCLR Pin Enable bit
  1977                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1978   300005                     	org	3145733
  1979   300005  BB                 	db	187
  1980                           
  1981                           ;Config register CONFIG4L @ 0x300006
  1982                           ;	Stack Full/Underflow Reset Enable bit
  1983                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1984                           ;	Single-Supply ICSP Enable bit
  1985                           ;	LVP = OFF, Single-Supply ICSP disabled
  1986                           ;	Extended Instruction Set Enable bit
  1987                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1988                           ;	Background Debug
  1989                           ;	DEBUG = 0x1, unprogrammed default
  1990   300006                     	org	3145734
  1991   300006  81                 	db	129
  1992                           
  1993                           ; Padding undefined space
  1994   300007                     	org	3145735
  1995   300007  FF                 	db	255
  1996                           
  1997                           ;Config register CONFIG5L @ 0x300008
  1998                           ;	Code Protection Block 0
  1999                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2000                           ;	Code Protection Block 1
  2001                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2002                           ;	Code Protection Block 2
  2003                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2004                           ;	Code Protection Block 3
  2005                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2006   300008                     	org	3145736
  2007   300008  0F                 	db	15
  2008                           
  2009                           ;Config register CONFIG5H @ 0x300009
  2010                           ;	Boot Block Code Protection bit
  2011                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2012                           ;	Data EEPROM Code Protection bit
  2013                           ;	CPD = OFF, Data EEPROM not code-protected
  2014   300009                     	org	3145737
  2015   300009  C0                 	db	192
  2016                           
  2017                           ;Config register CONFIG6L @ 0x30000A
  2018                           ;	Write Protection Block 0
  2019                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2020                           ;	Write Protection Block 1
  2021                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2022                           ;	Write Protection Block 2
  2023                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2024                           ;	Write Protection Block 3
  2025                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2026   30000A                     	org	3145738
  2027   30000A  0F                 	db	15
  2028                           
  2029                           ;Config register CONFIG6H @ 0x30000B
  2030                           ;	Configuration Register Write Protection bit
  2031                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2032                           ;	Boot Block Write Protection bit
  2033                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2034                           ;	Data EEPROM Write Protection bit
  2035                           ;	WRTD = OFF, Data EEPROM not write-protected
  2036   30000B                     	org	3145739
  2037   30000B  E0                 	db	224
  2038                           
  2039                           ;Config register CONFIG7L @ 0x30000C
  2040                           ;	Table Read Protection Block 0
  2041                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2042                           ;	Table Read Protection Block 1
  2043                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2044                           ;	Table Read Protection Block 2
  2045                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2046                           ;	Table Read Protection Block 3
  2047                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2048   30000C                     	org	3145740
  2049   30000C  0F                 	db	15
  2050                           
  2051                           ;Config register CONFIG7H @ 0x30000D
  2052                           ;	Boot Block Table Read Protection bit
  2053                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2054   30000D                     	org	3145741
  2055   30000D  40                 	db	64
  2056                           tosu	equ	0xFFF
  2057                           tosh	equ	0xFFE
  2058                           tosl	equ	0xFFD
  2059                           stkptr	equ	0xFFC
  2060                           pclatu	equ	0xFFB
  2061                           pclath	equ	0xFFA
  2062                           pcl	equ	0xFF9
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           prodh	equ	0xFF4
  2068                           prodl	equ	0xFF3
  2069                           indf0	equ	0xFEF
  2070                           postinc0	equ	0xFEE
  2071                           postdec0	equ	0xFED
  2072                           preinc0	equ	0xFEC
  2073                           plusw0	equ	0xFEB
  2074                           fsr0h	equ	0xFEA
  2075                           fsr0l	equ	0xFE9
  2076                           wreg	equ	0xFE8
  2077                           indf1	equ	0xFE7
  2078                           postinc1	equ	0xFE6
  2079                           postdec1	equ	0xFE5
  2080                           preinc1	equ	0xFE4
  2081                           plusw1	equ	0xFE3
  2082                           fsr1h	equ	0xFE2
  2083                           fsr1l	equ	0xFE1
  2084                           bsr	equ	0xFE0
  2085                           indf2	equ	0xFDF
  2086                           postinc2	equ	0xFDE
  2087                           postdec2	equ	0xFDD
  2088                           preinc2	equ	0xFDC
  2089                           plusw2	equ	0xFDB
  2090                           fsr2h	equ	0xFDA
  2091                           fsr2l	equ	0xFD9
  2092                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Interrupt_Rx->_Receive_Interrupt
    _Receive_Interrupt->_Set_PWM_Left_Motor
    _Receive_Interrupt->_Set_PWM_Right_Motor
    _Set_PWM_Right_Motor->___flmul
    _Set_PWM_Left_Motor->___flmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     917
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     917
                                             38 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     917
                                             36 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             34 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         2     2      0    5054
                                             31 COMRAM     2     2      0
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Receive_Interrupt                                    2     2      0    5054
                                             29 COMRAM     2     2      0
                 _Set_PWM_Left_Motor
                _Set_PWM_Right_Motor
 ---------------------------------------------------------------------------------
 (7) _Set_PWM_Right_Motor                                  4     0      4    2527
                                             25 COMRAM     4     0      4
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (7) _Set_PWM_Left_Motor                                   4     0      4    2527
                                             25 COMRAM     4     0      4
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    1896
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Set_PWM_Left_Motor
       ___flmul
       ___fltol
     _Set_PWM_Right_Motor
       ___flmul
       ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      31       1       52.1%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRhllhhh     14      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      43        0.0%
BITBIGSFRhllhl       8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhh         6      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRhllhhl      1      0       0      40        0.0%
BITBIGSFRhlllh       1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      50        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 28 18:30:40 2024

                              l81 1876                                l82 1876                                l98 17D4  
                              bsr 0FE0                               l130 1852                               l133 1810  
                             l127 15F4                               l821 17EE                               l823 17FE  
                             l815 17D8                               l825 1800                               l817 17DA  
                             l819 17EA                               _PR2 0FBB                               u607 157C  
                             u617 1596                               u627 15E6                               u637 17E0  
                             u565 1842                               u566 1844                               u647 17F4  
                             u657 1806                               u597 155E                               wreg 0FE8  
                      _TXSTA1bits 0FAC                      ___flmul@aexp 0012                      ___flmul@bexp 0013  
                    ___flmul@sign 000D                      ___flmul@temp 0018                      ___flmul@prod 0014  
             _Set_PWM_Right_Motor 15F6                      ___fltol@exp1 000A                              l1021 1780  
                            l1031 179A                              l1023 1782                              l1041 17A8  
                            l1033 179C                              l1025 178C                              l1051 17B2  
                            l1043 17AA                              l1035 179E                              l1027 178E  
                            l1019 176E                              l1053 17B4                              l1045 17AC  
                            l1037 17A0                              l1029 1798                              l1055 17B6  
                            l1047 17AE                              l1039 17A6                              l1311 1844  
                            l1057 17B8                              l1049 17B0                              l1313 184C  
                            l1321 1590                              l1059 17D2                              l1331 15C8  
                            l1323 15A0                              l1315 1554                              l1309 183A  
                            l1333 15D2                              l1325 15AA                              l1317 156C  
                            l1335 15DC                              l1327 15B4                              l1319 1576  
                            l1329 15BE                              l1355 186E                              l1357 1872  
                            STR_1 1012                              STR_2 1001                              _LATD 0F8C  
                            _LATE 0F8D                              i1l95 001E                              i2l90 182C  
                            _main 186E                              btemp 0032                              prodh 0FF4  
                            prodl 0FF3                              start 0026                      ___param_bank 0000  
            ?_Set_PWM_Right_Motor 001A                   _LCD_Instruction 17D6  Send_Instruction_Data@Instruction 0026  
                    _BAUDCON1bits 0FB8                     ___fltol@sign1 0009                             ?_main 0001  
                 __end_of___flmul 144E                   __end_of___fltol 1554                             _T2CON 0FBA  
                           i2l111 16FC                             i2l104 1752                             i2l105 176C  
                           i2l108 1678                             i2l439 1552                             i2l760 144C  
                           i2l763 12DE                             i2l756 10E8                             i2l773 140E  
                           i2l765 1356                             i2l766 1344                             _SPBRG 0FAF  
                           _TRISD 0F95                             _TRISE 0F96                             ttemp5 0033  
                           ttemp6 0036                             ttemp7 003A                             status 0FD8  
                           wtemp8 0033                   __initialization 1854             ??_Set_PWM_Right_Motor 001E  
                    __end_of_main 187E                  __end_of_Init_LCD 15F6             _Send_Instruction_Data 1838  
                          ??_main 0029                     __activetblptr 0002                            _CCPR3L 0F5E  
                          _CCPR5L 0F55                            _ANSELC 0F3A                            _ANSELD 0F3B  
                          _ANSELE 0F3C                            i2l1201 1298                            i2l1211 12EE  
                          i2l1203 12A6                            i2l1131 1050                            i2l1123 1024  
                          i2l1213 12FC                            i2l1205 12C4                            i2l1141 108C  
                          i2l1133 1060                            i2l1125 1030                            i2l1301 1650  
                          i2l1223 1366                            i2l1231 13AE                            i2l1215 1300  
                          i2l1207 12CE                            i2l1151 10C2                            i2l1143 1092  
                          i2l1135 1070                            i2l1127 103E                            i2l1303 167A  
                          i2l1241 1422                            i2l1233 13C8                            i2l1225 1372  
                          i2l1217 130E                            i2l1209 12DC                            i2l1153 10D2  
                          i2l1145 10A0                            i2l1137 1076                            i2l1129 1040  
                          i2l1305 16AE                            i2l1243 1430                            i2l1235 13DC  
                          i2l1227 1380                            i2l1219 133C                            i2l1171 1154  
                          i2l1163 111C                            i2l1155 10D8                            i2l1147 10A2  
                          i2l1139 1086                            i2l1307 16D4                            i2l1245 1432  
                          i2l1237 13F6                            i2l1229 13AA                            i2l1181 119E  
                          i2l1173 116C                            i2l1165 1128                            i2l1157 10F8  
                          i2l1149 10B2                            i2l1261 14A2                            i2l1253 144E  
                          i2l1341 171A                            i2l1239 1412                            i2l1247 1438  
                          i2l1191 11F4                            i2l1183 11AE                            i2l1175 1178  
                          i2l1167 1132                            i2l1159 1108                            i2l1263 14A4  
                          i2l1255 1464                            i2l1343 171C                            i2l1249 143C  
                          i2l1193 1210                            i2l1185 11BA                            i2l1177 1184  
                          i2l1169 1148                            i2l1265 14B4                            i2l1345 1732  
                          i2l1353 175E                            i2l1337 16FE                            i2l1361 1828  
                          i2l1195 121C                            i2l1187 11CA                            i2l1179 1192  
                          i2l1291 1532                            i2l1275 14DE                            i2l1267 14B8  
                          i2l1259 1478                            i2l1347 1734                            i2l1339 1706  
                          i2l1197 1238                            i2l1189 11E4                            i2l1293 1542  
                          i2l1285 1506                            i2l1277 14E8                            i2l1269 14C6  
                          i2l1349 1736                            i2l1199 1262                            i2l1287 1512  
                          i2l1279 14F2                            i2l1359 181A                            i2l1289 1522  
                          i2l1297 15F6                            i2l1299 162A                            _RCREG1 0FAE  
      LCD_Instruction@Instruction 0024                            _OSCCON 0FD3                     ?_Interrupt_Rx 0001  
         __end_of_LCD_Instruction 1812                         ??___flmul 0009                         ??___fltol 0005  
                          clear_0 185A                            isa$std 0001                      __mediumconst 0000  
                          tblptru 0FF8                        __accesstop 0060           __end_of__initialization 1860  
                  ??_Interrupt_Rx 0020                     ___rparam_used 0001                        ___fltol@f1 0001  
                  __pcstackCOMRAM 0001                 _Receive_Interrupt 16FE            ?_Send_Instruction_Data 0025  
              ?_Receive_Interrupt 0001               ??_Receive_Interrupt 001E                       _Duty_Cycle1 002D  
                     _Duty_Cycle2 0029                 __end_of_Interrupt 0026                         ?_Init_LCD 0001  
                ?_LCD_Instruction 0001         __end_of_Receive_Interrupt 176E                           _CCP3CON 0F5D  
                         _CCP5CON 0F54                           i2u30_40 103E                           i2u30_41 103A  
                         i2u31_40 1050                           i2u31_41 104C                           i2u40_40 12FC  
                         i2u32_40 1060                           i2u40_41 12F8                           i2u32_41 105C  
                         i2u41_40 130E                           i2u33_40 10A0                           i2u41_41 130A  
                         i2u33_41 109C                           i2u42_40 133C                           i2u34_40 10B2  
                         i2u50_40 1498                           i2u42_41 1338                           i2u34_41 10AE  
                         i2u50_45 148E                           i2u43_40 1352                           i2u35_40 10C2  
                         i2u51_40 14C6                           i2u43_41 134E                           i2u35_41 10BE  
                         i2u51_41 14C2                           i2u44_40 1366                           i2u36_40 10F8  
                         i2u52_40 14DA                           i2u44_41 1362                           i2u36_41 10F4  
                         i2u52_41 14D6                           i2u45_40 1380                           i2u37_40 1108  
                         i2u53_40 1502                           i2u45_41 137C                           i2u37_41 1104  
                         i2u53_41 14FE                           i2u46_40 13C8                           i2u38_40 1282  
                         i2u54_40 1522                           i2u46_41 13C4                           i2u54_41 151E  
                         i2u38_45 1278                           i2u47_40 13F6                           i2u39_40 12DC  
                         i2u55_40 1532                           i2u47_41 13F2                           i2u39_41 12D8  
                         i2u55_41 152E                           i2u48_40 1430                           i2u48_41 142C  
                         i2u49_40 1464                           i2u57_40 1828                           i2u49_41 1460  
                         i2u57_41 1824                           i2u66_47 1740                        ??_Init_LCD 0027  
                         __Hparam 0000                           __Lparam 0000                           ___flmul 1024  
                         ___fltol 144E                      __psmallconst 1000                           __pcinit 1854  
                         __ramtop 1000                           __ptext0 186E                           __ptext1 1554  
                         __ptext2 1838                           __ptext3 17D6                           __ptext4 176E  
                         __ptext7 16FE                           __ptext8 15F6                           __ptext9 167A  
            __end_of_Interrupt_Rx 1838                         _T2CONbits 0FBA                    __pintcode_body 1812  
            end_of_initialization 1860                     __Lmediumconst 0000                           int_func 1812  
     __end_of_Set_PWM_Right_Motor 167A                         _RCSTAbits 0FAB                           postinc0 0FEE  
                       _TRISCbits 0F94                       ___flmul@grs 000E           ??_Send_Instruction_Data 0026  
             start_initialization 1854         Send_Instruction_Data@Data 0025                    _Configurations 176E  
                       _Interrupt 0018                         _Rx_Buffer 0031                         ___flmul@a 0005  
                       ___flmul@b 0001                       __pbssCOMRAM 0029            __end_of_Configurations 17D6  
                      ?_Interrupt 0001                      _Interrupt_Rx 0008        __end_of_Set_PWM_Left_Motor 16FE  
                       __pintcode 0008                          ?___flmul 0001                          ?___fltol 0001  
                     __pintcodelo 0018                       __smallconst 1000                   ?_Configurations 0001  
                        _LATCbits 0F8B                          _LATDbits 0F8C                          _PIE1bits 0F9D  
                        _PIR1bits 0F9E                          _RCONbits 0FD0                       ??_Interrupt 0022  
                        _Init_LCD 1554                          __Hrparam 0000                          __Lrparam 0000  
   __end_of_Send_Instruction_Data 1854                 ??_LCD_Instruction 0023                          __ptext10 144E  
                        __ptext11 1024      Set_PWM_Left_Motor@value2_pwm 001A                          isa$xinst 0000  
                        int$flags 0032                        _INTCONbits 0FF2     Set_PWM_Right_Motor@value1_pwm 001A  
                        intlevel1 0000                          intlevel2 0000                  ??_Configurations 0023  
              _Set_PWM_Left_Motor 167A               ?_Set_PWM_Left_Motor 001A              ??_Set_PWM_Left_Motor 001E  
