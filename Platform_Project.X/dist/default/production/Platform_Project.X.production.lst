

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Feb 15 23:09:03 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F46K22 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _ANSELC	set	3898
    60   000000                     _PIR1bits	set	3998
    61   000000                     _RCSTAbits	set	4011
    62   000000                     _TXSTA1bits	set	4012
    63   000000                     _SPBRG	set	4015
    64   000000                     _RCONbits	set	4048
    65   000000                     _OSCCON	set	4051
    66   000000                     _INTCONbits	set	4082
    67   000000                     _LATCbits	set	3979
    68   000000                     _TRISCbits	set	3988
    69   000000                     _ANSELD	set	3899
    70   000000                     _PIE1bits	set	3997
    71   000000                     _TRISD	set	3989
    72   000000                     _LATD	set	3980
    73   000000                     _BAUDCON1bits	set	4024
    74   000000                     _RCREG1	set	4014
    75                           
    76                           	psect	smallconst
    77   001000                     __psmallconst:
    78                           	callstack 0
    79   001000  00                 	db	0
    80   001001                     STR_1:
    81   001001  52                 	db	82	;'R'
    82   001002  6F                 	db	111	;'o'
    83   001003  62                 	db	98	;'b'
    84   001004  6F                 	db	111	;'o'
    85   001005  74                 	db	116	;'t'
    86   001006  69                 	db	105	;'i'
    87   001007  63                 	db	99	;'c'
    88   001008  20                 	db	32
    89   001009  50                 	db	80	;'P'
    90   00100A  6C                 	db	108	;'l'
    91   00100B  61                 	db	97	;'a'
    92   00100C  74                 	db	116	;'t'
    93   00100D  66                 	db	102	;'f'
    94   00100E  6F                 	db	111	;'o'
    95   00100F  72                 	db	114	;'r'
    96   001010  6D                 	db	109	;'m'
    97   001011  00                 	db	0
    98   001012                     STR_2:
    99   001012  44                 	db	68	;'D'
   100   001013  61                 	db	97	;'a'
   101   001014  74                 	db	116	;'t'
   102   001015  61                 	db	97	;'a'
   103   001016  20                 	db	32
   104   001017  74                 	db	116	;'t'
   105   001018  65                 	db	101	;'e'
   106   001019  73                 	db	115	;'s'
   107   00101A  74                 	db	116	;'t'
   108   00101B  3A                 	db	58	;':'
   109   00101C  20                 	db	32
   110   00101D  41                 	db	65	;'A'
   111   00101E  00                 	db	0
   112   00101F                     STR_3:
   113   00101F  50                 	db	80	;'P'
   114   001020  6C                 	db	108	;'l'
   115   001021  61                 	db	97	;'a'
   116   001022  74                 	db	116	;'t'
   117   001023  66                 	db	102	;'f'
   118   001024  6F                 	db	111	;'o'
   119   001025  72                 	db	114	;'r'
   120   001026  6D                 	db	109	;'m'
   121   001027  21                 	db	33
   122   001028  00                 	db	0
   123   001029  00                 	db	0	; dummy byte at the end
   124   000000                     
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128   0012D2                     __pcinit:
   129                           	callstack 0
   130   0012D2                     start_initialization:
   131                           	callstack 0
   132   0012D2                     __initialization:
   133                           	callstack 0
   134                           
   135                           ; Clear objects allocated to COMRAM (1 bytes)
   136   0012D2  6A13               	clrf	__pbssCOMRAM& (0+255),c
   137   0012D4                     end_of_initialization:
   138                           	callstack 0
   139   0012D4                     __end_of__initialization:
   140                           	callstack 0
   141   0012D4  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   142   0012D6  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   143   0012D8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   144   0012DA  6EF8               	movwf	tblptru,c
   145   0012DC  0E10               	movlw	high __Lsmallconst
   146   0012DE  6EF7               	movwf	tblptrh,c
   147   0012E0  0100               	movlb	0
   148   0012E2  EF3C  F009         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssCOMRAM
   151   000013                     __pbssCOMRAM:
   152                           	callstack 0
   153   000013                     _Rx_Buffer:
   154                           	callstack 0
   155   000013                     	ds	1
   156                           
   157                           	psect	cstackCOMRAM
   158   000001                     __pcstackCOMRAM:
   159                           	callstack 0
   160   000001                     ??i2_LCD_Instruction:
   161                           
   162                           ; 1 bytes @ 0x0
   163   000001                     	ds	1
   164   000002                     i2LCD_Instruction@Instruction:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x1
   168   000002                     	ds	1
   169   000003                     i2Send_Instruction_Data@Data:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x2
   173   000003                     	ds	1
   174   000004                     i2Send_Instruction_Data@Instruction:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x3
   178   000004                     	ds	1
   179   000005                     i2Send_String@String:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x4
   183   000005                     	ds	1
   184   000006                     ??i2_Send_String:
   185                           
   186                           ; 1 bytes @ 0x5
   187   000006                     	ds	1
   188   000007                     i2Send_String@i:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x6
   192   000007                     	ds	1
   193   000008                     ??_Interrupts:
   194                           
   195                           ; 1 bytes @ 0x7
   196   000008                     	ds	4
   197   00000C                     ??_LCD_Instruction:
   198                           
   199                           ; 1 bytes @ 0xB
   200   00000C                     	ds	1
   201   00000D                     LCD_Instruction@Instruction:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0xC
   205   00000D                     	ds	1
   206   00000E                     Send_Instruction_Data@Data:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0xD
   210   00000E                     	ds	1
   211   00000F                     Send_Instruction_Data@Instruction:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0xE
   215   00000F                     	ds	1
   216   000010                     ??_Init_LCD:
   217   000010                     Send_String@String:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xF
   221   000010                     	ds	1
   222   000011                     ??_Send_String:
   223                           
   224                           ; 1 bytes @ 0x10
   225   000011                     	ds	1
   226   000012                     Send_String@i:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x11
   230   000012                     	ds	1
   231   000013                     
   232                           ; 1 bytes @ 0x12
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 45 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 8
   258 ;; This function calls:
   259 ;;		_Configurations
   260 ;;		_Init_LCD
   261 ;;		_Send_Instruction_Data
   262 ;;		_Send_String
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text0
   269   001278                     __ptext0:
   270                           	callstack 0
   271   001278                     _main:
   272                           	callstack 23
   273   001278                     
   274                           ;main.c: 48:     Configurations();
   275   001278  EC9F  F008         	call	_Configurations	;wreg free
   276   00127C                     
   277                           ;main.c: 49:     Init_LCD();
   278   00127C  EC15  F008         	call	_Init_LCD	;wreg free
   279   001280                     
   280                           ;main.c: 51:     Send_Instruction_Data(0, 0xC0);
   281   001280  0EC0               	movlw	192
   282   001282  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   283   001284  0E00               	movlw	0
   284   001286  EC4D  F009         	call	_Send_Instruction_Data
   285   00128A                     
   286                           ;main.c: 53:     Send_String("Robotic Platform");
   287   00128A  0E01               	movlw	low STR_1
   288   00128C  6E10               	movwf	Send_String@String^0,c
   289   00128E  ECC0  F008         	call	_Send_String	;wreg free
   290   001292                     l53:
   291   001292  EF49  F009         	goto	l53
   292   001296  EF20  F000         	goto	start
   293   00129A                     __end_of_main:
   294                           	callstack 0
   295                           
   296 ;; *************** function _Send_String *****************
   297 ;; Defined at:
   298 ;;		line 176 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;  String          1   15[COMRAM] PTR unsigned char 
   301 ;;		 -> STR_3(10), STR_2(13), STR_1(17), 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  i               1   17[COMRAM] unsigned char 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   313 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;Total ram usage:        3 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 7
   320 ;; This function calls:
   321 ;;		_Send_Instruction_Data
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328   001180                     __ptext1:
   329                           	callstack 0
   330   001180                     _Send_String:
   331                           	callstack 23
   332   001180                     
   333                           ;main.c: 178:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   334   001180  0E00               	movlw	0
   335   001182  6E12               	movwf	Send_String@i^0,c
   336   001184  EFD0  F008         	goto	l968
   337   001188                     l964:
   338                           
   339                           ;main.c: 180:         Send_Instruction_Data(1, String[i]);
   340   001188  5010               	movf	Send_String@String^0,w,c
   341   00118A  2412               	addwf	Send_String@i^0,w,c
   342   00118C  6E11               	movwf	??_Send_String^0,c
   343   00118E  C011  FFF6         	movff	??_Send_String,tblptrl
   344   001192                     	if	0	;There is only one active tblptr byte
   345   001192                     	endif
   346   001192                     	if	0	;tblptru may be non-zero
   347   001192                     	endif
   348   001192                     	if	0	;tblptru may be non-zero
   349   001192                     	endif
   350   001192  0008               	tblrd		*
   351   001194  CFF5 F00E          	movff	tablat,Send_Instruction_Data@Data
   352   001198  0E01               	movlw	1
   353   00119A  EC4D  F009         	call	_Send_Instruction_Data
   354   00119E                     
   355                           ;main.c: 182:     }
   356   00119E  2A12               	incf	Send_String@i^0,f,c
   357   0011A0                     l968:
   358   0011A0  5010               	movf	Send_String@String^0,w,c
   359   0011A2  2412               	addwf	Send_String@i^0,w,c
   360   0011A4  6E11               	movwf	??_Send_String^0,c
   361   0011A6  C011  FFF6         	movff	??_Send_String,tblptrl
   362   0011AA                     	if	0	;There is only one active tblptr byte
   363   0011AA                     	endif
   364   0011AA                     	if	0	;tblptru may be non-zero
   365   0011AA                     	endif
   366   0011AA                     	if	0	;tblptru may be non-zero
   367   0011AA                     	endif
   368   0011AA  0008               	tblrd		*
   369   0011AC  50F5               	movf	tablat,w,c
   370   0011AE  0900               	iorlw	0
   371   0011B0  A4D8               	btfss	status,2,c
   372   0011B2  EFDD  F008         	goto	u121
   373   0011B6  EFDF  F008         	goto	u120
   374   0011BA                     u121:
   375   0011BA  EFC4  F008         	goto	l964
   376   0011BE                     u120:
   377   0011BE  0012               	return		;funcret
   378   0011C0                     __end_of_Send_String:
   379                           	callstack 0
   380                           
   381 ;; *************** function _Init_LCD *****************
   382 ;; Defined at:
   383 ;;		line 135 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        2 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 7
   404 ;; This function calls:
   405 ;;		_Send_Instruction_Data
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text2
   412   00102A                     __ptext2:
   413                           	callstack 0
   414   00102A                     _Init_LCD:
   415                           	callstack 23
   416   00102A                     
   417                           ;main.c: 137:     _delay((unsigned long)((60)*(16000000/4000.0)));
   418   00102A  0E02               	movlw	2
   419   00102C  6E11               	movwf	(??_Init_LCD+1)^0,c
   420   00102E  0E38               	movlw	56
   421   001030  6E10               	movwf	??_Init_LCD^0,c
   422   001032  0EAD               	movlw	173
   423   001034                     u177:
   424   001034  2EE8               	decfsz	wreg,f,c
   425   001036  D7FE               	bra	u177
   426   001038  2E10               	decfsz	??_Init_LCD^0,f,c
   427   00103A  D7FC               	bra	u177
   428   00103C  2E11               	decfsz	(??_Init_LCD+1)^0,f,c
   429   00103E  D7FA               	bra	u177
   430   001040  0000               	nop	
   431   001042                     
   432                           ;main.c: 138:     Send_Instruction_Data(0, 0x30);
   433   001042  0E30               	movlw	48
   434   001044  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   435   001046  0E00               	movlw	0
   436   001048  EC4D  F009         	call	_Send_Instruction_Data
   437   00104C                     
   438                           ;main.c: 139:     _delay((unsigned long)((5)*(16000000/4000.0)));
   439   00104C  0E1A               	movlw	26
   440   00104E  6E10               	movwf	??_Init_LCD^0,c
   441   001050  0EF8               	movlw	248
   442   001052                     u187:
   443   001052  2EE8               	decfsz	wreg,f,c
   444   001054  D7FE               	bra	u187
   445   001056  2E10               	decfsz	??_Init_LCD^0,f,c
   446   001058  D7FC               	bra	u187
   447   00105A  D000               	nop2	
   448                           
   449                           ;main.c: 140:     Send_Instruction_Data(0, 0x30);
   450   00105C  0E30               	movlw	48
   451   00105E  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   452   001060  0E00               	movlw	0
   453   001062  EC4D  F009         	call	_Send_Instruction_Data
   454   001066                     
   455                           ;main.c: 141:     _delay((unsigned long)((5)*(16000000/4000.0)));
   456   001066  0E1A               	movlw	26
   457   001068  6E10               	movwf	??_Init_LCD^0,c
   458   00106A  0EF8               	movlw	248
   459   00106C                     u197:
   460   00106C  2EE8               	decfsz	wreg,f,c
   461   00106E  D7FE               	bra	u197
   462   001070  2E10               	decfsz	??_Init_LCD^0,f,c
   463   001072  D7FC               	bra	u197
   464   001074  D000               	nop2	
   465   001076                     
   466                           ;main.c: 142:     Send_Instruction_Data(0, 0x30);
   467   001076  0E30               	movlw	48
   468   001078  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   469   00107A  0E00               	movlw	0
   470   00107C  EC4D  F009         	call	_Send_Instruction_Data
   471   001080                     
   472                           ;main.c: 143:     Send_Instruction_Data(0, 0x02);
   473   001080  0E02               	movlw	2
   474   001082  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   475   001084  0E00               	movlw	0
   476   001086  EC4D  F009         	call	_Send_Instruction_Data
   477   00108A                     
   478                           ;main.c: 144:     Send_Instruction_Data(0, 0x06);
   479   00108A  0E06               	movlw	6
   480   00108C  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   481   00108E  0E00               	movlw	0
   482   001090  EC4D  F009         	call	_Send_Instruction_Data
   483   001094                     
   484                           ;main.c: 145:     Send_Instruction_Data(0, 0x0F);
   485   001094  0E0F               	movlw	15
   486   001096  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   487   001098  0E00               	movlw	0
   488   00109A  EC4D  F009         	call	_Send_Instruction_Data
   489   00109E                     
   490                           ;main.c: 146:     Send_Instruction_Data(0, 0x28);
   491   00109E  0E28               	movlw	40
   492   0010A0  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   493   0010A2  0E00               	movlw	0
   494   0010A4  EC4D  F009         	call	_Send_Instruction_Data
   495   0010A8                     
   496                           ;main.c: 147:     Send_Instruction_Data(0, 0x01);
   497   0010A8  0E01               	movlw	1
   498   0010AA  6E0E               	movwf	Send_Instruction_Data@Data^0,c
   499   0010AC  0E00               	movlw	0
   500   0010AE  EC4D  F009         	call	_Send_Instruction_Data
   501   0010B2                     
   502                           ;main.c: 148:     _delay((unsigned long)((100)*(16000000/4000.0)));
   503   0010B2  0E03               	movlw	3
   504   0010B4  6E11               	movwf	(??_Init_LCD+1)^0,c
   505   0010B6  0E08               	movlw	8
   506   0010B8  6E10               	movwf	??_Init_LCD^0,c
   507   0010BA  0E77               	movlw	119
   508   0010BC                     u207:
   509   0010BC  2EE8               	decfsz	wreg,f,c
   510   0010BE  D7FE               	bra	u207
   511   0010C0  2E10               	decfsz	??_Init_LCD^0,f,c
   512   0010C2  D7FC               	bra	u207
   513   0010C4  2E11               	decfsz	(??_Init_LCD+1)^0,f,c
   514   0010C6  D7FA               	bra	u207
   515   0010C8  0000               	nop	
   516   0010CA  0012               	return		;funcret
   517   0010CC                     __end_of_Init_LCD:
   518                           	callstack 0
   519                           
   520 ;; *************** function _Send_Instruction_Data *****************
   521 ;; Defined at:
   522 ;;		line 154 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  Instruction     1    wreg     unsigned char 
   525 ;;  Data            1   13[COMRAM] unsigned char 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  Instruction     1   14[COMRAM] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 6
   544 ;; This function calls:
   545 ;;		_LCD_Instruction
   546 ;; This function is called by:
   547 ;;		_main
   548 ;;		_Init_LCD
   549 ;;		_Send_String
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text3
   554   00129A                     __ptext3:
   555                           	callstack 0
   556   00129A                     _Send_Instruction_Data:
   557                           	callstack 23
   558                           
   559                           ;incstack = 0
   560                           ;Send_Instruction_Data@Instruction stored from wreg
   561   00129A  6E0F               	movwf	Send_Instruction_Data@Instruction^0,c
   562   00129C                     
   563                           ;main.c: 156:     LATCbits.LATC4 = Instruction;
   564   00129C  B00F               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   565   00129E  D002               	bra	u105
   566   0012A0  988B               	bcf	139,4,c	;volatile
   567   0012A2  D001               	bra	u106
   568   0012A4                     u105:
   569   0012A4  888B               	bsf	139,4,c	;volatile
   570   0012A6                     u106:
   571   0012A6                     
   572                           ;main.c: 157:     LCD_Instruction(Data >> 4);
   573   0012A6  380E               	swapf	Send_Instruction_Data@Data^0,w,c
   574   0012A8  0B0F               	andlw	15
   575   0012AA  EC00  F009         	call	_LCD_Instruction
   576   0012AE                     
   577                           ;main.c: 158:     LCD_Instruction(Data);
   578   0012AE  500E               	movf	Send_Instruction_Data@Data^0,w,c
   579   0012B0  EC00  F009         	call	_LCD_Instruction
   580   0012B4  0012               	return		;funcret
   581   0012B6                     __end_of_Send_Instruction_Data:
   582                           	callstack 0
   583                           
   584 ;; *************** function _LCD_Instruction *****************
   585 ;; Defined at:
   586 ;;		line 163 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  Instruction     1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  Instruction     1   12[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 5
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_Send_Instruction_Data
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text4
   615   001200                     __ptext4:
   616                           	callstack 0
   617   001200                     _LCD_Instruction:
   618                           	callstack 23
   619                           
   620                           ;incstack = 0
   621                           ;LCD_Instruction@Instruction stored from wreg
   622   001200  6E0D               	movwf	LCD_Instruction@Instruction^0,c
   623   001202                     
   624                           ;main.c: 165:     LATCbits.LATC5 = 1;
   625   001202  8A8B               	bsf	139,5,c	;volatile
   626   001204                     
   627                           ;main.c: 166:     _delay((unsigned long)((15)*(16000000/4000.0)));
   628   001204  0E4E               	movlw	78
   629   001206  6E0C               	movwf	??_LCD_Instruction^0,c
   630   001208  0EEB               	movlw	235
   631   00120A                     u217:
   632   00120A  2EE8               	decfsz	wreg,f,c
   633   00120C  D7FE               	bra	u217
   634   00120E  2E0C               	decfsz	??_LCD_Instruction^0,f,c
   635   001210  D7FC               	bra	u217
   636   001212  0000               	nop	
   637   001214                     
   638                           ;main.c: 167:     LATD = Instruction;
   639   001214  C00D  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   640   001218                     
   641                           ;main.c: 168:     _delay((unsigned long)((15)*(16000000/4000.0)));
   642   001218  0E4E               	movlw	78
   643   00121A  6E0C               	movwf	??_LCD_Instruction^0,c
   644   00121C  0EEB               	movlw	235
   645   00121E                     u227:
   646   00121E  2EE8               	decfsz	wreg,f,c
   647   001220  D7FE               	bra	u227
   648   001222  2E0C               	decfsz	??_LCD_Instruction^0,f,c
   649   001224  D7FC               	bra	u227
   650   001226  0000               	nop	
   651   001228                     
   652                           ;main.c: 169:     LATCbits.LATC5 = 0;
   653   001228  9A8B               	bcf	139,5,c	;volatile
   654   00122A                     
   655                           ;main.c: 170:     _delay((unsigned long)((15)*(16000000/4000.0)));
   656   00122A  0E4E               	movlw	78
   657   00122C  6E0C               	movwf	??_LCD_Instruction^0,c
   658   00122E  0EEB               	movlw	235
   659   001230                     u237:
   660   001230  2EE8               	decfsz	wreg,f,c
   661   001232  D7FE               	bra	u237
   662   001234  2E0C               	decfsz	??_LCD_Instruction^0,f,c
   663   001236  D7FC               	bra	u237
   664   001238  0000               	nop	
   665   00123A  0012               	return		;funcret
   666   00123C                     __end_of_LCD_Instruction:
   667                           	callstack 0
   668                           
   669 ;; *************** function _Configurations *****************
   670 ;; Defined at:
   671 ;;		line 78 in file "main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 5
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text5
   700   00113E                     __ptext5:
   701                           	callstack 0
   702   00113E                     _Configurations:
   703                           	callstack 25
   704   00113E                     
   705                           ;main.c: 80:     OSCCON = 0x72;
   706   00113E  0E72               	movlw	114
   707   001140  6ED3               	movwf	211,c	;volatile
   708                           
   709                           ;main.c: 82:     ANSELC = 0;
   710   001142  0E00               	movlw	0
   711   001144  010F               	movlb	15	; () banked
   712   001146  6F3A               	movwf	58,b	;volatile
   713                           
   714                           ;main.c: 83:     ANSELD = 0;
   715   001148  0E00               	movlw	0
   716   00114A  6F3B               	movwf	59,b	;volatile
   717   00114C                     
   718                           ; BSR set to: 15
   719                           ;main.c: 85:     TRISCbits.RC4 = 0;
   720   00114C  9894               	bcf	148,4,c	;volatile
   721   00114E                     
   722                           ; BSR set to: 15
   723                           ;main.c: 86:     TRISCbits.RC5 = 0;
   724   00114E  9A94               	bcf	148,5,c	;volatile
   725                           
   726                           ;main.c: 88:     TRISD = 0;
   727   001150  0E00               	movlw	0
   728   001152  6E95               	movwf	149,c	;volatile
   729   001154                     
   730                           ; BSR set to: 15
   731                           ;main.c: 90:     LATCbits.LC4 = 0;
   732   001154  988B               	bcf	139,4,c	;volatile
   733   001156                     
   734                           ; BSR set to: 15
   735                           ;main.c: 91:     LATCbits.LC5 = 0;
   736   001156  9A8B               	bcf	139,5,c	;volatile
   737                           
   738                           ;main.c: 93:     LATD = 0;
   739   001158  0E00               	movlw	0
   740   00115A  6E8C               	movwf	140,c	;volatile
   741   00115C                     
   742                           ; BSR set to: 15
   743                           ;main.c: 96:     INTCONbits.GIE = 1;
   744   00115C  8EF2               	bsf	242,7,c	;volatile
   745   00115E                     
   746                           ; BSR set to: 15
   747                           ;main.c: 97:     INTCONbits.PEIE = 1;
   748   00115E  8CF2               	bsf	242,6,c	;volatile
   749   001160                     
   750                           ; BSR set to: 15
   751                           ;main.c: 98:     RCONbits.IPEN = 0;
   752   001160  9ED0               	bcf	208,7,c	;volatile
   753   001162                     
   754                           ; BSR set to: 15
   755                           ;main.c: 100:     PIE1bits.RC1IE = 1;
   756   001162  8A9D               	bsf	157,5,c	;volatile
   757   001164                     
   758                           ; BSR set to: 15
   759                           ;main.c: 101:     PIR1bits.RC1IF = 0;
   760   001164  9A9E               	bcf	158,5,c	;volatile
   761                           
   762                           ;main.c: 104:     SPBRG = 103;
   763   001166  0E67               	movlw	103
   764   001168  6EAF               	movwf	175,c	;volatile
   765   00116A                     
   766                           ; BSR set to: 15
   767                           ;main.c: 105:     TRISCbits.RC6 = 1;
   768   00116A  8C94               	bsf	148,6,c	;volatile
   769   00116C                     
   770                           ; BSR set to: 15
   771                           ;main.c: 106:     TRISCbits.RC7 = 1;
   772   00116C  8E94               	bsf	148,7,c	;volatile
   773   00116E                     
   774                           ; BSR set to: 15
   775                           ;main.c: 109:     TXSTA1bits.TX91 = 0;
   776   00116E  9CAC               	bcf	172,6,c	;volatile
   777   001170                     
   778                           ; BSR set to: 15
   779                           ;main.c: 110:     TXSTA1bits.TXEN1 = 1;
   780   001170  8AAC               	bsf	172,5,c	;volatile
   781   001172                     
   782                           ; BSR set to: 15
   783                           ;main.c: 111:     TXSTA1bits.SYNC1 = 0;
   784   001172  98AC               	bcf	172,4,c	;volatile
   785   001174                     
   786                           ; BSR set to: 15
   787                           ;main.c: 112:     TXSTA1bits.BRGH1 = 1;
   788   001174  84AC               	bsf	172,2,c	;volatile
   789   001176                     
   790                           ; BSR set to: 15
   791                           ;main.c: 115:     RCSTAbits.SPEN1 = 1;
   792   001176  8EAB               	bsf	171,7,c	;volatile
   793   001178                     
   794                           ; BSR set to: 15
   795                           ;main.c: 116:     RCSTAbits.RX91 = 0;
   796   001178  9CAB               	bcf	171,6,c	;volatile
   797   00117A                     
   798                           ; BSR set to: 15
   799                           ;main.c: 117:     RCSTAbits.CREN1 = 1;
   800   00117A  88AB               	bsf	171,4,c	;volatile
   801   00117C                     
   802                           ; BSR set to: 15
   803                           ;main.c: 120:     BAUDCON1bits.BRG16 = 0;
   804   00117C  96B8               	bcf	184,3,c	;volatile
   805   00117E                     
   806                           ; BSR set to: 15
   807   00117E  0012               	return		;funcret
   808   001180                     __end_of_Configurations:
   809                           	callstack 0
   810                           
   811 ;; *************** function _Interrupts *****************
   812 ;; Defined at:
   813 ;;		line 66 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;Total ram usage:        4 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 4
   834 ;; This function calls:
   835 ;;		_Receive_Interrupt
   836 ;; This function is called by:
   837 ;;		Interrupt level 2
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	intcode
   842   000008                     __pintcode:
   843                           	callstack 0
   844   000008                     _Interrupts:
   845                           	callstack 23
   846                           
   847                           ; BSR set to: 15
   848                           ;incstack = 0
   849   000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   850   00000A  CFF6 F008          	movff	tblptrl,??_Interrupts
   851   00000E  CFF7 F009          	movff	tblptrh,??_Interrupts+1
   852   000012  CFF8 F00A          	movff	tblptru,??_Interrupts+2
   853   000016  CFF5 F00B          	movff	tablat,??_Interrupts+3
   854   00001A                     
   855                           ;main.c: 68:     if (PIR1bits.RC1IF) {
   856   00001A  AA9E               	btfss	158,5,c	;volatile
   857   00001C  EF12  F000         	goto	i2u16_41
   858   000020  EF14  F000         	goto	i2u16_40
   859   000024                     i2u16_41:
   860   000024  EF16  F000         	goto	i2l62
   861   000028                     i2u16_40:
   862   000028                     
   863                           ;main.c: 70:         Receive_Interrupt();
   864   000028  EC66  F008         	call	_Receive_Interrupt	;wreg free
   865   00002C                     i2l62:
   866   00002C  C00B  FFF5         	movff	??_Interrupts+3,tablat
   867   000030  C00A  FFF8         	movff	??_Interrupts+2,tblptru
   868   000034  C009  FFF7         	movff	??_Interrupts+1,tblptrh
   869   000038  C008  FFF6         	movff	??_Interrupts,tblptrl
   870   00003C  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   871   00003E  0011               	retfie		f
   872   000040                     __end_of_Interrupts:
   873                           	callstack 0
   874                           
   875 ;; *************** function _Receive_Interrupt *****************
   876 ;; Defined at:
   877 ;;		line 186 in file "main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 3
   898 ;; This function calls:
   899 ;;		i2_Send_Instruction_Data
   900 ;;		i2_Send_String
   901 ;; This function is called by:
   902 ;;		_Interrupts
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text7
   907   0010CC                     __ptext7:
   908                           	callstack 0
   909   0010CC                     _Receive_Interrupt:
   910                           	callstack 23
   911   0010CC                     
   912                           ;main.c: 188:     Rx_Buffer = RCREG1;
   913   0010CC  CFAE F013          	movff	4014,_Rx_Buffer	;volatile
   914   0010D0                     
   915                           ;main.c: 190:     if (Rx_Buffer == 'A') {
   916   0010D0  0E41               	movlw	65
   917   0010D2  1813               	xorwf	_Rx_Buffer^0,w,c
   918   0010D4  A4D8               	btfss	status,2,c
   919   0010D6  EF6F  F008         	goto	i2u13_41
   920   0010DA  EF71  F008         	goto	i2u13_40
   921   0010DE                     i2u13_41:
   922   0010DE  EF7C  F008         	goto	i2l978
   923   0010E2                     i2u13_40:
   924   0010E2                     
   925                           ;main.c: 192:         Send_Instruction_Data(0, 0X80);
   926   0010E2  0E80               	movlw	128
   927   0010E4  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   928   0010E6  0E00               	movlw	0
   929   0010E8  EC5B  F009         	call	i2_Send_Instruction_Data
   930   0010EC                     
   931                           ;main.c: 193:         Send_String("Data test: A");
   932   0010EC  0E12               	movlw	low STR_2
   933   0010EE  6E05               	movwf	i2Send_String@String^0,c
   934   0010F0  ECE0  F008         	call	i2_Send_String	;wreg free
   935                           
   936                           ;main.c: 195:     } else if (Rx_Buffer == 'B') {
   937   0010F4  EF9E  F008         	goto	i2l88
   938   0010F8                     i2l978:
   939   0010F8  0E42               	movlw	66
   940   0010FA  1813               	xorwf	_Rx_Buffer^0,w,c
   941   0010FC  A4D8               	btfss	status,2,c
   942   0010FE  EF83  F008         	goto	i2u14_41
   943   001102  EF85  F008         	goto	i2u14_40
   944   001106                     i2u14_41:
   945   001106  EF90  F008         	goto	i2l984
   946   00110A                     i2u14_40:
   947   00110A                     
   948                           ;main.c: 197:         Send_Instruction_Data(0, 0XD4);
   949   00110A  0ED4               	movlw	212
   950   00110C  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   951   00110E  0E00               	movlw	0
   952   001110  EC5B  F009         	call	i2_Send_Instruction_Data
   953   001114                     
   954                           ;main.c: 198:         Send_String("Platform!");
   955   001114  0E1F               	movlw	low STR_3
   956   001116  6E05               	movwf	i2Send_String@String^0,c
   957   001118  ECE0  F008         	call	i2_Send_String	;wreg free
   958                           
   959                           ;main.c: 200:     } else if (Rx_Buffer == 'C') {
   960   00111C  EF9E  F008         	goto	i2l88
   961   001120                     i2l984:
   962   001120  0E43               	movlw	67
   963   001122  1813               	xorwf	_Rx_Buffer^0,w,c
   964   001124  A4D8               	btfss	status,2,c
   965   001126  EF97  F008         	goto	i2u15_41
   966   00112A  EF99  F008         	goto	i2u15_40
   967   00112E                     i2u15_41:
   968   00112E  EF9E  F008         	goto	i2l88
   969   001132                     i2u15_40:
   970   001132                     
   971                           ;main.c: 202:         Send_Instruction_Data(0, 0x01);
   972   001132  0E01               	movlw	1
   973   001134  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   974   001136  0E00               	movlw	0
   975   001138  EC5B  F009         	call	i2_Send_Instruction_Data
   976   00113C                     i2l88:
   977   00113C  0012               	return		;funcret
   978   00113E                     __end_of_Receive_Interrupt:
   979                           	callstack 0
   980                           
   981 ;; *************** function i2_Send_String *****************
   982 ;; Defined at:
   983 ;;		line 176 in file "main.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  String          1    4[COMRAM] PTR unsigned char 
   986 ;;		 -> STR_3(10), STR_2(13), STR_1(17), 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  i               1    6[COMRAM] unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;Total ram usage:        3 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; Hardware stack levels required when called: 2
  1005 ;; This function calls:
  1006 ;;		i2_Send_Instruction_Data
  1007 ;; This function is called by:
  1008 ;;		_Receive_Interrupt
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text8
  1013   0011C0                     __ptext8:
  1014                           	callstack 0
  1015   0011C0                     i2_Send_String:
  1016                           	callstack 23
  1017   0011C0                     
  1018                           ;main.c: 178:     for (uint8_t i = 0; String[i] != '\0'; i++) {
  1019   0011C0  0E00               	movlw	0
  1020   0011C2  6E07               	movwf	i2Send_String@i^0,c
  1021   0011C4  EFF0  F008         	goto	i2l938
  1022   0011C8                     i2l934:
  1023                           
  1024                           ;main.c: 180:         Send_Instruction_Data(1, String[i]);
  1025   0011C8  5005               	movf	i2Send_String@String^0,w,c
  1026   0011CA  2407               	addwf	i2Send_String@i^0,w,c
  1027   0011CC  6E06               	movwf	??i2_Send_String^0,c
  1028   0011CE  C006  FFF6         	movff	??i2_Send_String,tblptrl
  1029   0011D2                     	if	0	;There is only one active tblptr byte
  1030   0011D2                     	endif
  1031   0011D2                     	if	0	;tblptru may be non-zero
  1032   0011D2                     	endif
  1033   0011D2                     	if	0	;tblptru may be non-zero
  1034   0011D2                     	endif
  1035   0011D2  0008               	tblrd		*
  1036   0011D4  CFF5 F003          	movff	tablat,i2Send_Instruction_Data@Data
  1037   0011D8  0E01               	movlw	1
  1038   0011DA  EC5B  F009         	call	i2_Send_Instruction_Data
  1039   0011DE                     
  1040                           ;main.c: 182:     }
  1041   0011DE  2A07               	incf	i2Send_String@i^0,f,c
  1042   0011E0                     i2l938:
  1043   0011E0  5005               	movf	i2Send_String@String^0,w,c
  1044   0011E2  2407               	addwf	i2Send_String@i^0,w,c
  1045   0011E4  6E06               	movwf	??i2_Send_String^0,c
  1046   0011E6  C006  FFF6         	movff	??i2_Send_String,tblptrl
  1047   0011EA                     	if	0	;There is only one active tblptr byte
  1048   0011EA                     	endif
  1049   0011EA                     	if	0	;tblptru may be non-zero
  1050   0011EA                     	endif
  1051   0011EA                     	if	0	;tblptru may be non-zero
  1052   0011EA                     	endif
  1053   0011EA  0008               	tblrd		*
  1054   0011EC  50F5               	movf	tablat,w,c
  1055   0011EE  0900               	iorlw	0
  1056   0011F0  A4D8               	btfss	status,2,c
  1057   0011F2  EFFD  F008         	goto	i2u11_41
  1058   0011F6  EFFF  F008         	goto	i2u11_40
  1059   0011FA                     i2u11_41:
  1060   0011FA  EFE4  F008         	goto	i2l934
  1061   0011FE                     i2u11_40:
  1062   0011FE  0012               	return		;funcret
  1063   001200                     __end_ofi2_Send_String:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function i2_Send_Instruction_Data *****************
  1067 ;; Defined at:
  1068 ;;		line 154 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  Instruction     1    wreg     unsigned char 
  1071 ;;  Data            1    2[COMRAM] unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  Instruction     1    3[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1083 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;Total ram usage:        2 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 1
  1090 ;; This function calls:
  1091 ;;		i2_LCD_Instruction
  1092 ;; This function is called by:
  1093 ;;		_Receive_Interrupt
  1094 ;;		i2_Send_String
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text9
  1099   0012B6                     __ptext9:
  1100                           	callstack 0
  1101   0012B6                     i2_Send_Instruction_Data:
  1102                           	callstack 23
  1103                           
  1104                           ;incstack = 0
  1105                           ;i2Send_Instruction_Data@Instruction stored from wreg
  1106   0012B6  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
  1107   0012B8                     
  1108                           ;main.c: 156:     LATCbits.LATC4 = Instruction;
  1109   0012B8  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
  1110   0012BA  D002               	bra	i2u9_45
  1111   0012BC  988B               	bcf	139,4,c	;volatile
  1112   0012BE  D001               	bra	i2u9_46
  1113   0012C0                     i2u9_45:
  1114   0012C0  888B               	bsf	139,4,c	;volatile
  1115   0012C2                     i2u9_46:
  1116   0012C2                     
  1117                           ;main.c: 157:     LCD_Instruction(Data >> 4);
  1118   0012C2  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
  1119   0012C4  0B0F               	andlw	15
  1120   0012C6  EC1E  F009         	call	i2_LCD_Instruction
  1121   0012CA                     
  1122                           ;main.c: 158:     LCD_Instruction(Data);
  1123   0012CA  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
  1124   0012CC  EC1E  F009         	call	i2_LCD_Instruction
  1125   0012D0  0012               	return		;funcret
  1126   0012D2                     __end_ofi2_Send_Instruction_Data:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function i2_LCD_Instruction *****************
  1130 ;; Defined at:
  1131 ;;		line 163 in file "main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  Instruction     1    wreg     unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  Instruction     1    1[COMRAM] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;Total ram usage:        2 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		i2_Send_Instruction_Data
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text10
  1159   00123C                     __ptext10:
  1160                           	callstack 0
  1161   00123C                     i2_LCD_Instruction:
  1162                           	callstack 23
  1163                           
  1164                           ;incstack = 0
  1165                           ;i2LCD_Instruction@Instruction stored from wreg
  1166   00123C  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
  1167   00123E                     
  1168                           ;main.c: 165:     LATCbits.LATC5 = 1;
  1169   00123E  8A8B               	bsf	139,5,c	;volatile
  1170   001240                     
  1171                           ;main.c: 166:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1172   001240  0E4E               	movlw	78
  1173   001242  6E01               	movwf	??i2_LCD_Instruction^0,c
  1174   001244  0EEB               	movlw	235
  1175   001246                     i2u24_47:
  1176   001246  2EE8               	decfsz	wreg,f,c
  1177   001248  D7FE               	bra	i2u24_47
  1178   00124A  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1179   00124C  D7FC               	bra	i2u24_47
  1180   00124E  0000               	nop	
  1181   001250                     
  1182                           ;main.c: 167:     LATD = Instruction;
  1183   001250  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  1184   001254                     
  1185                           ;main.c: 168:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1186   001254  0E4E               	movlw	78
  1187   001256  6E01               	movwf	??i2_LCD_Instruction^0,c
  1188   001258  0EEB               	movlw	235
  1189   00125A                     i2u25_47:
  1190   00125A  2EE8               	decfsz	wreg,f,c
  1191   00125C  D7FE               	bra	i2u25_47
  1192   00125E  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1193   001260  D7FC               	bra	i2u25_47
  1194   001262  0000               	nop	
  1195   001264                     
  1196                           ;main.c: 169:     LATCbits.LATC5 = 0;
  1197   001264  9A8B               	bcf	139,5,c	;volatile
  1198   001266                     
  1199                           ;main.c: 170:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1200   001266  0E4E               	movlw	78
  1201   001268  6E01               	movwf	??i2_LCD_Instruction^0,c
  1202   00126A  0EEB               	movlw	235
  1203   00126C                     i2u26_47:
  1204   00126C  2EE8               	decfsz	wreg,f,c
  1205   00126E  D7FE               	bra	i2u26_47
  1206   001270  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1207   001272  D7FC               	bra	i2u26_47
  1208   001274  0000               	nop	
  1209   001276  0012               	return		;funcret
  1210   001278                     __end_ofi2_LCD_Instruction:
  1211                           	callstack 0
  1212                           
  1213                           	psect	rparam
  1214   000000                     
  1215                           	psect	temp
  1216   000014                     btemp:
  1217                           	callstack 0
  1218   000014                     	ds	1
  1219   000000                     int$flags	set	btemp
  1220   000000                     wtemp8	set	btemp+1
  1221   000000                     ttemp5	set	btemp+1
  1222   000000                     ttemp6	set	btemp+4
  1223   000000                     ttemp7	set	btemp+8
  1224                           
  1225                           	psect	config
  1226                           
  1227                           ; Padding undefined space
  1228   300000                     	org	3145728
  1229   300000  FF                 	db	255
  1230                           
  1231                           ;Config register CONFIG1H @ 0x300001
  1232                           ;	Oscillator Selection bits
  1233                           ;	FOSC = INTIO67, Internal oscillator block
  1234                           ;	4X PLL Enable
  1235                           ;	PLLCFG = OFF, Oscillator used directly
  1236                           ;	Primary clock enable bit
  1237                           ;	PRICLKEN = ON, Primary clock is always enabled
  1238                           ;	Fail-Safe Clock Monitor Enable bit
  1239                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1240                           ;	Internal/External Oscillator Switchover bit
  1241                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1242   300001                     	org	3145729
  1243   300001  28                 	db	40
  1244                           
  1245                           ;Config register CONFIG2L @ 0x300002
  1246                           ;	Power-up Timer Enable bit
  1247                           ;	PWRTEN = OFF, Power up timer disabled
  1248                           ;	Brown-out Reset Enable bits
  1249                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1250                           ;	Brown Out Reset Voltage bits
  1251                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1252   300002                     	org	3145730
  1253   300002  1F                 	db	31
  1254                           
  1255                           ;Config register CONFIG2H @ 0x300003
  1256                           ;	Watchdog Timer Enable bits
  1257                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1258                           ;	Watchdog Timer Postscale Select bits
  1259                           ;	WDTPS = 32768, 1:32768
  1260   300003                     	org	3145731
  1261   300003  3C                 	db	60
  1262                           
  1263                           ; Padding undefined space
  1264   300004                     	org	3145732
  1265   300004  FF                 	db	255
  1266                           
  1267                           ;Config register CONFIG3H @ 0x300005
  1268                           ;	CCP2 MUX bit
  1269                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1270                           ;	PORTB A/D Enable bit
  1271                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1272                           ;	P3A/CCP3 Mux bit
  1273                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1274                           ;	HFINTOSC Fast Start-up
  1275                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1276                           ;	Timer3 Clock input mux bit
  1277                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1278                           ;	ECCP2 B output mux bit
  1279                           ;	P2BMX = PORTD2, P2B is on RD2
  1280                           ;	MCLR Pin Enable bit
  1281                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1282   300005                     	org	3145733
  1283   300005  BF                 	db	191
  1284                           
  1285                           ;Config register CONFIG4L @ 0x300006
  1286                           ;	Stack Full/Underflow Reset Enable bit
  1287                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1288                           ;	Single-Supply ICSP Enable bit
  1289                           ;	LVP = OFF, Single-Supply ICSP disabled
  1290                           ;	Extended Instruction Set Enable bit
  1291                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1292                           ;	Background Debug
  1293                           ;	DEBUG = 0x1, unprogrammed default
  1294   300006                     	org	3145734
  1295   300006  81                 	db	129
  1296                           
  1297                           ; Padding undefined space
  1298   300007                     	org	3145735
  1299   300007  FF                 	db	255
  1300                           
  1301                           ;Config register CONFIG5L @ 0x300008
  1302                           ;	Code Protection Block 0
  1303                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1304                           ;	Code Protection Block 1
  1305                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1306                           ;	Code Protection Block 2
  1307                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1308                           ;	Code Protection Block 3
  1309                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1310   300008                     	org	3145736
  1311   300008  0F                 	db	15
  1312                           
  1313                           ;Config register CONFIG5H @ 0x300009
  1314                           ;	Boot Block Code Protection bit
  1315                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1316                           ;	Data EEPROM Code Protection bit
  1317                           ;	CPD = OFF, Data EEPROM not code-protected
  1318   300009                     	org	3145737
  1319   300009  C0                 	db	192
  1320                           
  1321                           ;Config register CONFIG6L @ 0x30000A
  1322                           ;	Write Protection Block 0
  1323                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1324                           ;	Write Protection Block 1
  1325                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1326                           ;	Write Protection Block 2
  1327                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1328                           ;	Write Protection Block 3
  1329                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1330   30000A                     	org	3145738
  1331   30000A  0F                 	db	15
  1332                           
  1333                           ;Config register CONFIG6H @ 0x30000B
  1334                           ;	Configuration Register Write Protection bit
  1335                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1336                           ;	Boot Block Write Protection bit
  1337                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1338                           ;	Data EEPROM Write Protection bit
  1339                           ;	WRTD = OFF, Data EEPROM not write-protected
  1340   30000B                     	org	3145739
  1341   30000B  E0                 	db	224
  1342                           
  1343                           ;Config register CONFIG7L @ 0x30000C
  1344                           ;	Table Read Protection Block 0
  1345                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1346                           ;	Table Read Protection Block 1
  1347                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1348                           ;	Table Read Protection Block 2
  1349                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1350                           ;	Table Read Protection Block 3
  1351                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1352   30000C                     	org	3145740
  1353   30000C  0F                 	db	15
  1354                           
  1355                           ;Config register CONFIG7H @ 0x30000D
  1356                           ;	Boot Block Table Read Protection bit
  1357                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1358   30000D                     	org	3145741
  1359   30000D  40                 	db	64
  1360                           tosu	equ	0xFFF
  1361                           tosh	equ	0xFFE
  1362                           tosl	equ	0xFFD
  1363                           stkptr	equ	0xFFC
  1364                           pclatu	equ	0xFFB
  1365                           pclath	equ	0xFFA
  1366                           pcl	equ	0xFF9
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           prodh	equ	0xFF4
  1372                           prodl	equ	0xFF3
  1373                           indf0	equ	0xFEF
  1374                           postinc0	equ	0xFEE
  1375                           postdec0	equ	0xFED
  1376                           preinc0	equ	0xFEC
  1377                           plusw0	equ	0xFEB
  1378                           fsr0h	equ	0xFEA
  1379                           fsr0l	equ	0xFE9
  1380                           wreg	equ	0xFE8
  1381                           indf1	equ	0xFE7
  1382                           postinc1	equ	0xFE6
  1383                           postdec1	equ	0xFE5
  1384                           preinc1	equ	0xFE4
  1385                           plusw1	equ	0xFE3
  1386                           fsr1h	equ	0xFE2
  1387                           fsr1l	equ	0xFE1
  1388                           bsr	equ	0xFE0
  1389                           indf2	equ	0xFDF
  1390                           postinc2	equ	0xFDE
  1391                           postdec2	equ	0xFDD
  1392                           preinc2	equ	0xFDC
  1393                           plusw2	equ	0xFDB
  1394                           fsr2h	equ	0xFDA
  1395                           fsr2l	equ	0xFD9
  1396                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[13]), STR_3(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupts in COMRAM

    _Receive_Interrupt->i2_Send_String
    i2_Send_String->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupts in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupts in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupts in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupts in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupts in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupts in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupts in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupts in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupts in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupts in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupts in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupts in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupts in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupts in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupts in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3239
                     _Configurations
                           _Init_LCD
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          3     2      1    1257
                                             15 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     991
                                             15 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     991
                                             13 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupts                                           4     4      0     526
                                              7 COMRAM     4     4      0
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (5) _Receive_Interrupt                                    0     0      0     526
            i2_Send_Instruction_Data
                      i2_Send_String
 ---------------------------------------------------------------------------------
 (6) i2_Send_String                                        3     2      1     334
                                              4 COMRAM     3     2      1
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (7) i2_Send_Instruction_Data                              2     1      1     192
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Send_Instruction_Data
   _Send_String
     _Send_Instruction_Data

 _Interrupts (ROOT)
   _Receive_Interrupt
     i2_Send_Instruction_Data
       i2_LCD_Instruction
     i2_Send_String
       i2_Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      13       1       20.2%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRhllhh      17      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      42        0.0%
BITBIGSFRhllhl       8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhh         7      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRhlllh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      47        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Feb 15 23:09:03 2024

                                l53 1292                                  l54 1292  
                                l71 12B4                                  l80 11BE  
                                l65 117E                                  l74 123A  
                                l68 10CA                   Send_String@String 0010  
                               l810 114C                                 l820 115E  
                               l812 114E                                 l830 116C  
                               l822 1160                                 l814 1154  
                               l840 1176                                 l832 116E  
                               l824 1162                                 l816 1156  
                               l808 113E                                 l842 1178  
                               l834 1170                                 l826 1164  
                               l818 115C                                 l930 12AE  
                               l844 117A                                 l836 1172  
                               l828 116A                                 l780 1214  
                               l940 102A                                 l846 117C  
                               l838 1174                                 l782 1218  
                               l926 129C                                 l950 1080  
                               l942 1042                                 l784 1228  
                               l776 1202                                 l928 12A6  
                               l960 10B2                                 l952 108A  
                               l944 104C                                 l786 122A  
                               l778 1204                                 l954 1094  
                               l946 1066                                 l962 1180  
                               l956 109E                                 l948 1076  
                               l964 1188                                 l958 10A8  
                               l966 119E                                 l990 127C  
                               l968 11A0                                 l992 1280  
                               l994 128A                                 l988 1278  
                               u120 11BE                                 u105 12A4  
                               u121 11BA                                 u106 12A6  
                               u207 10BC                                 u217 120A  
                               u227 121E                                 u237 1230  
                               u177 1034                                 u187 1052  
                               u197 106C                      ?i2_Send_String 0005  
       i2Send_Instruction_Data@Data 0003                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                STR_1 1001  
                              STR_2 1012                                STR_3 101F  
                              _LATD 0F8C                                i2l62 002C  
                              i2l71 12D0                                i2l80 11FE  
                              i2l74 1276                                i2l88 113C  
                              _main 1278                                btemp 0014  
                              start 0040                        ___param_bank 0000  
                   _LCD_Instruction 1200    Send_Instruction_Data@Instruction 000F  
i2Send_Instruction_Data@Instruction 0004                        _BAUDCON1bits 0FB8  
                             ?_main 0001                               i2l910 1240  
                             i2l912 1250                               i2l920 12B8  
                             i2l914 1254                               i2l922 12C2  
                             i2l916 1264                               i2l908 123E  
                             i2l924 12CA                               i2l932 11C0  
                             i2l918 1266                               i2l934 11C8  
                             i2l936 11DE                               i2l938 11E0  
                             i2l970 10CC                               i2l980 110A  
                             i2l972 10D0                               i2l982 1114  
                             i2l974 10E2                               i2l984 1120  
                             i2l976 10EC                               i2l986 1132  
                             i2l978 10F8                               i2l996 001A  
                             i2l998 0028                               _SPBRG 0FAF  
                             _TRISD 0F95        i2LCD_Instruction@Instruction 0002  
                             tablat 0FF5                               ttemp5 0015  
                             ttemp6 0018                               ttemp7 001C  
                             status 0FD8                               wtemp8 0015  
                   __initialization 12D2                        __end_of_main 129A  
                  __end_of_Init_LCD 10CC               _Send_Instruction_Data 129A  
                   ??i2_Send_String 0006                              ??_main 0013  
                     ??_Send_String 0011                       __activetblptr 0001  
                        _Interrupts 0008                              _ANSELC 0F3A  
                            _ANSELD 0F3B                              _RCREG1 0FAE  
        LCD_Instruction@Instruction 000D                              _OSCCON 0FD3  
                            i2u9_45 12C0                              i2u9_46 12C2  
           __end_of_LCD_Instruction 123C                              isa$std 0001  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
               __end_of_Send_String 11C0                          __accesstop 0060  
           __end_of__initialization 12D4                       ___rparam_used 0001  
                    __pcstackCOMRAM 0001                   _Receive_Interrupt 10CC  
            ?_Send_Instruction_Data 000E                  ?_Receive_Interrupt 0001  
               ??_Receive_Interrupt 0008                         ?_Interrupts 0001  
                         ?_Init_LCD 0001                    ?_LCD_Instruction 0001  
         __end_of_Receive_Interrupt 113E             i2_Send_Instruction_Data 12B6  
                       _Send_String 1180                             i2u11_40 11FE  
                           i2u11_41 11FA                             i2u13_40 10E2  
                           i2u13_41 10DE                             i2u14_40 110A  
                           i2u14_41 1106                             i2u15_40 1132  
                           i2u15_41 112E                             i2u16_40 0028  
                           i2u16_41 0024                             i2u24_47 1246  
                           i2u25_47 125A                             i2u26_47 126C  
                        ??_Init_LCD 0010                             __Hparam 0000  
                           __Lparam 0000                        __psmallconst 1000  
                           __pcinit 12D2                             __ramtop 1000  
                           __ptext0 1278                             __ptext1 1180  
                           __ptext2 102A                             __ptext3 129A  
                           __ptext4 1200                             __ptext5 113E  
                           __ptext7 10CC                             __ptext8 11C0  
                           __ptext9 12B6                end_of_initialization 12D4  
         ??i2_Send_Instruction_Data 0004                           _RCSTAbits 0FAB  
             __end_ofi2_Send_String 1200                           _TRISCbits 0F94  
           ??_Send_Instruction_Data 000F                 start_initialization 12D2  
                      Send_String@i 0012                        ??_Interrupts 0008  
         Send_Instruction_Data@Data 000E                      _Configurations 113E  
                         _Rx_Buffer 0013                  __end_of_Interrupts 0040  
                      ?_Send_String 0010                         __pbssCOMRAM 0013  
            __end_of_Configurations 1180                           __pintcode 0008  
                       __smallconst 1000                     ?_Configurations 0001  
               i2Send_String@String 0005                            _LATCbits 0F8B  
                          _PIE1bits 0F9D                            _PIR1bits 0F9E  
                          _RCONbits 0FD0                   i2_LCD_Instruction 123C  
                ?i2_LCD_Instruction 0001                      i2Send_String@i 0007  
               ??i2_LCD_Instruction 0001                            _Init_LCD 102A  
                          __Hrparam 0000                            __Lrparam 0000  
                      __Lsmallconst 1000       __end_of_Send_Instruction_Data 12B6  
         __end_ofi2_LCD_Instruction 1278                   ??_LCD_Instruction 000C  
                          __ptext10 123C            ?i2_Send_Instruction_Data 0003  
                          isa$xinst 0000                            int$flags 0014  
                        _INTCONbits 0FF2                            intlevel2 0000  
                  ??_Configurations 000C                       i2_Send_String 11C0  
   __end_ofi2_Send_Instruction_Data 12D2  
