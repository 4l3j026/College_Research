

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Mar 06 16:42:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F46K22 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     _LATDbits	set	3980
    55   000000                     _T2CONbits	set	4026
    56   000000                     _ANSELC	set	3898
    57   000000                     _OSCCON	set	4051
    58   000000                     _INTCONbits	set	4082
    59   000000                     _CCP5CON	set	3924
    60   000000                     _CCP3CON	set	3933
    61   000000                     _LATCbits	set	3979
    62   000000                     _TRISCbits	set	3988
    63   000000                     _ANSELE	set	3900
    64   000000                     _ANSELD	set	3899
    65   000000                     _PIE1bits	set	3997
    66   000000                     _RCONbits	set	4048
    67   000000                     _TRISE	set	3990
    68   000000                     _TRISD	set	3989
    69   000000                     _LATE	set	3981
    70   000000                     _LATD	set	3980
    71   000000                     _RCSTAbits	set	4011
    72   000000                     _TXSTA1bits	set	4012
    73   000000                     _SPBRG	set	4015
    74   000000                     _PIR1bits	set	3998
    75   000000                     _BAUDCON1bits	set	4024
    76   000000                     _RCREG1	set	4014
    77   000000                     _T2CON	set	4026
    78   000000                     _PR2	set	4027
    79   000000                     _CCPR3L	set	3934
    80   000000                     _CCPR5L	set	3925
    81                           
    82                           	psect	smallconst
    83   001000                     __psmallconst:
    84                           	callstack 0
    85   001000  00                 	db	0
    86   001001                     STR_5:
    87   001001  20                 	db	32
    88   001002  20                 	db	32
    89   001003  20                 	db	32
    90   001004  49                 	db	73	;'I'
    91   001005  73                 	db	115	;'s'
    92   001006  20                 	db	32
    93   001007  6E                 	db	110	;'n'
    94   001008  6F                 	db	111	;'o'
    95   001009  74                 	db	116	;'t'
    96   00100A  20                 	db	32
    97   00100B  56                 	db	86	;'V'
    98   00100C  61                 	db	97	;'a'
    99   00100D  6C                 	db	108	;'l'
   100   00100E  69                 	db	105	;'i'
   101   00100F  64                 	db	100	;'d'
   102   001010  21                 	db	33
   103   001011  00                 	db	0
   104   001012                     STR_4:
   105   001012  20                 	db	32
   106   001013  20                 	db	32
   107   001014  20                 	db	32
   108   001015  56                 	db	86	;'V'
   109   001016  61                 	db	97	;'a'
   110   001017  6C                 	db	108	;'l'
   111   001018  75                 	db	117	;'u'
   112   001019  65                 	db	101	;'e'
   113   00101A  20                 	db	32
   114   00101B  45                 	db	69	;'E'
   115   00101C  6E                 	db	110	;'n'
   116   00101D  74                 	db	116	;'t'
   117   00101E  65                 	db	101	;'e'
   118   00101F  72                 	db	114	;'r'
   119   001020  65                 	db	101	;'e'
   120   001021  64                 	db	100	;'d'
   121   001022  00                 	db	0
   122   001023  52                 	db	82	;'R'
   123   001024  6F                 	db	111	;'o'
   124   001025  62                 	db	98	;'b'
   125   001026  6F                 	db	111	;'o'
   126   001027  74                 	db	116	;'t'
   127   001028  69                 	db	105	;'i'
   128   001029  63                 	db	99	;'c'
   129   00102A  20                 	db	32
   130   00102B  50                 	db	80	;'P'
   131   00102C  6C                 	db	108	;'l'
   132   00102D  61                 	db	97	;'a'
   133   00102E  74                 	db	116	;'t'
   134   00102F  66                 	db	102	;'f'
   135   001030  6F                 	db	111	;'o'
   136   001031  72                 	db	114	;'r'
   137   001032  6D                 	db	109	;'m'
   138   001033  00                 	db	0
   139   001034  52                 	db	82	;'R'
   140   001035  65                 	db	101	;'e'
   141   001036  73                 	db	115	;'s'
   142   001037  65                 	db	101	;'e'
   143   001038  61                 	db	97	;'a'
   144   001039  72                 	db	114	;'r'
   145   00103A  63                 	db	99	;'c'
   146   00103B  68                 	db	104	;'h'
   147   00103C  20                 	db	32
   148   00103D  50                 	db	80	;'P'
   149   00103E  72                 	db	114	;'r'
   150   00103F  6F                 	db	111	;'o'
   151   001040  6A                 	db	106	;'j'
   152   001041  65                 	db	101	;'e'
   153   001042  63                 	db	99	;'c'
   154   001043  74                 	db	116	;'t'
   155   001044  00                 	db	0
   156   001045                     STR_2:
   157   001045  41                 	db	65	;'A'
   158   001046  75                 	db	117	;'u'
   159   001047  74                 	db	116	;'t'
   160   001048  6F                 	db	111	;'o'
   161   001049  6D                 	db	109	;'m'
   162   00104A  61                 	db	97	;'a'
   163   00104B  74                 	db	116	;'t'
   164   00104C  69                 	db	105	;'i'
   165   00104D  63                 	db	99	;'c'
   166   00104E  20                 	db	32
   167   00104F  4D                 	db	77	;'M'
   168   001050  6F                 	db	111	;'o'
   169   001051  64                 	db	100	;'d'
   170   001052  65                 	db	101	;'e'
   171   001053  00                 	db	0
   172   001054                     STR_1:
   173   001054  4D                 	db	77	;'M'
   174   001055  61                 	db	97	;'a'
   175   001056  6E                 	db	110	;'n'
   176   001057  75                 	db	117	;'u'
   177   001058  61                 	db	97	;'a'
   178   001059  6C                 	db	108	;'l'
   179   00105A  20                 	db	32
   180   00105B  4D                 	db	77	;'M'
   181   00105C  6F                 	db	111	;'o'
   182   00105D  64                 	db	100	;'d'
   183   00105E  65                 	db	101	;'e'
   184   00105F  00                 	db	0
   185   001060                     STR_3:
   186   001060  53                 	db	83	;'S'
   187   001061  65                 	db	101	;'e'
   188   001062  6D                 	db	109	;'m'
   189   001063  69                 	db	105	;'i'
   190   001064  20                 	db	32
   191   001065  4D                 	db	77	;'M'
   192   001066  6F                 	db	111	;'o'
   193   001067  64                 	db	100	;'d'
   194   001068  65                 	db	101	;'e'
   195   001069  00                 	db	0
   196   00106A  00                 	db	0	; dummy byte at the end
   197   000000                     
   198                           ; #config settings
   199                           
   200                           	psect	cinit
   201   0012C0                     __pcinit:
   202                           	callstack 0
   203   0012C0                     start_initialization:
   204                           	callstack 0
   205   0012C0                     __initialization:
   206                           	callstack 0
   207                           
   208                           ; Clear objects allocated to COMRAM (10 bytes)
   209   0012C0  EE00  F001         	lfsr	0,__pbssCOMRAM
   210   0012C4  0E0A               	movlw	10
   211   0012C6                     clear_0:
   212   0012C6  6AEE               	clrf	postinc0,c
   213   0012C8  06E8               	decf	wreg,f,c
   214   0012CA  E1FD               	bnz	clear_0
   215   0012CC                     end_of_initialization:
   216                           	callstack 0
   217   0012CC                     __end_of__initialization:
   218                           	callstack 0
   219   0012CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220   0012CE  6EF8               	movwf	tblptru,c
   221   0012D0  0100               	movlb	0
   222   0012D2  EF6B  F009         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225   000001                     __pbssCOMRAM:
   226                           	callstack 0
   227   000001                     _Duty_Cycle2:
   228                           	callstack 0
   229   000001                     	ds	4
   230   000005                     _Duty_Cycle1:
   231                           	callstack 0
   232   000005                     	ds	4
   233   000009                     _Mode:
   234                           	callstack 0
   235   000009                     	ds	1
   236   00000A                     _Rx_Buffer:
   237                           	callstack 0
   238   00000A                     	ds	1
   239                           
   240                           	psect	cstackCOMRAM
   241   00000B                     __pcstackCOMRAM:
   242                           	callstack 0
   243   00000B                     ??_LCD_Instruction:
   244   00000B                     
   245                           ; 1 bytes @ 0x0
   246   00000B                     	ds	1
   247   00000C                     LCD_Instruction@Instruction:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x1
   251   00000C                     	ds	1
   252   00000D                     Send_Instruction_Data@Data:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x2
   256   00000D                     	ds	1
   257   00000E                     Send_Instruction_Data@Instruction:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x3
   261   00000E                     	ds	1
   262   00000F                     ??_Init_LCD:
   263   00000F                     Send_String@String:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x4
   267   00000F                     	ds	1
   268   000010                     ??_Send_String:
   269                           
   270                           ; 1 bytes @ 0x5
   271   000010                     	ds	1
   272   000011                     Send_String@i:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x6
   276   000011                     	ds	1
   277   000012                     
   278                           ; 1 bytes @ 0x7
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 50 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels required when called: 4
   304 ;; This function calls:
   305 ;;		_Bluetooth_Receiver
   306 ;;		_Configurations
   307 ;;		_Init_LCD
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text0
   314   0012D6                     __ptext0:
   315                           	callstack 0
   316   0012D6                     _main:
   317                           	callstack 27
   318   0012D6                     
   319                           ;main.c: 53:     Configurations();
   320   0012D6  ECDC  F008         	call	_Configurations	;wreg free
   321   0012DA                     
   322                           ;main.c: 54:     Init_LCD();
   323   0012DA  EC8B  F008         	call	_Init_LCD	;wreg free
   324   0012DE                     l1033:
   325                           
   326                           ;main.c: 60:         Bluetooth_Receiver();
   327   0012DE  EC36  F008         	call	_Bluetooth_Receiver	;wreg free
   328   0012E2  EF6F  F009         	goto	l1033
   329   0012E6  EF00  F000         	goto	start
   330   0012EA                     __end_of_main:
   331                           	callstack 0
   332                           
   333 ;; *************** function _Init_LCD *****************
   334 ;; Defined at:
   335 ;;		line 5 in file "LCD_Library.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;		None
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;Total ram usage:        2 bytes
   354 ;; Hardware stack levels used: 1
   355 ;; Hardware stack levels required when called: 2
   356 ;; This function calls:
   357 ;;		_Send_Instruction_Data
   358 ;; This function is called by:
   359 ;;		_main
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text1
   364   001116                     __ptext1:
   365                           	callstack 0
   366   001116                     _Init_LCD:
   367                           	callstack 28
   368   001116                     
   369                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   370   001116  0E03               	movlw	3
   371   001118  6E10               	movwf	(??_Init_LCD+1)^0,c
   372   00111A  0E08               	movlw	8
   373   00111C  6E0F               	movwf	??_Init_LCD^0,c
   374   00111E  0E77               	movlw	119
   375   001120                     u137:
   376   001120  2EE8               	decfsz	wreg,f,c
   377   001122  D7FE               	bra	u137
   378   001124  2E0F               	decfsz	??_Init_LCD^0,f,c
   379   001126  D7FC               	bra	u137
   380   001128  2E10               	decfsz	(??_Init_LCD+1)^0,f,c
   381   00112A  D7FA               	bra	u137
   382   00112C  0000               	nop	
   383   00112E                     
   384                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   385   00112E  0E30               	movlw	48
   386   001130  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   387   001132  0E00               	movlw	0
   388   001134  EC52  F009         	call	_Send_Instruction_Data
   389   001138                     
   390                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   391   001138  0E1A               	movlw	26
   392   00113A  6E0F               	movwf	??_Init_LCD^0,c
   393   00113C  0EF8               	movlw	248
   394   00113E                     u147:
   395   00113E  2EE8               	decfsz	wreg,f,c
   396   001140  D7FE               	bra	u147
   397   001142  2E0F               	decfsz	??_Init_LCD^0,f,c
   398   001144  D7FC               	bra	u147
   399   001146  D000               	nop2	
   400                           
   401                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   402   001148  0E30               	movlw	48
   403   00114A  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   404   00114C  0E00               	movlw	0
   405   00114E  EC52  F009         	call	_Send_Instruction_Data
   406   001152                     
   407                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   408   001152  0E1A               	movlw	26
   409   001154  6E0F               	movwf	??_Init_LCD^0,c
   410   001156  0EF8               	movlw	248
   411   001158                     u157:
   412   001158  2EE8               	decfsz	wreg,f,c
   413   00115A  D7FE               	bra	u157
   414   00115C  2E0F               	decfsz	??_Init_LCD^0,f,c
   415   00115E  D7FC               	bra	u157
   416   001160  D000               	nop2	
   417   001162                     
   418                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   419   001162  0E30               	movlw	48
   420   001164  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   421   001166  0E00               	movlw	0
   422   001168  EC52  F009         	call	_Send_Instruction_Data
   423   00116C                     
   424                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   425   00116C  0E02               	movlw	2
   426   00116E  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   427   001170  0E00               	movlw	0
   428   001172  EC52  F009         	call	_Send_Instruction_Data
   429   001176                     
   430                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   431   001176  0E06               	movlw	6
   432   001178  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   433   00117A  0E00               	movlw	0
   434   00117C  EC52  F009         	call	_Send_Instruction_Data
   435   001180                     
   436                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   437   001180  0E0F               	movlw	15
   438   001182  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   439   001184  0E00               	movlw	0
   440   001186  EC52  F009         	call	_Send_Instruction_Data
   441   00118A                     
   442                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   443   00118A  0E28               	movlw	40
   444   00118C  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   445   00118E  0E00               	movlw	0
   446   001190  EC52  F009         	call	_Send_Instruction_Data
   447   001194                     
   448                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   449   001194  0E01               	movlw	1
   450   001196  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   451   001198  0E00               	movlw	0
   452   00119A  EC52  F009         	call	_Send_Instruction_Data
   453   00119E                     
   454                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   455   00119E  0E03               	movlw	3
   456   0011A0  6E10               	movwf	(??_Init_LCD+1)^0,c
   457   0011A2  0E08               	movlw	8
   458   0011A4  6E0F               	movwf	??_Init_LCD^0,c
   459   0011A6  0E77               	movlw	119
   460   0011A8                     u167:
   461   0011A8  2EE8               	decfsz	wreg,f,c
   462   0011AA  D7FE               	bra	u167
   463   0011AC  2E0F               	decfsz	??_Init_LCD^0,f,c
   464   0011AE  D7FC               	bra	u167
   465   0011B0  2E10               	decfsz	(??_Init_LCD+1)^0,f,c
   466   0011B2  D7FA               	bra	u167
   467   0011B4  0000               	nop	
   468   0011B6  0012               	return		;funcret
   469   0011B8                     __end_of_Init_LCD:
   470                           	callstack 0
   471                           
   472 ;; *************** function _Configurations *****************
   473 ;; Defined at:
   474 ;;		line 84 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text2
   502   0011B8                     __ptext2:
   503                           	callstack 0
   504   0011B8                     _Configurations:
   505                           	callstack 30
   506   0011B8                     
   507                           ;main.c: 86:     OSCCON = 0x72;
   508   0011B8  0E72               	movlw	114
   509   0011BA  6ED3               	movwf	211,c	;volatile
   510                           
   511                           ;main.c: 88:     ANSELC = 0;
   512   0011BC  0E00               	movlw	0
   513   0011BE  010F               	movlb	15	; () banked
   514   0011C0  6F3A               	movwf	58,b	;volatile
   515                           
   516                           ;main.c: 89:     ANSELD = 0;
   517   0011C2  0E00               	movlw	0
   518   0011C4  6F3B               	movwf	59,b	;volatile
   519                           
   520                           ;main.c: 90:     ANSELE = 0;
   521   0011C6  0E00               	movlw	0
   522   0011C8  6F3C               	movwf	60,b	;volatile
   523   0011CA                     
   524                           ; BSR set to: 15
   525                           ;main.c: 93:     TRISCbits.RC4 = 0;
   526   0011CA  9894               	bcf	148,4,c	;volatile
   527   0011CC                     
   528                           ; BSR set to: 15
   529                           ;main.c: 94:     TRISCbits.RC5 = 0;
   530   0011CC  9A94               	bcf	148,5,c	;volatile
   531                           
   532                           ;main.c: 95:     TRISD = 0;
   533   0011CE  0E00               	movlw	0
   534   0011D0  6E95               	movwf	149,c	;volatile
   535                           
   536                           ;main.c: 96:     TRISE = 0;
   537   0011D2  0E00               	movlw	0
   538   0011D4  6E96               	movwf	150,c	;volatile
   539   0011D6                     
   540                           ; BSR set to: 15
   541                           ;main.c: 99:     LATCbits.LC4 = 0;
   542   0011D6  988B               	bcf	139,4,c	;volatile
   543   0011D8                     
   544                           ; BSR set to: 15
   545                           ;main.c: 100:     LATCbits.LC5 = 0;
   546   0011D8  9A8B               	bcf	139,5,c	;volatile
   547                           
   548                           ;main.c: 101:     LATD = 0;
   549   0011DA  0E00               	movlw	0
   550   0011DC  6E8C               	movwf	140,c	;volatile
   551                           
   552                           ;main.c: 102:     LATE = 0;
   553   0011DE  0E00               	movlw	0
   554   0011E0  6E8D               	movwf	141,c	;volatile
   555   0011E2                     
   556                           ; BSR set to: 15
   557                           ;main.c: 105:     INTCONbits.GIE = 1;
   558   0011E2  8EF2               	bsf	242,7,c	;volatile
   559   0011E4                     
   560                           ; BSR set to: 15
   561                           ;main.c: 106:     INTCONbits.PEIE = 1;
   562   0011E4  8CF2               	bsf	242,6,c	;volatile
   563   0011E6                     
   564                           ; BSR set to: 15
   565                           ;main.c: 107:     RCONbits.IPEN = 1;
   566   0011E6  8ED0               	bsf	208,7,c	;volatile
   567   0011E8                     
   568                           ; BSR set to: 15
   569                           ;main.c: 109:     PIE1bits.RC1IE = 1;
   570   0011E8  8A9D               	bsf	157,5,c	;volatile
   571   0011EA                     
   572                           ; BSR set to: 15
   573                           ;main.c: 110:     PIR1bits.RC1IF = 0;
   574   0011EA  9A9E               	bcf	158,5,c	;volatile
   575                           
   576                           ;main.c: 113:     SPBRG = 103;
   577   0011EC  0E67               	movlw	103
   578   0011EE  6EAF               	movwf	175,c	;volatile
   579   0011F0                     
   580                           ; BSR set to: 15
   581                           ;main.c: 114:     TRISCbits.RC6 = 1;
   582   0011F0  8C94               	bsf	148,6,c	;volatile
   583   0011F2                     
   584                           ; BSR set to: 15
   585                           ;main.c: 115:     TRISCbits.RC7 = 1;
   586   0011F2  8E94               	bsf	148,7,c	;volatile
   587   0011F4                     
   588                           ; BSR set to: 15
   589                           ;main.c: 118:     TXSTA1bits.TX91 = 0;
   590   0011F4  9CAC               	bcf	172,6,c	;volatile
   591   0011F6                     
   592                           ; BSR set to: 15
   593                           ;main.c: 119:     TXSTA1bits.TXEN1 = 1;
   594   0011F6  8AAC               	bsf	172,5,c	;volatile
   595   0011F8                     
   596                           ; BSR set to: 15
   597                           ;main.c: 120:     TXSTA1bits.SYNC1 = 0;
   598   0011F8  98AC               	bcf	172,4,c	;volatile
   599   0011FA                     
   600                           ; BSR set to: 15
   601                           ;main.c: 121:     TXSTA1bits.BRGH1 = 1;
   602   0011FA  84AC               	bsf	172,2,c	;volatile
   603   0011FC                     
   604                           ; BSR set to: 15
   605                           ;main.c: 124:     RCSTAbits.SPEN1 = 1;
   606   0011FC  8EAB               	bsf	171,7,c	;volatile
   607   0011FE                     
   608                           ; BSR set to: 15
   609                           ;main.c: 125:     RCSTAbits.RX91 = 0;
   610   0011FE  9CAB               	bcf	171,6,c	;volatile
   611   001200                     
   612                           ; BSR set to: 15
   613                           ;main.c: 126:     RCSTAbits.CREN1 = 1;
   614   001200  88AB               	bsf	171,4,c	;volatile
   615   001202                     
   616                           ; BSR set to: 15
   617                           ;main.c: 129:     BAUDCON1bits.BRG16 = 0;
   618   001202  96B8               	bcf	184,3,c	;volatile
   619                           
   620                           ;main.c: 141:     PR2 = 0xF9;
   621   001204  0EF9               	movlw	249
   622   001206  6EBB               	movwf	187,c	;volatile
   623                           
   624                           ;main.c: 142:     T2CON = 0x00;
   625   001208  0E00               	movlw	0
   626   00120A  6EBA               	movwf	186,c	;volatile
   627                           
   628                           ;main.c: 143:     CCP3CON = 0x0C;
   629   00120C  0E0C               	movlw	12
   630   00120E  6F5D               	movwf	93,b	;volatile
   631                           
   632                           ;main.c: 144:     CCPR3L = 0xFA;
   633   001210  0EFA               	movlw	250
   634   001212  6F5E               	movwf	94,b	;volatile
   635                           
   636                           ;main.c: 145:     CCP5CON = 0x0C;
   637   001214  0E0C               	movlw	12
   638   001216  6F54               	movwf	84,b	;volatile
   639                           
   640                           ;main.c: 146:     CCPR5L = 0xFA;
   641   001218  0EFA               	movlw	250
   642   00121A  6F55               	movwf	85,b	;volatile
   643   00121C                     
   644                           ; BSR set to: 15
   645                           ;main.c: 147:     T2CONbits.TMR2ON = 1;
   646   00121C  84BA               	bsf	186,2,c	;volatile
   647   00121E                     
   648                           ; BSR set to: 15
   649   00121E  0012               	return		;funcret
   650   001220                     __end_of_Configurations:
   651                           	callstack 0
   652                           
   653 ;; *************** function _Bluetooth_Receiver *****************
   654 ;; Defined at:
   655 ;;		line 151 in file "main.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 3
   676 ;; This function calls:
   677 ;;		_Send_Instruction_Data
   678 ;;		_Send_String
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text3
   685   00106C                     __ptext3:
   686                           	callstack 0
   687   00106C                     _Bluetooth_Receiver:
   688                           	callstack 27
   689   00106C                     
   690                           ;main.c: 153:     if (PIR1bits.RC1IF) {
   691   00106C  AA9E               	btfss	158,5,c	;volatile
   692   00106E  EF3B  F008         	goto	u121
   693   001072  EF3D  F008         	goto	u120
   694   001076                     u121:
   695   001076  EF8A  F008         	goto	l93
   696   00107A                     u120:
   697   00107A                     
   698                           ;main.c: 155:         Rx_Buffer = RCREG1;
   699   00107A  CFAE F00A          	movff	4014,_Rx_Buffer	;volatile
   700                           
   701                           ;main.c: 157:         switch (Rx_Buffer) {
   702   00107E  EF7B  F008         	goto	l1027
   703   001082                     l1007:
   704                           
   705                           ;main.c: 161:                 Send_Instruction_Data(0, 0X80);
   706   001082  0E80               	movlw	128
   707   001084  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   708   001086  0E00               	movlw	0
   709   001088  EC52  F009         	call	_Send_Instruction_Data
   710   00108C                     
   711                           ;main.c: 162:                 Send_String("Manual Mode");
   712   00108C  0E54               	movlw	low STR_1
   713   00108E  6E0F               	movwf	Send_String@String^0,c
   714   001090  EC10  F009         	call	_Send_String	;wreg free
   715                           
   716                           ;main.c: 164:                 break;
   717   001094  EF8A  F008         	goto	l93
   718   001098                     l1011:
   719                           
   720                           ;main.c: 168:                 Send_Instruction_Data(0, 0xC0);
   721   001098  0EC0               	movlw	192
   722   00109A  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   723   00109C  0E00               	movlw	0
   724   00109E  EC52  F009         	call	_Send_Instruction_Data
   725   0010A2                     
   726                           ;main.c: 169:                 Send_String("Automatic Mode");
   727   0010A2  0E45               	movlw	low STR_2
   728   0010A4  6E0F               	movwf	Send_String@String^0,c
   729   0010A6  EC10  F009         	call	_Send_String	;wreg free
   730                           
   731                           ;main.c: 171:                 break;
   732   0010AA  EF8A  F008         	goto	l93
   733   0010AE                     l1015:
   734                           
   735                           ;main.c: 175:                 Send_Instruction_Data(0, 0X94);
   736   0010AE  0E94               	movlw	148
   737   0010B0  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   738   0010B2  0E00               	movlw	0
   739   0010B4  EC52  F009         	call	_Send_Instruction_Data
   740   0010B8                     
   741                           ;main.c: 176:                 Send_String("Semi Mode");
   742   0010B8  0E60               	movlw	low STR_3
   743   0010BA  6E0F               	movwf	Send_String@String^0,c
   744   0010BC  EC10  F009         	call	_Send_String	;wreg free
   745                           
   746                           ;main.c: 178:                 break;
   747   0010C0  EF8A  F008         	goto	l93
   748   0010C4                     l1019:
   749                           
   750                           ;main.c: 182:                 Send_Instruction_Data(0, 0x01);
   751   0010C4  0E01               	movlw	1
   752   0010C6  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   753   0010C8  0E00               	movlw	0
   754   0010CA  EC52  F009         	call	_Send_Instruction_Data
   755                           
   756                           ;main.c: 183:                 Send_Instruction_Data(0, 0X80);
   757   0010CE  0E80               	movlw	128
   758   0010D0  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   759   0010D2  0E00               	movlw	0
   760   0010D4  EC52  F009         	call	_Send_Instruction_Data
   761   0010D8                     
   762                           ;main.c: 184:                 Send_String("   Value Entered");
   763   0010D8  0E12               	movlw	low STR_4
   764   0010DA  6E0F               	movwf	Send_String@String^0,c
   765   0010DC  EC10  F009         	call	_Send_String	;wreg free
   766   0010E0                     
   767                           ;main.c: 185:                 Send_Instruction_Data(0, 0xC0);
   768   0010E0  0EC0               	movlw	192
   769   0010E2  6E0D               	movwf	Send_Instruction_Data@Data^0,c
   770   0010E4  0E00               	movlw	0
   771   0010E6  EC52  F009         	call	_Send_Instruction_Data
   772                           
   773                           ;main.c: 186:                 Send_String("   Is not Valid!");
   774   0010EA  0E01               	movlw	low STR_5
   775   0010EC  6E0F               	movwf	Send_String@String^0,c
   776   0010EE  EC10  F009         	call	_Send_String	;wreg free
   777                           
   778                           ;main.c: 188:                 break;
   779   0010F2  EF8A  F008         	goto	l93
   780   0010F6                     l1027:
   781   0010F6  500A               	movf	_Rx_Buffer^0,w,c
   782                           
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 3, Range of values is 65 to 83
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte           10     6 (average)
   788                           ;	Chosen strategy is simple_byte
   789   0010F8  0A41               	xorlw	65	; case 65
   790   0010FA  B4D8               	btfsc	status,2,c
   791   0010FC  EF4C  F008         	goto	l1011
   792   001100  0A0C               	xorlw	12	; case 77
   793   001102  B4D8               	btfsc	status,2,c
   794   001104  EF41  F008         	goto	l1007
   795   001108  0A1E               	xorlw	30	; case 83
   796   00110A  B4D8               	btfsc	status,2,c
   797   00110C  EF57  F008         	goto	l1015
   798   001110  EF62  F008         	goto	l1019
   799   001114                     l93:
   800   001114  0012               	return		;funcret
   801   001116                     __end_of_Bluetooth_Receiver:
   802                           	callstack 0
   803                           
   804 ;; *************** function _Send_String *****************
   805 ;; Defined at:
   806 ;;		line 46 in file "LCD_Library.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  String          1    4[COMRAM] PTR unsigned char 
   809 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
   810 ;;		 -> STR_3(10), STR_2(15), STR_1(12), 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  i               1    6[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        3 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 2
   829 ;; This function calls:
   830 ;;		_Send_Instruction_Data
   831 ;; This function is called by:
   832 ;;		_Bluetooth_Receiver
   833 ;;		_Init_Message_Platform
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text4
   838   001220                     __ptext4:
   839                           	callstack 0
   840   001220                     _Send_String:
   841                           	callstack 27
   842   001220                     
   843                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   844   001220  0E00               	movlw	0
   845   001222  6E11               	movwf	Send_String@i^0,c
   846   001224  EF22  F009         	goto	l979
   847   001228                     l975:
   848                           
   849                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
   850   001228  500F               	movf	Send_String@String^0,w,c
   851   00122A  2411               	addwf	Send_String@i^0,w,c
   852   00122C  6E10               	movwf	??_Send_String^0,c
   853   00122E  C010  FFF6         	movff	??_Send_String,tblptrl
   854   001232                     	if	1	;There is more than 1 active tblptr byte
   855   001232  0E10               	movlw	high __smallconst
   856   001234  6EF7               	movwf	tblptrh,c
   857   001236                     	endif
   858   001236                     	if	0	;tblptru may be non-zero
   859   001236                     	endif
   860   001236                     	if	0	;tblptru may be non-zero
   861   001236                     	endif
   862   001236  0008               	tblrd		*
   863   001238  CFF5 F00D          	movff	tablat,Send_Instruction_Data@Data
   864   00123C  0E01               	movlw	1
   865   00123E  EC52  F009         	call	_Send_Instruction_Data
   866   001242                     
   867                           ;LCD_Library.c: 52:     }
   868   001242  2A11               	incf	Send_String@i^0,f,c
   869   001244                     l979:
   870   001244  500F               	movf	Send_String@String^0,w,c
   871   001246  2411               	addwf	Send_String@i^0,w,c
   872   001248  6E10               	movwf	??_Send_String^0,c
   873   00124A  C010  FFF6         	movff	??_Send_String,tblptrl
   874   00124E                     	if	1	;There is more than 1 active tblptr byte
   875   00124E  0E10               	movlw	high __smallconst
   876   001250  6EF7               	movwf	tblptrh,c
   877   001252                     	endif
   878   001252                     	if	0	;tblptru may be non-zero
   879   001252                     	endif
   880   001252                     	if	0	;tblptru may be non-zero
   881   001252                     	endif
   882   001252  0008               	tblrd		*
   883   001254  50F5               	movf	tablat,w,c
   884   001256  0900               	iorlw	0
   885   001258  A4D8               	btfss	status,2,c
   886   00125A  EF31  F009         	goto	u111
   887   00125E  EF33  F009         	goto	u110
   888   001262                     u111:
   889   001262  EF14  F009         	goto	l975
   890   001266                     u110:
   891   001266  0012               	return		;funcret
   892   001268                     __end_of_Send_String:
   893                           	callstack 0
   894                           
   895 ;; *************** function _Send_Instruction_Data *****************
   896 ;; Defined at:
   897 ;;		line 24 in file "LCD_Library.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  Instruction     1    wreg     unsigned char 
   900 ;;  Data            1    2[COMRAM] unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  Instruction     1    3[COMRAM] unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;Total ram usage:        2 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; Hardware stack levels required when called: 1
   919 ;; This function calls:
   920 ;;		_LCD_Instruction
   921 ;; This function is called by:
   922 ;;		_Bluetooth_Receiver
   923 ;;		_Init_LCD
   924 ;;		_Send_String
   925 ;;		_Init_Message_Platform
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text5
   930   0012A4                     __ptext5:
   931                           	callstack 0
   932   0012A4                     _Send_Instruction_Data:
   933                           	callstack 28
   934                           
   935                           ;incstack = 0
   936                           ;Send_Instruction_Data@Instruction stored from wreg
   937   0012A4  6E0E               	movwf	Send_Instruction_Data@Instruction^0,c
   938   0012A6                     
   939                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   940   0012A6  B00E               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   941   0012A8  D002               	bra	u105
   942   0012AA  988B               	bcf	139,4,c	;volatile
   943   0012AC  D001               	bra	u106
   944   0012AE                     u105:
   945   0012AE  888B               	bsf	139,4,c	;volatile
   946   0012B0                     u106:
   947   0012B0                     
   948                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   949   0012B0  380D               	swapf	Send_Instruction_Data@Data^0,w,c
   950   0012B2  0B0F               	andlw	15
   951   0012B4  EC34  F009         	call	_LCD_Instruction
   952   0012B8                     
   953                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
   954   0012B8  500D               	movf	Send_Instruction_Data@Data^0,w,c
   955   0012BA  EC34  F009         	call	_LCD_Instruction
   956   0012BE  0012               	return		;funcret
   957   0012C0                     __end_of_Send_Instruction_Data:
   958                           	callstack 0
   959                           
   960 ;; *************** function _LCD_Instruction *****************
   961 ;; Defined at:
   962 ;;		line 33 in file "LCD_Library.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  Instruction     1    wreg     unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  Instruction     1    1[COMRAM] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        2 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_Send_Instruction_Data
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text6
   990   001268                     __ptext6:
   991                           	callstack 0
   992   001268                     _LCD_Instruction:
   993                           	callstack 28
   994                           
   995                           ;incstack = 0
   996                           ;LCD_Instruction@Instruction stored from wreg
   997   001268  6E0C               	movwf	LCD_Instruction@Instruction^0,c
   998   00126A                     
   999                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  1000   00126A  8A8B               	bsf	139,5,c	;volatile
  1001   00126C                     
  1002                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1003   00126C  0E4E               	movlw	78
  1004   00126E  6E0B               	movwf	??_LCD_Instruction^0,c
  1005   001270  0EEB               	movlw	235
  1006   001272                     u177:
  1007   001272  2EE8               	decfsz	wreg,f,c
  1008   001274  D7FE               	bra	u177
  1009   001276  2E0B               	decfsz	??_LCD_Instruction^0,f,c
  1010   001278  D7FC               	bra	u177
  1011   00127A  0000               	nop	
  1012   00127C                     
  1013                           ;LCD_Library.c: 37:     LATD = Instruction;
  1014   00127C  C00C  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
  1015   001280                     
  1016                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1017   001280  0E4E               	movlw	78
  1018   001282  6E0B               	movwf	??_LCD_Instruction^0,c
  1019   001284  0EEB               	movlw	235
  1020   001286                     u187:
  1021   001286  2EE8               	decfsz	wreg,f,c
  1022   001288  D7FE               	bra	u187
  1023   00128A  2E0B               	decfsz	??_LCD_Instruction^0,f,c
  1024   00128C  D7FC               	bra	u187
  1025   00128E  0000               	nop	
  1026   001290                     
  1027                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  1028   001290  9A8B               	bcf	139,5,c	;volatile
  1029   001292                     
  1030                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1031   001292  0E4E               	movlw	78
  1032   001294  6E0B               	movwf	??_LCD_Instruction^0,c
  1033   001296  0EEB               	movlw	235
  1034   001298                     u197:
  1035   001298  2EE8               	decfsz	wreg,f,c
  1036   00129A  D7FE               	bra	u197
  1037   00129C  2E0B               	decfsz	??_LCD_Instruction^0,f,c
  1038   00129E  D7FC               	bra	u197
  1039   0012A0  0000               	nop	
  1040   0012A2  0012               	return		;funcret
  1041   0012A4                     __end_of_LCD_Instruction:
  1042                           	callstack 0
  1043                           
  1044                           	psect	rparam
  1045   000000                     
  1046                           	psect	config
  1047                           
  1048                           ; Padding undefined space
  1049   300000                     	org	3145728
  1050   300000  FF                 	db	255
  1051                           
  1052                           ;Config register CONFIG1H @ 0x300001
  1053                           ;	Oscillator Selection bits
  1054                           ;	FOSC = INTIO67, Internal oscillator block
  1055                           ;	4X PLL Enable
  1056                           ;	PLLCFG = OFF, Oscillator used directly
  1057                           ;	Primary clock enable bit
  1058                           ;	PRICLKEN = ON, Primary clock is always enabled
  1059                           ;	Fail-Safe Clock Monitor Enable bit
  1060                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1061                           ;	Internal/External Oscillator Switchover bit
  1062                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1063   300001                     	org	3145729
  1064   300001  28                 	db	40
  1065                           
  1066                           ;Config register CONFIG2L @ 0x300002
  1067                           ;	Power-up Timer Enable bit
  1068                           ;	PWRTEN = OFF, Power up timer disabled
  1069                           ;	Brown-out Reset Enable bits
  1070                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1071                           ;	Brown Out Reset Voltage bits
  1072                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1073   300002                     	org	3145730
  1074   300002  1F                 	db	31
  1075                           
  1076                           ;Config register CONFIG2H @ 0x300003
  1077                           ;	Watchdog Timer Enable bits
  1078                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1079                           ;	Watchdog Timer Postscale Select bits
  1080                           ;	WDTPS = 32768, 1:32768
  1081   300003                     	org	3145731
  1082   300003  3C                 	db	60
  1083                           
  1084                           ; Padding undefined space
  1085   300004                     	org	3145732
  1086   300004  FF                 	db	255
  1087                           
  1088                           ;Config register CONFIG3H @ 0x300005
  1089                           ;	CCP2 MUX bit
  1090                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1091                           ;	PORTB A/D Enable bit
  1092                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1093                           ;	P3A/CCP3 Mux bit
  1094                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1095                           ;	HFINTOSC Fast Start-up
  1096                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1097                           ;	Timer3 Clock input mux bit
  1098                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1099                           ;	ECCP2 B output mux bit
  1100                           ;	P2BMX = PORTD2, P2B is on RD2
  1101                           ;	MCLR Pin Enable bit
  1102                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1103   300005                     	org	3145733
  1104   300005  BB                 	db	187
  1105                           
  1106                           ;Config register CONFIG4L @ 0x300006
  1107                           ;	Stack Full/Underflow Reset Enable bit
  1108                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1109                           ;	Single-Supply ICSP Enable bit
  1110                           ;	LVP = OFF, Single-Supply ICSP disabled
  1111                           ;	Extended Instruction Set Enable bit
  1112                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1113                           ;	Background Debug
  1114                           ;	DEBUG = 0x1, unprogrammed default
  1115   300006                     	org	3145734
  1116   300006  81                 	db	129
  1117                           
  1118                           ; Padding undefined space
  1119   300007                     	org	3145735
  1120   300007  FF                 	db	255
  1121                           
  1122                           ;Config register CONFIG5L @ 0x300008
  1123                           ;	Code Protection Block 0
  1124                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1125                           ;	Code Protection Block 1
  1126                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1127                           ;	Code Protection Block 2
  1128                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1129                           ;	Code Protection Block 3
  1130                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1131   300008                     	org	3145736
  1132   300008  0F                 	db	15
  1133                           
  1134                           ;Config register CONFIG5H @ 0x300009
  1135                           ;	Boot Block Code Protection bit
  1136                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1137                           ;	Data EEPROM Code Protection bit
  1138                           ;	CPD = OFF, Data EEPROM not code-protected
  1139   300009                     	org	3145737
  1140   300009  C0                 	db	192
  1141                           
  1142                           ;Config register CONFIG6L @ 0x30000A
  1143                           ;	Write Protection Block 0
  1144                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1145                           ;	Write Protection Block 1
  1146                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1147                           ;	Write Protection Block 2
  1148                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1149                           ;	Write Protection Block 3
  1150                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1151   30000A                     	org	3145738
  1152   30000A  0F                 	db	15
  1153                           
  1154                           ;Config register CONFIG6H @ 0x30000B
  1155                           ;	Configuration Register Write Protection bit
  1156                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1157                           ;	Boot Block Write Protection bit
  1158                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1159                           ;	Data EEPROM Write Protection bit
  1160                           ;	WRTD = OFF, Data EEPROM not write-protected
  1161   30000B                     	org	3145739
  1162   30000B  E0                 	db	224
  1163                           
  1164                           ;Config register CONFIG7L @ 0x30000C
  1165                           ;	Table Read Protection Block 0
  1166                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1167                           ;	Table Read Protection Block 1
  1168                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1169                           ;	Table Read Protection Block 2
  1170                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1171                           ;	Table Read Protection Block 3
  1172                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1173   30000C                     	org	3145740
  1174   30000C  0F                 	db	15
  1175                           
  1176                           ;Config register CONFIG7H @ 0x30000D
  1177                           ;	Boot Block Table Read Protection bit
  1178                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1179   30000D                     	org	3145741
  1180   30000D  40                 	db	64
  1181                           tosu	equ	0xFFF
  1182                           tosh	equ	0xFFE
  1183                           tosl	equ	0xFFD
  1184                           stkptr	equ	0xFFC
  1185                           pclatu	equ	0xFFB
  1186                           pclath	equ	0xFFA
  1187                           pcl	equ	0xFF9
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           indf0	equ	0xFEF
  1195                           postinc0	equ	0xFEE
  1196                           postdec0	equ	0xFED
  1197                           preinc0	equ	0xFEC
  1198                           plusw0	equ	0xFEB
  1199                           fsr0h	equ	0xFEA
  1200                           fsr0l	equ	0xFE9
  1201                           wreg	equ	0xFE8
  1202                           indf1	equ	0xFE7
  1203                           postinc1	equ	0xFE6
  1204                           postdec1	equ	0xFE5
  1205                           preinc1	equ	0xFE4
  1206                           plusw1	equ	0xFE3
  1207                           fsr1h	equ	0xFE2
  1208                           fsr1l	equ	0xFE1
  1209                           bsr	equ	0xFE0
  1210                           indf2	equ	0xFDF
  1211                           postinc2	equ	0xFDE
  1212                           postdec2	equ	0xFDD
  1213                           preinc2	equ	0xFDC
  1214                           plusw2	equ	0xFDB
  1215                           fsr2h	equ	0xFDA
  1216                           fsr2l	equ	0xFD9
  1217                           status	equ	0xFD8

Data Sizes:
    Strings     105
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[12]), STR_2(CODE[15]), STR_3(CODE[10]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), 


Critical Paths under _main in COMRAM

    _Init_LCD->_Send_Instruction_Data
    _Bluetooth_Receiver->_Send_String
    _Send_String->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4741
                 _Bluetooth_Receiver
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0    1373
                                              4 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Bluetooth_Receiver                                   0     0      0    3368
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (2) _Send_String                                          3     2      1    1995
                                              4 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1    1373
                                              2 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bluetooth_Receiver
     _Send_Instruction_Data
       _LCD_Instruction
     _Send_String
       _Send_Instruction_Data
   _Configurations
   _Init_LCD
     _Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7      11       1       17.9%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRlhhlhh     14      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlhhlhh      8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhhll       6      0       0      44        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRlhhlhh      1      0       0      40        0.0%
BITBIGSFRlhhlhl      1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      50        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Mar 06 16:42:11 2024

                              l83 121E                                l93 1114                 Send_String@String 000F  
                             l131 12A2                               l125 11B6                               l128 12BE  
                             l137 1266                               l821 1290                               l813 126A  
                             l823 1292                               l815 126C                               l817 127C  
                             l841 11CA                               l819 1280                               l851 11E4  
                             l843 11CC                               l861 11F2                               l853 11E6  
                             l845 11D6                               l871 11FC                               l863 11F4  
                             l855 11E8                               l847 11D8                               l839 11B8  
                             l873 11FE                               l865 11F6                               l857 11EA  
                             l849 11E2                               l971 12B8                               l875 1200  
                             l867 11F8                               l859 11F0                               l973 1220  
                             l877 1202                               l869 11FA                               l981 1116  
                             l967 12A6                               l975 1228                               l879 121C  
                             l991 116C                               l983 112E                               l969 12B0  
                             l977 1242                               l993 1176                               l985 1138  
                             l979 1244                               l995 1180                               l987 1152  
                             l997 118A                               l989 1162                               l999 1194  
                             u110 1266                               u111 1262                               u120 107A  
                             u105 12AE                               u121 1076                               u106 12B0  
                             u137 1120                               u147 113E                               u157 1158  
                             _PR2 0FBB                               u167 11A8                               u177 1272  
                             u187 1286                               u197 1298                               wreg 0FE8  
                      _TXSTA1bits 0FAC                _Bluetooth_Receiver 106C                              l1001 119E  
                            l1011 1098                              l1003 106C                              l1021 10D8  
                            l1013 10A2                              l1005 107A                              l1023 10E0  
                            l1015 10AE                              l1007 1082                              l1031 12DA  
                            l1017 10B8                              l1009 108C                              l1033 12DE  
                            l1019 10C4                              l1027 10F6                              l1029 12D6  
                            STR_1 1054                              STR_2 1045                              STR_3 1060  
                            STR_4 1012                              STR_5 1001                              STR_6 1034  
                            STR_7 1023                              _LATD 0F8C                              _LATE 0F8D  
                            _Mode 0009               ?_Bluetooth_Receiver 000B                              _main 12D6  
                            start 0000                      ___param_bank 0000                   _LCD_Instruction 1268  
Send_Instruction_Data@Instruction 000E                      _BAUDCON1bits 0FB8              ??_Bluetooth_Receiver 0012  
                           ?_main 000B                             _T2CON 0FBA                             _SPBRG 0FAF  
                           _TRISD 0F95                             _TRISE 0F96                             tablat 0FF5  
                           status 0FD8                   __initialization 12C0                      __end_of_main 12EA  
                __end_of_Init_LCD 11B8             _Send_Instruction_Data 12A4                            ??_main 0012  
                   ??_Send_String 0010                     __activetblptr 0002                            _CCPR3L 0F5E  
                          _CCPR5L 0F55                            _ANSELC 0F3A                            _ANSELD 0F3B  
                          _ANSELE 0F3C                            _RCREG1 0FAE        LCD_Instruction@Instruction 000C  
                          _OSCCON 0FD3           __end_of_LCD_Instruction 12A4                            clear_0 12C6  
                          isa$std 0001                      __mediumconst 0000                            tblptrh 0FF7  
                          tblptrl 0FF6                            tblptru 0FF8               __end_of_Send_String 1268  
                      __accesstop 0060           __end_of__initialization 12CC                     ___rparam_used 0001  
                  __pcstackCOMRAM 000B            ?_Send_Instruction_Data 000D                       _Duty_Cycle1 0005  
                     _Duty_Cycle2 0001                         ?_Init_LCD 000B                  ?_LCD_Instruction 000B  
                         _CCP3CON 0F5D                           _CCP5CON 0F54                       _Send_String 1220  
                      ??_Init_LCD 000F                           __Hparam 0000                           __Lparam 0000  
                    __psmallconst 1000                           __pcinit 12C0                           __ramtop 1000  
                         __ptext0 12D6                           __ptext1 1116                           __ptext2 11B8  
                         __ptext3 106C                           __ptext4 1220                           __ptext5 12A4  
                         __ptext6 1268                         _T2CONbits 0FBA              end_of_initialization 12CC  
                   __Lmediumconst 0000                         _RCSTAbits 0FAB                           postinc0 0FEE  
                       _TRISCbits 0F94           ??_Send_Instruction_Data 000E               start_initialization 12C0  
                    Send_String@i 0011         Send_Instruction_Data@Data 000D                    _Configurations 11B8  
                       _Rx_Buffer 000A                      ?_Send_String 000F                       __pbssCOMRAM 0001  
          __end_of_Configurations 1220                       __smallconst 1000                   ?_Configurations 000B  
                        _LATCbits 0F8B                          _LATDbits 0F8C                          _PIE1bits 0F9D  
                        _PIR1bits 0F9E                          _RCONbits 0FD0        __end_of_Bluetooth_Receiver 1116  
                        _Init_LCD 1116                          __Hrparam 0000                          __Lrparam 0000  
   __end_of_Send_Instruction_Data 12C0                 ??_LCD_Instruction 000B                          isa$xinst 0000  
                      _INTCONbits 0FF2                  ??_Configurations 000B  
