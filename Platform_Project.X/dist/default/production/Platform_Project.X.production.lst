

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 28 18:08:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F46K22 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _LATDbits	set	3980
    61   000000                     _T2CONbits	set	4026
    62   000000                     _ANSELC	set	3898
    63   000000                     _PIR1bits	set	3998
    64   000000                     _RCSTAbits	set	4011
    65   000000                     _TXSTA1bits	set	4012
    66   000000                     _SPBRG	set	4015
    67   000000                     _RCONbits	set	4048
    68   000000                     _OSCCON	set	4051
    69   000000                     _INTCONbits	set	4082
    70   000000                     _CCP5CON	set	3924
    71   000000                     _CCP3CON	set	3933
    72   000000                     _LATCbits	set	3979
    73   000000                     _TRISCbits	set	3988
    74   000000                     _ANSELE	set	3900
    75   000000                     _ANSELD	set	3899
    76   000000                     _PIE1bits	set	3997
    77   000000                     _TRISE	set	3990
    78   000000                     _TRISD	set	3989
    79   000000                     _LATE	set	3981
    80   000000                     _LATD	set	3980
    81   000000                     _BAUDCON1bits	set	4024
    82   000000                     _RCREG1	set	4014
    83   000000                     _T2CON	set	4026
    84   000000                     _PR2	set	4027
    85   000000                     _CCPR3L	set	3934
    86   000000                     _CCPR5L	set	3925
    87                           
    88                           	psect	smallconst
    89   001000                     __psmallconst:
    90                           	callstack 0
    91   001000  00                 	db	0
    92   001001  52                 	db	82	;'R'
    93   001002  6F                 	db	111	;'o'
    94   001003  62                 	db	98	;'b'
    95   001004  6F                 	db	111	;'o'
    96   001005  74                 	db	116	;'t'
    97   001006  69                 	db	105	;'i'
    98   001007  63                 	db	99	;'c'
    99   001008  20                 	db	32
   100   001009  50                 	db	80	;'P'
   101   00100A  6C                 	db	108	;'l'
   102   00100B  61                 	db	97	;'a'
   103   00100C  74                 	db	116	;'t'
   104   00100D  66                 	db	102	;'f'
   105   00100E  6F                 	db	111	;'o'
   106   00100F  72                 	db	114	;'r'
   107   001010  6D                 	db	109	;'m'
   108   001011  00                 	db	0
   109   001012  52                 	db	82	;'R'
   110   001013  65                 	db	101	;'e'
   111   001014  73                 	db	115	;'s'
   112   001015  65                 	db	101	;'e'
   113   001016  61                 	db	97	;'a'
   114   001017  72                 	db	114	;'r'
   115   001018  63                 	db	99	;'c'
   116   001019  68                 	db	104	;'h'
   117   00101A  20                 	db	32
   118   00101B  50                 	db	80	;'P'
   119   00101C  72                 	db	114	;'r'
   120   00101D  6F                 	db	111	;'o'
   121   00101E  6A                 	db	106	;'j'
   122   00101F  65                 	db	101	;'e'
   123   001020  63                 	db	99	;'c'
   124   001021  74                 	db	116	;'t'
   125   001022  00                 	db	0
   126   001023  00                 	db	0	; dummy byte at the end
   127   000000                     
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131   00184E                     __pcinit:
   132                           	callstack 0
   133   00184E                     start_initialization:
   134                           	callstack 0
   135   00184E                     __initialization:
   136                           	callstack 0
   137                           
   138                           ; Clear objects allocated to COMRAM (9 bytes)
   139   00184E  EE00  F02D         	lfsr	0,__pbssCOMRAM
   140   001852  0E09               	movlw	9
   141   001854                     clear_0:
   142   001854  6AEE               	clrf	postinc0,c
   143   001856  06E8               	decf	wreg,f,c
   144   001858  E1FD               	bnz	clear_0
   145   00185A                     end_of_initialization:
   146                           	callstack 0
   147   00185A                     __end_of__initialization:
   148                           	callstack 0
   149   00185A  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   150   00185C  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   151   00185E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   152   001860  6EF8               	movwf	tblptru,c
   153   001862  0100               	movlb	0
   154   001864  EF34  F00C         	goto	_main	;jump to C main() function
   155                           
   156                           	psect	bssCOMRAM
   157   00002D                     __pbssCOMRAM:
   158                           	callstack 0
   159   00002D                     _Duty_Cycle2:
   160                           	callstack 0
   161   00002D                     	ds	4
   162   000031                     _Duty_Cycle1:
   163                           	callstack 0
   164   000031                     	ds	4
   165   000035                     _Rx_Buffer:
   166                           	callstack 0
   167   000035                     	ds	1
   168                           
   169                           	psect	cstackCOMRAM
   170   000001                     __pcstackCOMRAM:
   171                           	callstack 0
   172   000001                     ?___flmul:
   173                           	callstack 0
   174   000001                     ?___fltol:
   175                           	callstack 0
   176   000001                     ___fltol@f1:
   177                           	callstack 0
   178   000001                     ___flmul@b:
   179                           	callstack 0
   180                           
   181                           ; 4 bytes @ 0x0
   182   000001                     	ds	4
   183   000005                     ??___fltol:
   184   000005                     ___flmul@a:
   185                           	callstack 0
   186                           
   187                           ; 4 bytes @ 0x4
   188   000005                     	ds	4
   189   000009                     ??___flmul:
   190   000009                     ___fltol@sign1:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x8
   194   000009                     	ds	1
   195   00000A                     ___fltol@exp1:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x9
   199   00000A                     	ds	3
   200   00000D                     ___flmul@sign:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0xC
   204   00000D                     	ds	1
   205   00000E                     ___flmul@grs:
   206                           	callstack 0
   207                           
   208                           ; 4 bytes @ 0xD
   209   00000E                     	ds	4
   210   000012                     ___flmul@aexp:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x11
   214   000012                     	ds	1
   215   000013                     ___flmul@bexp:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x12
   219   000013                     	ds	1
   220   000014                     ___flmul@prod:
   221                           	callstack 0
   222                           
   223                           ; 4 bytes @ 0x13
   224   000014                     	ds	4
   225   000018                     ___flmul@temp:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x17
   229   000018                     	ds	2
   230   00001A                     Send_PWM_Motors@PWM_RMotor:
   231                           	callstack 0
   232                           
   233                           ; 4 bytes @ 0x19
   234   00001A                     	ds	4
   235   00001E                     Send_PWM_Motors@PWM_LMotor:
   236                           	callstack 0
   237                           
   238                           ; 4 bytes @ 0x1D
   239   00001E                     	ds	4
   240   000022                     ??_Receive_Interrupt:
   241   000022                     
   242                           ; 1 bytes @ 0x21
   243   000022                     	ds	2
   244   000024                     ??_Interrupt_Rx:
   245                           
   246                           ; 1 bytes @ 0x23
   247   000024                     	ds	2
   248   000026                     ??_Interrupt:
   249                           
   250                           ; 1 bytes @ 0x25
   251   000026                     	ds	1
   252   000027                     ??_LCD_Instruction:
   253                           
   254                           ; 1 bytes @ 0x26
   255   000027                     	ds	1
   256   000028                     LCD_Instruction@Instruction:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x27
   260   000028                     	ds	1
   261   000029                     Send_Instruction_Data@Data:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x28
   265   000029                     	ds	1
   266   00002A                     Send_Instruction_Data@Instruction:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x29
   270   00002A                     	ds	1
   271   00002B                     ??_Init_LCD:
   272                           
   273                           ; 1 bytes @ 0x2A
   274   00002B                     	ds	2
   275   00002D                     
   276                           ; 1 bytes @ 0x2C
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 40 in file "main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, status,2, status,0, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels required when called: 8
   302 ;; This function calls:
   303 ;;		_Configurations
   304 ;;		_Init_LCD
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text0
   311   001868                     __ptext0:
   312                           	callstack 0
   313   001868                     _main:
   314                           	callstack 23
   315   001868                     
   316                           ;main.c: 43:     Configurations();
   317   001868  ECB4  F00B         	call	_Configurations	;wreg free
   318   00186C                     
   319                           ;main.c: 44:     Init_LCD();
   320   00186C  EC2D  F00B         	call	_Init_LCD	;wreg free
   321   001870                     l79:
   322   001870  EF38  F00C         	goto	l79
   323   001874  EF13  F000         	goto	start
   324   001878                     __end_of_main:
   325                           	callstack 0
   326                           
   327 ;; *************** function _Init_LCD *****************
   328 ;; Defined at:
   329 ;;		line 5 in file "LCD_Library.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;Total ram usage:        2 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; Hardware stack levels required when called: 7
   350 ;; This function calls:
   351 ;;		_Send_Instruction_Data
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text1
   358   00165A                     __ptext1:
   359                           	callstack 0
   360   00165A                     _Init_LCD:
   361                           	callstack 23
   362   00165A                     
   363                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   364   00165A  0E03               	movlw	3
   365   00165C  6E2C               	movwf	(??_Init_LCD+1)^0,c
   366   00165E  0E08               	movlw	8
   367   001660  6E2B               	movwf	??_Init_LCD^0,c
   368   001662  0E77               	movlw	119
   369   001664                     u597:
   370   001664  2EE8               	decfsz	wreg,f,c
   371   001666  D7FE               	bra	u597
   372   001668  2E2B               	decfsz	??_Init_LCD^0,f,c
   373   00166A  D7FC               	bra	u597
   374   00166C  2E2C               	decfsz	(??_Init_LCD+1)^0,f,c
   375   00166E  D7FA               	bra	u597
   376   001670  0000               	nop	
   377   001672                     
   378                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   379   001672  0E30               	movlw	48
   380   001674  6E29               	movwf	Send_Instruction_Data@Data^0,c
   381   001676  0E00               	movlw	0
   382   001678  EC19  F00C         	call	_Send_Instruction_Data
   383   00167C                     
   384                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   385   00167C  0E1A               	movlw	26
   386   00167E  6E2B               	movwf	??_Init_LCD^0,c
   387   001680  0EF8               	movlw	248
   388   001682                     u607:
   389   001682  2EE8               	decfsz	wreg,f,c
   390   001684  D7FE               	bra	u607
   391   001686  2E2B               	decfsz	??_Init_LCD^0,f,c
   392   001688  D7FC               	bra	u607
   393   00168A  D000               	nop2	
   394                           
   395                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   396   00168C  0E30               	movlw	48
   397   00168E  6E29               	movwf	Send_Instruction_Data@Data^0,c
   398   001690  0E00               	movlw	0
   399   001692  EC19  F00C         	call	_Send_Instruction_Data
   400   001696                     
   401                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   402   001696  0E1A               	movlw	26
   403   001698  6E2B               	movwf	??_Init_LCD^0,c
   404   00169A  0EF8               	movlw	248
   405   00169C                     u617:
   406   00169C  2EE8               	decfsz	wreg,f,c
   407   00169E  D7FE               	bra	u617
   408   0016A0  2E2B               	decfsz	??_Init_LCD^0,f,c
   409   0016A2  D7FC               	bra	u617
   410   0016A4  D000               	nop2	
   411   0016A6                     
   412                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   413   0016A6  0E30               	movlw	48
   414   0016A8  6E29               	movwf	Send_Instruction_Data@Data^0,c
   415   0016AA  0E00               	movlw	0
   416   0016AC  EC19  F00C         	call	_Send_Instruction_Data
   417   0016B0                     
   418                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   419   0016B0  0E02               	movlw	2
   420   0016B2  6E29               	movwf	Send_Instruction_Data@Data^0,c
   421   0016B4  0E00               	movlw	0
   422   0016B6  EC19  F00C         	call	_Send_Instruction_Data
   423   0016BA                     
   424                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   425   0016BA  0E06               	movlw	6
   426   0016BC  6E29               	movwf	Send_Instruction_Data@Data^0,c
   427   0016BE  0E00               	movlw	0
   428   0016C0  EC19  F00C         	call	_Send_Instruction_Data
   429   0016C4                     
   430                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   431   0016C4  0E0F               	movlw	15
   432   0016C6  6E29               	movwf	Send_Instruction_Data@Data^0,c
   433   0016C8  0E00               	movlw	0
   434   0016CA  EC19  F00C         	call	_Send_Instruction_Data
   435   0016CE                     
   436                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   437   0016CE  0E28               	movlw	40
   438   0016D0  6E29               	movwf	Send_Instruction_Data@Data^0,c
   439   0016D2  0E00               	movlw	0
   440   0016D4  EC19  F00C         	call	_Send_Instruction_Data
   441   0016D8                     
   442                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   443   0016D8  0E01               	movlw	1
   444   0016DA  6E29               	movwf	Send_Instruction_Data@Data^0,c
   445   0016DC  0E00               	movlw	0
   446   0016DE  EC19  F00C         	call	_Send_Instruction_Data
   447   0016E2                     
   448                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   449   0016E2  0E03               	movlw	3
   450   0016E4  6E2C               	movwf	(??_Init_LCD+1)^0,c
   451   0016E6  0E08               	movlw	8
   452   0016E8  6E2B               	movwf	??_Init_LCD^0,c
   453   0016EA  0E77               	movlw	119
   454   0016EC                     u627:
   455   0016EC  2EE8               	decfsz	wreg,f,c
   456   0016EE  D7FE               	bra	u627
   457   0016F0  2E2B               	decfsz	??_Init_LCD^0,f,c
   458   0016F2  D7FC               	bra	u627
   459   0016F4  2E2C               	decfsz	(??_Init_LCD+1)^0,f,c
   460   0016F6  D7FA               	bra	u627
   461   0016F8  0000               	nop	
   462   0016FA  0012               	return		;funcret
   463   0016FC                     __end_of_Init_LCD:
   464                           	callstack 0
   465                           
   466 ;; *************** function _Send_Instruction_Data *****************
   467 ;; Defined at:
   468 ;;		line 24 in file "LCD_Library.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  Instruction     1    wreg     unsigned char 
   471 ;;  Data            1   40[COMRAM] unsigned char 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  Instruction     1   41[COMRAM] unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   483 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;Total ram usage:        2 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; Hardware stack levels required when called: 6
   490 ;; This function calls:
   491 ;;		_LCD_Instruction
   492 ;; This function is called by:
   493 ;;		_Init_LCD
   494 ;;		_Init_Message_Platform
   495 ;;		_Send_String
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text2
   500   001832                     __ptext2:
   501                           	callstack 0
   502   001832                     _Send_Instruction_Data:
   503                           	callstack 23
   504                           
   505                           ;incstack = 0
   506                           ;Send_Instruction_Data@Instruction stored from wreg
   507   001832  6E2A               	movwf	Send_Instruction_Data@Instruction^0,c
   508   001834                     
   509                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   510   001834  B02A               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   511   001836  D002               	bra	u565
   512   001838  988B               	bcf	139,4,c	;volatile
   513   00183A  D001               	bra	u566
   514   00183C                     u565:
   515   00183C  888B               	bsf	139,4,c	;volatile
   516   00183E                     u566:
   517   00183E                     
   518                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   519   00183E  3829               	swapf	Send_Instruction_Data@Data^0,w,c
   520   001840  0B0F               	andlw	15
   521   001842  ECE8  F00B         	call	_LCD_Instruction
   522   001846                     
   523                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
   524   001846  5029               	movf	Send_Instruction_Data@Data^0,w,c
   525   001848  ECE8  F00B         	call	_LCD_Instruction
   526   00184C  0012               	return		;funcret
   527   00184E                     __end_of_Send_Instruction_Data:
   528                           	callstack 0
   529                           
   530 ;; *************** function _LCD_Instruction *****************
   531 ;; Defined at:
   532 ;;		line 33 in file "LCD_Library.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  Instruction     1    wreg     unsigned char 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  Instruction     1   39[COMRAM] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;Total ram usage:        2 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 5
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_Send_Instruction_Data
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text3
   561   0017D0                     __ptext3:
   562                           	callstack 0
   563   0017D0                     _LCD_Instruction:
   564                           	callstack 23
   565                           
   566                           ;incstack = 0
   567                           ;LCD_Instruction@Instruction stored from wreg
   568   0017D0  6E28               	movwf	LCD_Instruction@Instruction^0,c
   569   0017D2                     
   570                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   571   0017D2  8A8B               	bsf	139,5,c	;volatile
   572   0017D4                     
   573                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   574   0017D4  0E4E               	movlw	78
   575   0017D6  6E27               	movwf	??_LCD_Instruction^0,c
   576   0017D8  0EEB               	movlw	235
   577   0017DA                     u637:
   578   0017DA  2EE8               	decfsz	wreg,f,c
   579   0017DC  D7FE               	bra	u637
   580   0017DE  2E27               	decfsz	??_LCD_Instruction^0,f,c
   581   0017E0  D7FC               	bra	u637
   582   0017E2  0000               	nop	
   583   0017E4                     
   584                           ;LCD_Library.c: 37:     LATD = Instruction;
   585   0017E4  C028  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   586   0017E8                     
   587                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   588   0017E8  0E4E               	movlw	78
   589   0017EA  6E27               	movwf	??_LCD_Instruction^0,c
   590   0017EC  0EEB               	movlw	235
   591   0017EE                     u647:
   592   0017EE  2EE8               	decfsz	wreg,f,c
   593   0017F0  D7FE               	bra	u647
   594   0017F2  2E27               	decfsz	??_LCD_Instruction^0,f,c
   595   0017F4  D7FC               	bra	u647
   596   0017F6  0000               	nop	
   597   0017F8                     
   598                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   599   0017F8  9A8B               	bcf	139,5,c	;volatile
   600   0017FA                     
   601                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   602   0017FA  0E4E               	movlw	78
   603   0017FC  6E27               	movwf	??_LCD_Instruction^0,c
   604   0017FE  0EEB               	movlw	235
   605   001800                     u657:
   606   001800  2EE8               	decfsz	wreg,f,c
   607   001802  D7FE               	bra	u657
   608   001804  2E27               	decfsz	??_LCD_Instruction^0,f,c
   609   001806  D7FC               	bra	u657
   610   001808  0000               	nop	
   611   00180A  0012               	return		;funcret
   612   00180C                     __end_of_LCD_Instruction:
   613                           	callstack 0
   614                           
   615 ;; *************** function _Configurations *****************
   616 ;; Defined at:
   617 ;;		line 77 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 5
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text4
   646   001768                     __ptext4:
   647                           	callstack 0
   648   001768                     _Configurations:
   649                           	callstack 25
   650   001768                     
   651                           ;main.c: 79:     OSCCON = 0x72;
   652   001768  0E72               	movlw	114
   653   00176A  6ED3               	movwf	211,c	;volatile
   654                           
   655                           ;main.c: 81:     ANSELC = 0;
   656   00176C  0E00               	movlw	0
   657   00176E  010F               	movlb	15	; () banked
   658   001770  6F3A               	movwf	58,b	;volatile
   659                           
   660                           ;main.c: 82:     ANSELD = 0;
   661   001772  0E00               	movlw	0
   662   001774  6F3B               	movwf	59,b	;volatile
   663                           
   664                           ;main.c: 83:     ANSELE = 0;
   665   001776  0E00               	movlw	0
   666   001778  6F3C               	movwf	60,b	;volatile
   667   00177A                     
   668                           ; BSR set to: 15
   669                           ;main.c: 86:     TRISCbits.RC4 = 0;
   670   00177A  9894               	bcf	148,4,c	;volatile
   671   00177C                     
   672                           ; BSR set to: 15
   673                           ;main.c: 87:     TRISCbits.RC5 = 0;
   674   00177C  9A94               	bcf	148,5,c	;volatile
   675                           
   676                           ;main.c: 88:     TRISD = 0;
   677   00177E  0E00               	movlw	0
   678   001780  6E95               	movwf	149,c	;volatile
   679                           
   680                           ;main.c: 89:     TRISE = 0;
   681   001782  0E00               	movlw	0
   682   001784  6E96               	movwf	150,c	;volatile
   683   001786                     
   684                           ; BSR set to: 15
   685                           ;main.c: 92:     LATCbits.LC4 = 0;
   686   001786  988B               	bcf	139,4,c	;volatile
   687   001788                     
   688                           ; BSR set to: 15
   689                           ;main.c: 93:     LATCbits.LC5 = 0;
   690   001788  9A8B               	bcf	139,5,c	;volatile
   691                           
   692                           ;main.c: 94:     LATD = 0;
   693   00178A  0E00               	movlw	0
   694   00178C  6E8C               	movwf	140,c	;volatile
   695                           
   696                           ;main.c: 95:     LATE = 0;
   697   00178E  0E00               	movlw	0
   698   001790  6E8D               	movwf	141,c	;volatile
   699   001792                     
   700                           ; BSR set to: 15
   701                           ;main.c: 98:     INTCONbits.GIE = 1;
   702   001792  8EF2               	bsf	242,7,c	;volatile
   703   001794                     
   704                           ; BSR set to: 15
   705                           ;main.c: 99:     INTCONbits.PEIE = 1;
   706   001794  8CF2               	bsf	242,6,c	;volatile
   707   001796                     
   708                           ; BSR set to: 15
   709                           ;main.c: 100:     RCONbits.IPEN = 1;
   710   001796  8ED0               	bsf	208,7,c	;volatile
   711   001798                     
   712                           ; BSR set to: 15
   713                           ;main.c: 102:     PIE1bits.RC1IE = 1;
   714   001798  8A9D               	bsf	157,5,c	;volatile
   715   00179A                     
   716                           ; BSR set to: 15
   717                           ;main.c: 103:     PIR1bits.RC1IF = 0;
   718   00179A  9A9E               	bcf	158,5,c	;volatile
   719                           
   720                           ;main.c: 106:     SPBRG = 103;
   721   00179C  0E67               	movlw	103
   722   00179E  6EAF               	movwf	175,c	;volatile
   723   0017A0                     
   724                           ; BSR set to: 15
   725                           ;main.c: 107:     TRISCbits.RC6 = 1;
   726   0017A0  8C94               	bsf	148,6,c	;volatile
   727   0017A2                     
   728                           ; BSR set to: 15
   729                           ;main.c: 108:     TRISCbits.RC7 = 1;
   730   0017A2  8E94               	bsf	148,7,c	;volatile
   731   0017A4                     
   732                           ; BSR set to: 15
   733                           ;main.c: 111:     TXSTA1bits.TX91 = 0;
   734   0017A4  9CAC               	bcf	172,6,c	;volatile
   735   0017A6                     
   736                           ; BSR set to: 15
   737                           ;main.c: 112:     TXSTA1bits.TXEN1 = 1;
   738   0017A6  8AAC               	bsf	172,5,c	;volatile
   739   0017A8                     
   740                           ; BSR set to: 15
   741                           ;main.c: 113:     TXSTA1bits.SYNC1 = 0;
   742   0017A8  98AC               	bcf	172,4,c	;volatile
   743   0017AA                     
   744                           ; BSR set to: 15
   745                           ;main.c: 114:     TXSTA1bits.BRGH1 = 1;
   746   0017AA  84AC               	bsf	172,2,c	;volatile
   747   0017AC                     
   748                           ; BSR set to: 15
   749                           ;main.c: 117:     RCSTAbits.SPEN1 = 1;
   750   0017AC  8EAB               	bsf	171,7,c	;volatile
   751   0017AE                     
   752                           ; BSR set to: 15
   753                           ;main.c: 118:     RCSTAbits.RX91 = 0;
   754   0017AE  9CAB               	bcf	171,6,c	;volatile
   755   0017B0                     
   756                           ; BSR set to: 15
   757                           ;main.c: 119:     RCSTAbits.CREN1 = 1;
   758   0017B0  88AB               	bsf	171,4,c	;volatile
   759   0017B2                     
   760                           ; BSR set to: 15
   761                           ;main.c: 122:     BAUDCON1bits.BRG16 = 0;
   762   0017B2  96B8               	bcf	184,3,c	;volatile
   763                           
   764                           ;main.c: 134:     PR2 = 0xF9;
   765   0017B4  0EF9               	movlw	249
   766   0017B6  6EBB               	movwf	187,c	;volatile
   767                           
   768                           ;main.c: 135:     T2CON = 0x00;
   769   0017B8  0E00               	movlw	0
   770   0017BA  6EBA               	movwf	186,c	;volatile
   771                           
   772                           ;main.c: 136:     CCP3CON = 0x00;
   773   0017BC  0E00               	movlw	0
   774   0017BE  6F5D               	movwf	93,b	;volatile
   775                           
   776                           ;main.c: 137:     CCPR3L = 0x00;
   777   0017C0  0E00               	movlw	0
   778   0017C2  6F5E               	movwf	94,b	;volatile
   779                           
   780                           ;main.c: 138:     CCP5CON = 0x00;
   781   0017C4  0E00               	movlw	0
   782   0017C6  6F54               	movwf	84,b	;volatile
   783                           
   784                           ;main.c: 139:     CCPR5L = 0x00;
   785   0017C8  0E00               	movlw	0
   786   0017CA  6F55               	movwf	85,b	;volatile
   787   0017CC                     
   788                           ; BSR set to: 15
   789                           ;main.c: 140:     T2CONbits.TMR2ON = 1;
   790   0017CC  84BA               	bsf	186,2,c	;volatile
   791   0017CE                     
   792                           ; BSR set to: 15
   793   0017CE  0012               	return		;funcret
   794   0017D0                     __end_of_Configurations:
   795                           	callstack 0
   796                           
   797 ;; *************** function _Interrupt *****************
   798 ;; Defined at:
   799 ;;		line 69 in file "main.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		None
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels used: 1
   819 ;; Hardware stack levels required when called: 4
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		Interrupt level 1
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	intcodelo
   828   000018                     __pintcodelo:
   829                           	callstack 0
   830   000018                     _Interrupt:
   831                           	callstack 23
   832                           
   833                           ; BSR set to: 15
   834                           ;incstack = 0
   835   000018  8036               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   836   00001A  CFE0 F026          	movff	bsr,??_Interrupt
   837   00001E  C026  FFE0         	movff	??_Interrupt,bsr
   838   000022  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   839   000024  0010               	retfie	
   840   000026                     __end_of_Interrupt:
   841                           	callstack 0
   842                           
   843 ;; *************** function _Interrupt_Rx *****************
   844 ;; Defined at:
   845 ;;		line 57 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 3
   866 ;; This function calls:
   867 ;;		_Receive_Interrupt
   868 ;; This function is called by:
   869 ;;		Interrupt level 2
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	intcode
   874   000008                     __pintcode:
   875                           	callstack 0
   876   000008                     _Interrupt_Rx:
   877                           	callstack 23
   878                           
   879                           ;incstack = 0
   880   000008  8236               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   881   00000A  EF06  F00C         	goto	int_func
   882                           
   883                           	psect	intcode_body
   884   00180C                     __pintcode_body:
   885                           	callstack 23
   886   00180C                     int_func:
   887                           	callstack 23
   888   00180C  CFF3 F024          	movff	prodl,??_Interrupt_Rx
   889   001810  CFF4 F025          	movff	prodh,??_Interrupt_Rx+1
   890   001814                     
   891                           ;main.c: 59:     if (PIR1bits.RC1IF) {
   892   001814  AA9E               	btfss	158,5,c	;volatile
   893   001816  EF0F  F00C         	goto	i2u57_41
   894   00181A  EF11  F00C         	goto	i2u57_40
   895   00181E                     i2u57_41:
   896   00181E  EF13  F00C         	goto	i2l88
   897   001822                     i2u57_40:
   898   001822                     
   899                           ;main.c: 61:         Receive_Interrupt();
   900   001822  EC7E  F00B         	call	_Receive_Interrupt	;wreg free
   901   001826                     i2l88:
   902   001826  C025  FFF4         	movff	??_Interrupt_Rx+1,prodh
   903   00182A  C024  FFF3         	movff	??_Interrupt_Rx,prodl
   904   00182E  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   905   001830  0011               	retfie		f
   906   001832                     __end_of_Interrupt_Rx:
   907                           	callstack 0
   908                           
   909 ;; *************** function _Receive_Interrupt *****************
   910 ;; Defined at:
   911 ;;		line 144 in file "main.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;Total ram usage:        2 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 2
   932 ;; This function calls:
   933 ;;		_Send_PWM_Motors
   934 ;; This function is called by:
   935 ;;		_Interrupt_Rx
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text7
   940   0016FC                     __ptext7:
   941                           	callstack 0
   942   0016FC                     _Receive_Interrupt:
   943                           	callstack 23
   944   0016FC                     
   945                           ;main.c: 146:     Rx_Buffer = RCREG1;
   946   0016FC  CFAE F035          	movff	4014,_Rx_Buffer	;volatile
   947                           
   948                           ;main.c: 148:     switch (Rx_Buffer) {
   949   001700  EFAC  F00B         	goto	i2l1347
   950   001704                     i2l1333:
   951                           
   952                           ;main.c: 152:             Send_PWM_Motors(1023.00, 1023.00);
   953   001704  0E00               	movlw	0
   954   001706  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
   955   001708  0EC0               	movlw	192
   956   00170A  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
   957   00170C  0E7F               	movlw	127
   958   00170E  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
   959   001710  0E44               	movlw	68
   960   001712  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
   961   001714  0E00               	movlw	0
   962   001716  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
   963   001718  0EC0               	movlw	192
   964   00171A  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
   965   00171C  0E7F               	movlw	127
   966   00171E  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
   967   001720  0E44               	movlw	68
   968   001722  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
   969   001724  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
   970   001728                     
   971                           ;main.c: 153:             LATDbits.LD4 = 0;
   972   001728  988C               	bcf	140,4,c	;volatile
   973   00172A                     
   974                           ;main.c: 154:             LATDbits.LD5 = 1;
   975   00172A  8A8C               	bsf	140,5,c	;volatile
   976   00172C                     
   977                           ;main.c: 155:             LATDbits.LD6 = 1;
   978   00172C  8C8C               	bsf	140,6,c	;volatile
   979   00172E                     
   980                           ;main.c: 156:             LATDbits.LD7 = 0;
   981   00172E  9E8C               	bcf	140,7,c	;volatile
   982   001730                     
   983                           ;main.c: 158:             _delay((unsigned long)((5000)*(16000000/4000.0)));
   984   001730  0E66               	movlw	102
   985   001732  6E23               	movwf	(??_Receive_Interrupt+1)^0,c
   986   001734  0E76               	movlw	118
   987   001736  6E22               	movwf	??_Receive_Interrupt^0,c
   988   001738  0EC1               	movlw	193
   989   00173A                     i2u66_47:
   990   00173A  2EE8               	decfsz	wreg,f,c
   991   00173C  D7FE               	bra	i2u66_47
   992   00173E  2E22               	decfsz	??_Receive_Interrupt^0,f,c
   993   001740  D7FC               	bra	i2u66_47
   994   001742  2E23               	decfsz	(??_Receive_Interrupt+1)^0,f,c
   995   001744  D7FA               	bra	i2u66_47
   996   001746  0000               	nop	
   997                           
   998                           ;main.c: 160:             break;
   999   001748  EFB3  F00B         	goto	i2l103
  1000   00174C                     i2l102:
  1001                           
  1002                           ;main.c: 164:             LATDbits.LD4 = 0;
  1003   00174C  988C               	bcf	140,4,c	;volatile
  1004                           
  1005                           ;main.c: 165:             LATDbits.LD5 = 0;
  1006   00174E  9A8C               	bcf	140,5,c	;volatile
  1007                           
  1008                           ;main.c: 166:             LATDbits.LD6 = 0;
  1009   001750  9C8C               	bcf	140,6,c	;volatile
  1010                           
  1011                           ;main.c: 167:             LATDbits.LD7 = 0;
  1012   001752  9E8C               	bcf	140,7,c	;volatile
  1013                           
  1014                           ;main.c: 169:             break;
  1015   001754  EFB3  F00B         	goto	i2l103
  1016   001758                     i2l1347:
  1017   001758  5035               	movf	_Rx_Buffer^0,w,c
  1018                           
  1019                           ; Switch size 1, requested type "simple"
  1020                           ; Number of cases is 1, Range of values is 77 to 77
  1021                           ; switch strategies available:
  1022                           ; Name         Instructions Cycles
  1023                           ; simple_byte            4     3 (average)
  1024                           ;	Chosen strategy is simple_byte
  1025   00175A  0A4D               	xorlw	77	; case 77
  1026   00175C  B4D8               	btfsc	status,2,c
  1027   00175E  EF82  F00B         	goto	i2l1333
  1028   001762  EFA6  F00B         	goto	i2l102
  1029   001766                     i2l103:
  1030   001766  0012               	return		;funcret
  1031   001768                     __end_of_Receive_Interrupt:
  1032                           	callstack 0
  1033                           
  1034 ;; *************** function _Send_PWM_Motors *****************
  1035 ;; Defined at:
  1036 ;;		line 177 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  PWM_RMotor      4   25[COMRAM] float 
  1039 ;;  PWM_LMotor      4   29[COMRAM] float 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1051 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;Total ram usage:        8 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 1
  1058 ;; This function calls:
  1059 ;;		___flmul
  1060 ;;		___fltol
  1061 ;; This function is called by:
  1062 ;;		_Receive_Interrupt
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text8
  1067   00144E                     __ptext8:
  1068                           	callstack 0
  1069   00144E                     _Send_PWM_Motors:
  1070                           	callstack 23
  1071   00144E                     
  1072                           ;main.c: 179:     Duty_Cycle1 = (float) (PWM_RMotor * (1000.00 / 1023.00));
  1073   00144E  C01A  F001         	movff	Send_PWM_Motors@PWM_RMotor,___flmul@b
  1074   001452  C01B  F002         	movff	Send_PWM_Motors@PWM_RMotor+1,___flmul@b+1
  1075   001456  C01C  F003         	movff	Send_PWM_Motors@PWM_RMotor+2,___flmul@b+2
  1076   00145A  C01D  F004         	movff	Send_PWM_Motors@PWM_RMotor+3,___flmul@b+3
  1077   00145E  0E90               	movlw	144
  1078   001460  6E05               	movwf	___flmul@a^0,c
  1079   001462  0E3E               	movlw	62
  1080   001464  6E06               	movwf	(___flmul@a+1)^0,c
  1081   001466  0E7A               	movlw	122
  1082   001468  6E07               	movwf	(___flmul@a+2)^0,c
  1083   00146A  0E3F               	movlw	63
  1084   00146C  6E08               	movwf	(___flmul@a+3)^0,c
  1085   00146E  EC12  F008         	call	___flmul	;wreg free
  1086   001472  C001  F031         	movff	?___flmul,_Duty_Cycle1
  1087   001476  C002  F032         	movff	?___flmul+1,_Duty_Cycle1+1
  1088   00147A  C003  F033         	movff	?___flmul+2,_Duty_Cycle1+2
  1089   00147E  C004  F034         	movff	?___flmul+3,_Duty_Cycle1+3
  1090   001482                     
  1091                           ;main.c: 180:     CCPR3L = (int) Duty_Cycle1 >> 2;
  1092   001482  C031  F001         	movff	_Duty_Cycle1,___fltol@f1
  1093   001486  C032  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1094   00148A  C033  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1095   00148E  C034  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1096   001492  ECAA  F00A         	call	___fltol	;wreg free
  1097   001496  3402               	rlcf	(?___fltol+1)^0,w,c
  1098   001498  3202               	rrcf	(?___fltol+1)^0,f,c
  1099   00149A  3201               	rrcf	?___fltol^0,f,c
  1100   00149C  3402               	rlcf	(?___fltol+1)^0,w,c
  1101   00149E  3202               	rrcf	(?___fltol+1)^0,f,c
  1102   0014A0  3201               	rrcf	?___fltol^0,f,c
  1103   0014A2  5001               	movf	?___fltol^0,w,c
  1104   0014A4  010F               	movlb	15	; () banked
  1105   0014A6  6F5E               	movwf	94,b	;volatile
  1106   0014A8                     
  1107                           ; BSR set to: 15
  1108                           ;main.c: 181:     CCP3CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4));
  1109   0014A8  C031  F001         	movff	_Duty_Cycle1,___fltol@f1
  1110   0014AC  C032  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1111   0014B0  C033  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1112   0014B4  C034  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1113   0014B8  ECAA  F00A         	call	___fltol	;wreg free
  1114   0014BC  0E03               	movlw	3
  1115   0014BE  1601               	andwf	?___fltol^0,f,c
  1116   0014C0  3A01               	swapf	?___fltol^0,f,c
  1117   0014C2  0EF0               	movlw	240
  1118   0014C4  1601               	andwf	?___fltol^0,f,c
  1119   0014C6  010F               	movlb	15	; () banked
  1120   0014C8  515D               	movf	93,w,b	;volatile
  1121   0014CA  0B0F               	andlw	15
  1122   0014CC  1001               	iorwf	?___fltol^0,w,c
  1123   0014CE  6F5D               	movwf	93,b	;volatile
  1124                           
  1125                           ;main.c: 183:     Duty_Cycle2 = (float) (PWM_LMotor * (1000.00 / 1023.00));
  1126   0014D0  C01E  F001         	movff	Send_PWM_Motors@PWM_LMotor,___flmul@b
  1127   0014D4  C01F  F002         	movff	Send_PWM_Motors@PWM_LMotor+1,___flmul@b+1
  1128   0014D8  C020  F003         	movff	Send_PWM_Motors@PWM_LMotor+2,___flmul@b+2
  1129   0014DC  C021  F004         	movff	Send_PWM_Motors@PWM_LMotor+3,___flmul@b+3
  1130   0014E0  0E90               	movlw	144
  1131   0014E2  6E05               	movwf	___flmul@a^0,c
  1132   0014E4  0E3E               	movlw	62
  1133   0014E6  6E06               	movwf	(___flmul@a+1)^0,c
  1134   0014E8  0E7A               	movlw	122
  1135   0014EA  6E07               	movwf	(___flmul@a+2)^0,c
  1136   0014EC  0E3F               	movlw	63
  1137   0014EE  6E08               	movwf	(___flmul@a+3)^0,c
  1138   0014F0  EC12  F008         	call	___flmul	;wreg free
  1139   0014F4  C001  F02D         	movff	?___flmul,_Duty_Cycle2
  1140   0014F8  C002  F02E         	movff	?___flmul+1,_Duty_Cycle2+1
  1141   0014FC  C003  F02F         	movff	?___flmul+2,_Duty_Cycle2+2
  1142   001500  C004  F030         	movff	?___flmul+3,_Duty_Cycle2+3
  1143   001504                     
  1144                           ;main.c: 184:     CCPR5L = (int) Duty_Cycle2 >> 2;
  1145   001504  C02D  F001         	movff	_Duty_Cycle2,___fltol@f1
  1146   001508  C02E  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1147   00150C  C02F  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1148   001510  C030  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1149   001514  ECAA  F00A         	call	___fltol	;wreg free
  1150   001518  3402               	rlcf	(?___fltol+1)^0,w,c
  1151   00151A  3202               	rrcf	(?___fltol+1)^0,f,c
  1152   00151C  3201               	rrcf	?___fltol^0,f,c
  1153   00151E  3402               	rlcf	(?___fltol+1)^0,w,c
  1154   001520  3202               	rrcf	(?___fltol+1)^0,f,c
  1155   001522  3201               	rrcf	?___fltol^0,f,c
  1156   001524  5001               	movf	?___fltol^0,w,c
  1157   001526  010F               	movlb	15	; () banked
  1158   001528  6F55               	movwf	85,b	;volatile
  1159   00152A                     
  1160                           ; BSR set to: 15
  1161                           ;main.c: 185:     CCP5CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4));
  1162   00152A  C02D  F001         	movff	_Duty_Cycle2,___fltol@f1
  1163   00152E  C02E  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1164   001532  C02F  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1165   001536  C030  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1166   00153A  ECAA  F00A         	call	___fltol	;wreg free
  1167   00153E  0E03               	movlw	3
  1168   001540  1601               	andwf	?___fltol^0,f,c
  1169   001542  3A01               	swapf	?___fltol^0,f,c
  1170   001544  0EF0               	movlw	240
  1171   001546  1601               	andwf	?___fltol^0,f,c
  1172   001548  010F               	movlb	15	; () banked
  1173   00154A  515D               	movf	93,w,b	;volatile
  1174   00154C  0B0F               	andlw	15
  1175   00154E  1001               	iorwf	?___fltol^0,w,c
  1176   001550  6F54               	movwf	84,b	;volatile
  1177   001552                     
  1178                           ; BSR set to: 15
  1179   001552  0012               	return		;funcret
  1180   001554                     __end_of_Send_PWM_Motors:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function ___fltol *****************
  1184 ;; Defined at:
  1185 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  f1              4    0[COMRAM] void 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  exp1            1    9[COMRAM] unsigned char 
  1190 ;;  sign1           1    8[COMRAM] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  4    0[COMRAM] long 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;Total ram usage:       10 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_Send_PWM_Motors
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text9
  1214   001554                     __ptext9:
  1215                           	callstack 0
  1216   001554                     ___fltol:
  1217                           	callstack 23
  1218   001554  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1219   001556  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1220   001558  6E0A               	movwf	___fltol@exp1^0,c
  1221   00155A  500A               	movf	___fltol@exp1^0,w,c
  1222   00155C  A4D8               	btfss	status,2,c
  1223   00155E  EFB3  F00A         	goto	i2u49_41
  1224   001562  EFB5  F00A         	goto	i2u49_40
  1225   001566                     i2u49_41:
  1226   001566  EFBF  F00A         	goto	i2l1255
  1227   00156A                     i2u49_40:
  1228   00156A                     i2l1251:
  1229   00156A  0E00               	movlw	0
  1230   00156C  6E01               	movwf	?___fltol^0,c
  1231   00156E  0E00               	movlw	0
  1232   001570  6E02               	movwf	(?___fltol+1)^0,c
  1233   001572  0E00               	movlw	0
  1234   001574  6E03               	movwf	(?___fltol+2)^0,c
  1235   001576  0E00               	movlw	0
  1236   001578  6E04               	movwf	(?___fltol+3)^0,c
  1237   00157A  EF2C  F00B         	goto	i2l437
  1238   00157E                     i2l1255:
  1239   00157E  C001  F005         	movff	___fltol@f1,??___fltol
  1240   001582  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1241   001586  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1242   00158A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1243   00158E  0E20               	movlw	32
  1244   001590  EFCF  F00A         	goto	i2u50_40
  1245   001594                     i2u50_45:
  1246   001594  90D8               	bcf	status,0,c
  1247   001596  3208               	rrcf	(??___fltol+3)^0,f,c
  1248   001598  3207               	rrcf	(??___fltol+2)^0,f,c
  1249   00159A  3206               	rrcf	(??___fltol+1)^0,f,c
  1250   00159C  3205               	rrcf	??___fltol^0,f,c
  1251   00159E                     i2u50_40:
  1252   00159E  2EE8               	decfsz	wreg,f,c
  1253   0015A0  EFCA  F00A         	goto	i2u50_45
  1254   0015A4  5005               	movf	??___fltol^0,w,c
  1255   0015A6  6E09               	movwf	___fltol@sign1^0,c
  1256   0015A8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1257   0015AA  0EFF               	movlw	255
  1258   0015AC  1601               	andwf	___fltol@f1^0,f,c
  1259   0015AE  0EFF               	movlw	255
  1260   0015B0  1602               	andwf	(___fltol@f1+1)^0,f,c
  1261   0015B2  0EFF               	movlw	255
  1262   0015B4  1603               	andwf	(___fltol@f1+2)^0,f,c
  1263   0015B6  0E00               	movlw	0
  1264   0015B8  1604               	andwf	(___fltol@f1+3)^0,f,c
  1265   0015BA  0E96               	movlw	150
  1266   0015BC  5E0A               	subwf	___fltol@exp1^0,f,c
  1267   0015BE  BE0A               	btfsc	___fltol@exp1^0,7,c
  1268   0015C0  EFE6  F00A         	goto	i2u51_40
  1269   0015C4  EFE4  F00A         	goto	i2u51_41
  1270   0015C8                     i2u51_41:
  1271   0015C8  EFFC  F00A         	goto	i2l1275
  1272   0015CC                     i2u51_40:
  1273   0015CC  500A               	movf	___fltol@exp1^0,w,c
  1274   0015CE  0A80               	xorlw	128
  1275   0015D0  0F97               	addlw	151
  1276   0015D2  B0D8               	btfsc	status,0,c
  1277   0015D4  EFEE  F00A         	goto	i2u52_41
  1278   0015D8  EFF0  F00A         	goto	i2u52_40
  1279   0015DC                     i2u52_41:
  1280   0015DC  EFF2  F00A         	goto	i2l1271
  1281   0015E0                     i2u52_40:
  1282   0015E0  EFB5  F00A         	goto	i2l1251
  1283   0015E4                     i2l1271:
  1284   0015E4  90D8               	bcf	status,0,c
  1285   0015E6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1286   0015E8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1287   0015EA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1288   0015EC  3201               	rrcf	___fltol@f1^0,f,c
  1289   0015EE  3E0A               	incfsz	___fltol@exp1^0,f,c
  1290   0015F0  EFF2  F00A         	goto	i2l1271
  1291   0015F4  EF14  F00B         	goto	i2l1285
  1292   0015F8                     i2l1275:
  1293   0015F8  0E1F               	movlw	31
  1294   0015FA  640A               	cpfsgt	___fltol@exp1^0,c
  1295   0015FC  EF02  F00B         	goto	i2u53_41
  1296   001600  EF04  F00B         	goto	i2u53_40
  1297   001604                     i2u53_41:
  1298   001604  EF0C  F00B         	goto	i2l1283
  1299   001608                     i2u53_40:
  1300   001608  EFB5  F00A         	goto	i2l1251
  1301   00160C                     i2l1281:
  1302   00160C  90D8               	bcf	status,0,c
  1303   00160E  3601               	rlcf	___fltol@f1^0,f,c
  1304   001610  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1305   001612  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1306   001614  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1307   001616  060A               	decf	___fltol@exp1^0,f,c
  1308   001618                     i2l1283:
  1309   001618  500A               	movf	___fltol@exp1^0,w,c
  1310   00161A  A4D8               	btfss	status,2,c
  1311   00161C  EF12  F00B         	goto	i2u54_41
  1312   001620  EF14  F00B         	goto	i2u54_40
  1313   001624                     i2u54_41:
  1314   001624  EF06  F00B         	goto	i2l1281
  1315   001628                     i2u54_40:
  1316   001628                     i2l1285:
  1317   001628  5009               	movf	___fltol@sign1^0,w,c
  1318   00162A  B4D8               	btfsc	status,2,c
  1319   00162C  EF1A  F00B         	goto	i2u55_41
  1320   001630  EF1C  F00B         	goto	i2u55_40
  1321   001634                     i2u55_41:
  1322   001634  EF24  F00B         	goto	i2l1289
  1323   001638                     i2u55_40:
  1324   001638  1E04               	comf	(___fltol@f1+3)^0,f,c
  1325   00163A  1E03               	comf	(___fltol@f1+2)^0,f,c
  1326   00163C  1E02               	comf	(___fltol@f1+1)^0,f,c
  1327   00163E  6C01               	negf	___fltol@f1^0,c
  1328   001640  0E00               	movlw	0
  1329   001642  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1330   001644  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1331   001646  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1332   001648                     i2l1289:
  1333   001648  C001  F001         	movff	___fltol@f1,?___fltol
  1334   00164C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1335   001650  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1336   001654  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1337   001658                     i2l437:
  1338   001658  0012               	return		;funcret
  1339   00165A                     __end_of___fltol:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function ___flmul *****************
  1343 ;; Defined at:
  1344 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  b               4    0[COMRAM] long 
  1347 ;;  a               4    4[COMRAM] long 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  prod            4   19[COMRAM] struct .
  1350 ;;  grs             4   13[COMRAM] unsigned long 
  1351 ;;  temp            2   23[COMRAM] struct .
  1352 ;;  bexp            1   18[COMRAM] unsigned char 
  1353 ;;  aexp            1   17[COMRAM] unsigned char 
  1354 ;;  sign            1   12[COMRAM] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  4    0[COMRAM] unsigned char 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0, prodl, prodh
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:       25 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_Send_PWM_Motors
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text10
  1378   001024                     __ptext10:
  1379                           	callstack 0
  1380   001024                     ___flmul:
  1381                           	callstack 23
  1382   001024  5004               	movf	(___flmul@b+3)^0,w,c
  1383   001026  0B80               	andlw	128
  1384   001028  6E0D               	movwf	___flmul@sign^0,c
  1385   00102A  5004               	movf	(___flmul@b+3)^0,w,c
  1386   00102C  2404               	addwf	(___flmul@b+3)^0,w,c
  1387   00102E  6E13               	movwf	___flmul@bexp^0,c
  1388   001030  AE03               	btfss	(___flmul@b+2)^0,7,c
  1389   001032  EF1D  F008         	goto	i2u30_41
  1390   001036  EF1F  F008         	goto	i2u30_40
  1391   00103A                     i2u30_41:
  1392   00103A  EF20  F008         	goto	i2l1125
  1393   00103E                     i2u30_40:
  1394   00103E  8013               	bsf	___flmul@bexp^0,0,c
  1395   001040                     i2l1125:
  1396   001040  5013               	movf	___flmul@bexp^0,w,c
  1397   001042  B4D8               	btfsc	status,2,c
  1398   001044  EF26  F008         	goto	i2u31_41
  1399   001048  EF28  F008         	goto	i2u31_40
  1400   00104C                     i2u31_41:
  1401   00104C  EF3B  F008         	goto	i2l1133
  1402   001050                     i2u31_40:
  1403   001050  2813               	incf	___flmul@bexp^0,w,c
  1404   001052  A4D8               	btfss	status,2,c
  1405   001054  EF2E  F008         	goto	i2u32_41
  1406   001058  EF30  F008         	goto	i2u32_40
  1407   00105C                     i2u32_41:
  1408   00105C  EF38  F008         	goto	i2l1131
  1409   001060                     i2u32_40:
  1410   001060  0E00               	movlw	0
  1411   001062  6E01               	movwf	___flmul@b^0,c
  1412   001064  0E00               	movlw	0
  1413   001066  6E02               	movwf	(___flmul@b+1)^0,c
  1414   001068  0E00               	movlw	0
  1415   00106A  6E03               	movwf	(___flmul@b+2)^0,c
  1416   00106C  0E00               	movlw	0
  1417   00106E  6E04               	movwf	(___flmul@b+3)^0,c
  1418   001070                     i2l1131:
  1419   001070  8E03               	bsf	(___flmul@b+2)^0,7,c
  1420   001072  EF43  F008         	goto	i2l1135
  1421   001076                     i2l1133:
  1422   001076  0E00               	movlw	0
  1423   001078  6E01               	movwf	___flmul@b^0,c
  1424   00107A  0E00               	movlw	0
  1425   00107C  6E02               	movwf	(___flmul@b+1)^0,c
  1426   00107E  0E00               	movlw	0
  1427   001080  6E03               	movwf	(___flmul@b+2)^0,c
  1428   001082  0E00               	movlw	0
  1429   001084  6E04               	movwf	(___flmul@b+3)^0,c
  1430   001086                     i2l1135:
  1431   001086  5008               	movf	(___flmul@a+3)^0,w,c
  1432   001088  0B80               	andlw	128
  1433   00108A  1A0D               	xorwf	___flmul@sign^0,f,c
  1434   00108C  5008               	movf	(___flmul@a+3)^0,w,c
  1435   00108E  2408               	addwf	(___flmul@a+3)^0,w,c
  1436   001090  6E12               	movwf	___flmul@aexp^0,c
  1437   001092  AE07               	btfss	(___flmul@a+2)^0,7,c
  1438   001094  EF4E  F008         	goto	i2u33_41
  1439   001098  EF50  F008         	goto	i2u33_40
  1440   00109C                     i2u33_41:
  1441   00109C  EF51  F008         	goto	i2l1143
  1442   0010A0                     i2u33_40:
  1443   0010A0  8012               	bsf	___flmul@aexp^0,0,c
  1444   0010A2                     i2l1143:
  1445   0010A2  5012               	movf	___flmul@aexp^0,w,c
  1446   0010A4  B4D8               	btfsc	status,2,c
  1447   0010A6  EF57  F008         	goto	i2u34_41
  1448   0010AA  EF59  F008         	goto	i2u34_40
  1449   0010AE                     i2u34_41:
  1450   0010AE  EF6C  F008         	goto	i2l1151
  1451   0010B2                     i2u34_40:
  1452   0010B2  2812               	incf	___flmul@aexp^0,w,c
  1453   0010B4  A4D8               	btfss	status,2,c
  1454   0010B6  EF5F  F008         	goto	i2u35_41
  1455   0010BA  EF61  F008         	goto	i2u35_40
  1456   0010BE                     i2u35_41:
  1457   0010BE  EF69  F008         	goto	i2l1149
  1458   0010C2                     i2u35_40:
  1459   0010C2  0E00               	movlw	0
  1460   0010C4  6E05               	movwf	___flmul@a^0,c
  1461   0010C6  0E00               	movlw	0
  1462   0010C8  6E06               	movwf	(___flmul@a+1)^0,c
  1463   0010CA  0E00               	movlw	0
  1464   0010CC  6E07               	movwf	(___flmul@a+2)^0,c
  1465   0010CE  0E00               	movlw	0
  1466   0010D0  6E08               	movwf	(___flmul@a+3)^0,c
  1467   0010D2                     i2l1149:
  1468   0010D2  8E07               	bsf	(___flmul@a+2)^0,7,c
  1469   0010D4  EF74  F008         	goto	i2l754
  1470   0010D8                     i2l1151:
  1471   0010D8  0E00               	movlw	0
  1472   0010DA  6E05               	movwf	___flmul@a^0,c
  1473   0010DC  0E00               	movlw	0
  1474   0010DE  6E06               	movwf	(___flmul@a+1)^0,c
  1475   0010E0  0E00               	movlw	0
  1476   0010E2  6E07               	movwf	(___flmul@a+2)^0,c
  1477   0010E4  0E00               	movlw	0
  1478   0010E6  6E08               	movwf	(___flmul@a+3)^0,c
  1479   0010E8                     i2l754:
  1480   0010E8  5012               	movf	___flmul@aexp^0,w,c
  1481   0010EA  B4D8               	btfsc	status,2,c
  1482   0010EC  EF7A  F008         	goto	i2u36_41
  1483   0010F0  EF7C  F008         	goto	i2u36_40
  1484   0010F4                     i2u36_41:
  1485   0010F4  EF84  F008         	goto	i2l1155
  1486   0010F8                     i2u36_40:
  1487   0010F8  5013               	movf	___flmul@bexp^0,w,c
  1488   0010FA  A4D8               	btfss	status,2,c
  1489   0010FC  EF82  F008         	goto	i2u37_41
  1490   001100  EF84  F008         	goto	i2u37_40
  1491   001104                     i2u37_41:
  1492   001104  EF8E  F008         	goto	i2l1159
  1493   001108                     i2u37_40:
  1494   001108                     i2l1155:
  1495   001108  0E00               	movlw	0
  1496   00110A  6E01               	movwf	?___flmul^0,c
  1497   00110C  0E00               	movlw	0
  1498   00110E  6E02               	movwf	(?___flmul+1)^0,c
  1499   001110  0E00               	movlw	0
  1500   001112  6E03               	movwf	(?___flmul+2)^0,c
  1501   001114  0E00               	movlw	0
  1502   001116  6E04               	movwf	(?___flmul+3)^0,c
  1503   001118  EF26  F00A         	goto	i2l758
  1504   00111C                     i2l1159:
  1505   00111C  5007               	movf	(___flmul@a+2)^0,w,c
  1506   00111E  0201               	mulwf	___flmul@b^0,c
  1507   001120  CFF3 F018          	movff	prodl,___flmul@temp
  1508   001124  CFF4 F019          	movff	prodh,___flmul@temp+1
  1509   001128  5018               	movf	___flmul@temp^0,w,c
  1510   00112A  6E0E               	movwf	___flmul@grs^0,c
  1511   00112C  6A0F               	clrf	(___flmul@grs+1)^0,c
  1512   00112E  6A10               	clrf	(___flmul@grs+2)^0,c
  1513   001130  6A11               	clrf	(___flmul@grs+3)^0,c
  1514   001132  5019               	movf	(___flmul@temp+1)^0,w,c
  1515   001134  6E14               	movwf	___flmul@prod^0,c
  1516   001136  6A15               	clrf	(___flmul@prod+1)^0,c
  1517   001138  6A16               	clrf	(___flmul@prod+2)^0,c
  1518   00113A  6A17               	clrf	(___flmul@prod+3)^0,c
  1519   00113C  5006               	movf	(___flmul@a+1)^0,w,c
  1520   00113E  0202               	mulwf	(___flmul@b+1)^0,c
  1521   001140  CFF3 F018          	movff	prodl,___flmul@temp
  1522   001144  CFF4 F019          	movff	prodh,___flmul@temp+1
  1523   001148  5018               	movf	___flmul@temp^0,w,c
  1524   00114A  260E               	addwf	___flmul@grs^0,f,c
  1525   00114C  0E00               	movlw	0
  1526   00114E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1527   001150  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1528   001152  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1529   001154  5019               	movf	(___flmul@temp+1)^0,w,c
  1530   001156  2614               	addwf	___flmul@prod^0,f,c
  1531   001158  0E00               	movlw	0
  1532   00115A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1533   00115C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1534   00115E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1535   001160  5005               	movf	___flmul@a^0,w,c
  1536   001162  0203               	mulwf	(___flmul@b+2)^0,c
  1537   001164  CFF3 F018          	movff	prodl,___flmul@temp
  1538   001168  CFF4 F019          	movff	prodh,___flmul@temp+1
  1539   00116C  5018               	movf	___flmul@temp^0,w,c
  1540   00116E  260E               	addwf	___flmul@grs^0,f,c
  1541   001170  0E00               	movlw	0
  1542   001172  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1543   001174  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1544   001176  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1545   001178  5019               	movf	(___flmul@temp+1)^0,w,c
  1546   00117A  2614               	addwf	___flmul@prod^0,f,c
  1547   00117C  0E00               	movlw	0
  1548   00117E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1549   001180  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1550   001182  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1551   001184  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1552   001188  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1553   00118C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1554   001190  6A0E               	clrf	___flmul@grs^0,c
  1555   001192  5005               	movf	___flmul@a^0,w,c
  1556   001194  0202               	mulwf	(___flmul@b+1)^0,c
  1557   001196  CFF3 F018          	movff	prodl,___flmul@temp
  1558   00119A  CFF4 F019          	movff	prodh,___flmul@temp+1
  1559   00119E  5018               	movf	___flmul@temp^0,w,c
  1560   0011A0  260E               	addwf	___flmul@grs^0,f,c
  1561   0011A2  5019               	movf	(___flmul@temp+1)^0,w,c
  1562   0011A4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1563   0011A6  0E00               	movlw	0
  1564   0011A8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1565   0011AA  0E00               	movlw	0
  1566   0011AC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1567   0011AE  5006               	movf	(___flmul@a+1)^0,w,c
  1568   0011B0  0201               	mulwf	___flmul@b^0,c
  1569   0011B2  CFF3 F018          	movff	prodl,___flmul@temp
  1570   0011B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  1571   0011BA  5018               	movf	___flmul@temp^0,w,c
  1572   0011BC  260E               	addwf	___flmul@grs^0,f,c
  1573   0011BE  5019               	movf	(___flmul@temp+1)^0,w,c
  1574   0011C0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1575   0011C2  0E00               	movlw	0
  1576   0011C4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1577   0011C6  0E00               	movlw	0
  1578   0011C8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1579   0011CA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1580   0011CE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1581   0011D2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1582   0011D6  6A0E               	clrf	___flmul@grs^0,c
  1583   0011D8  5005               	movf	___flmul@a^0,w,c
  1584   0011DA  0201               	mulwf	___flmul@b^0,c
  1585   0011DC  CFF3 F018          	movff	prodl,___flmul@temp
  1586   0011E0  CFF4 F019          	movff	prodh,___flmul@temp+1
  1587   0011E4  5018               	movf	___flmul@temp^0,w,c
  1588   0011E6  260E               	addwf	___flmul@grs^0,f,c
  1589   0011E8  5019               	movf	(___flmul@temp+1)^0,w,c
  1590   0011EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1591   0011EC  0E00               	movlw	0
  1592   0011EE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1593   0011F0  0E00               	movlw	0
  1594   0011F2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1595   0011F4  5007               	movf	(___flmul@a+2)^0,w,c
  1596   0011F6  0202               	mulwf	(___flmul@b+1)^0,c
  1597   0011F8  CFF3 F018          	movff	prodl,___flmul@temp
  1598   0011FC  CFF4 F019          	movff	prodh,___flmul@temp+1
  1599   001200  5018               	movf	___flmul@temp^0,w,c
  1600   001202  2614               	addwf	___flmul@prod^0,f,c
  1601   001204  5019               	movf	(___flmul@temp+1)^0,w,c
  1602   001206  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1603   001208  0E00               	movlw	0
  1604   00120A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1605   00120C  0E00               	movlw	0
  1606   00120E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1607   001210  5006               	movf	(___flmul@a+1)^0,w,c
  1608   001212  0203               	mulwf	(___flmul@b+2)^0,c
  1609   001214  CFF3 F018          	movff	prodl,___flmul@temp
  1610   001218  CFF4 F019          	movff	prodh,___flmul@temp+1
  1611   00121C  5018               	movf	___flmul@temp^0,w,c
  1612   00121E  2614               	addwf	___flmul@prod^0,f,c
  1613   001220  5019               	movf	(___flmul@temp+1)^0,w,c
  1614   001222  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1615   001224  0E00               	movlw	0
  1616   001226  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1617   001228  0E00               	movlw	0
  1618   00122A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1619   00122C  5007               	movf	(___flmul@a+2)^0,w,c
  1620   00122E  0203               	mulwf	(___flmul@b+2)^0,c
  1621   001230  CFF3 F018          	movff	prodl,___flmul@temp
  1622   001234  CFF4 F019          	movff	prodh,___flmul@temp+1
  1623   001238  5018               	movf	___flmul@temp^0,w,c
  1624   00123A  6E09               	movwf	??___flmul^0,c
  1625   00123C  5019               	movf	(___flmul@temp+1)^0,w,c
  1626   00123E  6E0A               	movwf	(??___flmul+1)^0,c
  1627   001240  6A0B               	clrf	(??___flmul+2)^0,c
  1628   001242  6A0C               	clrf	(??___flmul+3)^0,c
  1629   001244  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  1630   001248  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  1631   00124C  C009  F00A         	movff	??___flmul,??___flmul+1
  1632   001250  6A09               	clrf	??___flmul^0,c
  1633   001252  5009               	movf	??___flmul^0,w,c
  1634   001254  2614               	addwf	___flmul@prod^0,f,c
  1635   001256  500A               	movf	(??___flmul+1)^0,w,c
  1636   001258  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1637   00125A  500B               	movf	(??___flmul+2)^0,w,c
  1638   00125C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1639   00125E  500C               	movf	(??___flmul+3)^0,w,c
  1640   001260  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1641   001262  C00E  F009         	movff	___flmul@grs,??___flmul
  1642   001266  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  1643   00126A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  1644   00126E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  1645   001272  0E19               	movlw	25
  1646   001274  EF41  F009         	goto	i2u38_40
  1647   001278                     i2u38_45:
  1648   001278  90D8               	bcf	status,0,c
  1649   00127A  320C               	rrcf	(??___flmul+3)^0,f,c
  1650   00127C  320B               	rrcf	(??___flmul+2)^0,f,c
  1651   00127E  320A               	rrcf	(??___flmul+1)^0,f,c
  1652   001280  3209               	rrcf	??___flmul^0,f,c
  1653   001282                     i2u38_40:
  1654   001282  2EE8               	decfsz	wreg,f,c
  1655   001284  EF3C  F009         	goto	i2u38_45
  1656   001288  5009               	movf	??___flmul^0,w,c
  1657   00128A  2614               	addwf	___flmul@prod^0,f,c
  1658   00128C  500A               	movf	(??___flmul+1)^0,w,c
  1659   00128E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1660   001290  500B               	movf	(??___flmul+2)^0,w,c
  1661   001292  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1662   001294  500C               	movf	(??___flmul+3)^0,w,c
  1663   001296  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1664   001298  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1665   00129C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1666   0012A0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1667   0012A4  6A0E               	clrf	___flmul@grs^0,c
  1668   0012A6  5012               	movf	___flmul@aexp^0,w,c
  1669   0012A8  C013  F009         	movff	___flmul@bexp,??___flmul
  1670   0012AC  6A0A               	clrf	(??___flmul+1)^0,c
  1671   0012AE  2609               	addwf	??___flmul^0,f,c
  1672   0012B0  0E00               	movlw	0
  1673   0012B2  220A               	addwfc	(??___flmul+1)^0,f,c
  1674   0012B4  0E82               	movlw	130
  1675   0012B6  2409               	addwf	??___flmul^0,w,c
  1676   0012B8  6E18               	movwf	___flmul@temp^0,c
  1677   0012BA  0EFF               	movlw	255
  1678   0012BC  200A               	addwfc	(??___flmul+1)^0,w,c
  1679   0012BE  6E19               	movwf	(___flmul@temp+1)^0,c
  1680   0012C0  EF77  F009         	goto	i2l1207
  1681   0012C4                     i2l1201:
  1682   0012C4  90D8               	bcf	status,0,c
  1683   0012C6  3614               	rlcf	___flmul@prod^0,f,c
  1684   0012C8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  1685   0012CA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  1686   0012CC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  1687   0012CE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1688   0012D0  EF6C  F009         	goto	i2u39_41
  1689   0012D4  EF6E  F009         	goto	i2u39_40
  1690   0012D8                     i2u39_41:
  1691   0012D8  EF6F  F009         	goto	i2l761
  1692   0012DC                     i2u39_40:
  1693   0012DC  8014               	bsf	___flmul@prod^0,0,c
  1694   0012DE                     i2l761:
  1695   0012DE  90D8               	bcf	status,0,c
  1696   0012E0  360E               	rlcf	___flmul@grs^0,f,c
  1697   0012E2  360F               	rlcf	(___flmul@grs+1)^0,f,c
  1698   0012E4  3610               	rlcf	(___flmul@grs+2)^0,f,c
  1699   0012E6  3611               	rlcf	(___flmul@grs+3)^0,f,c
  1700   0012E8  0618               	decf	___flmul@temp^0,f,c
  1701   0012EA  A0D8               	btfss	status,0,c
  1702   0012EC  0619               	decf	(___flmul@temp+1)^0,f,c
  1703   0012EE                     i2l1207:
  1704   0012EE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  1705   0012F0  EF7C  F009         	goto	i2u40_41
  1706   0012F4  EF7E  F009         	goto	i2u40_40
  1707   0012F8                     i2u40_41:
  1708   0012F8  EF62  F009         	goto	i2l1201
  1709   0012FC                     i2u40_40:
  1710   0012FC  0E00               	movlw	0
  1711   0012FE  6E12               	movwf	___flmul@aexp^0,c
  1712   001300  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1713   001302  EF85  F009         	goto	i2u41_41
  1714   001306  EF87  F009         	goto	i2u41_40
  1715   00130A                     i2u41_41:
  1716   00130A  EFAB  F009         	goto	i2l763
  1717   00130E                     i2u41_40:
  1718   00130E  0EFF               	movlw	255
  1719   001310  140E               	andwf	___flmul@grs^0,w,c
  1720   001312  6E09               	movwf	??___flmul^0,c
  1721   001314  0EFF               	movlw	255
  1722   001316  140F               	andwf	(___flmul@grs+1)^0,w,c
  1723   001318  6E0A               	movwf	(??___flmul+1)^0,c
  1724   00131A  0EFF               	movlw	255
  1725   00131C  1410               	andwf	(___flmul@grs+2)^0,w,c
  1726   00131E  6E0B               	movwf	(??___flmul+2)^0,c
  1727   001320  0E7F               	movlw	127
  1728   001322  1411               	andwf	(___flmul@grs+3)^0,w,c
  1729   001324  6E0C               	movwf	(??___flmul+3)^0,c
  1730   001326  5009               	movf	??___flmul^0,w,c
  1731   001328  100A               	iorwf	(??___flmul+1)^0,w,c
  1732   00132A  100B               	iorwf	(??___flmul+2)^0,w,c
  1733   00132C  100C               	iorwf	(??___flmul+3)^0,w,c
  1734   00132E  B4D8               	btfsc	status,2,c
  1735   001330  EF9C  F009         	goto	i2u42_41
  1736   001334  EF9E  F009         	goto	i2u42_40
  1737   001338                     i2u42_41:
  1738   001338  EFA2  F009         	goto	i2l764
  1739   00133C                     i2u42_40:
  1740   00133C                     i2l1215:
  1741   00133C  0E01               	movlw	1
  1742   00133E  6E12               	movwf	___flmul@aexp^0,c
  1743   001340  EFAB  F009         	goto	i2l763
  1744   001344                     i2l764:
  1745   001344  A014               	btfss	___flmul@prod^0,0,c
  1746   001346  EFA7  F009         	goto	i2u43_41
  1747   00134A  EFA9  F009         	goto	i2u43_40
  1748   00134E                     i2u43_41:
  1749   00134E  EFAB  F009         	goto	i2l763
  1750   001352                     i2u43_40:
  1751   001352  EF9E  F009         	goto	i2l1215
  1752   001356                     i2l763:
  1753   001356  5012               	movf	___flmul@aexp^0,w,c
  1754   001358  B4D8               	btfsc	status,2,c
  1755   00135A  EFB1  F009         	goto	i2u44_41
  1756   00135E  EFB3  F009         	goto	i2u44_40
  1757   001362                     i2u44_41:
  1758   001362  EFD7  F009         	goto	i2l1227
  1759   001366                     i2u44_40:
  1760   001366  0E01               	movlw	1
  1761   001368  2614               	addwf	___flmul@prod^0,f,c
  1762   00136A  0E00               	movlw	0
  1763   00136C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1764   00136E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1765   001370  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1766   001372  A017               	btfss	(___flmul@prod+3)^0,0,c
  1767   001374  EFBE  F009         	goto	i2u45_41
  1768   001378  EFC0  F009         	goto	i2u45_40
  1769   00137C                     i2u45_41:
  1770   00137C  EFD7  F009         	goto	i2l1227
  1771   001380                     i2u45_40:
  1772   001380  C014  F009         	movff	___flmul@prod,??___flmul
  1773   001384  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  1774   001388  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  1775   00138C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  1776   001390  340C               	rlcf	(??___flmul+3)^0,w,c
  1777   001392  320C               	rrcf	(??___flmul+3)^0,f,c
  1778   001394  320B               	rrcf	(??___flmul+2)^0,f,c
  1779   001396  320A               	rrcf	(??___flmul+1)^0,f,c
  1780   001398  3209               	rrcf	??___flmul^0,f,c
  1781   00139A  C009  F014         	movff	??___flmul,___flmul@prod
  1782   00139E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  1783   0013A2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  1784   0013A6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  1785   0013AA  4A18               	infsnz	___flmul@temp^0,f,c
  1786   0013AC  2A19               	incf	(___flmul@temp+1)^0,f,c
  1787   0013AE                     i2l1227:
  1788   0013AE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1789   0013B0  EFE2  F009         	goto	i2u46_41
  1790   0013B4  5019               	movf	(___flmul@temp+1)^0,w,c
  1791   0013B6  E108               	bnz	i2u46_40
  1792   0013B8  2818               	incf	___flmul@temp^0,w,c
  1793   0013BA  A0D8               	btfss	status,0,c
  1794   0013BC  EFE2  F009         	goto	i2u46_41
  1795   0013C0  EFE4  F009         	goto	i2u46_40
  1796   0013C4                     i2u46_41:
  1797   0013C4  EFEE  F009         	goto	i2l1231
  1798   0013C8                     i2u46_40:
  1799   0013C8  0E00               	movlw	0
  1800   0013CA  6E14               	movwf	___flmul@prod^0,c
  1801   0013CC  0E00               	movlw	0
  1802   0013CE  6E15               	movwf	(___flmul@prod+1)^0,c
  1803   0013D0  0E80               	movlw	128
  1804   0013D2  6E16               	movwf	(___flmul@prod+2)^0,c
  1805   0013D4  0E7F               	movlw	127
  1806   0013D6  6E17               	movwf	(___flmul@prod+3)^0,c
  1807   0013D8  EF1C  F00A         	goto	i2l1243
  1808   0013DC                     i2l1231:
  1809   0013DC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1810   0013DE  EFFB  F009         	goto	i2u47_40
  1811   0013E2  5019               	movf	(___flmul@temp+1)^0,w,c
  1812   0013E4  E106               	bnz	i2u47_41
  1813   0013E6  0418               	decf	___flmul@temp^0,w,c
  1814   0013E8  B0D8               	btfsc	status,0,c
  1815   0013EA  EFF9  F009         	goto	i2u47_41
  1816   0013EE  EFFB  F009         	goto	i2u47_40
  1817   0013F2                     i2u47_41:
  1818   0013F2  EF07  F00A         	goto	i2l771
  1819   0013F6                     i2u47_40:
  1820   0013F6  0E00               	movlw	0
  1821   0013F8  6E14               	movwf	___flmul@prod^0,c
  1822   0013FA  0E00               	movlw	0
  1823   0013FC  6E15               	movwf	(___flmul@prod+1)^0,c
  1824   0013FE  0E00               	movlw	0
  1825   001400  6E16               	movwf	(___flmul@prod+2)^0,c
  1826   001402  0E00               	movlw	0
  1827   001404  6E17               	movwf	(___flmul@prod+3)^0,c
  1828   001406  0E00               	movlw	0
  1829   001408  6E0D               	movwf	___flmul@sign^0,c
  1830   00140A  EF1C  F00A         	goto	i2l1243
  1831   00140E                     i2l771:
  1832   00140E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  1833   001412  0EFF               	movlw	255
  1834   001414  1614               	andwf	___flmul@prod^0,f,c
  1835   001416  0EFF               	movlw	255
  1836   001418  1615               	andwf	(___flmul@prod+1)^0,f,c
  1837   00141A  0E7F               	movlw	127
  1838   00141C  1616               	andwf	(___flmul@prod+2)^0,f,c
  1839   00141E  0E00               	movlw	0
  1840   001420  1617               	andwf	(___flmul@prod+3)^0,f,c
  1841   001422  A013               	btfss	___flmul@bexp^0,0,c
  1842   001424  EF16  F00A         	goto	i2u48_41
  1843   001428  EF18  F00A         	goto	i2u48_40
  1844   00142C                     i2u48_41:
  1845   00142C  EF19  F00A         	goto	i2l1241
  1846   001430                     i2u48_40:
  1847   001430  8E16               	bsf	(___flmul@prod+2)^0,7,c
  1848   001432                     i2l1241:
  1849   001432  90D8               	bcf	status,0,c
  1850   001434  3013               	rrcf	___flmul@bexp^0,w,c
  1851   001436  6E17               	movwf	(___flmul@prod+3)^0,c
  1852   001438                     i2l1243:
  1853   001438  500D               	movf	___flmul@sign^0,w,c
  1854   00143A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  1855   00143C  C014  F001         	movff	___flmul@prod,?___flmul
  1856   001440  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  1857   001444  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  1858   001448  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  1859   00144C                     i2l758:
  1860   00144C  0012               	return		;funcret
  1861   00144E                     __end_of___flmul:
  1862                           	callstack 0
  1863                           
  1864                           	psect	rparam
  1865   000000                     
  1866                           	psect	temp
  1867   000036                     btemp:
  1868                           	callstack 0
  1869   000036                     	ds	1
  1870   000000                     int$flags	set	btemp
  1871   000000                     wtemp8	set	btemp+1
  1872   000000                     ttemp5	set	btemp+1
  1873   000000                     ttemp6	set	btemp+4
  1874   000000                     ttemp7	set	btemp+8
  1875                           
  1876                           	psect	config
  1877                           
  1878                           ; Padding undefined space
  1879   300000                     	org	3145728
  1880   300000  FF                 	db	255
  1881                           
  1882                           ;Config register CONFIG1H @ 0x300001
  1883                           ;	Oscillator Selection bits
  1884                           ;	FOSC = INTIO67, Internal oscillator block
  1885                           ;	4X PLL Enable
  1886                           ;	PLLCFG = OFF, Oscillator used directly
  1887                           ;	Primary clock enable bit
  1888                           ;	PRICLKEN = ON, Primary clock is always enabled
  1889                           ;	Fail-Safe Clock Monitor Enable bit
  1890                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1891                           ;	Internal/External Oscillator Switchover bit
  1892                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1893   300001                     	org	3145729
  1894   300001  28                 	db	40
  1895                           
  1896                           ;Config register CONFIG2L @ 0x300002
  1897                           ;	Power-up Timer Enable bit
  1898                           ;	PWRTEN = OFF, Power up timer disabled
  1899                           ;	Brown-out Reset Enable bits
  1900                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1901                           ;	Brown Out Reset Voltage bits
  1902                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1903   300002                     	org	3145730
  1904   300002  1F                 	db	31
  1905                           
  1906                           ;Config register CONFIG2H @ 0x300003
  1907                           ;	Watchdog Timer Enable bits
  1908                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1909                           ;	Watchdog Timer Postscale Select bits
  1910                           ;	WDTPS = 32768, 1:32768
  1911   300003                     	org	3145731
  1912   300003  3C                 	db	60
  1913                           
  1914                           ; Padding undefined space
  1915   300004                     	org	3145732
  1916   300004  FF                 	db	255
  1917                           
  1918                           ;Config register CONFIG3H @ 0x300005
  1919                           ;	CCP2 MUX bit
  1920                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1921                           ;	PORTB A/D Enable bit
  1922                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1923                           ;	P3A/CCP3 Mux bit
  1924                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1925                           ;	HFINTOSC Fast Start-up
  1926                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1927                           ;	Timer3 Clock input mux bit
  1928                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1929                           ;	ECCP2 B output mux bit
  1930                           ;	P2BMX = PORTD2, P2B is on RD2
  1931                           ;	MCLR Pin Enable bit
  1932                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1933   300005                     	org	3145733
  1934   300005  BB                 	db	187
  1935                           
  1936                           ;Config register CONFIG4L @ 0x300006
  1937                           ;	Stack Full/Underflow Reset Enable bit
  1938                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1939                           ;	Single-Supply ICSP Enable bit
  1940                           ;	LVP = OFF, Single-Supply ICSP disabled
  1941                           ;	Extended Instruction Set Enable bit
  1942                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1943                           ;	Background Debug
  1944                           ;	DEBUG = 0x1, unprogrammed default
  1945   300006                     	org	3145734
  1946   300006  81                 	db	129
  1947                           
  1948                           ; Padding undefined space
  1949   300007                     	org	3145735
  1950   300007  FF                 	db	255
  1951                           
  1952                           ;Config register CONFIG5L @ 0x300008
  1953                           ;	Code Protection Block 0
  1954                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1955                           ;	Code Protection Block 1
  1956                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1957                           ;	Code Protection Block 2
  1958                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1959                           ;	Code Protection Block 3
  1960                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1961   300008                     	org	3145736
  1962   300008  0F                 	db	15
  1963                           
  1964                           ;Config register CONFIG5H @ 0x300009
  1965                           ;	Boot Block Code Protection bit
  1966                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1967                           ;	Data EEPROM Code Protection bit
  1968                           ;	CPD = OFF, Data EEPROM not code-protected
  1969   300009                     	org	3145737
  1970   300009  C0                 	db	192
  1971                           
  1972                           ;Config register CONFIG6L @ 0x30000A
  1973                           ;	Write Protection Block 0
  1974                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1975                           ;	Write Protection Block 1
  1976                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1977                           ;	Write Protection Block 2
  1978                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1979                           ;	Write Protection Block 3
  1980                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1981   30000A                     	org	3145738
  1982   30000A  0F                 	db	15
  1983                           
  1984                           ;Config register CONFIG6H @ 0x30000B
  1985                           ;	Configuration Register Write Protection bit
  1986                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1987                           ;	Boot Block Write Protection bit
  1988                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1989                           ;	Data EEPROM Write Protection bit
  1990                           ;	WRTD = OFF, Data EEPROM not write-protected
  1991   30000B                     	org	3145739
  1992   30000B  E0                 	db	224
  1993                           
  1994                           ;Config register CONFIG7L @ 0x30000C
  1995                           ;	Table Read Protection Block 0
  1996                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1997                           ;	Table Read Protection Block 1
  1998                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1999                           ;	Table Read Protection Block 2
  2000                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2001                           ;	Table Read Protection Block 3
  2002                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2003   30000C                     	org	3145740
  2004   30000C  0F                 	db	15
  2005                           
  2006                           ;Config register CONFIG7H @ 0x30000D
  2007                           ;	Boot Block Table Read Protection bit
  2008                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2009   30000D                     	org	3145741
  2010   30000D  40                 	db	64
  2011                           tosu	equ	0xFFF
  2012                           tosh	equ	0xFFE
  2013                           tosl	equ	0xFFD
  2014                           stkptr	equ	0xFFC
  2015                           pclatu	equ	0xFFB
  2016                           pclath	equ	0xFFA
  2017                           pcl	equ	0xFF9
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           indf0	equ	0xFEF
  2025                           postinc0	equ	0xFEE
  2026                           postdec0	equ	0xFED
  2027                           preinc0	equ	0xFEC
  2028                           plusw0	equ	0xFEB
  2029                           fsr0h	equ	0xFEA
  2030                           fsr0l	equ	0xFE9
  2031                           wreg	equ	0xFE8
  2032                           indf1	equ	0xFE7
  2033                           postinc1	equ	0xFE6
  2034                           postdec1	equ	0xFE5
  2035                           preinc1	equ	0xFE4
  2036                           plusw1	equ	0xFE3
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           bsr	equ	0xFE0
  2040                           indf2	equ	0xFDF
  2041                           postinc2	equ	0xFDE
  2042                           postdec2	equ	0xFDD
  2043                           preinc2	equ	0xFDC
  2044                           plusw2	equ	0xFDB
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Interrupt_Rx->_Receive_Interrupt
    _Receive_Interrupt->_Send_PWM_Motors
    _Send_PWM_Motors->___flmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     917
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     917
                                             42 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     917
                                             40 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             38 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         2     2      0    2625
                                             35 COMRAM     2     2      0
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Receive_Interrupt                                    2     2      0    2625
                                             33 COMRAM     2     2      0
                    _Send_PWM_Motors
 ---------------------------------------------------------------------------------
 (7) _Send_PWM_Motors                                      8     0      8    2625
                                             25 COMRAM     8     0      8
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    1896
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Send_PWM_Motors
       ___flmul
       ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      35       1       56.4%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRhllhhh     14      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      43        0.0%
BITBIGSFRhllhl       8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhh         6      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRhllhhl      1      0       0      40        0.0%
BITBIGSFRhlllh       1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      50        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 28 18:08:30 2024

                              l80 1870                                l79 1870                                l96 17CE  
                              bsr 0FE0                               l131 180A                               l125 16FA  
                             l128 184C                               l821 17F8                               l813 17D2  
                             l823 17FA                               l815 17D4                               l817 17E4  
                             l819 17E8                               _PR2 0FBB                               u607 1682  
                             u617 169C                               u627 16EC                               u637 17DA  
                             u565 183C                               u566 183E                               u647 17EE  
                             u657 1800                               u597 1664                               wreg 0FE8  
                      _TXSTA1bits 0FAC                      ___flmul@aexp 0012                      ___flmul@bexp 0013  
                    ___flmul@sign 000D                      ___flmul@temp 0018                      ___flmul@prod 0014  
                    ___fltol@exp1 000A                              l1021 1786                              l1031 1798  
                            l1023 1788                              l1015 1768                              l1041 17A6  
                            l1033 179A                              l1025 1792                              l1017 177A  
                            l1051 17B0                              l1043 17A8                              l1035 17A0  
                            l1027 1794                              l1019 177C                              l1053 17B2  
                            l1045 17AA                              l1037 17A2                              l1029 1796  
                            l1055 17CC                              l1047 17AC                              l1039 17A4  
                            l1303 1834                              l1311 1672                              l1049 17AE  
                            l1305 183E                              l1321 16BA                              l1313 167C  
                            l1307 1846                              l1323 16C4                              l1315 1696  
                            l1325 16CE                              l1317 16A6                              l1309 165A  
                            l1327 16D8                              l1319 16B0                              l1351 186C  
                            l1329 16E2                              l1349 1868                              STR_1 1012  
                            STR_2 1001                              _LATD 0F8C                              _LATE 0F8D  
                            i1l93 001E                              i2l88 1826                              _main 1868  
                            btemp 0036                              prodh 0FF4                              prodl 0FF3  
                            start 0026                      ___param_bank 0000                   _LCD_Instruction 17D0  
Send_Instruction_Data@Instruction 002A                      _BAUDCON1bits 0FB8                     ___fltol@sign1 0009  
                           ?_main 0001                   __end_of___flmul 144E                   __end_of___fltol 165A  
                           _T2CON 0FBA                             i2l102 174C                             i2l103 1766  
                           i2l106 1552                             i2l437 1658                             i2l761 12DE  
                           i2l754 10E8                             i2l771 140E                             i2l763 1356  
                           i2l764 1344                             i2l758 144C                             _SPBRG 0FAF  
                           _TRISD 0F95                             _TRISE 0F96                             ttemp5 0037  
                           ttemp6 003A                             ttemp7 003E                             status 0FD8  
                           wtemp8 0037                   __initialization 184E                      __end_of_main 1878  
                __end_of_Init_LCD 16FC             _Send_Instruction_Data 1832                            ??_main 002D  
                   __activetblptr 0002                            _CCPR3L 0F5E                            _CCPR5L 0F55  
                          _ANSELC 0F3A                            _ANSELD 0F3B                            _ANSELE 0F3C  
                          i2l1201 12C4                            i2l1121 1030                            i2l1211 1300  
                          i2l1203 12CE                            i2l1131 1070                            i2l1123 103E  
                          i2l1221 1372                            i2l1213 130E                            i2l1205 12DC  
                          i2l1141 10A0                            i2l1133 1076                            i2l1125 1040  
                          i2l1301 152A                            i2l1231 13DC                            i2l1223 1380  
                          i2l1215 133C                            i2l1207 12EE                            i2l1151 10D8  
                          i2l1143 10A2                            i2l1135 1086                            i2l1127 1050  
                          i2l1119 1024                            i2l1241 1432                            i2l1233 13F6  
                          i2l1225 13AA                            i2l1209 12FC                            i2l1161 1128  
                          i2l1153 10F8                            i2l1145 10B2                            i2l1137 108C  
                          i2l1129 1060                            i2l1235 1412                            i2l1243 1438  
                          i2l1219 1366                            i2l1227 13AE                            i2l1171 1178  
                          i2l1163 1132                            i2l1155 1108                            i2l1147 10C2  
                          i2l1139 1092                            i2l1251 156A                            i2l1331 16FC  
                          i2l1245 143C                            i2l1237 1422                            i2l1229 13C8  
                          i2l1181 11BA                            i2l1173 1184                            i2l1165 1148  
                          i2l1149 10D2                            i2l1261 15BA                            i2l1341 172E  
                          i2l1333 1704                            i2l1239 1430                            i2l1191 121C  
                          i2l1183 11CA                            i2l1175 1192                            i2l1167 1154  
                          i2l1159 111C                            i2l1271 15E4                            i2l1263 15BE  
                          i2l1255 157E                            i2l1343 1730                            i2l1335 1728  
                          i2l1193 1238                            i2l1185 11E4                            i2l1177 119E  
                          i2l1169 116C                            i2l1281 160C                            i2l1273 15EE  
                          i2l1265 15CC                            i2l1257 15A8                            i2l1249 1554  
                          i2l1337 172A                            i2l1353 1814                            i2l1195 1262  
                          i2l1187 11F4                            i2l1179 11AE                            i2l1283 1618  
                          i2l1275 15F8                            i2l1259 15AA                            i2l1339 172C  
                          i2l1347 1758                            i2l1355 1822                            i2l1197 1298  
                          i2l1189 1210                            i2l1285 1628                            i2l1293 144E  
                          i2l1199 12A6                            i2l1287 1638                            i2l1295 1482  
                          i2l1289 1648                            i2l1297 14A8                            i2l1299 1504  
                          _RCREG1 0FAE        LCD_Instruction@Instruction 0028                            _OSCCON 0FD3  
                   ?_Interrupt_Rx 0001           __end_of_LCD_Instruction 180C                         ??___flmul 0009  
                       ??___fltol 0005                            clear_0 1854                            isa$std 0001  
               ??_Send_PWM_Motors 0022                      __mediumconst 0000                            tblptru 0FF8  
                      __accesstop 0060           __end_of__initialization 185A                    ??_Interrupt_Rx 0024  
                   ___rparam_used 0001                        ___fltol@f1 0001                    __pcstackCOMRAM 0001  
               _Receive_Interrupt 16FC            ?_Send_Instruction_Data 0029                ?_Receive_Interrupt 0001  
             ??_Receive_Interrupt 0022                       _Duty_Cycle1 0031                       _Duty_Cycle2 002D  
               __end_of_Interrupt 0026                         ?_Init_LCD 0001                  ?_LCD_Instruction 0001  
       __end_of_Receive_Interrupt 1768                           _CCP3CON 0F5D                           _CCP5CON 0F54  
                         i2u30_40 103E                           i2u30_41 103A                           i2u31_40 1050  
                         i2u31_41 104C                           i2u40_40 12FC                           i2u32_40 1060  
                         i2u40_41 12F8                           i2u32_41 105C                           i2u41_40 130E  
                         i2u33_40 10A0                           i2u41_41 130A                           i2u33_41 109C  
                         i2u42_40 133C                           i2u34_40 10B2                           i2u50_40 159E  
                         i2u42_41 1338                           i2u34_41 10AE                           i2u50_45 1594  
                         i2u43_40 1352                           i2u35_40 10C2                           i2u51_40 15CC  
                         i2u43_41 134E                           i2u35_41 10BE                           i2u51_41 15C8  
                         i2u44_40 1366                           i2u36_40 10F8                           i2u52_40 15E0  
                         i2u44_41 1362                           i2u36_41 10F4                           i2u52_41 15DC  
                         i2u45_40 1380                           i2u37_40 1108                           i2u53_40 1608  
                         i2u45_41 137C                           i2u37_41 1104                           i2u53_41 1604  
                         i2u46_40 13C8                           i2u38_40 1282                           i2u54_40 1628  
                         i2u46_41 13C4                           i2u54_41 1624                           i2u38_45 1278  
                         i2u47_40 13F6                           i2u39_40 12DC                           i2u55_40 1638  
                         i2u47_41 13F2                           i2u39_41 12D8                           i2u55_41 1634  
                         i2u48_40 1430                           i2u48_41 142C                           i2u49_40 156A  
                         i2u57_40 1822                           i2u49_41 1566                           i2u57_41 181E  
                         i2u66_47 173A                        ??_Init_LCD 002B                           __Hparam 0000  
                         __Lparam 0000                           ___flmul 1024                           ___fltol 1554  
                    __psmallconst 1000                           __pcinit 184E                           __ramtop 1000  
                         __ptext0 1868                           __ptext1 165A                           __ptext2 1832  
                         __ptext3 17D0                           __ptext4 1768                           __ptext7 16FC  
                         __ptext8 144E                           __ptext9 1554              __end_of_Interrupt_Rx 1832  
                       _T2CONbits 0FBA                    __pintcode_body 180C              end_of_initialization 185A  
                   __Lmediumconst 0000                           int_func 180C                   _Send_PWM_Motors 144E  
                       _RCSTAbits 0FAB                           postinc0 0FEE                         _TRISCbits 0F94  
                     ___flmul@grs 000E           ??_Send_Instruction_Data 002A               start_initialization 184E  
       Send_Instruction_Data@Data 0029                    _Configurations 1768                         _Interrupt 0018  
         __end_of_Send_PWM_Motors 1554                         _Rx_Buffer 0035                         ___flmul@a 0005  
                       ___flmul@b 0001                       __pbssCOMRAM 002D            __end_of_Configurations 17D0  
                      ?_Interrupt 0001                      _Interrupt_Rx 0008                         __pintcode 0008  
                        ?___flmul 0001                          ?___fltol 0001                       __pintcodelo 0018  
                     __smallconst 1000                   ?_Configurations 0001                  ?_Send_PWM_Motors 001A  
                        _LATCbits 0F8B                          _LATDbits 0F8C                          _PIE1bits 0F9D  
                        _PIR1bits 0F9E                          _RCONbits 0FD0                       ??_Interrupt 0026  
                        _Init_LCD 165A                          __Hrparam 0000                          __Lrparam 0000  
   __end_of_Send_Instruction_Data 184E                 ??_LCD_Instruction 0027         Send_PWM_Motors@PWM_LMotor 001E  
                        __ptext10 1024         Send_PWM_Motors@PWM_RMotor 001A                          isa$xinst 0000  
                        int$flags 0036                        _INTCONbits 0FF2                          intlevel1 0000  
                        intlevel2 0000                  ??_Configurations 0027  
