

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 21 16:37:36 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F46K22 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _ANSELC	set	3898
    62   000000                     _PIR1bits	set	3998
    63   000000                     _RCSTAbits	set	4011
    64   000000                     _TXSTA1bits	set	4012
    65   000000                     _SPBRG	set	4015
    66   000000                     _RCONbits	set	4048
    67   000000                     _OSCCON	set	4051
    68   000000                     _INTCONbits	set	4082
    69   000000                     _LATCbits	set	3979
    70   000000                     _TRISCbits	set	3988
    71   000000                     _ANSELD	set	3899
    72   000000                     _PIE1bits	set	3997
    73   000000                     _TRISD	set	3989
    74   000000                     _LATD	set	3980
    75   000000                     _BAUDCON1bits	set	4024
    76   000000                     _RCREG1	set	4014
    77                           
    78                           	psect	smallconst
    79   001000                     __psmallconst:
    80                           	callstack 0
    81   001000  00                 	db	0
    82   001001                     STR_1:
    83   001001  52                 	db	82	;'R'
    84   001002  6F                 	db	111	;'o'
    85   001003  62                 	db	98	;'b'
    86   001004  6F                 	db	111	;'o'
    87   001005  74                 	db	116	;'t'
    88   001006  69                 	db	105	;'i'
    89   001007  63                 	db	99	;'c'
    90   001008  20                 	db	32
    91   001009  50                 	db	80	;'P'
    92   00100A  6C                 	db	108	;'l'
    93   00100B  61                 	db	97	;'a'
    94   00100C  74                 	db	116	;'t'
    95   00100D  66                 	db	102	;'f'
    96   00100E  6F                 	db	111	;'o'
    97   00100F  72                 	db	114	;'r'
    98   001010  6D                 	db	109	;'m'
    99   001011  00                 	db	0
   100   001012                     STR_2:
   101   001012  44                 	db	68	;'D'
   102   001013  61                 	db	97	;'a'
   103   001014  74                 	db	116	;'t'
   104   001015  61                 	db	97	;'a'
   105   001016  20                 	db	32
   106   001017  74                 	db	116	;'t'
   107   001018  65                 	db	101	;'e'
   108   001019  73                 	db	115	;'s'
   109   00101A  74                 	db	116	;'t'
   110   00101B  3A                 	db	58	;':'
   111   00101C  20                 	db	32
   112   00101D  41                 	db	65	;'A'
   113   00101E  00                 	db	0
   114   00101F                     STR_3:
   115   00101F  50                 	db	80	;'P'
   116   001020  6C                 	db	108	;'l'
   117   001021  61                 	db	97	;'a'
   118   001022  74                 	db	116	;'t'
   119   001023  66                 	db	102	;'f'
   120   001024  6F                 	db	111	;'o'
   121   001025  72                 	db	114	;'r'
   122   001026  6D                 	db	109	;'m'
   123   001027  21                 	db	33
   124   001028  00                 	db	0
   125   001029  00                 	db	0	; dummy byte at the end
   126   000000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130   001308                     __pcinit:
   131                           	callstack 0
   132   001308                     start_initialization:
   133                           	callstack 0
   134   001308                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Clear objects allocated to COMRAM (1 bytes)
   138   001308  6A14               	clrf	__pbssCOMRAM& (0+255),c
   139   00130A                     end_of_initialization:
   140                           	callstack 0
   141   00130A                     __end_of__initialization:
   142                           	callstack 0
   143   00130A  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   144   00130C  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   145   00130E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   146   001310  6EF8               	movwf	tblptru,c
   147   001312  0E10               	movlw	high __Lsmallconst
   148   001314  6EF7               	movwf	tblptrh,c
   149   001316  0100               	movlb	0
   150   001318  EF57  F009         	goto	_main	;jump to C main() function
   151                           
   152                           	psect	bssCOMRAM
   153   000014                     __pbssCOMRAM:
   154                           	callstack 0
   155   000014                     _Rx_Buffer:
   156                           	callstack 0
   157   000014                     	ds	1
   158                           
   159                           	psect	cstackCOMRAM
   160   000001                     __pcstackCOMRAM:
   161                           	callstack 0
   162   000001                     ??i2_LCD_Instruction:
   163                           
   164                           ; 1 bytes @ 0x0
   165   000001                     	ds	1
   166   000002                     i2LCD_Instruction@Instruction:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x1
   170   000002                     	ds	1
   171   000003                     i2Send_Instruction_Data@Data:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x2
   175   000003                     	ds	1
   176   000004                     i2Send_Instruction_Data@Instruction:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x3
   180   000004                     	ds	1
   181   000005                     i2Send_String@String:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x4
   185   000005                     	ds	1
   186   000006                     ??i2_Send_String:
   187                           
   188                           ; 1 bytes @ 0x5
   189   000006                     	ds	1
   190   000007                     i2Send_String@i:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x6
   194   000007                     	ds	1
   195   000008                     ??_Interrupt_Rx:
   196                           
   197                           ; 1 bytes @ 0x7
   198   000008                     	ds	4
   199   00000C                     ??_Interrupt:
   200                           
   201                           ; 1 bytes @ 0xB
   202   00000C                     	ds	1
   203   00000D                     ??_LCD_Instruction:
   204                           
   205                           ; 1 bytes @ 0xC
   206   00000D                     	ds	1
   207   00000E                     LCD_Instruction@Instruction:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0xD
   211   00000E                     	ds	1
   212   00000F                     Send_Instruction_Data@Data:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xE
   216   00000F                     	ds	1
   217   000010                     Send_Instruction_Data@Instruction:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xF
   221   000010                     	ds	1
   222   000011                     ??_Init_LCD:
   223   000011                     Send_String@String:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x10
   227   000011                     	ds	1
   228   000012                     ??_Send_String:
   229                           
   230                           ; 1 bytes @ 0x11
   231   000012                     	ds	1
   232   000013                     Send_String@i:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x12
   236   000013                     	ds	1
   237   000014                     
   238                           ; 1 bytes @ 0x13
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 51 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels required when called: 9
   264 ;; This function calls:
   265 ;;		_Configurations
   266 ;;		_Init_LCD
   267 ;;		_Send_Instruction_Data
   268 ;;		_Send_String
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text0
   275   0012AE                     __ptext0:
   276                           	callstack 0
   277   0012AE                     _main:
   278                           	callstack 22
   279   0012AE                     
   280                           ;main.c: 54:     Configurations();
   281   0012AE  EC9F  F008         	call	_Configurations	;wreg free
   282   0012B2                     
   283                           ;main.c: 55:     Init_LCD();
   284   0012B2  EC15  F008         	call	_Init_LCD	;wreg free
   285   0012B6                     
   286                           ;main.c: 57:     Send_Instruction_Data(0, 0xC0);
   287   0012B6  0EC0               	movlw	192
   288   0012B8  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   289   0012BA  0E00               	movlw	0
   290   0012BC  EC68  F009         	call	_Send_Instruction_Data
   291   0012C0                     
   292                           ;main.c: 58:     Send_String("Robotic Platform");
   293   0012C0  0E01               	movlw	low STR_1
   294   0012C2  6E11               	movwf	Send_String@String^0,c
   295   0012C4  ECC0  F008         	call	_Send_String	;wreg free
   296   0012C8                     l53:
   297   0012C8  EF64  F009         	goto	l53
   298   0012CC  EF13  F000         	goto	start
   299   0012D0                     __end_of_main:
   300                           	callstack 0
   301                           
   302 ;; *************** function _Send_String *****************
   303 ;; Defined at:
   304 ;;		line 189 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;  String          1   16[COMRAM] PTR unsigned char 
   307 ;;		 -> STR_3(10), STR_2(13), STR_1(17), 
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  i               1   18[COMRAM] unsigned char 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   319 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;Total ram usage:        3 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; Hardware stack levels required when called: 8
   326 ;; This function calls:
   327 ;;		_Send_Instruction_Data
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text1
   334   001180                     __ptext1:
   335                           	callstack 0
   336   001180                     _Send_String:
   337                           	callstack 22
   338   001180                     
   339                           ;main.c: 191:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   340   001180  0E00               	movlw	0
   341   001182  6E13               	movwf	Send_String@i^0,c
   342   001184  EFD0  F008         	goto	l973
   343   001188                     l969:
   344                           
   345                           ;main.c: 193:         Send_Instruction_Data(1, String[i]);
   346   001188  5011               	movf	Send_String@String^0,w,c
   347   00118A  2413               	addwf	Send_String@i^0,w,c
   348   00118C  6E12               	movwf	??_Send_String^0,c
   349   00118E  C012  FFF6         	movff	??_Send_String,tblptrl
   350   001192                     	if	0	;There is only one active tblptr byte
   351   001192                     	endif
   352   001192                     	if	0	;tblptru may be non-zero
   353   001192                     	endif
   354   001192                     	if	0	;tblptru may be non-zero
   355   001192                     	endif
   356   001192  0008               	tblrd		*
   357   001194  CFF5 F00F          	movff	tablat,Send_Instruction_Data@Data
   358   001198  0E01               	movlw	1
   359   00119A  EC68  F009         	call	_Send_Instruction_Data
   360   00119E                     
   361                           ;main.c: 195:     }
   362   00119E  2A13               	incf	Send_String@i^0,f,c
   363   0011A0                     l973:
   364   0011A0  5011               	movf	Send_String@String^0,w,c
   365   0011A2  2413               	addwf	Send_String@i^0,w,c
   366   0011A4  6E12               	movwf	??_Send_String^0,c
   367   0011A6  C012  FFF6         	movff	??_Send_String,tblptrl
   368   0011AA                     	if	0	;There is only one active tblptr byte
   369   0011AA                     	endif
   370   0011AA                     	if	0	;tblptru may be non-zero
   371   0011AA                     	endif
   372   0011AA                     	if	0	;tblptru may be non-zero
   373   0011AA                     	endif
   374   0011AA  0008               	tblrd		*
   375   0011AC  50F5               	movf	tablat,w,c
   376   0011AE  0900               	iorlw	0
   377   0011B0  A4D8               	btfss	status,2,c
   378   0011B2  EFDD  F008         	goto	u121
   379   0011B6  EFDF  F008         	goto	u120
   380   0011BA                     u121:
   381   0011BA  EFC4  F008         	goto	l969
   382   0011BE                     u120:
   383   0011BE  0012               	return		;funcret
   384   0011C0                     __end_of_Send_String:
   385                           	callstack 0
   386                           
   387 ;; *************** function _Init_LCD *****************
   388 ;; Defined at:
   389 ;;		line 148 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:        2 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 8
   410 ;; This function calls:
   411 ;;		_Send_Instruction_Data
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text2
   418   00102A                     __ptext2:
   419                           	callstack 0
   420   00102A                     _Init_LCD:
   421                           	callstack 22
   422   00102A                     
   423                           ;main.c: 150:     _delay((unsigned long)((60)*(16000000/4000.0)));
   424   00102A  0E02               	movlw	2
   425   00102C  6E12               	movwf	(??_Init_LCD+1)^0,c
   426   00102E  0E38               	movlw	56
   427   001030  6E11               	movwf	??_Init_LCD^0,c
   428   001032  0EAD               	movlw	173
   429   001034                     u177:
   430   001034  2EE8               	decfsz	wreg,f,c
   431   001036  D7FE               	bra	u177
   432   001038  2E11               	decfsz	??_Init_LCD^0,f,c
   433   00103A  D7FC               	bra	u177
   434   00103C  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
   435   00103E  D7FA               	bra	u177
   436   001040  0000               	nop	
   437   001042                     
   438                           ;main.c: 151:     Send_Instruction_Data(0, 0x30);
   439   001042  0E30               	movlw	48
   440   001044  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   441   001046  0E00               	movlw	0
   442   001048  EC68  F009         	call	_Send_Instruction_Data
   443   00104C                     
   444                           ;main.c: 152:     _delay((unsigned long)((5)*(16000000/4000.0)));
   445   00104C  0E1A               	movlw	26
   446   00104E  6E11               	movwf	??_Init_LCD^0,c
   447   001050  0EF8               	movlw	248
   448   001052                     u187:
   449   001052  2EE8               	decfsz	wreg,f,c
   450   001054  D7FE               	bra	u187
   451   001056  2E11               	decfsz	??_Init_LCD^0,f,c
   452   001058  D7FC               	bra	u187
   453   00105A  D000               	nop2	
   454                           
   455                           ;main.c: 153:     Send_Instruction_Data(0, 0x30);
   456   00105C  0E30               	movlw	48
   457   00105E  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   458   001060  0E00               	movlw	0
   459   001062  EC68  F009         	call	_Send_Instruction_Data
   460   001066                     
   461                           ;main.c: 154:     _delay((unsigned long)((5)*(16000000/4000.0)));
   462   001066  0E1A               	movlw	26
   463   001068  6E11               	movwf	??_Init_LCD^0,c
   464   00106A  0EF8               	movlw	248
   465   00106C                     u197:
   466   00106C  2EE8               	decfsz	wreg,f,c
   467   00106E  D7FE               	bra	u197
   468   001070  2E11               	decfsz	??_Init_LCD^0,f,c
   469   001072  D7FC               	bra	u197
   470   001074  D000               	nop2	
   471   001076                     
   472                           ;main.c: 155:     Send_Instruction_Data(0, 0x30);
   473   001076  0E30               	movlw	48
   474   001078  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   475   00107A  0E00               	movlw	0
   476   00107C  EC68  F009         	call	_Send_Instruction_Data
   477   001080                     
   478                           ;main.c: 156:     Send_Instruction_Data(0, 0x02);
   479   001080  0E02               	movlw	2
   480   001082  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   481   001084  0E00               	movlw	0
   482   001086  EC68  F009         	call	_Send_Instruction_Data
   483   00108A                     
   484                           ;main.c: 157:     Send_Instruction_Data(0, 0x06);
   485   00108A  0E06               	movlw	6
   486   00108C  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   487   00108E  0E00               	movlw	0
   488   001090  EC68  F009         	call	_Send_Instruction_Data
   489   001094                     
   490                           ;main.c: 158:     Send_Instruction_Data(0, 0x0F);
   491   001094  0E0F               	movlw	15
   492   001096  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   493   001098  0E00               	movlw	0
   494   00109A  EC68  F009         	call	_Send_Instruction_Data
   495   00109E                     
   496                           ;main.c: 159:     Send_Instruction_Data(0, 0x28);
   497   00109E  0E28               	movlw	40
   498   0010A0  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   499   0010A2  0E00               	movlw	0
   500   0010A4  EC68  F009         	call	_Send_Instruction_Data
   501   0010A8                     
   502                           ;main.c: 160:     Send_Instruction_Data(0, 0x01);
   503   0010A8  0E01               	movlw	1
   504   0010AA  6E0F               	movwf	Send_Instruction_Data@Data^0,c
   505   0010AC  0E00               	movlw	0
   506   0010AE  EC68  F009         	call	_Send_Instruction_Data
   507   0010B2                     
   508                           ;main.c: 161:     _delay((unsigned long)((100)*(16000000/4000.0)));
   509   0010B2  0E03               	movlw	3
   510   0010B4  6E12               	movwf	(??_Init_LCD+1)^0,c
   511   0010B6  0E08               	movlw	8
   512   0010B8  6E11               	movwf	??_Init_LCD^0,c
   513   0010BA  0E77               	movlw	119
   514   0010BC                     u207:
   515   0010BC  2EE8               	decfsz	wreg,f,c
   516   0010BE  D7FE               	bra	u207
   517   0010C0  2E11               	decfsz	??_Init_LCD^0,f,c
   518   0010C2  D7FC               	bra	u207
   519   0010C4  2E12               	decfsz	(??_Init_LCD+1)^0,f,c
   520   0010C6  D7FA               	bra	u207
   521   0010C8  0000               	nop	
   522   0010CA  0012               	return		;funcret
   523   0010CC                     __end_of_Init_LCD:
   524                           	callstack 0
   525                           
   526 ;; *************** function _Send_Instruction_Data *****************
   527 ;; Defined at:
   528 ;;		line 167 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  Instruction     1    wreg     unsigned char 
   531 ;;  Data            1   14[COMRAM] unsigned char 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  Instruction     1   15[COMRAM] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   543 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 7
   550 ;; This function calls:
   551 ;;		_LCD_Instruction
   552 ;; This function is called by:
   553 ;;		_main
   554 ;;		_Init_LCD
   555 ;;		_Send_String
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text3
   560   0012D0                     __ptext3:
   561                           	callstack 0
   562   0012D0                     _Send_Instruction_Data:
   563                           	callstack 22
   564                           
   565                           ;incstack = 0
   566                           ;Send_Instruction_Data@Instruction stored from wreg
   567   0012D0  6E10               	movwf	Send_Instruction_Data@Instruction^0,c
   568   0012D2                     
   569                           ;main.c: 169:     LATCbits.LATC4 = Instruction;
   570   0012D2  B010               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   571   0012D4  D002               	bra	u105
   572   0012D6  988B               	bcf	139,4,c	;volatile
   573   0012D8  D001               	bra	u106
   574   0012DA                     u105:
   575   0012DA  888B               	bsf	139,4,c	;volatile
   576   0012DC                     u106:
   577   0012DC                     
   578                           ;main.c: 170:     LCD_Instruction(Data >> 4);
   579   0012DC  380F               	swapf	Send_Instruction_Data@Data^0,w,c
   580   0012DE  0B0F               	andlw	15
   581   0012E0  EC00  F009         	call	_LCD_Instruction
   582   0012E4                     
   583                           ;main.c: 171:     LCD_Instruction(Data);
   584   0012E4  500F               	movf	Send_Instruction_Data@Data^0,w,c
   585   0012E6  EC00  F009         	call	_LCD_Instruction
   586   0012EA  0012               	return		;funcret
   587   0012EC                     __end_of_Send_Instruction_Data:
   588                           	callstack 0
   589                           
   590 ;; *************** function _LCD_Instruction *****************
   591 ;; Defined at:
   592 ;;		line 176 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  Instruction     1    wreg     unsigned char 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  Instruction     1   13[COMRAM] unsigned char 
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;Total ram usage:        2 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; Hardware stack levels required when called: 6
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_Send_Instruction_Data
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text4
   621   001200                     __ptext4:
   622                           	callstack 0
   623   001200                     _LCD_Instruction:
   624                           	callstack 22
   625                           
   626                           ;incstack = 0
   627                           ;LCD_Instruction@Instruction stored from wreg
   628   001200  6E0E               	movwf	LCD_Instruction@Instruction^0,c
   629   001202                     
   630                           ;main.c: 178:     LATCbits.LATC5 = 1;
   631   001202  8A8B               	bsf	139,5,c	;volatile
   632   001204                     
   633                           ;main.c: 179:     _delay((unsigned long)((15)*(16000000/4000.0)));
   634   001204  0E4E               	movlw	78
   635   001206  6E0D               	movwf	??_LCD_Instruction^0,c
   636   001208  0EEB               	movlw	235
   637   00120A                     u217:
   638   00120A  2EE8               	decfsz	wreg,f,c
   639   00120C  D7FE               	bra	u217
   640   00120E  2E0D               	decfsz	??_LCD_Instruction^0,f,c
   641   001210  D7FC               	bra	u217
   642   001212  0000               	nop	
   643   001214                     
   644                           ;main.c: 180:     LATD = Instruction;
   645   001214  C00E  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   646   001218                     
   647                           ;main.c: 181:     _delay((unsigned long)((15)*(16000000/4000.0)));
   648   001218  0E4E               	movlw	78
   649   00121A  6E0D               	movwf	??_LCD_Instruction^0,c
   650   00121C  0EEB               	movlw	235
   651   00121E                     u227:
   652   00121E  2EE8               	decfsz	wreg,f,c
   653   001220  D7FE               	bra	u227
   654   001222  2E0D               	decfsz	??_LCD_Instruction^0,f,c
   655   001224  D7FC               	bra	u227
   656   001226  0000               	nop	
   657   001228                     
   658                           ;main.c: 182:     LATCbits.LATC5 = 0;
   659   001228  9A8B               	bcf	139,5,c	;volatile
   660   00122A                     
   661                           ;main.c: 183:     _delay((unsigned long)((15)*(16000000/4000.0)));
   662   00122A  0E4E               	movlw	78
   663   00122C  6E0D               	movwf	??_LCD_Instruction^0,c
   664   00122E  0EEB               	movlw	235
   665   001230                     u237:
   666   001230  2EE8               	decfsz	wreg,f,c
   667   001232  D7FE               	bra	u237
   668   001234  2E0D               	decfsz	??_LCD_Instruction^0,f,c
   669   001236  D7FC               	bra	u237
   670   001238  0000               	nop	
   671   00123A  0012               	return		;funcret
   672   00123C                     __end_of_LCD_Instruction:
   673                           	callstack 0
   674                           
   675 ;; *************** function _Configurations *****************
   676 ;; Defined at:
   677 ;;		line 91 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 6
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text5
   706   00113E                     __ptext5:
   707                           	callstack 0
   708   00113E                     _Configurations:
   709                           	callstack 24
   710   00113E                     
   711                           ;main.c: 93:     OSCCON = 0x72;
   712   00113E  0E72               	movlw	114
   713   001140  6ED3               	movwf	211,c	;volatile
   714                           
   715                           ;main.c: 95:     ANSELC = 0;
   716   001142  0E00               	movlw	0
   717   001144  010F               	movlb	15	; () banked
   718   001146  6F3A               	movwf	58,b	;volatile
   719                           
   720                           ;main.c: 96:     ANSELD = 0;
   721   001148  0E00               	movlw	0
   722   00114A  6F3B               	movwf	59,b	;volatile
   723   00114C                     
   724                           ; BSR set to: 15
   725                           ;main.c: 98:     TRISCbits.RC4 = 0;
   726   00114C  9894               	bcf	148,4,c	;volatile
   727   00114E                     
   728                           ; BSR set to: 15
   729                           ;main.c: 99:     TRISCbits.RC5 = 0;
   730   00114E  9A94               	bcf	148,5,c	;volatile
   731                           
   732                           ;main.c: 101:     TRISD = 0;
   733   001150  0E00               	movlw	0
   734   001152  6E95               	movwf	149,c	;volatile
   735   001154                     
   736                           ; BSR set to: 15
   737                           ;main.c: 103:     LATCbits.LC4 = 0;
   738   001154  988B               	bcf	139,4,c	;volatile
   739   001156                     
   740                           ; BSR set to: 15
   741                           ;main.c: 104:     LATCbits.LC5 = 0;
   742   001156  9A8B               	bcf	139,5,c	;volatile
   743                           
   744                           ;main.c: 106:     LATD = 0;
   745   001158  0E00               	movlw	0
   746   00115A  6E8C               	movwf	140,c	;volatile
   747   00115C                     
   748                           ; BSR set to: 15
   749                           ;main.c: 109:     INTCONbits.GIE = 1;
   750   00115C  8EF2               	bsf	242,7,c	;volatile
   751   00115E                     
   752                           ; BSR set to: 15
   753                           ;main.c: 110:     INTCONbits.PEIE = 1;
   754   00115E  8CF2               	bsf	242,6,c	;volatile
   755   001160                     
   756                           ; BSR set to: 15
   757                           ;main.c: 111:     RCONbits.IPEN = 1;
   758   001160  8ED0               	bsf	208,7,c	;volatile
   759   001162                     
   760                           ; BSR set to: 15
   761                           ;main.c: 113:     PIE1bits.RC1IE = 1;
   762   001162  8A9D               	bsf	157,5,c	;volatile
   763   001164                     
   764                           ; BSR set to: 15
   765                           ;main.c: 114:     PIR1bits.RC1IF = 0;
   766   001164  9A9E               	bcf	158,5,c	;volatile
   767                           
   768                           ;main.c: 117:     SPBRG = 103;
   769   001166  0E67               	movlw	103
   770   001168  6EAF               	movwf	175,c	;volatile
   771   00116A                     
   772                           ; BSR set to: 15
   773                           ;main.c: 118:     TRISCbits.RC6 = 1;
   774   00116A  8C94               	bsf	148,6,c	;volatile
   775   00116C                     
   776                           ; BSR set to: 15
   777                           ;main.c: 119:     TRISCbits.RC7 = 1;
   778   00116C  8E94               	bsf	148,7,c	;volatile
   779   00116E                     
   780                           ; BSR set to: 15
   781                           ;main.c: 122:     TXSTA1bits.TX91 = 0;
   782   00116E  9CAC               	bcf	172,6,c	;volatile
   783   001170                     
   784                           ; BSR set to: 15
   785                           ;main.c: 123:     TXSTA1bits.TXEN1 = 1;
   786   001170  8AAC               	bsf	172,5,c	;volatile
   787   001172                     
   788                           ; BSR set to: 15
   789                           ;main.c: 124:     TXSTA1bits.SYNC1 = 0;
   790   001172  98AC               	bcf	172,4,c	;volatile
   791   001174                     
   792                           ; BSR set to: 15
   793                           ;main.c: 125:     TXSTA1bits.BRGH1 = 1;
   794   001174  84AC               	bsf	172,2,c	;volatile
   795   001176                     
   796                           ; BSR set to: 15
   797                           ;main.c: 128:     RCSTAbits.SPEN1 = 1;
   798   001176  8EAB               	bsf	171,7,c	;volatile
   799   001178                     
   800                           ; BSR set to: 15
   801                           ;main.c: 129:     RCSTAbits.RX91 = 0;
   802   001178  9CAB               	bcf	171,6,c	;volatile
   803   00117A                     
   804                           ; BSR set to: 15
   805                           ;main.c: 130:     RCSTAbits.CREN1 = 1;
   806   00117A  88AB               	bsf	171,4,c	;volatile
   807   00117C                     
   808                           ; BSR set to: 15
   809                           ;main.c: 133:     BAUDCON1bits.BRG16 = 0;
   810   00117C  96B8               	bcf	184,3,c	;volatile
   811   00117E                     
   812                           ; BSR set to: 15
   813   00117E  0012               	return		;funcret
   814   001180                     __end_of_Configurations:
   815                           	callstack 0
   816                           
   817 ;; *************** function _Interrupt *****************
   818 ;; Defined at:
   819 ;;		line 83 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		None
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        1 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 5
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		Interrupt level 1
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	intcodelo
   848   000018                     __pintcodelo:
   849                           	callstack 0
   850   000018                     _Interrupt:
   851                           	callstack 22
   852                           
   853                           ; BSR set to: 15
   854                           ;incstack = 0
   855   000018  8015               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   856   00001A  CFE0 F00C          	movff	bsr,??_Interrupt
   857   00001E  C00C  FFE0         	movff	??_Interrupt,bsr
   858   000022  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   859   000024  0010               	retfie	
   860   000026                     __end_of_Interrupt:
   861                           	callstack 0
   862                           
   863 ;; *************** function _Interrupt_Rx *****************
   864 ;; Defined at:
   865 ;;		line 71 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;Total ram usage:        4 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 4
   886 ;; This function calls:
   887 ;;		_Receive_Interrupt
   888 ;; This function is called by:
   889 ;;		Interrupt level 2
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	intcode
   894   000008                     __pintcode:
   895                           	callstack 0
   896   000008                     _Interrupt_Rx:
   897                           	callstack 22
   898                           
   899                           ;incstack = 0
   900   000008  8215               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   901   00000A  EF3C  F009         	goto	int_func
   902                           
   903                           	psect	intcode_body
   904   001278                     __pintcode_body:
   905                           	callstack 22
   906   001278                     int_func:
   907                           	callstack 22
   908   001278  CFF6 F008          	movff	tblptrl,??_Interrupt_Rx
   909   00127C  CFF7 F009          	movff	tblptrh,??_Interrupt_Rx+1
   910   001280  CFF8 F00A          	movff	tblptru,??_Interrupt_Rx+2
   911   001284  CFF5 F00B          	movff	tablat,??_Interrupt_Rx+3
   912   001288                     
   913                           ;main.c: 73:     if (PIR1bits.RC1IF) {
   914   001288  AA9E               	btfss	158,5,c	;volatile
   915   00128A  EF49  F009         	goto	i2u16_41
   916   00128E  EF4B  F009         	goto	i2u16_40
   917   001292                     i2u16_41:
   918   001292  EF4D  F009         	goto	i2l62
   919   001296                     i2u16_40:
   920   001296                     
   921                           ;main.c: 75:         Receive_Interrupt();
   922   001296  EC66  F008         	call	_Receive_Interrupt	;wreg free
   923   00129A                     i2l62:
   924   00129A  C00B  FFF5         	movff	??_Interrupt_Rx+3,tablat
   925   00129E  C00A  FFF8         	movff	??_Interrupt_Rx+2,tblptru
   926   0012A2  C009  FFF7         	movff	??_Interrupt_Rx+1,tblptrh
   927   0012A6  C008  FFF6         	movff	??_Interrupt_Rx,tblptrl
   928   0012AA  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   929   0012AC  0011               	retfie		f
   930   0012AE                     __end_of_Interrupt_Rx:
   931                           	callstack 0
   932                           
   933 ;; *************** function _Receive_Interrupt *****************
   934 ;; Defined at:
   935 ;;		line 199 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; Hardware stack levels required when called: 3
   956 ;; This function calls:
   957 ;;		i2_Send_Instruction_Data
   958 ;;		i2_Send_String
   959 ;; This function is called by:
   960 ;;		_Interrupt_Rx
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text8
   965   0010CC                     __ptext8:
   966                           	callstack 0
   967   0010CC                     _Receive_Interrupt:
   968                           	callstack 22
   969   0010CC                     
   970                           ;main.c: 201:     Rx_Buffer = RCREG1;
   971   0010CC  CFAE F014          	movff	4014,_Rx_Buffer	;volatile
   972   0010D0                     
   973                           ;main.c: 203:     if (Rx_Buffer == 'A') {
   974   0010D0  0E41               	movlw	65
   975   0010D2  1814               	xorwf	_Rx_Buffer^0,w,c
   976   0010D4  A4D8               	btfss	status,2,c
   977   0010D6  EF6F  F008         	goto	i2u13_41
   978   0010DA  EF71  F008         	goto	i2u13_40
   979   0010DE                     i2u13_41:
   980   0010DE  EF7C  F008         	goto	i2l983
   981   0010E2                     i2u13_40:
   982   0010E2                     
   983                           ;main.c: 205:         Send_Instruction_Data(0, 0X80);
   984   0010E2  0E80               	movlw	128
   985   0010E4  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   986   0010E6  0E00               	movlw	0
   987   0010E8  EC76  F009         	call	i2_Send_Instruction_Data
   988   0010EC                     
   989                           ;main.c: 206:         Send_String("Data test: A");
   990   0010EC  0E12               	movlw	low STR_2
   991   0010EE  6E05               	movwf	i2Send_String@String^0,c
   992   0010F0  ECE0  F008         	call	i2_Send_String	;wreg free
   993                           
   994                           ;main.c: 208:     } else if (Rx_Buffer == 'B') {
   995   0010F4  EF9E  F008         	goto	i2l93
   996   0010F8                     i2l983:
   997   0010F8  0E42               	movlw	66
   998   0010FA  1814               	xorwf	_Rx_Buffer^0,w,c
   999   0010FC  A4D8               	btfss	status,2,c
  1000   0010FE  EF83  F008         	goto	i2u14_41
  1001   001102  EF85  F008         	goto	i2u14_40
  1002   001106                     i2u14_41:
  1003   001106  EF90  F008         	goto	i2l989
  1004   00110A                     i2u14_40:
  1005   00110A                     
  1006                           ;main.c: 210:         Send_Instruction_Data(0, 0XD4);
  1007   00110A  0ED4               	movlw	212
  1008   00110C  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1009   00110E  0E00               	movlw	0
  1010   001110  EC76  F009         	call	i2_Send_Instruction_Data
  1011   001114                     
  1012                           ;main.c: 211:         Send_String("Platform!");
  1013   001114  0E1F               	movlw	low STR_3
  1014   001116  6E05               	movwf	i2Send_String@String^0,c
  1015   001118  ECE0  F008         	call	i2_Send_String	;wreg free
  1016                           
  1017                           ;main.c: 213:     } else if (Rx_Buffer == 'C') {
  1018   00111C  EF9E  F008         	goto	i2l93
  1019   001120                     i2l989:
  1020   001120  0E43               	movlw	67
  1021   001122  1814               	xorwf	_Rx_Buffer^0,w,c
  1022   001124  A4D8               	btfss	status,2,c
  1023   001126  EF97  F008         	goto	i2u15_41
  1024   00112A  EF99  F008         	goto	i2u15_40
  1025   00112E                     i2u15_41:
  1026   00112E  EF9E  F008         	goto	i2l93
  1027   001132                     i2u15_40:
  1028   001132                     
  1029                           ;main.c: 215:         Send_Instruction_Data(0, 0x01);
  1030   001132  0E01               	movlw	1
  1031   001134  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1032   001136  0E00               	movlw	0
  1033   001138  EC76  F009         	call	i2_Send_Instruction_Data
  1034   00113C                     i2l93:
  1035   00113C  0012               	return		;funcret
  1036   00113E                     __end_of_Receive_Interrupt:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function i2_Send_String *****************
  1040 ;; Defined at:
  1041 ;;		line 189 in file "main.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  String          1    4[COMRAM] PTR unsigned char 
  1044 ;;		 -> STR_3(10), STR_2(13), STR_1(17), 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  i               1    6[COMRAM] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1056 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;Total ram usage:        3 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 2
  1063 ;; This function calls:
  1064 ;;		i2_Send_Instruction_Data
  1065 ;; This function is called by:
  1066 ;;		_Receive_Interrupt
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text9
  1071   0011C0                     __ptext9:
  1072                           	callstack 0
  1073   0011C0                     i2_Send_String:
  1074                           	callstack 22
  1075   0011C0                     
  1076                           ;main.c: 191:     for (uint8_t i = 0; String[i] != '\0'; i++) {
  1077   0011C0  0E00               	movlw	0
  1078   0011C2  6E07               	movwf	i2Send_String@i^0,c
  1079   0011C4  EFF0  F008         	goto	i2l943
  1080   0011C8                     i2l939:
  1081                           
  1082                           ;main.c: 193:         Send_Instruction_Data(1, String[i]);
  1083   0011C8  5005               	movf	i2Send_String@String^0,w,c
  1084   0011CA  2407               	addwf	i2Send_String@i^0,w,c
  1085   0011CC  6E06               	movwf	??i2_Send_String^0,c
  1086   0011CE  C006  FFF6         	movff	??i2_Send_String,tblptrl
  1087   0011D2                     	if	0	;There is only one active tblptr byte
  1088   0011D2                     	endif
  1089   0011D2                     	if	0	;tblptru may be non-zero
  1090   0011D2                     	endif
  1091   0011D2                     	if	0	;tblptru may be non-zero
  1092   0011D2                     	endif
  1093   0011D2  0008               	tblrd		*
  1094   0011D4  CFF5 F003          	movff	tablat,i2Send_Instruction_Data@Data
  1095   0011D8  0E01               	movlw	1
  1096   0011DA  EC76  F009         	call	i2_Send_Instruction_Data
  1097   0011DE                     
  1098                           ;main.c: 195:     }
  1099   0011DE  2A07               	incf	i2Send_String@i^0,f,c
  1100   0011E0                     i2l943:
  1101   0011E0  5005               	movf	i2Send_String@String^0,w,c
  1102   0011E2  2407               	addwf	i2Send_String@i^0,w,c
  1103   0011E4  6E06               	movwf	??i2_Send_String^0,c
  1104   0011E6  C006  FFF6         	movff	??i2_Send_String,tblptrl
  1105   0011EA                     	if	0	;There is only one active tblptr byte
  1106   0011EA                     	endif
  1107   0011EA                     	if	0	;tblptru may be non-zero
  1108   0011EA                     	endif
  1109   0011EA                     	if	0	;tblptru may be non-zero
  1110   0011EA                     	endif
  1111   0011EA  0008               	tblrd		*
  1112   0011EC  50F5               	movf	tablat,w,c
  1113   0011EE  0900               	iorlw	0
  1114   0011F0  A4D8               	btfss	status,2,c
  1115   0011F2  EFFD  F008         	goto	i2u11_41
  1116   0011F6  EFFF  F008         	goto	i2u11_40
  1117   0011FA                     i2u11_41:
  1118   0011FA  EFE4  F008         	goto	i2l939
  1119   0011FE                     i2u11_40:
  1120   0011FE  0012               	return		;funcret
  1121   001200                     __end_ofi2_Send_String:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function i2_Send_Instruction_Data *****************
  1125 ;; Defined at:
  1126 ;;		line 167 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  Instruction     1    wreg     unsigned char 
  1129 ;;  Data            1    2[COMRAM] unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  Instruction     1    3[COMRAM] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1141 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;Total ram usage:        2 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 1
  1148 ;; This function calls:
  1149 ;;		i2_LCD_Instruction
  1150 ;; This function is called by:
  1151 ;;		_Receive_Interrupt
  1152 ;;		i2_Send_String
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text10
  1157   0012EC                     __ptext10:
  1158                           	callstack 0
  1159   0012EC                     i2_Send_Instruction_Data:
  1160                           	callstack 22
  1161                           
  1162                           ;incstack = 0
  1163                           ;i2Send_Instruction_Data@Instruction stored from wreg
  1164   0012EC  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
  1165   0012EE                     
  1166                           ;main.c: 169:     LATCbits.LATC4 = Instruction;
  1167   0012EE  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
  1168   0012F0  D002               	bra	i2u9_45
  1169   0012F2  988B               	bcf	139,4,c	;volatile
  1170   0012F4  D001               	bra	i2u9_46
  1171   0012F6                     i2u9_45:
  1172   0012F6  888B               	bsf	139,4,c	;volatile
  1173   0012F8                     i2u9_46:
  1174   0012F8                     
  1175                           ;main.c: 170:     LCD_Instruction(Data >> 4);
  1176   0012F8  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
  1177   0012FA  0B0F               	andlw	15
  1178   0012FC  EC1E  F009         	call	i2_LCD_Instruction
  1179   001300                     
  1180                           ;main.c: 171:     LCD_Instruction(Data);
  1181   001300  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
  1182   001302  EC1E  F009         	call	i2_LCD_Instruction
  1183   001306  0012               	return		;funcret
  1184   001308                     __end_ofi2_Send_Instruction_Data:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function i2_LCD_Instruction *****************
  1188 ;; Defined at:
  1189 ;;		line 176 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  Instruction     1    wreg     unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  Instruction     1    1[COMRAM] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		i2_Send_Instruction_Data
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text11
  1217   00123C                     __ptext11:
  1218                           	callstack 0
  1219   00123C                     i2_LCD_Instruction:
  1220                           	callstack 22
  1221                           
  1222                           ;incstack = 0
  1223                           ;i2LCD_Instruction@Instruction stored from wreg
  1224   00123C  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
  1225   00123E                     
  1226                           ;main.c: 178:     LATCbits.LATC5 = 1;
  1227   00123E  8A8B               	bsf	139,5,c	;volatile
  1228   001240                     
  1229                           ;main.c: 179:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1230   001240  0E4E               	movlw	78
  1231   001242  6E01               	movwf	??i2_LCD_Instruction^0,c
  1232   001244  0EEB               	movlw	235
  1233   001246                     i2u24_47:
  1234   001246  2EE8               	decfsz	wreg,f,c
  1235   001248  D7FE               	bra	i2u24_47
  1236   00124A  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1237   00124C  D7FC               	bra	i2u24_47
  1238   00124E  0000               	nop	
  1239   001250                     
  1240                           ;main.c: 180:     LATD = Instruction;
  1241   001250  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  1242   001254                     
  1243                           ;main.c: 181:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1244   001254  0E4E               	movlw	78
  1245   001256  6E01               	movwf	??i2_LCD_Instruction^0,c
  1246   001258  0EEB               	movlw	235
  1247   00125A                     i2u25_47:
  1248   00125A  2EE8               	decfsz	wreg,f,c
  1249   00125C  D7FE               	bra	i2u25_47
  1250   00125E  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1251   001260  D7FC               	bra	i2u25_47
  1252   001262  0000               	nop	
  1253   001264                     
  1254                           ;main.c: 182:     LATCbits.LATC5 = 0;
  1255   001264  9A8B               	bcf	139,5,c	;volatile
  1256   001266                     
  1257                           ;main.c: 183:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1258   001266  0E4E               	movlw	78
  1259   001268  6E01               	movwf	??i2_LCD_Instruction^0,c
  1260   00126A  0EEB               	movlw	235
  1261   00126C                     i2u26_47:
  1262   00126C  2EE8               	decfsz	wreg,f,c
  1263   00126E  D7FE               	bra	i2u26_47
  1264   001270  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1265   001272  D7FC               	bra	i2u26_47
  1266   001274  0000               	nop	
  1267   001276  0012               	return		;funcret
  1268   001278                     __end_ofi2_LCD_Instruction:
  1269                           	callstack 0
  1270                           
  1271                           	psect	rparam
  1272   000000                     
  1273                           	psect	temp
  1274   000015                     btemp:
  1275                           	callstack 0
  1276   000015                     	ds	1
  1277   000000                     int$flags	set	btemp
  1278   000000                     wtemp8	set	btemp+1
  1279   000000                     ttemp5	set	btemp+1
  1280   000000                     ttemp6	set	btemp+4
  1281   000000                     ttemp7	set	btemp+8
  1282                           
  1283                           	psect	config
  1284                           
  1285                           ; Padding undefined space
  1286   300000                     	org	3145728
  1287   300000  FF                 	db	255
  1288                           
  1289                           ;Config register CONFIG1H @ 0x300001
  1290                           ;	Oscillator Selection bits
  1291                           ;	FOSC = INTIO67, Internal oscillator block
  1292                           ;	4X PLL Enable
  1293                           ;	PLLCFG = OFF, Oscillator used directly
  1294                           ;	Primary clock enable bit
  1295                           ;	PRICLKEN = ON, Primary clock is always enabled
  1296                           ;	Fail-Safe Clock Monitor Enable bit
  1297                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1298                           ;	Internal/External Oscillator Switchover bit
  1299                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1300   300001                     	org	3145729
  1301   300001  28                 	db	40
  1302                           
  1303                           ;Config register CONFIG2L @ 0x300002
  1304                           ;	Power-up Timer Enable bit
  1305                           ;	PWRTEN = OFF, Power up timer disabled
  1306                           ;	Brown-out Reset Enable bits
  1307                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1308                           ;	Brown Out Reset Voltage bits
  1309                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1310   300002                     	org	3145730
  1311   300002  1F                 	db	31
  1312                           
  1313                           ;Config register CONFIG2H @ 0x300003
  1314                           ;	Watchdog Timer Enable bits
  1315                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1316                           ;	Watchdog Timer Postscale Select bits
  1317                           ;	WDTPS = 32768, 1:32768
  1318   300003                     	org	3145731
  1319   300003  3C                 	db	60
  1320                           
  1321                           ; Padding undefined space
  1322   300004                     	org	3145732
  1323   300004  FF                 	db	255
  1324                           
  1325                           ;Config register CONFIG3H @ 0x300005
  1326                           ;	CCP2 MUX bit
  1327                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1328                           ;	PORTB A/D Enable bit
  1329                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1330                           ;	P3A/CCP3 Mux bit
  1331                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1332                           ;	HFINTOSC Fast Start-up
  1333                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1334                           ;	Timer3 Clock input mux bit
  1335                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1336                           ;	ECCP2 B output mux bit
  1337                           ;	P2BMX = PORTD2, P2B is on RD2
  1338                           ;	MCLR Pin Enable bit
  1339                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1340   300005                     	org	3145733
  1341   300005  BF                 	db	191
  1342                           
  1343                           ;Config register CONFIG4L @ 0x300006
  1344                           ;	Stack Full/Underflow Reset Enable bit
  1345                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1346                           ;	Single-Supply ICSP Enable bit
  1347                           ;	LVP = OFF, Single-Supply ICSP disabled
  1348                           ;	Extended Instruction Set Enable bit
  1349                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1350                           ;	Background Debug
  1351                           ;	DEBUG = 0x1, unprogrammed default
  1352   300006                     	org	3145734
  1353   300006  81                 	db	129
  1354                           
  1355                           ; Padding undefined space
  1356   300007                     	org	3145735
  1357   300007  FF                 	db	255
  1358                           
  1359                           ;Config register CONFIG5L @ 0x300008
  1360                           ;	Code Protection Block 0
  1361                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1362                           ;	Code Protection Block 1
  1363                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1364                           ;	Code Protection Block 2
  1365                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1366                           ;	Code Protection Block 3
  1367                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1368   300008                     	org	3145736
  1369   300008  0F                 	db	15
  1370                           
  1371                           ;Config register CONFIG5H @ 0x300009
  1372                           ;	Boot Block Code Protection bit
  1373                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1374                           ;	Data EEPROM Code Protection bit
  1375                           ;	CPD = OFF, Data EEPROM not code-protected
  1376   300009                     	org	3145737
  1377   300009  C0                 	db	192
  1378                           
  1379                           ;Config register CONFIG6L @ 0x30000A
  1380                           ;	Write Protection Block 0
  1381                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1382                           ;	Write Protection Block 1
  1383                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1384                           ;	Write Protection Block 2
  1385                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1386                           ;	Write Protection Block 3
  1387                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1388   30000A                     	org	3145738
  1389   30000A  0F                 	db	15
  1390                           
  1391                           ;Config register CONFIG6H @ 0x30000B
  1392                           ;	Configuration Register Write Protection bit
  1393                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1394                           ;	Boot Block Write Protection bit
  1395                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1396                           ;	Data EEPROM Write Protection bit
  1397                           ;	WRTD = OFF, Data EEPROM not write-protected
  1398   30000B                     	org	3145739
  1399   30000B  E0                 	db	224
  1400                           
  1401                           ;Config register CONFIG7L @ 0x30000C
  1402                           ;	Table Read Protection Block 0
  1403                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1404                           ;	Table Read Protection Block 1
  1405                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1406                           ;	Table Read Protection Block 2
  1407                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1408                           ;	Table Read Protection Block 3
  1409                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1410   30000C                     	org	3145740
  1411   30000C  0F                 	db	15
  1412                           
  1413                           ;Config register CONFIG7H @ 0x30000D
  1414                           ;	Boot Block Table Read Protection bit
  1415                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1416   30000D                     	org	3145741
  1417   30000D  40                 	db	64
  1418                           tosu	equ	0xFFF
  1419                           tosh	equ	0xFFE
  1420                           tosl	equ	0xFFD
  1421                           stkptr	equ	0xFFC
  1422                           pclatu	equ	0xFFB
  1423                           pclath	equ	0xFFA
  1424                           pcl	equ	0xFF9
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           prodh	equ	0xFF4
  1430                           prodl	equ	0xFF3
  1431                           indf0	equ	0xFEF
  1432                           postinc0	equ	0xFEE
  1433                           postdec0	equ	0xFED
  1434                           preinc0	equ	0xFEC
  1435                           plusw0	equ	0xFEB
  1436                           fsr0h	equ	0xFEA
  1437                           fsr0l	equ	0xFE9
  1438                           wreg	equ	0xFE8
  1439                           indf1	equ	0xFE7
  1440                           postinc1	equ	0xFE6
  1441                           postdec1	equ	0xFE5
  1442                           preinc1	equ	0xFE4
  1443                           plusw1	equ	0xFE3
  1444                           fsr1h	equ	0xFE2
  1445                           fsr1l	equ	0xFE1
  1446                           bsr	equ	0xFE0
  1447                           indf2	equ	0xFDF
  1448                           postinc2	equ	0xFDE
  1449                           postdec2	equ	0xFDD
  1450                           preinc2	equ	0xFDC
  1451                           plusw2	equ	0xFDB
  1452                           fsr2h	equ	0xFDA
  1453                           fsr2l	equ	0xFD9
  1454                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[13]), STR_3(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Receive_Interrupt->i2_Send_String
    i2_Send_String->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3239
                     _Configurations
                           _Init_LCD
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          3     2      1    1257
                                             16 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     991
                                             16 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     991
                                             14 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         4     4      0     526
                                              7 COMRAM     4     4      0
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Receive_Interrupt                                    0     0      0     526
            i2_Send_Instruction_Data
                      i2_Send_String
 ---------------------------------------------------------------------------------
 (7) i2_Send_String                                        3     2      1     334
                                              4 COMRAM     3     2      1
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (8) i2_Send_Instruction_Data                              2     1      1     192
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Send_Instruction_Data
   _Send_String
     _Send_Instruction_Data

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     i2_Send_Instruction_Data
       i2_LCD_Instruction
     i2_Send_String
       i2_Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      14       1       21.3%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRhllhh      17      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      42        0.0%
BITBIGSFRhllhl       8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhh         7      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRhlllh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      47        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 21 16:37:36 2024

                                l53 12C8                                  l70 117E  
                                l54 12C8                                  l73 10CA  
                                l76 12EA                                  l85 11BE  
                                l79 123A                   Send_String@String 0011  
                                bsr 0FE0                                 l821 1156  
                               l813 113E                                 l831 1164  
                               l823 115C                                 l815 114C  
                               l841 1172                                 l833 116A  
                               l825 115E                                 l817 114E  
                               l851 117C                                 l843 1174  
                               l835 116C                                 l827 1160  
                               l819 1154                                 l931 12D2  
                               l845 1176                                 l837 116E  
                               l829 1162                                 l781 1202  
                               l933 12DC                                 l847 1178  
                               l839 1170                                 l791 122A  
                               l783 1204                                 l935 12E4  
                               l951 1066                                 l849 117A  
                               l785 1214                                 l961 109E  
                               l953 1076                                 l945 102A  
                               l787 1218                                 l963 10A8  
                               l955 1080                                 l947 1042  
                               l971 119E                                 l789 1228  
                               l965 10B2                                 l957 108A  
                               l949 104C                                 l973 11A0  
                               l959 1094                                 l967 1180  
                               l969 1188                                 l993 12AE  
                               l995 12B2                                 l997 12B6  
                               l999 12C0                                 u120 11BE  
                               u105 12DA                                 u121 11BA  
                               u106 12DC                                 u207 10BC  
                               u217 120A                                 u227 121E  
                               u237 1230                                 u177 1034  
                               u187 1052                                 u197 106C  
                    ?i2_Send_String 0005         i2Send_Instruction_Data@Data 0003  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                              STR_1 1001                                STR_2 1012  
                              STR_3 101F                                _LATD 0F8C  
                              i1l67 001E                                i2l62 129A  
                              i2l76 1306                                i2l85 11FE  
                              i2l93 113C                                i2l79 1276  
                              _main 12AE                                btemp 0015  
                              start 0026                        ___param_bank 0000  
                   _LCD_Instruction 1200    Send_Instruction_Data@Instruction 0010  
i2Send_Instruction_Data@Instruction 0004                        _BAUDCON1bits 0FB8  
                             ?_main 0001                               i2l921 1264  
                             i2l913 123E                               i2l923 1266  
                             i2l915 1240                               i2l917 1250  
                             i2l925 12EE                               i2l941 11DE  
                             i2l919 1254                               i2l927 12F8  
                             i2l943 11E0                               i2l929 1300  
                             i2l937 11C0                               i2l939 11C8  
                             i2l981 10EC                               i2l991 1132  
                             i2l983 10F8                               i2l975 10CC  
                             i2l985 110A                               i2l977 10D0  
                             i2l987 1114                               i2l979 10E2  
                             i2l989 1120                               _SPBRG 0FAF  
                             _TRISD 0F95        i2LCD_Instruction@Instruction 0002  
                             tablat 0FF5                               ttemp5 0016  
                             ttemp6 0019                               ttemp7 001D  
                             status 0FD8                               wtemp8 0016  
                   __initialization 1308                        __end_of_main 12D0  
                  __end_of_Init_LCD 10CC               _Send_Instruction_Data 12D0  
                   ??i2_Send_String 0006                              ??_main 0014  
                     ??_Send_String 0012                       __activetblptr 0001  
                            _ANSELC 0F3A                              _ANSELD 0F3B  
                            i2l1001 1288                              i2l1003 1296  
                            _RCREG1 0FAE          LCD_Instruction@Instruction 000E  
                            _OSCCON 0FD3                              i2u9_45 12F6  
                            i2u9_46 12F8                       ?_Interrupt_Rx 0001  
           __end_of_LCD_Instruction 123C                              isa$std 0001  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
               __end_of_Send_String 11C0                          __accesstop 0060  
           __end_of__initialization 130A                      ??_Interrupt_Rx 0008  
                     ___rparam_used 0001                      __pcstackCOMRAM 0001  
                 _Receive_Interrupt 10CC              ?_Send_Instruction_Data 000F  
                ?_Receive_Interrupt 0001                 ??_Receive_Interrupt 0008  
                 __end_of_Interrupt 0026                           ?_Init_LCD 0001  
                  ?_LCD_Instruction 0001           __end_of_Receive_Interrupt 113E  
           i2_Send_Instruction_Data 12EC                         _Send_String 1180  
                           i2u11_40 11FE                             i2u11_41 11FA  
                           i2u13_40 10E2                             i2u13_41 10DE  
                           i2u14_40 110A                             i2u14_41 1106  
                           i2u15_40 1132                             i2u15_41 112E  
                           i2u16_40 1296                             i2u16_41 1292  
                           i2u24_47 1246                             i2u25_47 125A  
                           i2u26_47 126C                          ??_Init_LCD 0011  
                           __Hparam 0000                             __Lparam 0000  
                      __psmallconst 1000                             __pcinit 1308  
                           __ramtop 1000                             __ptext0 12AE  
                           __ptext1 1180                             __ptext2 102A  
                           __ptext3 12D0                             __ptext4 1200  
                           __ptext5 113E                             __ptext8 10CC  
                           __ptext9 11C0                __end_of_Interrupt_Rx 12AE  
                    __pintcode_body 1278                end_of_initialization 130A  
                           int_func 1278           ??i2_Send_Instruction_Data 0004  
                         _RCSTAbits 0FAB               __end_ofi2_Send_String 1200  
                         _TRISCbits 0F94             ??_Send_Instruction_Data 0010  
               start_initialization 1308                        Send_String@i 0013  
         Send_Instruction_Data@Data 000F                      _Configurations 113E  
                         _Interrupt 0018                           _Rx_Buffer 0014  
                      ?_Send_String 0011                         __pbssCOMRAM 0014  
            __end_of_Configurations 1180                          ?_Interrupt 0001  
                      _Interrupt_Rx 0008                           __pintcode 0008  
                       __pintcodelo 0018                         __smallconst 1000  
                   ?_Configurations 0001                 i2Send_String@String 0005  
                          _LATCbits 0F8B                            _PIE1bits 0F9D  
                          _PIR1bits 0F9E                            _RCONbits 0FD0  
                 i2_LCD_Instruction 123C                  ?i2_LCD_Instruction 0001  
                    i2Send_String@i 0007                 ??i2_LCD_Instruction 0001  
                       ??_Interrupt 000C                            _Init_LCD 102A  
                          __Hrparam 0000                            __Lrparam 0000  
                      __Lsmallconst 1000       __end_of_Send_Instruction_Data 12EC  
         __end_ofi2_LCD_Instruction 1278                   ??_LCD_Instruction 000D  
                          __ptext10 12EC                            __ptext11 123C  
          ?i2_Send_Instruction_Data 0003                            isa$xinst 0000  
                          int$flags 0015                          _INTCONbits 0FF2  
                          intlevel1 0000                            intlevel2 0000  
                  ??_Configurations 000D                       i2_Send_String 11C0  
   __end_ofi2_Send_Instruction_Data 1308  
