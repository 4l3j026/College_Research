

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 21 17:27:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F46K22 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _LATEbits	set	3981
    60   000000                     _ANSELC	set	3898
    61   000000                     _PIR1bits	set	3998
    62   000000                     _RCSTAbits	set	4011
    63   000000                     _TXSTA1bits	set	4012
    64   000000                     _SPBRG	set	4015
    65   000000                     _RCONbits	set	4048
    66   000000                     _OSCCON	set	4051
    67   000000                     _INTCONbits	set	4082
    68   000000                     _LATCbits	set	3979
    69   000000                     _TRISCbits	set	3988
    70   000000                     _ANSELE	set	3900
    71   000000                     _ANSELD	set	3899
    72   000000                     _PIE1bits	set	3997
    73   000000                     _TRISE	set	3990
    74   000000                     _TRISD	set	3989
    75   000000                     _LATE	set	3981
    76   000000                     _LATD	set	3980
    77   000000                     _BAUDCON1bits	set	4024
    78   000000                     _RCREG1	set	4014
    79                           
    80                           	psect	smallconst
    81   001000                     __psmallconst:
    82                           	callstack 0
    83   001000  00                 	db	0
    84   001001                     STR_1:
    85   001001  52                 	db	82	;'R'
    86   001002  6F                 	db	111	;'o'
    87   001003  62                 	db	98	;'b'
    88   001004  6F                 	db	111	;'o'
    89   001005  74                 	db	116	;'t'
    90   001006  69                 	db	105	;'i'
    91   001007  63                 	db	99	;'c'
    92   001008  20                 	db	32
    93   001009  50                 	db	80	;'P'
    94   00100A  6C                 	db	108	;'l'
    95   00100B  61                 	db	97	;'a'
    96   00100C  74                 	db	116	;'t'
    97   00100D  66                 	db	102	;'f'
    98   00100E  6F                 	db	111	;'o'
    99   00100F  72                 	db	114	;'r'
   100   001010  6D                 	db	109	;'m'
   101   001011  00                 	db	0
   102   001012  00                 	db	0	; dummy byte at the end
   103   000000                     
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107   001218                     __pcinit:
   108                           	callstack 0
   109   001218                     start_initialization:
   110                           	callstack 0
   111   001218                     __initialization:
   112                           	callstack 0
   113                           
   114                           ; Clear objects allocated to COMRAM (1 bytes)
   115   001218  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   116   00121A                     end_of_initialization:
   117                           	callstack 0
   118   00121A                     __end_of__initialization:
   119                           	callstack 0
   120   00121A  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121   00121C  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122   00121E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   123   001220  6EF8               	movwf	tblptru,c
   124   001222  0100               	movlb	0
   125   001224  EFE2  F008         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128   00000A                     __pbssCOMRAM:
   129                           	callstack 0
   130   00000A                     _Rx_Buffer:
   131                           	callstack 0
   132   00000A                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135   000001                     __pcstackCOMRAM:
   136                           	callstack 0
   137   000001                     Moving_Platform@Command:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x0
   141   000001                     	ds	1
   142   000002                     ??_Interrupt:
   143                           
   144                           ; 1 bytes @ 0x1
   145   000002                     	ds	1
   146   000003                     ??_LCD_Instruction:
   147                           
   148                           ; 1 bytes @ 0x2
   149   000003                     	ds	1
   150   000004                     LCD_Instruction@Instruction:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x3
   154   000004                     	ds	1
   155   000005                     Send_Instruction_Data@Data:
   156                           	callstack 0
   157                           
   158                           ; 1 bytes @ 0x4
   159   000005                     	ds	1
   160   000006                     Send_Instruction_Data@Instruction:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x5
   164   000006                     	ds	1
   165   000007                     ??_Init_LCD:
   166   000007                     Send_String@String:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x6
   170   000007                     	ds	1
   171   000008                     ??_Send_String:
   172                           
   173                           ; 1 bytes @ 0x7
   174   000008                     	ds	1
   175   000009                     Send_String@i:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x8
   179   000009                     	ds	1
   180   00000A                     
   181                           ; 1 bytes @ 0x9
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 54 in file "main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   205 ;;Total ram usage:        0 bytes
   206 ;; Hardware stack levels required when called: 7
   207 ;; This function calls:
   208 ;;		_Configurations
   209 ;;		_Init_LCD
   210 ;;		_Send_Instruction_Data
   211 ;;		_Send_String
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text0
   218   0011C4                     __ptext0:
   219                           	callstack 0
   220   0011C4                     _main:
   221                           	callstack 24
   222   0011C4                     
   223                           ;main.c: 57:     Configurations();
   224   0011C4  EC5B  F008         	call	_Configurations	;wreg free
   225   0011C8                     
   226                           ;main.c: 58:     Init_LCD();
   227   0011C8  EC0A  F008         	call	_Init_LCD	;wreg free
   228   0011CC                     
   229                           ;main.c: 60:     Send_Instruction_Data(0, 0xC0);
   230   0011CC  0EC0               	movlw	192
   231   0011CE  6E05               	movwf	Send_Instruction_Data@Data^0,c
   232   0011D0  0E00               	movlw	0
   233   0011D2  ECF3  F008         	call	_Send_Instruction_Data
   234   0011D6                     
   235                           ;main.c: 61:     Send_String("Robotic Platform");
   236   0011D6  0E01               	movlw	low STR_1
   237   0011D8  6E07               	movwf	Send_String@String^0,c
   238   0011DA  EC82  F008         	call	_Send_String	;wreg free
   239   0011DE                     l63:
   240   0011DE  EFEF  F008         	goto	l63
   241   0011E2  EF13  F000         	goto	start
   242   0011E6                     __end_of_main:
   243                           	callstack 0
   244                           
   245 ;; *************** function _Send_String *****************
   246 ;; Defined at:
   247 ;;		line 194 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;  String          1    6[COMRAM] PTR unsigned char 
   250 ;;		 -> STR_1(17), 
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  i               1    8[COMRAM] unsigned char 
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;Total ram usage:        3 bytes
   267 ;; Hardware stack levels used: 1
   268 ;; Hardware stack levels required when called: 6
   269 ;; This function calls:
   270 ;;		_Send_Instruction_Data
   271 ;; This function is called by:
   272 ;;		_main
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text1
   277   001104                     __ptext1:
   278                           	callstack 0
   279   001104                     _Send_String:
   280                           	callstack 24
   281   001104                     
   282                           ;main.c: 196:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   283   001104  0E00               	movlw	0
   284   001106  6E09               	movwf	Send_String@i^0,c
   285   001108  EF94  F008         	goto	l932
   286   00110C                     l928:
   287                           
   288                           ;main.c: 198:         Send_Instruction_Data(1, String[i]);
   289   00110C  5007               	movf	Send_String@String^0,w,c
   290   00110E  2409               	addwf	Send_String@i^0,w,c
   291   001110  6E08               	movwf	??_Send_String^0,c
   292   001112  C008  FFF6         	movff	??_Send_String,tblptrl
   293   001116                     	if	1	;There is more than 1 active tblptr byte
   294   001116  0E10               	movlw	high __smallconst
   295   001118  6EF7               	movwf	tblptrh,c
   296   00111A                     	endif
   297   00111A                     	if	0	;tblptru may be non-zero
   298   00111A                     	endif
   299   00111A                     	if	0	;tblptru may be non-zero
   300   00111A                     	endif
   301   00111A  0008               	tblrd		*
   302   00111C  CFF5 F005          	movff	tablat,Send_Instruction_Data@Data
   303   001120  0E01               	movlw	1
   304   001122  ECF3  F008         	call	_Send_Instruction_Data
   305   001126                     
   306                           ;main.c: 200:     }
   307   001126  2A09               	incf	Send_String@i^0,f,c
   308   001128                     l932:
   309   001128  5007               	movf	Send_String@String^0,w,c
   310   00112A  2409               	addwf	Send_String@i^0,w,c
   311   00112C  6E08               	movwf	??_Send_String^0,c
   312   00112E  C008  FFF6         	movff	??_Send_String,tblptrl
   313   001132                     	if	1	;There is more than 1 active tblptr byte
   314   001132  0E10               	movlw	high __smallconst
   315   001134  6EF7               	movwf	tblptrh,c
   316   001136                     	endif
   317   001136                     	if	0	;tblptru may be non-zero
   318   001136                     	endif
   319   001136                     	if	0	;tblptru may be non-zero
   320   001136                     	endif
   321   001136  0008               	tblrd		*
   322   001138  50F5               	movf	tablat,w,c
   323   00113A  0900               	iorlw	0
   324   00113C  A4D8               	btfss	status,2,c
   325   00113E  EFA3  F008         	goto	u51
   326   001142  EFA5  F008         	goto	u50
   327   001146                     u51:
   328   001146  EF86  F008         	goto	l928
   329   00114A                     u50:
   330   00114A  0012               	return		;funcret
   331   00114C                     __end_of_Send_String:
   332                           	callstack 0
   333                           
   334 ;; *************** function _Init_LCD *****************
   335 ;; Defined at:
   336 ;;		line 153 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        2 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 6
   357 ;; This function calls:
   358 ;;		_Send_Instruction_Data
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text2
   365   001014                     __ptext2:
   366                           	callstack 0
   367   001014                     _Init_LCD:
   368                           	callstack 24
   369   001014                     
   370                           ;main.c: 155:     _delay((unsigned long)((60)*(16000000/4000.0)));
   371   001014  0E02               	movlw	2
   372   001016  6E08               	movwf	(??_Init_LCD+1)^0,c
   373   001018  0E38               	movlw	56
   374   00101A  6E07               	movwf	??_Init_LCD^0,c
   375   00101C  0EAD               	movlw	173
   376   00101E                     u67:
   377   00101E  2EE8               	decfsz	wreg,f,c
   378   001020  D7FE               	bra	u67
   379   001022  2E07               	decfsz	??_Init_LCD^0,f,c
   380   001024  D7FC               	bra	u67
   381   001026  2E08               	decfsz	(??_Init_LCD+1)^0,f,c
   382   001028  D7FA               	bra	u67
   383   00102A  0000               	nop	
   384   00102C                     
   385                           ;main.c: 156:     Send_Instruction_Data(0, 0x30);
   386   00102C  0E30               	movlw	48
   387   00102E  6E05               	movwf	Send_Instruction_Data@Data^0,c
   388   001030  0E00               	movlw	0
   389   001032  ECF3  F008         	call	_Send_Instruction_Data
   390   001036                     
   391                           ;main.c: 157:     _delay((unsigned long)((5)*(16000000/4000.0)));
   392   001036  0E1A               	movlw	26
   393   001038  6E07               	movwf	??_Init_LCD^0,c
   394   00103A  0EF8               	movlw	248
   395   00103C                     u77:
   396   00103C  2EE8               	decfsz	wreg,f,c
   397   00103E  D7FE               	bra	u77
   398   001040  2E07               	decfsz	??_Init_LCD^0,f,c
   399   001042  D7FC               	bra	u77
   400   001044  D000               	nop2	
   401                           
   402                           ;main.c: 158:     Send_Instruction_Data(0, 0x30);
   403   001046  0E30               	movlw	48
   404   001048  6E05               	movwf	Send_Instruction_Data@Data^0,c
   405   00104A  0E00               	movlw	0
   406   00104C  ECF3  F008         	call	_Send_Instruction_Data
   407   001050                     
   408                           ;main.c: 159:     _delay((unsigned long)((5)*(16000000/4000.0)));
   409   001050  0E1A               	movlw	26
   410   001052  6E07               	movwf	??_Init_LCD^0,c
   411   001054  0EF8               	movlw	248
   412   001056                     u87:
   413   001056  2EE8               	decfsz	wreg,f,c
   414   001058  D7FE               	bra	u87
   415   00105A  2E07               	decfsz	??_Init_LCD^0,f,c
   416   00105C  D7FC               	bra	u87
   417   00105E  D000               	nop2	
   418   001060                     
   419                           ;main.c: 160:     Send_Instruction_Data(0, 0x30);
   420   001060  0E30               	movlw	48
   421   001062  6E05               	movwf	Send_Instruction_Data@Data^0,c
   422   001064  0E00               	movlw	0
   423   001066  ECF3  F008         	call	_Send_Instruction_Data
   424   00106A                     
   425                           ;main.c: 161:     Send_Instruction_Data(0, 0x02);
   426   00106A  0E02               	movlw	2
   427   00106C  6E05               	movwf	Send_Instruction_Data@Data^0,c
   428   00106E  0E00               	movlw	0
   429   001070  ECF3  F008         	call	_Send_Instruction_Data
   430   001074                     
   431                           ;main.c: 162:     Send_Instruction_Data(0, 0x06);
   432   001074  0E06               	movlw	6
   433   001076  6E05               	movwf	Send_Instruction_Data@Data^0,c
   434   001078  0E00               	movlw	0
   435   00107A  ECF3  F008         	call	_Send_Instruction_Data
   436   00107E                     
   437                           ;main.c: 163:     Send_Instruction_Data(0, 0x0F);
   438   00107E  0E0F               	movlw	15
   439   001080  6E05               	movwf	Send_Instruction_Data@Data^0,c
   440   001082  0E00               	movlw	0
   441   001084  ECF3  F008         	call	_Send_Instruction_Data
   442   001088                     
   443                           ;main.c: 164:     Send_Instruction_Data(0, 0x28);
   444   001088  0E28               	movlw	40
   445   00108A  6E05               	movwf	Send_Instruction_Data@Data^0,c
   446   00108C  0E00               	movlw	0
   447   00108E  ECF3  F008         	call	_Send_Instruction_Data
   448   001092                     
   449                           ;main.c: 165:     Send_Instruction_Data(0, 0x01);
   450   001092  0E01               	movlw	1
   451   001094  6E05               	movwf	Send_Instruction_Data@Data^0,c
   452   001096  0E00               	movlw	0
   453   001098  ECF3  F008         	call	_Send_Instruction_Data
   454   00109C                     
   455                           ;main.c: 166:     _delay((unsigned long)((100)*(16000000/4000.0)));
   456   00109C  0E03               	movlw	3
   457   00109E  6E08               	movwf	(??_Init_LCD+1)^0,c
   458   0010A0  0E08               	movlw	8
   459   0010A2  6E07               	movwf	??_Init_LCD^0,c
   460   0010A4  0E77               	movlw	119
   461   0010A6                     u97:
   462   0010A6  2EE8               	decfsz	wreg,f,c
   463   0010A8  D7FE               	bra	u97
   464   0010AA  2E07               	decfsz	??_Init_LCD^0,f,c
   465   0010AC  D7FC               	bra	u97
   466   0010AE  2E08               	decfsz	(??_Init_LCD+1)^0,f,c
   467   0010B0  D7FA               	bra	u97
   468   0010B2  0000               	nop	
   469   0010B4  0012               	return		;funcret
   470   0010B6                     __end_of_Init_LCD:
   471                           	callstack 0
   472                           
   473 ;; *************** function _Send_Instruction_Data *****************
   474 ;; Defined at:
   475 ;;		line 172 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  Instruction     1    wreg     unsigned char 
   478 ;;  Data            1    4[COMRAM] unsigned char 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  Instruction     1    5[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 5
   497 ;; This function calls:
   498 ;;		_LCD_Instruction
   499 ;; This function is called by:
   500 ;;		_main
   501 ;;		_Init_LCD
   502 ;;		_Send_String
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text3
   507   0011E6                     __ptext3:
   508                           	callstack 0
   509   0011E6                     _Send_Instruction_Data:
   510                           	callstack 24
   511                           
   512                           ;incstack = 0
   513                           ;Send_Instruction_Data@Instruction stored from wreg
   514   0011E6  6E06               	movwf	Send_Instruction_Data@Instruction^0,c
   515   0011E8                     
   516                           ;main.c: 174:     LATCbits.LATC4 = Instruction;
   517   0011E8  B006               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   518   0011EA  D002               	bra	u45
   519   0011EC  988B               	bcf	139,4,c	;volatile
   520   0011EE  D001               	bra	u46
   521   0011F0                     u45:
   522   0011F0  888B               	bsf	139,4,c	;volatile
   523   0011F2                     u46:
   524   0011F2                     
   525                           ;main.c: 175:     LCD_Instruction(Data >> 4);
   526   0011F2  3805               	swapf	Send_Instruction_Data@Data^0,w,c
   527   0011F4  0B0F               	andlw	15
   528   0011F6  ECA6  F008         	call	_LCD_Instruction
   529   0011FA                     
   530                           ;main.c: 176:     LCD_Instruction(Data);
   531   0011FA  5005               	movf	Send_Instruction_Data@Data^0,w,c
   532   0011FC  ECA6  F008         	call	_LCD_Instruction
   533   001200  0012               	return		;funcret
   534   001202                     __end_of_Send_Instruction_Data:
   535                           	callstack 0
   536                           
   537 ;; *************** function _LCD_Instruction *****************
   538 ;; Defined at:
   539 ;;		line 181 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  Instruction     1    wreg     unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  Instruction     1    3[COMRAM] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        2 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 4
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_Send_Instruction_Data
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text4
   568   00114C                     __ptext4:
   569                           	callstack 0
   570   00114C                     _LCD_Instruction:
   571                           	callstack 24
   572                           
   573                           ;incstack = 0
   574                           ;LCD_Instruction@Instruction stored from wreg
   575   00114C  6E04               	movwf	LCD_Instruction@Instruction^0,c
   576   00114E                     
   577                           ;main.c: 183:     LATCbits.LATC5 = 1;
   578   00114E  8A8B               	bsf	139,5,c	;volatile
   579   001150                     
   580                           ;main.c: 184:     _delay((unsigned long)((15)*(16000000/4000.0)));
   581   001150  0E4E               	movlw	78
   582   001152  6E03               	movwf	??_LCD_Instruction^0,c
   583   001154  0EEB               	movlw	235
   584   001156                     u107:
   585   001156  2EE8               	decfsz	wreg,f,c
   586   001158  D7FE               	bra	u107
   587   00115A  2E03               	decfsz	??_LCD_Instruction^0,f,c
   588   00115C  D7FC               	bra	u107
   589   00115E  0000               	nop	
   590   001160                     
   591                           ;main.c: 185:     LATD = Instruction;
   592   001160  C004  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   593   001164                     
   594                           ;main.c: 186:     _delay((unsigned long)((15)*(16000000/4000.0)));
   595   001164  0E4E               	movlw	78
   596   001166  6E03               	movwf	??_LCD_Instruction^0,c
   597   001168  0EEB               	movlw	235
   598   00116A                     u117:
   599   00116A  2EE8               	decfsz	wreg,f,c
   600   00116C  D7FE               	bra	u117
   601   00116E  2E03               	decfsz	??_LCD_Instruction^0,f,c
   602   001170  D7FC               	bra	u117
   603   001172  0000               	nop	
   604   001174                     
   605                           ;main.c: 187:     LATCbits.LATC5 = 0;
   606   001174  9A8B               	bcf	139,5,c	;volatile
   607   001176                     
   608                           ;main.c: 188:     _delay((unsigned long)((15)*(16000000/4000.0)));
   609   001176  0E4E               	movlw	78
   610   001178  6E03               	movwf	??_LCD_Instruction^0,c
   611   00117A  0EEB               	movlw	235
   612   00117C                     u127:
   613   00117C  2EE8               	decfsz	wreg,f,c
   614   00117E  D7FE               	bra	u127
   615   001180  2E03               	decfsz	??_LCD_Instruction^0,f,c
   616   001182  D7FC               	bra	u127
   617   001184  0000               	nop	
   618   001186  0012               	return		;funcret
   619   001188                     __end_of_LCD_Instruction:
   620                           	callstack 0
   621                           
   622 ;; *************** function _Configurations *****************
   623 ;; Defined at:
   624 ;;		line 94 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; Hardware stack levels required when called: 4
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text5
   653   0010B6                     __ptext5:
   654                           	callstack 0
   655   0010B6                     _Configurations:
   656                           	callstack 26
   657   0010B6                     
   658                           ;main.c: 96:     OSCCON = 0x72;
   659   0010B6  0E72               	movlw	114
   660   0010B8  6ED3               	movwf	211,c	;volatile
   661                           
   662                           ;main.c: 98:     ANSELC = 0;
   663   0010BA  0E00               	movlw	0
   664   0010BC  010F               	movlb	15	; () banked
   665   0010BE  6F3A               	movwf	58,b	;volatile
   666                           
   667                           ;main.c: 99:     ANSELD = 0;
   668   0010C0  0E00               	movlw	0
   669   0010C2  6F3B               	movwf	59,b	;volatile
   670                           
   671                           ;main.c: 100:     ANSELE = 0;
   672   0010C4  0E00               	movlw	0
   673   0010C6  6F3C               	movwf	60,b	;volatile
   674   0010C8                     
   675                           ; BSR set to: 15
   676                           ;main.c: 102:     TRISCbits.RC4 = 0;
   677   0010C8  9894               	bcf	148,4,c	;volatile
   678   0010CA                     
   679                           ; BSR set to: 15
   680                           ;main.c: 103:     TRISCbits.RC5 = 0;
   681   0010CA  9A94               	bcf	148,5,c	;volatile
   682                           
   683                           ;main.c: 104:     TRISD = 0;
   684   0010CC  0E00               	movlw	0
   685   0010CE  6E95               	movwf	149,c	;volatile
   686                           
   687                           ;main.c: 105:     TRISE = 0;
   688   0010D0  0E00               	movlw	0
   689   0010D2  6E96               	movwf	150,c	;volatile
   690   0010D4                     
   691                           ; BSR set to: 15
   692                           ;main.c: 108:     LATCbits.LC4 = 0;
   693   0010D4  988B               	bcf	139,4,c	;volatile
   694   0010D6                     
   695                           ; BSR set to: 15
   696                           ;main.c: 109:     LATCbits.LC5 = 0;
   697   0010D6  9A8B               	bcf	139,5,c	;volatile
   698                           
   699                           ;main.c: 110:     LATD = 0;
   700   0010D8  0E00               	movlw	0
   701   0010DA  6E8C               	movwf	140,c	;volatile
   702                           
   703                           ;main.c: 111:     LATE = 0;
   704   0010DC  0E00               	movlw	0
   705   0010DE  6E8D               	movwf	141,c	;volatile
   706   0010E0                     
   707                           ; BSR set to: 15
   708                           ;main.c: 114:     INTCONbits.GIE = 1;
   709   0010E0  8EF2               	bsf	242,7,c	;volatile
   710   0010E2                     
   711                           ; BSR set to: 15
   712                           ;main.c: 115:     INTCONbits.PEIE = 1;
   713   0010E2  8CF2               	bsf	242,6,c	;volatile
   714   0010E4                     
   715                           ; BSR set to: 15
   716                           ;main.c: 116:     RCONbits.IPEN = 1;
   717   0010E4  8ED0               	bsf	208,7,c	;volatile
   718   0010E6                     
   719                           ; BSR set to: 15
   720                           ;main.c: 118:     PIE1bits.RC1IE = 1;
   721   0010E6  8A9D               	bsf	157,5,c	;volatile
   722   0010E8                     
   723                           ; BSR set to: 15
   724                           ;main.c: 119:     PIR1bits.RC1IF = 0;
   725   0010E8  9A9E               	bcf	158,5,c	;volatile
   726                           
   727                           ;main.c: 122:     SPBRG = 103;
   728   0010EA  0E67               	movlw	103
   729   0010EC  6EAF               	movwf	175,c	;volatile
   730   0010EE                     
   731                           ; BSR set to: 15
   732                           ;main.c: 123:     TRISCbits.RC6 = 1;
   733   0010EE  8C94               	bsf	148,6,c	;volatile
   734   0010F0                     
   735                           ; BSR set to: 15
   736                           ;main.c: 124:     TRISCbits.RC7 = 1;
   737   0010F0  8E94               	bsf	148,7,c	;volatile
   738   0010F2                     
   739                           ; BSR set to: 15
   740                           ;main.c: 127:     TXSTA1bits.TX91 = 0;
   741   0010F2  9CAC               	bcf	172,6,c	;volatile
   742   0010F4                     
   743                           ; BSR set to: 15
   744                           ;main.c: 128:     TXSTA1bits.TXEN1 = 1;
   745   0010F4  8AAC               	bsf	172,5,c	;volatile
   746   0010F6                     
   747                           ; BSR set to: 15
   748                           ;main.c: 129:     TXSTA1bits.SYNC1 = 0;
   749   0010F6  98AC               	bcf	172,4,c	;volatile
   750   0010F8                     
   751                           ; BSR set to: 15
   752                           ;main.c: 130:     TXSTA1bits.BRGH1 = 1;
   753   0010F8  84AC               	bsf	172,2,c	;volatile
   754   0010FA                     
   755                           ; BSR set to: 15
   756                           ;main.c: 133:     RCSTAbits.SPEN1 = 1;
   757   0010FA  8EAB               	bsf	171,7,c	;volatile
   758   0010FC                     
   759                           ; BSR set to: 15
   760                           ;main.c: 134:     RCSTAbits.RX91 = 0;
   761   0010FC  9CAB               	bcf	171,6,c	;volatile
   762   0010FE                     
   763                           ; BSR set to: 15
   764                           ;main.c: 135:     RCSTAbits.CREN1 = 1;
   765   0010FE  88AB               	bsf	171,4,c	;volatile
   766   001100                     
   767                           ; BSR set to: 15
   768                           ;main.c: 138:     BAUDCON1bits.BRG16 = 0;
   769   001100  96B8               	bcf	184,3,c	;volatile
   770   001102                     
   771                           ; BSR set to: 15
   772   001102  0012               	return		;funcret
   773   001104                     __end_of_Configurations:
   774                           	callstack 0
   775                           
   776 ;; *************** function _Interrupt *****************
   777 ;; Defined at:
   778 ;;		line 86 in file "main.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		None
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 3
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		Interrupt level 1
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	intcodelo
   807   000018                     __pintcodelo:
   808                           	callstack 0
   809   000018                     _Interrupt:
   810                           	callstack 24
   811                           
   812                           ; BSR set to: 15
   813                           ;incstack = 0
   814   000018  800B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   815   00001A  CFE0 F002          	movff	bsr,??_Interrupt
   816   00001E  C002  FFE0         	movff	??_Interrupt,bsr
   817   000022  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   818   000024  0010               	retfie	
   819   000026                     __end_of_Interrupt:
   820                           	callstack 0
   821                           
   822 ;; *************** function _Interrupt_Rx *****************
   823 ;; Defined at:
   824 ;;		line 74 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 2
   845 ;; This function calls:
   846 ;;		_Receive_Interrupt
   847 ;; This function is called by:
   848 ;;		Interrupt level 2
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	intcode
   853   000008                     __pintcode:
   854                           	callstack 0
   855   000008                     _Interrupt_Rx:
   856                           	callstack 24
   857                           
   858                           ;incstack = 0
   859   000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   860   00000A  EF01  F009         	goto	int_func
   861                           
   862                           	psect	intcode_body
   863   001202                     __pintcode_body:
   864                           	callstack 24
   865   001202                     int_func:
   866                           	callstack 24
   867   001202                     
   868                           ;main.c: 76:     if (PIR1bits.RC1IF) {
   869   001202  AA9E               	btfss	158,5,c	;volatile
   870   001204  EF06  F009         	goto	i2u3_41
   871   001208  EF08  F009         	goto	i2u3_40
   872   00120C                     i2u3_41:
   873   00120C  EF0A  F009         	goto	i2l72
   874   001210                     i2u3_40:
   875   001210                     
   876                           ;main.c: 78:         Receive_Interrupt();
   877   001210  ECC4  F008         	call	_Receive_Interrupt	;wreg free
   878   001214                     i2l72:
   879   001214  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   880   001216  0011               	retfie		f
   881   001218                     __end_of_Interrupt_Rx:
   882                           	callstack 0
   883                           
   884 ;; *************** function _Receive_Interrupt *****************
   885 ;; Defined at:
   886 ;;		line 204 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 1
   907 ;; This function calls:
   908 ;;		_Moving_Platform
   909 ;; This function is called by:
   910 ;;		_Interrupt_Rx
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text8
   915   001188                     __ptext8:
   916                           	callstack 0
   917   001188                     _Receive_Interrupt:
   918                           	callstack 24
   919   001188                     
   920                           ;main.c: 206:     Rx_Buffer = RCREG1;
   921   001188  CFAE F00A          	movff	4014,_Rx_Buffer	;volatile
   922                           
   923                           ;main.c: 208:     switch (Rx_Buffer) {
   924   00118C  EFD6  F008         	goto	i2l884
   925   001190                     i2l876:
   926                           
   927                           ;main.c: 211:             Moving_Platform(0b10100000);
   928   001190  0EA0               	movlw	160
   929   001192  EC14  F009         	call	_Moving_Platform
   930                           
   931                           ;main.c: 212:             break;
   932   001196  EFE1  F008         	goto	i2l103
   933   00119A                     i2l878:
   934                           
   935                           ;main.c: 215:             Moving_Platform(0b01010000);
   936   00119A  0E50               	movlw	80
   937   00119C  EC14  F009         	call	_Moving_Platform
   938                           
   939                           ;main.c: 216:             break;
   940   0011A0  EFE1  F008         	goto	i2l103
   941   0011A4                     i2l880:
   942                           
   943                           ;main.c: 219:             LATD = 0x00;
   944   0011A4  0E00               	movlw	0
   945   0011A6  6E8C               	movwf	140,c	;volatile
   946                           
   947                           ;main.c: 220:             break;
   948   0011A8  EFE1  F008         	goto	i2l103
   949   0011AC                     i2l884:
   950   0011AC  500A               	movf	_Rx_Buffer^0,w,c
   951                           
   952                           ; Switch size 1, requested type "simple"
   953                           ; Number of cases is 2, Range of values is 65 to 77
   954                           ; switch strategies available:
   955                           ; Name         Instructions Cycles
   956                           ; simple_byte            7     4 (average)
   957                           ;	Chosen strategy is simple_byte
   958   0011AE  0A41               	xorlw	65	; case 65
   959   0011B0  B4D8               	btfsc	status,2,c
   960   0011B2  EFCD  F008         	goto	i2l878
   961   0011B6  0A0C               	xorlw	12	; case 77
   962   0011B8  B4D8               	btfsc	status,2,c
   963   0011BA  EFC8  F008         	goto	i2l876
   964   0011BE  EFD2  F008         	goto	i2l880
   965   0011C2                     i2l103:
   966   0011C2  0012               	return		;funcret
   967   0011C4                     __end_of_Receive_Interrupt:
   968                           	callstack 0
   969                           
   970 ;; *************** function _Moving_Platform *****************
   971 ;; Defined at:
   972 ;;		line 226 in file "main.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  Command         1    wreg     unsigned char 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  Command         1    0[COMRAM] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;Total ram usage:        1 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_Receive_Interrupt
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text9
  1000   001228                     __ptext9:
  1001                           	callstack 0
  1002   001228                     _Moving_Platform:
  1003                           	callstack 24
  1004                           
  1005                           ;incstack = 0
  1006                           ;Moving_Platform@Command stored from wreg
  1007   001228  6E01               	movwf	Moving_Platform@Command^0,c
  1008   00122A                     
  1009                           ;main.c: 228:     LATEbits.LATE0 = 1;
  1010   00122A  808D               	bsf	141,0,c	;volatile
  1011                           
  1012                           ;main.c: 229:     LATEbits.LATE2 = 1;
  1013   00122C  848D               	bsf	141,2,c	;volatile
  1014   00122E                     
  1015                           ;main.c: 230:     LATD = Command;
  1016   00122E  C001  FF8C         	movff	Moving_Platform@Command,3980	;volatile
  1017   001232  0012               	return		;funcret
  1018   001234                     __end_of_Moving_Platform:
  1019                           	callstack 0
  1020                           
  1021                           	psect	rparam
  1022   000000                     
  1023                           	psect	temp
  1024   00000B                     btemp:
  1025                           	callstack 0
  1026   00000B                     	ds	1
  1027   000000                     int$flags	set	btemp
  1028   000000                     wtemp8	set	btemp+1
  1029   000000                     ttemp5	set	btemp+1
  1030   000000                     ttemp6	set	btemp+4
  1031   000000                     ttemp7	set	btemp+8
  1032                           
  1033                           	psect	config
  1034                           
  1035                           ; Padding undefined space
  1036   300000                     	org	3145728
  1037   300000  FF                 	db	255
  1038                           
  1039                           ;Config register CONFIG1H @ 0x300001
  1040                           ;	Oscillator Selection bits
  1041                           ;	FOSC = INTIO67, Internal oscillator block
  1042                           ;	4X PLL Enable
  1043                           ;	PLLCFG = OFF, Oscillator used directly
  1044                           ;	Primary clock enable bit
  1045                           ;	PRICLKEN = ON, Primary clock is always enabled
  1046                           ;	Fail-Safe Clock Monitor Enable bit
  1047                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1048                           ;	Internal/External Oscillator Switchover bit
  1049                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1050   300001                     	org	3145729
  1051   300001  28                 	db	40
  1052                           
  1053                           ;Config register CONFIG2L @ 0x300002
  1054                           ;	Power-up Timer Enable bit
  1055                           ;	PWRTEN = OFF, Power up timer disabled
  1056                           ;	Brown-out Reset Enable bits
  1057                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1058                           ;	Brown Out Reset Voltage bits
  1059                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1060   300002                     	org	3145730
  1061   300002  1F                 	db	31
  1062                           
  1063                           ;Config register CONFIG2H @ 0x300003
  1064                           ;	Watchdog Timer Enable bits
  1065                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1066                           ;	Watchdog Timer Postscale Select bits
  1067                           ;	WDTPS = 32768, 1:32768
  1068   300003                     	org	3145731
  1069   300003  3C                 	db	60
  1070                           
  1071                           ; Padding undefined space
  1072   300004                     	org	3145732
  1073   300004  FF                 	db	255
  1074                           
  1075                           ;Config register CONFIG3H @ 0x300005
  1076                           ;	CCP2 MUX bit
  1077                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1078                           ;	PORTB A/D Enable bit
  1079                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1080                           ;	P3A/CCP3 Mux bit
  1081                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1082                           ;	HFINTOSC Fast Start-up
  1083                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1084                           ;	Timer3 Clock input mux bit
  1085                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1086                           ;	ECCP2 B output mux bit
  1087                           ;	P2BMX = PORTD2, P2B is on RD2
  1088                           ;	MCLR Pin Enable bit
  1089                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1090   300005                     	org	3145733
  1091   300005  BF                 	db	191
  1092                           
  1093                           ;Config register CONFIG4L @ 0x300006
  1094                           ;	Stack Full/Underflow Reset Enable bit
  1095                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1096                           ;	Single-Supply ICSP Enable bit
  1097                           ;	LVP = OFF, Single-Supply ICSP disabled
  1098                           ;	Extended Instruction Set Enable bit
  1099                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1100                           ;	Background Debug
  1101                           ;	DEBUG = 0x1, unprogrammed default
  1102   300006                     	org	3145734
  1103   300006  81                 	db	129
  1104                           
  1105                           ; Padding undefined space
  1106   300007                     	org	3145735
  1107   300007  FF                 	db	255
  1108                           
  1109                           ;Config register CONFIG5L @ 0x300008
  1110                           ;	Code Protection Block 0
  1111                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1112                           ;	Code Protection Block 1
  1113                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1114                           ;	Code Protection Block 2
  1115                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1116                           ;	Code Protection Block 3
  1117                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1118   300008                     	org	3145736
  1119   300008  0F                 	db	15
  1120                           
  1121                           ;Config register CONFIG5H @ 0x300009
  1122                           ;	Boot Block Code Protection bit
  1123                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1124                           ;	Data EEPROM Code Protection bit
  1125                           ;	CPD = OFF, Data EEPROM not code-protected
  1126   300009                     	org	3145737
  1127   300009  C0                 	db	192
  1128                           
  1129                           ;Config register CONFIG6L @ 0x30000A
  1130                           ;	Write Protection Block 0
  1131                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1132                           ;	Write Protection Block 1
  1133                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1134                           ;	Write Protection Block 2
  1135                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1136                           ;	Write Protection Block 3
  1137                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1138   30000A                     	org	3145738
  1139   30000A  0F                 	db	15
  1140                           
  1141                           ;Config register CONFIG6H @ 0x30000B
  1142                           ;	Configuration Register Write Protection bit
  1143                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1144                           ;	Boot Block Write Protection bit
  1145                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1146                           ;	Data EEPROM Write Protection bit
  1147                           ;	WRTD = OFF, Data EEPROM not write-protected
  1148   30000B                     	org	3145739
  1149   30000B  E0                 	db	224
  1150                           
  1151                           ;Config register CONFIG7L @ 0x30000C
  1152                           ;	Table Read Protection Block 0
  1153                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1154                           ;	Table Read Protection Block 1
  1155                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1156                           ;	Table Read Protection Block 2
  1157                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1158                           ;	Table Read Protection Block 3
  1159                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1160   30000C                     	org	3145740
  1161   30000C  0F                 	db	15
  1162                           
  1163                           ;Config register CONFIG7H @ 0x30000D
  1164                           ;	Boot Block Table Read Protection bit
  1165                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1166   30000D                     	org	3145741
  1167   30000D  40                 	db	64
  1168                           tosu	equ	0xFFF
  1169                           tosh	equ	0xFFE
  1170                           tosl	equ	0xFFD
  1171                           stkptr	equ	0xFFC
  1172                           pclatu	equ	0xFFB
  1173                           pclath	equ	0xFFA
  1174                           pcl	equ	0xFF9
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           prodh	equ	0xFF4
  1180                           prodl	equ	0xFF3
  1181                           indf0	equ	0xFEF
  1182                           postinc0	equ	0xFEE
  1183                           postdec0	equ	0xFED
  1184                           preinc0	equ	0xFEC
  1185                           plusw0	equ	0xFEB
  1186                           fsr0h	equ	0xFEA
  1187                           fsr0l	equ	0xFE9
  1188                           wreg	equ	0xFE8
  1189                           indf1	equ	0xFE7
  1190                           postinc1	equ	0xFE6
  1191                           postdec1	equ	0xFE5
  1192                           preinc1	equ	0xFE4
  1193                           plusw1	equ	0xFE3
  1194                           fsr1h	equ	0xFE2
  1195                           fsr1l	equ	0xFE1
  1196                           bsr	equ	0xFE0
  1197                           indf2	equ	0xFDF
  1198                           postinc2	equ	0xFDE
  1199                           postdec2	equ	0xFDD
  1200                           preinc2	equ	0xFDC
  1201                           plusw2	equ	0xFDB
  1202                           fsr2h	equ	0xFDA
  1203                           fsr2l	equ	0xFD9
  1204                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Receive_Interrupt->_Moving_Platform

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2689
                     _Configurations
                           _Init_LCD
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          3     2      1    1007
                                              6 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     841
                                              6 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     841
                                              4 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         0     0      0      15
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Receive_Interrupt                                    0     0      0      15
                    _Moving_Platform
 ---------------------------------------------------------------------------------
 (7) _Moving_Platform                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Send_Instruction_Data
   _Send_String
     _Send_Instruction_Data

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Moving_Platform

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9       A       1       10.6%
BITBIGSFRlhll       4E      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRhllhh      17      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      42        0.0%
BITBIGSFRhllhl       8      0       0      40        0.0%
BITBIGSFRlhlh        6      0       0      44        0.0%
BITBIGSFRlhh         6      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRhlllh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      47        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 21 17:27:42 2024

                              l63 11DE                                l80 1102                                l64 11DE  
                              l83 10B4                                l86 1200                                l95 114A  
                              l89 1186                                u50 114A                                u51 1146  
                              u45 11F0                                u46 11F2                                u67 101E  
                              u77 103C                                u87 1056                                u97 10A6  
               Send_String@String 0007                                bsr 0FE0                               l810 10D4  
                             l820 10E6                               l812 10D6                               l804 10B6  
                             l900 11F2                               l830 10F4                               l822 10E8  
                             l814 10E0                               l806 10C8                               l902 11FA  
                             l910 1050                               l840 10FE                               l832 10F6  
                             l824 10EE                               l816 10E2                               l808 10CA  
                             l920 1088                               l912 1060                               l904 1014  
                             l842 1100                               l834 10F8                               l826 10F0  
                             l818 10E4                               l922 1092                               l914 106A  
                             l906 102C                               l930 1126                               l836 10FA  
                             l828 10F2                               l924 109C                               l916 1074  
                             l908 1036                               l932 1128                               l940 11D6  
                             l838 10FC                               l790 1174                               l782 114E  
                             l918 107E                               l926 1104                               l934 11C4  
                             l792 1176                               l784 1150                               l928 110C  
                             l936 11C8                               l786 1160                               l938 11CC  
                             l788 1164                               l898 11E8                               u107 1156  
                             u117 116A                               u127 117C                               wreg 0FE8  
                      _TXSTA1bits 0FAC                              STR_1 1001                              _LATD 0F8C  
                            _LATE 0F8D                              i1l77 001E                              i2l72 1214  
                            _main 11C4                              btemp 000B                              start 0026  
                    ___param_bank 0000                   _LCD_Instruction 114C  Send_Instruction_Data@Instruction 0006  
                    _BAUDCON1bits 0FB8                             ?_main 0001                             i2l103 11C2  
                           i2l106 1232                             i2l800 122A                             i2l802 122E  
                           i2l880 11A4                             i2l874 1188                             i2l876 1190  
                           i2l884 11AC                             i2l878 119A                             i2l894 1202  
                           i2l896 1210                             _SPBRG 0FAF                             _TRISD 0F95  
                           _TRISE 0F96                             tablat 0FF5                             ttemp5 000C  
                           ttemp6 000F                             ttemp7 0013                             status 0FD8  
                           wtemp8 000C                   __initialization 1218                      __end_of_main 11E6  
                __end_of_Init_LCD 10B6             _Send_Instruction_Data 11E6                            ??_main 000A  
                   ??_Send_String 0008                     __activetblptr 0002                 ??_Moving_Platform 0001  
                          _ANSELC 0F3A                            _ANSELD 0F3B                            _ANSELE 0F3C  
                          _RCREG1 0FAE        LCD_Instruction@Instruction 0004                            _OSCCON 0FD3  
                          i2u3_40 1210                            i2u3_41 120C                     ?_Interrupt_Rx 0001  
         __end_of_LCD_Instruction 1188                            isa$std 0001                      __mediumconst 0000  
                          tblptrh 0FF7                            tblptrl 0FF6                            tblptru 0FF8  
             __end_of_Send_String 114C                        __accesstop 0060           __end_of__initialization 121A  
                  ??_Interrupt_Rx 0002                     ___rparam_used 0001                    __pcstackCOMRAM 0001  
               _Receive_Interrupt 1188            ?_Send_Instruction_Data 0005                ?_Receive_Interrupt 0001  
             ??_Receive_Interrupt 0002                 __end_of_Interrupt 0026                         ?_Init_LCD 0001  
                ?_LCD_Instruction 0001         __end_of_Receive_Interrupt 11C4                       _Send_String 1104  
                      ??_Init_LCD 0007                           __Hparam 0000                           __Lparam 0000  
                    __psmallconst 1000                           __pcinit 1218                           __ramtop 1000  
                         __ptext0 11C4                           __ptext1 1104                           __ptext2 1014  
                         __ptext3 11E6                           __ptext4 114C                           __ptext5 10B6  
                         __ptext8 1188                           __ptext9 1228                   _Moving_Platform 1228  
            __end_of_Interrupt_Rx 1218                    __pintcode_body 1202              end_of_initialization 121A  
                   __Lmediumconst 0000                           int_func 1202                         _RCSTAbits 0FAB  
                       _TRISCbits 0F94           ??_Send_Instruction_Data 0006           __end_of_Moving_Platform 1234  
             start_initialization 1218                      Send_String@i 0009         Send_Instruction_Data@Data 0005  
                  _Configurations 10B6                         _Interrupt 0018                         _Rx_Buffer 000A  
                    ?_Send_String 0007                       __pbssCOMRAM 000A            __end_of_Configurations 1104  
                      ?_Interrupt 0001                      _Interrupt_Rx 0008                         __pintcode 0008  
                ?_Moving_Platform 0001                       __pintcodelo 0018                       __smallconst 1000  
                 ?_Configurations 0001                          _LATCbits 0F8B                          _LATEbits 0F8D  
                        _PIE1bits 0F9D                          _PIR1bits 0F9E                          _RCONbits 0FD0  
                     ??_Interrupt 0002                          _Init_LCD 1014            Moving_Platform@Command 0001  
                        __Hrparam 0000                          __Lrparam 0000     __end_of_Send_Instruction_Data 1202  
               ??_LCD_Instruction 0003                          isa$xinst 0000                          int$flags 000B  
                      _INTCONbits 0FF2                          intlevel1 0000                          intlevel2 0000  
                ??_Configurations 0003  
