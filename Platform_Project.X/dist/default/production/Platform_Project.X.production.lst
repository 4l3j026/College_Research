

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 28 18:45:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F46K22 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _LATDbits	set	3980
    62   000000                     _T2CONbits	set	4026
    63   000000                     _ANSELC	set	3898
    64   000000                     _PIR1bits	set	3998
    65   000000                     _RCSTAbits	set	4011
    66   000000                     _TXSTA1bits	set	4012
    67   000000                     _SPBRG	set	4015
    68   000000                     _RCONbits	set	4048
    69   000000                     _OSCCON	set	4051
    70   000000                     _INTCONbits	set	4082
    71   000000                     _CCP5CON	set	3924
    72   000000                     _CCP3CON	set	3933
    73   000000                     _LATCbits	set	3979
    74   000000                     _TRISCbits	set	3988
    75   000000                     _ANSELE	set	3900
    76   000000                     _ANSELD	set	3899
    77   000000                     _PIE1bits	set	3997
    78   000000                     _TRISE	set	3990
    79   000000                     _TRISD	set	3989
    80   000000                     _LATE	set	3981
    81   000000                     _LATD	set	3980
    82   000000                     _BAUDCON1bits	set	4024
    83   000000                     _RCREG1	set	4014
    84   000000                     _T2CON	set	4026
    85   000000                     _PR2	set	4027
    86   000000                     _CCPR3L	set	3934
    87   000000                     _CCPR5L	set	3925
    88                           
    89                           	psect	smallconst
    90   001000                     __psmallconst:
    91                           	callstack 0
    92   001000  00                 	db	0
    93   001001  52                 	db	82	;'R'
    94   001002  6F                 	db	111	;'o'
    95   001003  62                 	db	98	;'b'
    96   001004  6F                 	db	111	;'o'
    97   001005  74                 	db	116	;'t'
    98   001006  69                 	db	105	;'i'
    99   001007  63                 	db	99	;'c'
   100   001008  20                 	db	32
   101   001009  50                 	db	80	;'P'
   102   00100A  6C                 	db	108	;'l'
   103   00100B  61                 	db	97	;'a'
   104   00100C  74                 	db	116	;'t'
   105   00100D  66                 	db	102	;'f'
   106   00100E  6F                 	db	111	;'o'
   107   00100F  72                 	db	114	;'r'
   108   001010  6D                 	db	109	;'m'
   109   001011  00                 	db	0
   110   001012  52                 	db	82	;'R'
   111   001013  65                 	db	101	;'e'
   112   001014  73                 	db	115	;'s'
   113   001015  65                 	db	101	;'e'
   114   001016  61                 	db	97	;'a'
   115   001017  72                 	db	114	;'r'
   116   001018  63                 	db	99	;'c'
   117   001019  68                 	db	104	;'h'
   118   00101A  20                 	db	32
   119   00101B  50                 	db	80	;'P'
   120   00101C  72                 	db	114	;'r'
   121   00101D  6F                 	db	111	;'o'
   122   00101E  6A                 	db	106	;'j'
   123   00101F  65                 	db	101	;'e'
   124   001020  63                 	db	99	;'c'
   125   001021  74                 	db	116	;'t'
   126   001022  00                 	db	0
   127   001023  00                 	db	0	; dummy byte at the end
   128   000000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   001908                     __pcinit:
   133                           	callstack 0
   134   001908                     start_initialization:
   135                           	callstack 0
   136   001908                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Clear objects allocated to COMRAM (9 bytes)
   140   001908  EE00  F02D         	lfsr	0,__pbssCOMRAM
   141   00190C  0E09               	movlw	9
   142   00190E                     clear_0:
   143   00190E  6AEE               	clrf	postinc0,c
   144   001910  06E8               	decf	wreg,f,c
   145   001912  E1FD               	bnz	clear_0
   146   001914                     end_of_initialization:
   147                           	callstack 0
   148   001914                     __end_of__initialization:
   149                           	callstack 0
   150   001914  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151   001916  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152   001918  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153   00191A  6EF8               	movwf	tblptru,c
   154   00191C  0100               	movlb	0
   155   00191E  EF91  F00C         	goto	_main	;jump to C main() function
   156                           
   157                           	psect	bssCOMRAM
   158   00002D                     __pbssCOMRAM:
   159                           	callstack 0
   160   00002D                     _Duty_Cycle2:
   161                           	callstack 0
   162   00002D                     	ds	4
   163   000031                     _Duty_Cycle1:
   164                           	callstack 0
   165   000031                     	ds	4
   166   000035                     _Rx_Buffer:
   167                           	callstack 0
   168   000035                     	ds	1
   169                           
   170                           	psect	cstackCOMRAM
   171   000001                     __pcstackCOMRAM:
   172                           	callstack 0
   173   000001                     ?___flmul:
   174                           	callstack 0
   175   000001                     ?___fltol:
   176                           	callstack 0
   177   000001                     Manage_Motor_Direction@in2:
   178                           	callstack 0
   179   000001                     ___fltol@f1:
   180                           	callstack 0
   181   000001                     ___flmul@b:
   182                           	callstack 0
   183                           
   184                           ; 4 bytes @ 0x0
   185   000001                     	ds	1
   186   000002                     Manage_Motor_Direction@in3:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190   000002                     	ds	1
   191   000003                     Manage_Motor_Direction@in4:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x2
   195   000003                     	ds	1
   196   000004                     Manage_Motor_Direction@in1:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x3
   200   000004                     	ds	1
   201   000005                     ??___fltol:
   202   000005                     ___flmul@a:
   203                           	callstack 0
   204                           
   205                           ; 4 bytes @ 0x4
   206   000005                     	ds	4
   207   000009                     ??___flmul:
   208   000009                     ___fltol@sign1:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x8
   212   000009                     	ds	1
   213   00000A                     ___fltol@exp1:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x9
   217   00000A                     	ds	3
   218   00000D                     ___flmul@sign:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0xC
   222   00000D                     	ds	1
   223   00000E                     ___flmul@grs:
   224                           	callstack 0
   225                           
   226                           ; 4 bytes @ 0xD
   227   00000E                     	ds	4
   228   000012                     ___flmul@aexp:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x11
   232   000012                     	ds	1
   233   000013                     ___flmul@bexp:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x12
   237   000013                     	ds	1
   238   000014                     ___flmul@prod:
   239                           	callstack 0
   240                           
   241                           ; 4 bytes @ 0x13
   242   000014                     	ds	4
   243   000018                     ___flmul@temp:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x17
   247   000018                     	ds	2
   248   00001A                     Send_PWM_Motors@PWM_RMotor:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0x19
   252   00001A                     	ds	4
   253   00001E                     Send_PWM_Motors@PWM_LMotor:
   254                           	callstack 0
   255                           
   256                           ; 4 bytes @ 0x1D
   257   00001E                     	ds	4
   258   000022                     ??_Receive_Interrupt:
   259   000022                     
   260                           ; 1 bytes @ 0x21
   261   000022                     	ds	2
   262   000024                     ??_Interrupt_Rx:
   263                           
   264                           ; 1 bytes @ 0x23
   265   000024                     	ds	2
   266   000026                     ??_Interrupt:
   267                           
   268                           ; 1 bytes @ 0x25
   269   000026                     	ds	1
   270   000027                     ??_LCD_Instruction:
   271                           
   272                           ; 1 bytes @ 0x26
   273   000027                     	ds	1
   274   000028                     LCD_Instruction@Instruction:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x27
   278   000028                     	ds	1
   279   000029                     Send_Instruction_Data@Data:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x28
   283   000029                     	ds	1
   284   00002A                     Send_Instruction_Data@Instruction:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x29
   288   00002A                     	ds	1
   289   00002B                     ??_Init_LCD:
   290                           
   291                           ; 1 bytes @ 0x2A
   292   00002B                     	ds	2
   293   00002D                     
   294                           ; 1 bytes @ 0x2C
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 40 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2, status,0, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels required when called: 8
   320 ;; This function calls:
   321 ;;		_Configurations
   322 ;;		_Init_LCD
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text0
   329   001922                     __ptext0:
   330                           	callstack 0
   331   001922                     _main:
   332                           	callstack 23
   333   001922                     
   334                           ;main.c: 43:     Configurations();
   335   001922  ECFB  F00B         	call	_Configurations	;wreg free
   336   001926                     
   337                           ;main.c: 44:     Init_LCD();
   338   001926  ECAA  F00B         	call	_Init_LCD	;wreg free
   339   00192A                     l81:
   340   00192A  EF95  F00C         	goto	l81
   341   00192E  EF13  F000         	goto	start
   342   001932                     __end_of_main:
   343                           	callstack 0
   344                           
   345 ;; *************** function _Init_LCD *****************
   346 ;; Defined at:
   347 ;;		line 5 in file "LCD_Library.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; Hardware stack levels required when called: 7
   368 ;; This function calls:
   369 ;;		_Send_Instruction_Data
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376   001754                     __ptext1:
   377                           	callstack 0
   378   001754                     _Init_LCD:
   379                           	callstack 23
   380   001754                     
   381                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   382   001754  0E03               	movlw	3
   383   001756  6E2C               	movwf	(??_Init_LCD+1)^0,c
   384   001758  0E08               	movlw	8
   385   00175A  6E2B               	movwf	??_Init_LCD^0,c
   386   00175C  0E77               	movlw	119
   387   00175E                     u677:
   388   00175E  2EE8               	decfsz	wreg,f,c
   389   001760  D7FE               	bra	u677
   390   001762  2E2B               	decfsz	??_Init_LCD^0,f,c
   391   001764  D7FC               	bra	u677
   392   001766  2E2C               	decfsz	(??_Init_LCD+1)^0,f,c
   393   001768  D7FA               	bra	u677
   394   00176A  0000               	nop	
   395   00176C                     
   396                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   397   00176C  0E30               	movlw	48
   398   00176E  6E29               	movwf	Send_Instruction_Data@Data^0,c
   399   001770  0E00               	movlw	0
   400   001772  EC76  F00C         	call	_Send_Instruction_Data
   401   001776                     
   402                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   403   001776  0E1A               	movlw	26
   404   001778  6E2B               	movwf	??_Init_LCD^0,c
   405   00177A  0EF8               	movlw	248
   406   00177C                     u687:
   407   00177C  2EE8               	decfsz	wreg,f,c
   408   00177E  D7FE               	bra	u687
   409   001780  2E2B               	decfsz	??_Init_LCD^0,f,c
   410   001782  D7FC               	bra	u687
   411   001784  D000               	nop2	
   412                           
   413                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   414   001786  0E30               	movlw	48
   415   001788  6E29               	movwf	Send_Instruction_Data@Data^0,c
   416   00178A  0E00               	movlw	0
   417   00178C  EC76  F00C         	call	_Send_Instruction_Data
   418   001790                     
   419                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   420   001790  0E1A               	movlw	26
   421   001792  6E2B               	movwf	??_Init_LCD^0,c
   422   001794  0EF8               	movlw	248
   423   001796                     u697:
   424   001796  2EE8               	decfsz	wreg,f,c
   425   001798  D7FE               	bra	u697
   426   00179A  2E2B               	decfsz	??_Init_LCD^0,f,c
   427   00179C  D7FC               	bra	u697
   428   00179E  D000               	nop2	
   429   0017A0                     
   430                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   431   0017A0  0E30               	movlw	48
   432   0017A2  6E29               	movwf	Send_Instruction_Data@Data^0,c
   433   0017A4  0E00               	movlw	0
   434   0017A6  EC76  F00C         	call	_Send_Instruction_Data
   435   0017AA                     
   436                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   437   0017AA  0E02               	movlw	2
   438   0017AC  6E29               	movwf	Send_Instruction_Data@Data^0,c
   439   0017AE  0E00               	movlw	0
   440   0017B0  EC76  F00C         	call	_Send_Instruction_Data
   441   0017B4                     
   442                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   443   0017B4  0E06               	movlw	6
   444   0017B6  6E29               	movwf	Send_Instruction_Data@Data^0,c
   445   0017B8  0E00               	movlw	0
   446   0017BA  EC76  F00C         	call	_Send_Instruction_Data
   447   0017BE                     
   448                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   449   0017BE  0E0F               	movlw	15
   450   0017C0  6E29               	movwf	Send_Instruction_Data@Data^0,c
   451   0017C2  0E00               	movlw	0
   452   0017C4  EC76  F00C         	call	_Send_Instruction_Data
   453   0017C8                     
   454                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   455   0017C8  0E28               	movlw	40
   456   0017CA  6E29               	movwf	Send_Instruction_Data@Data^0,c
   457   0017CC  0E00               	movlw	0
   458   0017CE  EC76  F00C         	call	_Send_Instruction_Data
   459   0017D2                     
   460                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   461   0017D2  0E01               	movlw	1
   462   0017D4  6E29               	movwf	Send_Instruction_Data@Data^0,c
   463   0017D6  0E00               	movlw	0
   464   0017D8  EC76  F00C         	call	_Send_Instruction_Data
   465   0017DC                     
   466                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   467   0017DC  0E03               	movlw	3
   468   0017DE  6E2C               	movwf	(??_Init_LCD+1)^0,c
   469   0017E0  0E08               	movlw	8
   470   0017E2  6E2B               	movwf	??_Init_LCD^0,c
   471   0017E4  0E77               	movlw	119
   472   0017E6                     u707:
   473   0017E6  2EE8               	decfsz	wreg,f,c
   474   0017E8  D7FE               	bra	u707
   475   0017EA  2E2B               	decfsz	??_Init_LCD^0,f,c
   476   0017EC  D7FC               	bra	u707
   477   0017EE  2E2C               	decfsz	(??_Init_LCD+1)^0,f,c
   478   0017F0  D7FA               	bra	u707
   479   0017F2  0000               	nop	
   480   0017F4  0012               	return		;funcret
   481   0017F6                     __end_of_Init_LCD:
   482                           	callstack 0
   483                           
   484 ;; *************** function _Send_Instruction_Data *****************
   485 ;; Defined at:
   486 ;;		line 24 in file "LCD_Library.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;  Instruction     1    wreg     unsigned char 
   489 ;;  Data            1   40[COMRAM] unsigned char 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  Instruction     1   41[COMRAM] unsigned char 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2, status,0, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   501 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;Total ram usage:        2 bytes
   506 ;; Hardware stack levels used: 1
   507 ;; Hardware stack levels required when called: 6
   508 ;; This function calls:
   509 ;;		_LCD_Instruction
   510 ;; This function is called by:
   511 ;;		_Init_LCD
   512 ;;		_Init_Message_Platform
   513 ;;		_Send_String
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text2
   518   0018EC                     __ptext2:
   519                           	callstack 0
   520   0018EC                     _Send_Instruction_Data:
   521                           	callstack 23
   522                           
   523                           ;incstack = 0
   524                           ;Send_Instruction_Data@Instruction stored from wreg
   525   0018EC  6E2A               	movwf	Send_Instruction_Data@Instruction^0,c
   526   0018EE                     
   527                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   528   0018EE  B02A               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   529   0018F0  D002               	bra	u645
   530   0018F2  988B               	bcf	139,4,c	;volatile
   531   0018F4  D001               	bra	u646
   532   0018F6                     u645:
   533   0018F6  888B               	bsf	139,4,c	;volatile
   534   0018F8                     u646:
   535   0018F8                     
   536                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   537   0018F8  3829               	swapf	Send_Instruction_Data@Data^0,w,c
   538   0018FA  0B0F               	andlw	15
   539   0018FC  EC2F  F00C         	call	_LCD_Instruction
   540   001900                     
   541                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
   542   001900  5029               	movf	Send_Instruction_Data@Data^0,w,c
   543   001902  EC2F  F00C         	call	_LCD_Instruction
   544   001906  0012               	return		;funcret
   545   001908                     __end_of_Send_Instruction_Data:
   546                           	callstack 0
   547                           
   548 ;; *************** function _LCD_Instruction *****************
   549 ;; Defined at:
   550 ;;		line 33 in file "LCD_Library.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  Instruction     1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  Instruction     1   39[COMRAM] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 5
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_Send_Instruction_Data
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text3
   579   00185E                     __ptext3:
   580                           	callstack 0
   581   00185E                     _LCD_Instruction:
   582                           	callstack 23
   583                           
   584                           ;incstack = 0
   585                           ;LCD_Instruction@Instruction stored from wreg
   586   00185E  6E28               	movwf	LCD_Instruction@Instruction^0,c
   587   001860                     
   588                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   589   001860  8A8B               	bsf	139,5,c	;volatile
   590   001862                     
   591                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   592   001862  0E4E               	movlw	78
   593   001864  6E27               	movwf	??_LCD_Instruction^0,c
   594   001866  0EEB               	movlw	235
   595   001868                     u717:
   596   001868  2EE8               	decfsz	wreg,f,c
   597   00186A  D7FE               	bra	u717
   598   00186C  2E27               	decfsz	??_LCD_Instruction^0,f,c
   599   00186E  D7FC               	bra	u717
   600   001870  0000               	nop	
   601   001872                     
   602                           ;LCD_Library.c: 37:     LATD = Instruction;
   603   001872  C028  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   604   001876                     
   605                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   606   001876  0E4E               	movlw	78
   607   001878  6E27               	movwf	??_LCD_Instruction^0,c
   608   00187A  0EEB               	movlw	235
   609   00187C                     u727:
   610   00187C  2EE8               	decfsz	wreg,f,c
   611   00187E  D7FE               	bra	u727
   612   001880  2E27               	decfsz	??_LCD_Instruction^0,f,c
   613   001882  D7FC               	bra	u727
   614   001884  0000               	nop	
   615   001886                     
   616                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   617   001886  9A8B               	bcf	139,5,c	;volatile
   618   001888                     
   619                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   620   001888  0E4E               	movlw	78
   621   00188A  6E27               	movwf	??_LCD_Instruction^0,c
   622   00188C  0EEB               	movlw	235
   623   00188E                     u737:
   624   00188E  2EE8               	decfsz	wreg,f,c
   625   001890  D7FE               	bra	u737
   626   001892  2E27               	decfsz	??_LCD_Instruction^0,f,c
   627   001894  D7FC               	bra	u737
   628   001896  0000               	nop	
   629   001898  0012               	return		;funcret
   630   00189A                     __end_of_LCD_Instruction:
   631                           	callstack 0
   632                           
   633 ;; *************** function _Configurations *****************
   634 ;; Defined at:
   635 ;;		line 77 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 5
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text4
   664   0017F6                     __ptext4:
   665                           	callstack 0
   666   0017F6                     _Configurations:
   667                           	callstack 25
   668   0017F6                     
   669                           ;main.c: 79:     OSCCON = 0x72;
   670   0017F6  0E72               	movlw	114
   671   0017F8  6ED3               	movwf	211,c	;volatile
   672                           
   673                           ;main.c: 81:     ANSELC = 0;
   674   0017FA  0E00               	movlw	0
   675   0017FC  010F               	movlb	15	; () banked
   676   0017FE  6F3A               	movwf	58,b	;volatile
   677                           
   678                           ;main.c: 82:     ANSELD = 0;
   679   001800  0E00               	movlw	0
   680   001802  6F3B               	movwf	59,b	;volatile
   681                           
   682                           ;main.c: 83:     ANSELE = 0;
   683   001804  0E00               	movlw	0
   684   001806  6F3C               	movwf	60,b	;volatile
   685   001808                     
   686                           ; BSR set to: 15
   687                           ;main.c: 86:     TRISCbits.RC4 = 0;
   688   001808  9894               	bcf	148,4,c	;volatile
   689   00180A                     
   690                           ; BSR set to: 15
   691                           ;main.c: 87:     TRISCbits.RC5 = 0;
   692   00180A  9A94               	bcf	148,5,c	;volatile
   693                           
   694                           ;main.c: 88:     TRISD = 0;
   695   00180C  0E00               	movlw	0
   696   00180E  6E95               	movwf	149,c	;volatile
   697                           
   698                           ;main.c: 89:     TRISE = 0;
   699   001810  0E00               	movlw	0
   700   001812  6E96               	movwf	150,c	;volatile
   701   001814                     
   702                           ; BSR set to: 15
   703                           ;main.c: 92:     LATCbits.LC4 = 0;
   704   001814  988B               	bcf	139,4,c	;volatile
   705   001816                     
   706                           ; BSR set to: 15
   707                           ;main.c: 93:     LATCbits.LC5 = 0;
   708   001816  9A8B               	bcf	139,5,c	;volatile
   709                           
   710                           ;main.c: 94:     LATD = 0;
   711   001818  0E00               	movlw	0
   712   00181A  6E8C               	movwf	140,c	;volatile
   713                           
   714                           ;main.c: 95:     LATE = 0;
   715   00181C  0E00               	movlw	0
   716   00181E  6E8D               	movwf	141,c	;volatile
   717   001820                     
   718                           ; BSR set to: 15
   719                           ;main.c: 98:     INTCONbits.GIE = 1;
   720   001820  8EF2               	bsf	242,7,c	;volatile
   721   001822                     
   722                           ; BSR set to: 15
   723                           ;main.c: 99:     INTCONbits.PEIE = 1;
   724   001822  8CF2               	bsf	242,6,c	;volatile
   725   001824                     
   726                           ; BSR set to: 15
   727                           ;main.c: 100:     RCONbits.IPEN = 1;
   728   001824  8ED0               	bsf	208,7,c	;volatile
   729   001826                     
   730                           ; BSR set to: 15
   731                           ;main.c: 102:     PIE1bits.RC1IE = 1;
   732   001826  8A9D               	bsf	157,5,c	;volatile
   733   001828                     
   734                           ; BSR set to: 15
   735                           ;main.c: 103:     PIR1bits.RC1IF = 0;
   736   001828  9A9E               	bcf	158,5,c	;volatile
   737                           
   738                           ;main.c: 106:     SPBRG = 103;
   739   00182A  0E67               	movlw	103
   740   00182C  6EAF               	movwf	175,c	;volatile
   741   00182E                     
   742                           ; BSR set to: 15
   743                           ;main.c: 107:     TRISCbits.RC6 = 1;
   744   00182E  8C94               	bsf	148,6,c	;volatile
   745   001830                     
   746                           ; BSR set to: 15
   747                           ;main.c: 108:     TRISCbits.RC7 = 1;
   748   001830  8E94               	bsf	148,7,c	;volatile
   749   001832                     
   750                           ; BSR set to: 15
   751                           ;main.c: 111:     TXSTA1bits.TX91 = 0;
   752   001832  9CAC               	bcf	172,6,c	;volatile
   753   001834                     
   754                           ; BSR set to: 15
   755                           ;main.c: 112:     TXSTA1bits.TXEN1 = 1;
   756   001834  8AAC               	bsf	172,5,c	;volatile
   757   001836                     
   758                           ; BSR set to: 15
   759                           ;main.c: 113:     TXSTA1bits.SYNC1 = 0;
   760   001836  98AC               	bcf	172,4,c	;volatile
   761   001838                     
   762                           ; BSR set to: 15
   763                           ;main.c: 114:     TXSTA1bits.BRGH1 = 1;
   764   001838  84AC               	bsf	172,2,c	;volatile
   765   00183A                     
   766                           ; BSR set to: 15
   767                           ;main.c: 117:     RCSTAbits.SPEN1 = 1;
   768   00183A  8EAB               	bsf	171,7,c	;volatile
   769   00183C                     
   770                           ; BSR set to: 15
   771                           ;main.c: 118:     RCSTAbits.RX91 = 0;
   772   00183C  9CAB               	bcf	171,6,c	;volatile
   773   00183E                     
   774                           ; BSR set to: 15
   775                           ;main.c: 119:     RCSTAbits.CREN1 = 1;
   776   00183E  88AB               	bsf	171,4,c	;volatile
   777   001840                     
   778                           ; BSR set to: 15
   779                           ;main.c: 122:     BAUDCON1bits.BRG16 = 0;
   780   001840  96B8               	bcf	184,3,c	;volatile
   781                           
   782                           ;main.c: 134:     PR2 = 0xF9;
   783   001842  0EF9               	movlw	249
   784   001844  6EBB               	movwf	187,c	;volatile
   785                           
   786                           ;main.c: 135:     T2CON = 0x00;
   787   001846  0E00               	movlw	0
   788   001848  6EBA               	movwf	186,c	;volatile
   789                           
   790                           ;main.c: 136:     CCP3CON = 0x0C;
   791   00184A  0E0C               	movlw	12
   792   00184C  6F5D               	movwf	93,b	;volatile
   793                           
   794                           ;main.c: 137:     CCPR3L = 0xFA;
   795   00184E  0EFA               	movlw	250
   796   001850  6F5E               	movwf	94,b	;volatile
   797                           
   798                           ;main.c: 138:     CCP5CON = 0x0C;
   799   001852  0E0C               	movlw	12
   800   001854  6F54               	movwf	84,b	;volatile
   801                           
   802                           ;main.c: 139:     CCPR5L = 0xFA;
   803   001856  0EFA               	movlw	250
   804   001858  6F55               	movwf	85,b	;volatile
   805   00185A                     
   806                           ; BSR set to: 15
   807                           ;main.c: 140:     T2CONbits.TMR2ON = 1;
   808   00185A  84BA               	bsf	186,2,c	;volatile
   809   00185C                     
   810                           ; BSR set to: 15
   811   00185C  0012               	return		;funcret
   812   00185E                     __end_of_Configurations:
   813                           	callstack 0
   814                           
   815 ;; *************** function _Interrupt *****************
   816 ;; Defined at:
   817 ;;		line 69 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		None
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;Total ram usage:        1 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 4
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		Interrupt level 1
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	intcodelo
   846   000018                     __pintcodelo:
   847                           	callstack 0
   848   000018                     _Interrupt:
   849                           	callstack 23
   850                           
   851                           ; BSR set to: 15
   852                           ;incstack = 0
   853   000018  8036               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   854   00001A  CFE0 F026          	movff	bsr,??_Interrupt
   855   00001E  C026  FFE0         	movff	??_Interrupt,bsr
   856   000022  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   857   000024  0010               	retfie	
   858   000026                     __end_of_Interrupt:
   859                           	callstack 0
   860                           
   861 ;; *************** function _Interrupt_Rx *****************
   862 ;; Defined at:
   863 ;;		line 57 in file "main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;Total ram usage:        2 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 3
   884 ;; This function calls:
   885 ;;		_Receive_Interrupt
   886 ;; This function is called by:
   887 ;;		Interrupt level 2
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	intcode
   892   000008                     __pintcode:
   893                           	callstack 0
   894   000008                     _Interrupt_Rx:
   895                           	callstack 23
   896                           
   897                           ;incstack = 0
   898   000008  8236               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   899   00000A  EF63  F00C         	goto	int_func
   900                           
   901                           	psect	intcode_body
   902   0018C6                     __pintcode_body:
   903                           	callstack 23
   904   0018C6                     int_func:
   905                           	callstack 23
   906   0018C6  CFF3 F024          	movff	prodl,??_Interrupt_Rx
   907   0018CA  CFF4 F025          	movff	prodh,??_Interrupt_Rx+1
   908   0018CE                     
   909                           ;main.c: 59:     if (PIR1bits.RC1IF) {
   910   0018CE  AA9E               	btfss	158,5,c	;volatile
   911   0018D0  EF6C  F00C         	goto	i2u65_41
   912   0018D4  EF6E  F00C         	goto	i2u65_40
   913   0018D8                     i2u65_41:
   914   0018D8  EF70  F00C         	goto	i2l90
   915   0018DC                     i2u65_40:
   916   0018DC                     
   917                           ;main.c: 61:         Receive_Interrupt();
   918   0018DC  EC2D  F00B         	call	_Receive_Interrupt	;wreg free
   919   0018E0                     i2l90:
   920   0018E0  C025  FFF4         	movff	??_Interrupt_Rx+1,prodh
   921   0018E4  C024  FFF3         	movff	??_Interrupt_Rx,prodl
   922   0018E8  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   923   0018EA  0011               	retfie		f
   924   0018EC                     __end_of_Interrupt_Rx:
   925                           	callstack 0
   926                           
   927 ;; *************** function _Receive_Interrupt *****************
   928 ;; Defined at:
   929 ;;		line 144 in file "main.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;Total ram usage:        2 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 2
   950 ;; This function calls:
   951 ;;		_Manage_Motor_Direction
   952 ;;		_Send_PWM_Motors
   953 ;; This function is called by:
   954 ;;		_Interrupt_Rx
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text7
   959   00165A                     __ptext7:
   960                           	callstack 0
   961   00165A                     _Receive_Interrupt:
   962                           	callstack 23
   963   00165A                     
   964                           ;main.c: 146:     Rx_Buffer = RCREG1;
   965   00165A  CFAE F035          	movff	4014,_Rx_Buffer	;volatile
   966                           
   967                           ;main.c: 148:     switch (Rx_Buffer) {
   968   00165E  EF9E  F00B         	goto	i2l1374
   969   001662                     i2l1356:
   970                           
   971                           ;main.c: 152:             Send_PWM_Motors(1023.00, 1023.00);
   972   001662  0E00               	movlw	0
   973   001664  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
   974   001666  0EC0               	movlw	192
   975   001668  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
   976   00166A  0E7F               	movlw	127
   977   00166C  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
   978   00166E  0E44               	movlw	68
   979   001670  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
   980   001672  0E00               	movlw	0
   981   001674  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
   982   001676  0EC0               	movlw	192
   983   001678  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
   984   00167A  0E7F               	movlw	127
   985   00167C  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
   986   00167E  0E44               	movlw	68
   987   001680  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
   988   001682  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
   989   001686                     
   990                           ;main.c: 153:             Manage_Motor_Direction(0, 1, 1, 0);
   991   001686  0E01               	movlw	1
   992   001688  6E01               	movwf	Manage_Motor_Direction@in2^0,c
   993   00168A  0E01               	movlw	1
   994   00168C  6E02               	movwf	Manage_Motor_Direction@in3^0,c
   995   00168E  0E00               	movlw	0
   996   001690  6E03               	movwf	Manage_Motor_Direction@in4^0,c
   997   001692  0E00               	movlw	0
   998   001694  EC4D  F00C         	call	_Manage_Motor_Direction
   999   001698                     
  1000                           ;main.c: 154:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  1001   001698  0E66               	movlw	102
  1002   00169A  6E23               	movwf	(??_Receive_Interrupt+1)^0,c
  1003   00169C  0E76               	movlw	118
  1004   00169E  6E22               	movwf	??_Receive_Interrupt^0,c
  1005   0016A0  0EC1               	movlw	193
  1006   0016A2                     i2u74_47:
  1007   0016A2  2EE8               	decfsz	wreg,f,c
  1008   0016A4  D7FE               	bra	i2u74_47
  1009   0016A6  2E22               	decfsz	??_Receive_Interrupt^0,f,c
  1010   0016A8  D7FC               	bra	i2u74_47
  1011   0016AA  2E23               	decfsz	(??_Receive_Interrupt+1)^0,f,c
  1012   0016AC  D7FA               	bra	i2u74_47
  1013   0016AE  0000               	nop	
  1014                           
  1015                           ;main.c: 156:             break;
  1016   0016B0  EFA9  F00B         	goto	i2l106
  1017   0016B4                     i2l1362:
  1018                           
  1019                           ;main.c: 160:             Send_PWM_Motors(1023.00, 1023.00);
  1020   0016B4  0E00               	movlw	0
  1021   0016B6  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
  1022   0016B8  0EC0               	movlw	192
  1023   0016BA  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
  1024   0016BC  0E7F               	movlw	127
  1025   0016BE  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
  1026   0016C0  0E44               	movlw	68
  1027   0016C2  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
  1028   0016C4  0E00               	movlw	0
  1029   0016C6  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
  1030   0016C8  0EC0               	movlw	192
  1031   0016CA  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
  1032   0016CC  0E7F               	movlw	127
  1033   0016CE  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
  1034   0016D0  0E44               	movlw	68
  1035   0016D2  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
  1036   0016D4  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
  1037   0016D8                     
  1038                           ;main.c: 161:             Manage_Motor_Direction(1, 0, 0, 1);
  1039   0016D8  0E00               	movlw	0
  1040   0016DA  6E01               	movwf	Manage_Motor_Direction@in2^0,c
  1041   0016DC  0E00               	movlw	0
  1042   0016DE  6E02               	movwf	Manage_Motor_Direction@in3^0,c
  1043   0016E0  0E01               	movlw	1
  1044   0016E2  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1045   0016E4  0E01               	movlw	1
  1046   0016E6  EC4D  F00C         	call	_Manage_Motor_Direction
  1047   0016EA                     
  1048                           ;main.c: 162:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  1049   0016EA  0E66               	movlw	102
  1050   0016EC  6E23               	movwf	(??_Receive_Interrupt+1)^0,c
  1051   0016EE  0E76               	movlw	118
  1052   0016F0  6E22               	movwf	??_Receive_Interrupt^0,c
  1053   0016F2  0EC1               	movlw	193
  1054   0016F4                     i2u75_47:
  1055   0016F4  2EE8               	decfsz	wreg,f,c
  1056   0016F6  D7FE               	bra	i2u75_47
  1057   0016F8  2E22               	decfsz	??_Receive_Interrupt^0,f,c
  1058   0016FA  D7FC               	bra	i2u75_47
  1059   0016FC  2E23               	decfsz	(??_Receive_Interrupt+1)^0,f,c
  1060   0016FE  D7FA               	bra	i2u75_47
  1061   001700  0000               	nop	
  1062   001702                     i2l1368:
  1063                           
  1064                           ;main.c: 166:             Send_PWM_Motors(0.00, 0.00);
  1065   001702  0E00               	movlw	0
  1066   001704  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
  1067   001706  0E00               	movlw	0
  1068   001708  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
  1069   00170A  0E00               	movlw	0
  1070   00170C  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
  1071   00170E  0E00               	movlw	0
  1072   001710  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
  1073   001712  0E00               	movlw	0
  1074   001714  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
  1075   001716  0E00               	movlw	0
  1076   001718  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
  1077   00171A  0E00               	movlw	0
  1078   00171C  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
  1079   00171E  0E00               	movlw	0
  1080   001720  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
  1081   001722  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
  1082   001726                     
  1083                           ;main.c: 167:             Manage_Motor_Direction(1, 0, 0, 1);
  1084   001726  0E00               	movlw	0
  1085   001728  6E01               	movwf	Manage_Motor_Direction@in2^0,c
  1086   00172A  0E00               	movlw	0
  1087   00172C  6E02               	movwf	Manage_Motor_Direction@in3^0,c
  1088   00172E  0E01               	movlw	1
  1089   001730  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1090   001732  0E01               	movlw	1
  1091   001734  EC4D  F00C         	call	_Manage_Motor_Direction
  1092                           
  1093                           ;main.c: 169:             break;
  1094   001738  EFA9  F00B         	goto	i2l106
  1095   00173C                     i2l1374:
  1096   00173C  5035               	movf	_Rx_Buffer^0,w,c
  1097                           
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 2, Range of values is 65 to 77
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            7     4 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104   00173E  0A41               	xorlw	65	; case 65
  1105   001740  B4D8               	btfsc	status,2,c
  1106   001742  EF5A  F00B         	goto	i2l1362
  1107   001746  0A0C               	xorlw	12	; case 77
  1108   001748  B4D8               	btfsc	status,2,c
  1109   00174A  EF31  F00B         	goto	i2l1356
  1110   00174E  EF81  F00B         	goto	i2l1368
  1111   001752                     i2l106:
  1112   001752  0012               	return		;funcret
  1113   001754                     __end_of_Receive_Interrupt:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _Send_PWM_Motors *****************
  1117 ;; Defined at:
  1118 ;;		line 177 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  PWM_RMotor      4   25[COMRAM] float 
  1121 ;;  PWM_LMotor      4   29[COMRAM] float 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1133 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;Total ram usage:        8 bytes
  1138 ;; Hardware stack levels used: 1
  1139 ;; Hardware stack levels required when called: 1
  1140 ;; This function calls:
  1141 ;;		___flmul
  1142 ;;		___fltol
  1143 ;; This function is called by:
  1144 ;;		_Receive_Interrupt
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text8
  1149   00144E                     __ptext8:
  1150                           	callstack 0
  1151   00144E                     _Send_PWM_Motors:
  1152                           	callstack 23
  1153   00144E                     
  1154                           ;main.c: 179:     Duty_Cycle1 = (float) (PWM_RMotor * (1000.00 / 1023.00));
  1155   00144E  C01A  F001         	movff	Send_PWM_Motors@PWM_RMotor,___flmul@b
  1156   001452  C01B  F002         	movff	Send_PWM_Motors@PWM_RMotor+1,___flmul@b+1
  1157   001456  C01C  F003         	movff	Send_PWM_Motors@PWM_RMotor+2,___flmul@b+2
  1158   00145A  C01D  F004         	movff	Send_PWM_Motors@PWM_RMotor+3,___flmul@b+3
  1159   00145E  0E90               	movlw	144
  1160   001460  6E05               	movwf	___flmul@a^0,c
  1161   001462  0E3E               	movlw	62
  1162   001464  6E06               	movwf	(___flmul@a+1)^0,c
  1163   001466  0E7A               	movlw	122
  1164   001468  6E07               	movwf	(___flmul@a+2)^0,c
  1165   00146A  0E3F               	movlw	63
  1166   00146C  6E08               	movwf	(___flmul@a+3)^0,c
  1167   00146E  EC12  F008         	call	___flmul	;wreg free
  1168   001472  C001  F031         	movff	?___flmul,_Duty_Cycle1
  1169   001476  C002  F032         	movff	?___flmul+1,_Duty_Cycle1+1
  1170   00147A  C003  F033         	movff	?___flmul+2,_Duty_Cycle1+2
  1171   00147E  C004  F034         	movff	?___flmul+3,_Duty_Cycle1+3
  1172   001482                     
  1173                           ;main.c: 180:     CCPR3L = (int) Duty_Cycle1 >> 2;
  1174   001482  C031  F001         	movff	_Duty_Cycle1,___fltol@f1
  1175   001486  C032  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1176   00148A  C033  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1177   00148E  C034  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1178   001492  ECAA  F00A         	call	___fltol	;wreg free
  1179   001496  3402               	rlcf	(?___fltol+1)^0,w,c
  1180   001498  3202               	rrcf	(?___fltol+1)^0,f,c
  1181   00149A  3201               	rrcf	?___fltol^0,f,c
  1182   00149C  3402               	rlcf	(?___fltol+1)^0,w,c
  1183   00149E  3202               	rrcf	(?___fltol+1)^0,f,c
  1184   0014A0  3201               	rrcf	?___fltol^0,f,c
  1185   0014A2  5001               	movf	?___fltol^0,w,c
  1186   0014A4  010F               	movlb	15	; () banked
  1187   0014A6  6F5E               	movwf	94,b	;volatile
  1188   0014A8                     
  1189                           ; BSR set to: 15
  1190                           ;main.c: 181:     CCP3CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4));
  1191   0014A8  C031  F001         	movff	_Duty_Cycle1,___fltol@f1
  1192   0014AC  C032  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1193   0014B0  C033  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1194   0014B4  C034  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1195   0014B8  ECAA  F00A         	call	___fltol	;wreg free
  1196   0014BC  0E03               	movlw	3
  1197   0014BE  1601               	andwf	?___fltol^0,f,c
  1198   0014C0  3A01               	swapf	?___fltol^0,f,c
  1199   0014C2  0EF0               	movlw	240
  1200   0014C4  1601               	andwf	?___fltol^0,f,c
  1201   0014C6  010F               	movlb	15	; () banked
  1202   0014C8  515D               	movf	93,w,b	;volatile
  1203   0014CA  0B0F               	andlw	15
  1204   0014CC  1001               	iorwf	?___fltol^0,w,c
  1205   0014CE  6F5D               	movwf	93,b	;volatile
  1206                           
  1207                           ;main.c: 183:     Duty_Cycle2 = (float) (PWM_LMotor * (1000.00 / 1023.00));
  1208   0014D0  C01E  F001         	movff	Send_PWM_Motors@PWM_LMotor,___flmul@b
  1209   0014D4  C01F  F002         	movff	Send_PWM_Motors@PWM_LMotor+1,___flmul@b+1
  1210   0014D8  C020  F003         	movff	Send_PWM_Motors@PWM_LMotor+2,___flmul@b+2
  1211   0014DC  C021  F004         	movff	Send_PWM_Motors@PWM_LMotor+3,___flmul@b+3
  1212   0014E0  0E90               	movlw	144
  1213   0014E2  6E05               	movwf	___flmul@a^0,c
  1214   0014E4  0E3E               	movlw	62
  1215   0014E6  6E06               	movwf	(___flmul@a+1)^0,c
  1216   0014E8  0E7A               	movlw	122
  1217   0014EA  6E07               	movwf	(___flmul@a+2)^0,c
  1218   0014EC  0E3F               	movlw	63
  1219   0014EE  6E08               	movwf	(___flmul@a+3)^0,c
  1220   0014F0  EC12  F008         	call	___flmul	;wreg free
  1221   0014F4  C001  F02D         	movff	?___flmul,_Duty_Cycle2
  1222   0014F8  C002  F02E         	movff	?___flmul+1,_Duty_Cycle2+1
  1223   0014FC  C003  F02F         	movff	?___flmul+2,_Duty_Cycle2+2
  1224   001500  C004  F030         	movff	?___flmul+3,_Duty_Cycle2+3
  1225   001504                     
  1226                           ;main.c: 184:     CCPR5L = (int) Duty_Cycle2 >> 2;
  1227   001504  C02D  F001         	movff	_Duty_Cycle2,___fltol@f1
  1228   001508  C02E  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1229   00150C  C02F  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1230   001510  C030  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1231   001514  ECAA  F00A         	call	___fltol	;wreg free
  1232   001518  3402               	rlcf	(?___fltol+1)^0,w,c
  1233   00151A  3202               	rrcf	(?___fltol+1)^0,f,c
  1234   00151C  3201               	rrcf	?___fltol^0,f,c
  1235   00151E  3402               	rlcf	(?___fltol+1)^0,w,c
  1236   001520  3202               	rrcf	(?___fltol+1)^0,f,c
  1237   001522  3201               	rrcf	?___fltol^0,f,c
  1238   001524  5001               	movf	?___fltol^0,w,c
  1239   001526  010F               	movlb	15	; () banked
  1240   001528  6F55               	movwf	85,b	;volatile
  1241   00152A                     
  1242                           ; BSR set to: 15
  1243                           ;main.c: 185:     CCP5CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4));
  1244   00152A  C02D  F001         	movff	_Duty_Cycle2,___fltol@f1
  1245   00152E  C02E  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1246   001532  C02F  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1247   001536  C030  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1248   00153A  ECAA  F00A         	call	___fltol	;wreg free
  1249   00153E  0E03               	movlw	3
  1250   001540  1601               	andwf	?___fltol^0,f,c
  1251   001542  3A01               	swapf	?___fltol^0,f,c
  1252   001544  0EF0               	movlw	240
  1253   001546  1601               	andwf	?___fltol^0,f,c
  1254   001548  010F               	movlb	15	; () banked
  1255   00154A  515D               	movf	93,w,b	;volatile
  1256   00154C  0B0F               	andlw	15
  1257   00154E  1001               	iorwf	?___fltol^0,w,c
  1258   001550  6F54               	movwf	84,b	;volatile
  1259   001552                     
  1260                           ; BSR set to: 15
  1261   001552  0012               	return		;funcret
  1262   001554                     __end_of_Send_PWM_Motors:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function ___fltol *****************
  1266 ;; Defined at:
  1267 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  f1              4    0[COMRAM] void 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  exp1            1    9[COMRAM] unsigned char 
  1272 ;;  sign1           1    8[COMRAM] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  4    0[COMRAM] long 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;Total ram usage:       10 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_Send_PWM_Motors
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text9
  1296   001554                     __ptext9:
  1297                           	callstack 0
  1298   001554                     ___fltol:
  1299                           	callstack 23
  1300   001554  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1301   001556  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1302   001558  6E0A               	movwf	___fltol@exp1^0,c
  1303   00155A  500A               	movf	___fltol@exp1^0,w,c
  1304   00155C  A4D8               	btfss	status,2,c
  1305   00155E  EFB3  F00A         	goto	i2u53_41
  1306   001562  EFB5  F00A         	goto	i2u53_40
  1307   001566                     i2u53_41:
  1308   001566  EFBF  F00A         	goto	i2l1270
  1309   00156A                     i2u53_40:
  1310   00156A                     i2l1266:
  1311   00156A  0E00               	movlw	0
  1312   00156C  6E01               	movwf	?___fltol^0,c
  1313   00156E  0E00               	movlw	0
  1314   001570  6E02               	movwf	(?___fltol+1)^0,c
  1315   001572  0E00               	movlw	0
  1316   001574  6E03               	movwf	(?___fltol+2)^0,c
  1317   001576  0E00               	movlw	0
  1318   001578  6E04               	movwf	(?___fltol+3)^0,c
  1319   00157A  EF2C  F00B         	goto	i2l440
  1320   00157E                     i2l1270:
  1321   00157E  C001  F005         	movff	___fltol@f1,??___fltol
  1322   001582  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1323   001586  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1324   00158A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1325   00158E  0E20               	movlw	32
  1326   001590  EFCF  F00A         	goto	i2u54_40
  1327   001594                     i2u54_45:
  1328   001594  90D8               	bcf	status,0,c
  1329   001596  3208               	rrcf	(??___fltol+3)^0,f,c
  1330   001598  3207               	rrcf	(??___fltol+2)^0,f,c
  1331   00159A  3206               	rrcf	(??___fltol+1)^0,f,c
  1332   00159C  3205               	rrcf	??___fltol^0,f,c
  1333   00159E                     i2u54_40:
  1334   00159E  2EE8               	decfsz	wreg,f,c
  1335   0015A0  EFCA  F00A         	goto	i2u54_45
  1336   0015A4  5005               	movf	??___fltol^0,w,c
  1337   0015A6  6E09               	movwf	___fltol@sign1^0,c
  1338   0015A8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1339   0015AA  0EFF               	movlw	255
  1340   0015AC  1601               	andwf	___fltol@f1^0,f,c
  1341   0015AE  0EFF               	movlw	255
  1342   0015B0  1602               	andwf	(___fltol@f1+1)^0,f,c
  1343   0015B2  0EFF               	movlw	255
  1344   0015B4  1603               	andwf	(___fltol@f1+2)^0,f,c
  1345   0015B6  0E00               	movlw	0
  1346   0015B8  1604               	andwf	(___fltol@f1+3)^0,f,c
  1347   0015BA  0E96               	movlw	150
  1348   0015BC  5E0A               	subwf	___fltol@exp1^0,f,c
  1349   0015BE  BE0A               	btfsc	___fltol@exp1^0,7,c
  1350   0015C0  EFE6  F00A         	goto	i2u55_40
  1351   0015C4  EFE4  F00A         	goto	i2u55_41
  1352   0015C8                     i2u55_41:
  1353   0015C8  EFFC  F00A         	goto	i2l1290
  1354   0015CC                     i2u55_40:
  1355   0015CC  500A               	movf	___fltol@exp1^0,w,c
  1356   0015CE  0A80               	xorlw	128
  1357   0015D0  0F97               	addlw	151
  1358   0015D2  B0D8               	btfsc	status,0,c
  1359   0015D4  EFEE  F00A         	goto	i2u56_41
  1360   0015D8  EFF0  F00A         	goto	i2u56_40
  1361   0015DC                     i2u56_41:
  1362   0015DC  EFF2  F00A         	goto	i2l1286
  1363   0015E0                     i2u56_40:
  1364   0015E0  EFB5  F00A         	goto	i2l1266
  1365   0015E4                     i2l1286:
  1366   0015E4  90D8               	bcf	status,0,c
  1367   0015E6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1368   0015E8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1369   0015EA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1370   0015EC  3201               	rrcf	___fltol@f1^0,f,c
  1371   0015EE  3E0A               	incfsz	___fltol@exp1^0,f,c
  1372   0015F0  EFF2  F00A         	goto	i2l1286
  1373   0015F4  EF14  F00B         	goto	i2l1300
  1374   0015F8                     i2l1290:
  1375   0015F8  0E1F               	movlw	31
  1376   0015FA  640A               	cpfsgt	___fltol@exp1^0,c
  1377   0015FC  EF02  F00B         	goto	i2u57_41
  1378   001600  EF04  F00B         	goto	i2u57_40
  1379   001604                     i2u57_41:
  1380   001604  EF0C  F00B         	goto	i2l1298
  1381   001608                     i2u57_40:
  1382   001608  EFB5  F00A         	goto	i2l1266
  1383   00160C                     i2l1296:
  1384   00160C  90D8               	bcf	status,0,c
  1385   00160E  3601               	rlcf	___fltol@f1^0,f,c
  1386   001610  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1387   001612  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1388   001614  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1389   001616  060A               	decf	___fltol@exp1^0,f,c
  1390   001618                     i2l1298:
  1391   001618  500A               	movf	___fltol@exp1^0,w,c
  1392   00161A  A4D8               	btfss	status,2,c
  1393   00161C  EF12  F00B         	goto	i2u58_41
  1394   001620  EF14  F00B         	goto	i2u58_40
  1395   001624                     i2u58_41:
  1396   001624  EF06  F00B         	goto	i2l1296
  1397   001628                     i2u58_40:
  1398   001628                     i2l1300:
  1399   001628  5009               	movf	___fltol@sign1^0,w,c
  1400   00162A  B4D8               	btfsc	status,2,c
  1401   00162C  EF1A  F00B         	goto	i2u59_41
  1402   001630  EF1C  F00B         	goto	i2u59_40
  1403   001634                     i2u59_41:
  1404   001634  EF24  F00B         	goto	i2l1304
  1405   001638                     i2u59_40:
  1406   001638  1E04               	comf	(___fltol@f1+3)^0,f,c
  1407   00163A  1E03               	comf	(___fltol@f1+2)^0,f,c
  1408   00163C  1E02               	comf	(___fltol@f1+1)^0,f,c
  1409   00163E  6C01               	negf	___fltol@f1^0,c
  1410   001640  0E00               	movlw	0
  1411   001642  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1412   001644  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1413   001646  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1414   001648                     i2l1304:
  1415   001648  C001  F001         	movff	___fltol@f1,?___fltol
  1416   00164C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1417   001650  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1418   001654  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1419   001658                     i2l440:
  1420   001658  0012               	return		;funcret
  1421   00165A                     __end_of___fltol:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function ___flmul *****************
  1425 ;; Defined at:
  1426 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  b               4    0[COMRAM] long 
  1429 ;;  a               4    4[COMRAM] long 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  prod            4   19[COMRAM] struct .
  1432 ;;  grs             4   13[COMRAM] unsigned long 
  1433 ;;  temp            2   23[COMRAM] struct .
  1434 ;;  bexp            1   18[COMRAM] unsigned char 
  1435 ;;  aexp            1   17[COMRAM] unsigned char 
  1436 ;;  sign            1   12[COMRAM] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  4    0[COMRAM] unsigned char 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, prodl, prodh
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:       25 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_Send_PWM_Motors
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text10
  1460   001024                     __ptext10:
  1461                           	callstack 0
  1462   001024                     ___flmul:
  1463                           	callstack 23
  1464   001024  5004               	movf	(___flmul@b+3)^0,w,c
  1465   001026  0B80               	andlw	128
  1466   001028  6E0D               	movwf	___flmul@sign^0,c
  1467   00102A  5004               	movf	(___flmul@b+3)^0,w,c
  1468   00102C  2404               	addwf	(___flmul@b+3)^0,w,c
  1469   00102E  6E13               	movwf	___flmul@bexp^0,c
  1470   001030  AE03               	btfss	(___flmul@b+2)^0,7,c
  1471   001032  EF1D  F008         	goto	i2u34_41
  1472   001036  EF1F  F008         	goto	i2u34_40
  1473   00103A                     i2u34_41:
  1474   00103A  EF20  F008         	goto	i2l1140
  1475   00103E                     i2u34_40:
  1476   00103E  8013               	bsf	___flmul@bexp^0,0,c
  1477   001040                     i2l1140:
  1478   001040  5013               	movf	___flmul@bexp^0,w,c
  1479   001042  B4D8               	btfsc	status,2,c
  1480   001044  EF26  F008         	goto	i2u35_41
  1481   001048  EF28  F008         	goto	i2u35_40
  1482   00104C                     i2u35_41:
  1483   00104C  EF3B  F008         	goto	i2l1148
  1484   001050                     i2u35_40:
  1485   001050  2813               	incf	___flmul@bexp^0,w,c
  1486   001052  A4D8               	btfss	status,2,c
  1487   001054  EF2E  F008         	goto	i2u36_41
  1488   001058  EF30  F008         	goto	i2u36_40
  1489   00105C                     i2u36_41:
  1490   00105C  EF38  F008         	goto	i2l1146
  1491   001060                     i2u36_40:
  1492   001060  0E00               	movlw	0
  1493   001062  6E01               	movwf	___flmul@b^0,c
  1494   001064  0E00               	movlw	0
  1495   001066  6E02               	movwf	(___flmul@b+1)^0,c
  1496   001068  0E00               	movlw	0
  1497   00106A  6E03               	movwf	(___flmul@b+2)^0,c
  1498   00106C  0E00               	movlw	0
  1499   00106E  6E04               	movwf	(___flmul@b+3)^0,c
  1500   001070                     i2l1146:
  1501   001070  8E03               	bsf	(___flmul@b+2)^0,7,c
  1502   001072  EF43  F008         	goto	i2l1150
  1503   001076                     i2l1148:
  1504   001076  0E00               	movlw	0
  1505   001078  6E01               	movwf	___flmul@b^0,c
  1506   00107A  0E00               	movlw	0
  1507   00107C  6E02               	movwf	(___flmul@b+1)^0,c
  1508   00107E  0E00               	movlw	0
  1509   001080  6E03               	movwf	(___flmul@b+2)^0,c
  1510   001082  0E00               	movlw	0
  1511   001084  6E04               	movwf	(___flmul@b+3)^0,c
  1512   001086                     i2l1150:
  1513   001086  5008               	movf	(___flmul@a+3)^0,w,c
  1514   001088  0B80               	andlw	128
  1515   00108A  1A0D               	xorwf	___flmul@sign^0,f,c
  1516   00108C  5008               	movf	(___flmul@a+3)^0,w,c
  1517   00108E  2408               	addwf	(___flmul@a+3)^0,w,c
  1518   001090  6E12               	movwf	___flmul@aexp^0,c
  1519   001092  AE07               	btfss	(___flmul@a+2)^0,7,c
  1520   001094  EF4E  F008         	goto	i2u37_41
  1521   001098  EF50  F008         	goto	i2u37_40
  1522   00109C                     i2u37_41:
  1523   00109C  EF51  F008         	goto	i2l1158
  1524   0010A0                     i2u37_40:
  1525   0010A0  8012               	bsf	___flmul@aexp^0,0,c
  1526   0010A2                     i2l1158:
  1527   0010A2  5012               	movf	___flmul@aexp^0,w,c
  1528   0010A4  B4D8               	btfsc	status,2,c
  1529   0010A6  EF57  F008         	goto	i2u38_41
  1530   0010AA  EF59  F008         	goto	i2u38_40
  1531   0010AE                     i2u38_41:
  1532   0010AE  EF6C  F008         	goto	i2l1166
  1533   0010B2                     i2u38_40:
  1534   0010B2  2812               	incf	___flmul@aexp^0,w,c
  1535   0010B4  A4D8               	btfss	status,2,c
  1536   0010B6  EF5F  F008         	goto	i2u39_41
  1537   0010BA  EF61  F008         	goto	i2u39_40
  1538   0010BE                     i2u39_41:
  1539   0010BE  EF69  F008         	goto	i2l1164
  1540   0010C2                     i2u39_40:
  1541   0010C2  0E00               	movlw	0
  1542   0010C4  6E05               	movwf	___flmul@a^0,c
  1543   0010C6  0E00               	movlw	0
  1544   0010C8  6E06               	movwf	(___flmul@a+1)^0,c
  1545   0010CA  0E00               	movlw	0
  1546   0010CC  6E07               	movwf	(___flmul@a+2)^0,c
  1547   0010CE  0E00               	movlw	0
  1548   0010D0  6E08               	movwf	(___flmul@a+3)^0,c
  1549   0010D2                     i2l1164:
  1550   0010D2  8E07               	bsf	(___flmul@a+2)^0,7,c
  1551   0010D4  EF74  F008         	goto	i2l757
  1552   0010D8                     i2l1166:
  1553   0010D8  0E00               	movlw	0
  1554   0010DA  6E05               	movwf	___flmul@a^0,c
  1555   0010DC  0E00               	movlw	0
  1556   0010DE  6E06               	movwf	(___flmul@a+1)^0,c
  1557   0010E0  0E00               	movlw	0
  1558   0010E2  6E07               	movwf	(___flmul@a+2)^0,c
  1559   0010E4  0E00               	movlw	0
  1560   0010E6  6E08               	movwf	(___flmul@a+3)^0,c
  1561   0010E8                     i2l757:
  1562   0010E8  5012               	movf	___flmul@aexp^0,w,c
  1563   0010EA  B4D8               	btfsc	status,2,c
  1564   0010EC  EF7A  F008         	goto	i2u40_41
  1565   0010F0  EF7C  F008         	goto	i2u40_40
  1566   0010F4                     i2u40_41:
  1567   0010F4  EF84  F008         	goto	i2l1170
  1568   0010F8                     i2u40_40:
  1569   0010F8  5013               	movf	___flmul@bexp^0,w,c
  1570   0010FA  A4D8               	btfss	status,2,c
  1571   0010FC  EF82  F008         	goto	i2u41_41
  1572   001100  EF84  F008         	goto	i2u41_40
  1573   001104                     i2u41_41:
  1574   001104  EF8E  F008         	goto	i2l1174
  1575   001108                     i2u41_40:
  1576   001108                     i2l1170:
  1577   001108  0E00               	movlw	0
  1578   00110A  6E01               	movwf	?___flmul^0,c
  1579   00110C  0E00               	movlw	0
  1580   00110E  6E02               	movwf	(?___flmul+1)^0,c
  1581   001110  0E00               	movlw	0
  1582   001112  6E03               	movwf	(?___flmul+2)^0,c
  1583   001114  0E00               	movlw	0
  1584   001116  6E04               	movwf	(?___flmul+3)^0,c
  1585   001118  EF26  F00A         	goto	i2l761
  1586   00111C                     i2l1174:
  1587   00111C  5007               	movf	(___flmul@a+2)^0,w,c
  1588   00111E  0201               	mulwf	___flmul@b^0,c
  1589   001120  CFF3 F018          	movff	prodl,___flmul@temp
  1590   001124  CFF4 F019          	movff	prodh,___flmul@temp+1
  1591   001128  5018               	movf	___flmul@temp^0,w,c
  1592   00112A  6E0E               	movwf	___flmul@grs^0,c
  1593   00112C  6A0F               	clrf	(___flmul@grs+1)^0,c
  1594   00112E  6A10               	clrf	(___flmul@grs+2)^0,c
  1595   001130  6A11               	clrf	(___flmul@grs+3)^0,c
  1596   001132  5019               	movf	(___flmul@temp+1)^0,w,c
  1597   001134  6E14               	movwf	___flmul@prod^0,c
  1598   001136  6A15               	clrf	(___flmul@prod+1)^0,c
  1599   001138  6A16               	clrf	(___flmul@prod+2)^0,c
  1600   00113A  6A17               	clrf	(___flmul@prod+3)^0,c
  1601   00113C  5006               	movf	(___flmul@a+1)^0,w,c
  1602   00113E  0202               	mulwf	(___flmul@b+1)^0,c
  1603   001140  CFF3 F018          	movff	prodl,___flmul@temp
  1604   001144  CFF4 F019          	movff	prodh,___flmul@temp+1
  1605   001148  5018               	movf	___flmul@temp^0,w,c
  1606   00114A  260E               	addwf	___flmul@grs^0,f,c
  1607   00114C  0E00               	movlw	0
  1608   00114E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1609   001150  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1610   001152  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1611   001154  5019               	movf	(___flmul@temp+1)^0,w,c
  1612   001156  2614               	addwf	___flmul@prod^0,f,c
  1613   001158  0E00               	movlw	0
  1614   00115A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1615   00115C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1616   00115E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1617   001160  5005               	movf	___flmul@a^0,w,c
  1618   001162  0203               	mulwf	(___flmul@b+2)^0,c
  1619   001164  CFF3 F018          	movff	prodl,___flmul@temp
  1620   001168  CFF4 F019          	movff	prodh,___flmul@temp+1
  1621   00116C  5018               	movf	___flmul@temp^0,w,c
  1622   00116E  260E               	addwf	___flmul@grs^0,f,c
  1623   001170  0E00               	movlw	0
  1624   001172  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1625   001174  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1626   001176  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1627   001178  5019               	movf	(___flmul@temp+1)^0,w,c
  1628   00117A  2614               	addwf	___flmul@prod^0,f,c
  1629   00117C  0E00               	movlw	0
  1630   00117E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1631   001180  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1632   001182  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1633   001184  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1634   001188  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1635   00118C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1636   001190  6A0E               	clrf	___flmul@grs^0,c
  1637   001192  5005               	movf	___flmul@a^0,w,c
  1638   001194  0202               	mulwf	(___flmul@b+1)^0,c
  1639   001196  CFF3 F018          	movff	prodl,___flmul@temp
  1640   00119A  CFF4 F019          	movff	prodh,___flmul@temp+1
  1641   00119E  5018               	movf	___flmul@temp^0,w,c
  1642   0011A0  260E               	addwf	___flmul@grs^0,f,c
  1643   0011A2  5019               	movf	(___flmul@temp+1)^0,w,c
  1644   0011A4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1645   0011A6  0E00               	movlw	0
  1646   0011A8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1647   0011AA  0E00               	movlw	0
  1648   0011AC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1649   0011AE  5006               	movf	(___flmul@a+1)^0,w,c
  1650   0011B0  0201               	mulwf	___flmul@b^0,c
  1651   0011B2  CFF3 F018          	movff	prodl,___flmul@temp
  1652   0011B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  1653   0011BA  5018               	movf	___flmul@temp^0,w,c
  1654   0011BC  260E               	addwf	___flmul@grs^0,f,c
  1655   0011BE  5019               	movf	(___flmul@temp+1)^0,w,c
  1656   0011C0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1657   0011C2  0E00               	movlw	0
  1658   0011C4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1659   0011C6  0E00               	movlw	0
  1660   0011C8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1661   0011CA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1662   0011CE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1663   0011D2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1664   0011D6  6A0E               	clrf	___flmul@grs^0,c
  1665   0011D8  5005               	movf	___flmul@a^0,w,c
  1666   0011DA  0201               	mulwf	___flmul@b^0,c
  1667   0011DC  CFF3 F018          	movff	prodl,___flmul@temp
  1668   0011E0  CFF4 F019          	movff	prodh,___flmul@temp+1
  1669   0011E4  5018               	movf	___flmul@temp^0,w,c
  1670   0011E6  260E               	addwf	___flmul@grs^0,f,c
  1671   0011E8  5019               	movf	(___flmul@temp+1)^0,w,c
  1672   0011EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1673   0011EC  0E00               	movlw	0
  1674   0011EE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1675   0011F0  0E00               	movlw	0
  1676   0011F2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1677   0011F4  5007               	movf	(___flmul@a+2)^0,w,c
  1678   0011F6  0202               	mulwf	(___flmul@b+1)^0,c
  1679   0011F8  CFF3 F018          	movff	prodl,___flmul@temp
  1680   0011FC  CFF4 F019          	movff	prodh,___flmul@temp+1
  1681   001200  5018               	movf	___flmul@temp^0,w,c
  1682   001202  2614               	addwf	___flmul@prod^0,f,c
  1683   001204  5019               	movf	(___flmul@temp+1)^0,w,c
  1684   001206  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1685   001208  0E00               	movlw	0
  1686   00120A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1687   00120C  0E00               	movlw	0
  1688   00120E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1689   001210  5006               	movf	(___flmul@a+1)^0,w,c
  1690   001212  0203               	mulwf	(___flmul@b+2)^0,c
  1691   001214  CFF3 F018          	movff	prodl,___flmul@temp
  1692   001218  CFF4 F019          	movff	prodh,___flmul@temp+1
  1693   00121C  5018               	movf	___flmul@temp^0,w,c
  1694   00121E  2614               	addwf	___flmul@prod^0,f,c
  1695   001220  5019               	movf	(___flmul@temp+1)^0,w,c
  1696   001222  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1697   001224  0E00               	movlw	0
  1698   001226  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1699   001228  0E00               	movlw	0
  1700   00122A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1701   00122C  5007               	movf	(___flmul@a+2)^0,w,c
  1702   00122E  0203               	mulwf	(___flmul@b+2)^0,c
  1703   001230  CFF3 F018          	movff	prodl,___flmul@temp
  1704   001234  CFF4 F019          	movff	prodh,___flmul@temp+1
  1705   001238  5018               	movf	___flmul@temp^0,w,c
  1706   00123A  6E09               	movwf	??___flmul^0,c
  1707   00123C  5019               	movf	(___flmul@temp+1)^0,w,c
  1708   00123E  6E0A               	movwf	(??___flmul+1)^0,c
  1709   001240  6A0B               	clrf	(??___flmul+2)^0,c
  1710   001242  6A0C               	clrf	(??___flmul+3)^0,c
  1711   001244  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  1712   001248  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  1713   00124C  C009  F00A         	movff	??___flmul,??___flmul+1
  1714   001250  6A09               	clrf	??___flmul^0,c
  1715   001252  5009               	movf	??___flmul^0,w,c
  1716   001254  2614               	addwf	___flmul@prod^0,f,c
  1717   001256  500A               	movf	(??___flmul+1)^0,w,c
  1718   001258  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1719   00125A  500B               	movf	(??___flmul+2)^0,w,c
  1720   00125C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1721   00125E  500C               	movf	(??___flmul+3)^0,w,c
  1722   001260  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1723   001262  C00E  F009         	movff	___flmul@grs,??___flmul
  1724   001266  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  1725   00126A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  1726   00126E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  1727   001272  0E19               	movlw	25
  1728   001274  EF41  F009         	goto	i2u42_40
  1729   001278                     i2u42_45:
  1730   001278  90D8               	bcf	status,0,c
  1731   00127A  320C               	rrcf	(??___flmul+3)^0,f,c
  1732   00127C  320B               	rrcf	(??___flmul+2)^0,f,c
  1733   00127E  320A               	rrcf	(??___flmul+1)^0,f,c
  1734   001280  3209               	rrcf	??___flmul^0,f,c
  1735   001282                     i2u42_40:
  1736   001282  2EE8               	decfsz	wreg,f,c
  1737   001284  EF3C  F009         	goto	i2u42_45
  1738   001288  5009               	movf	??___flmul^0,w,c
  1739   00128A  2614               	addwf	___flmul@prod^0,f,c
  1740   00128C  500A               	movf	(??___flmul+1)^0,w,c
  1741   00128E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1742   001290  500B               	movf	(??___flmul+2)^0,w,c
  1743   001292  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1744   001294  500C               	movf	(??___flmul+3)^0,w,c
  1745   001296  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1746   001298  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1747   00129C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1748   0012A0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1749   0012A4  6A0E               	clrf	___flmul@grs^0,c
  1750   0012A6  5012               	movf	___flmul@aexp^0,w,c
  1751   0012A8  C013  F009         	movff	___flmul@bexp,??___flmul
  1752   0012AC  6A0A               	clrf	(??___flmul+1)^0,c
  1753   0012AE  2609               	addwf	??___flmul^0,f,c
  1754   0012B0  0E00               	movlw	0
  1755   0012B2  220A               	addwfc	(??___flmul+1)^0,f,c
  1756   0012B4  0E82               	movlw	130
  1757   0012B6  2409               	addwf	??___flmul^0,w,c
  1758   0012B8  6E18               	movwf	___flmul@temp^0,c
  1759   0012BA  0EFF               	movlw	255
  1760   0012BC  200A               	addwfc	(??___flmul+1)^0,w,c
  1761   0012BE  6E19               	movwf	(___flmul@temp+1)^0,c
  1762   0012C0  EF77  F009         	goto	i2l1222
  1763   0012C4                     i2l1216:
  1764   0012C4  90D8               	bcf	status,0,c
  1765   0012C6  3614               	rlcf	___flmul@prod^0,f,c
  1766   0012C8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  1767   0012CA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  1768   0012CC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  1769   0012CE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1770   0012D0  EF6C  F009         	goto	i2u43_41
  1771   0012D4  EF6E  F009         	goto	i2u43_40
  1772   0012D8                     i2u43_41:
  1773   0012D8  EF6F  F009         	goto	i2l764
  1774   0012DC                     i2u43_40:
  1775   0012DC  8014               	bsf	___flmul@prod^0,0,c
  1776   0012DE                     i2l764:
  1777   0012DE  90D8               	bcf	status,0,c
  1778   0012E0  360E               	rlcf	___flmul@grs^0,f,c
  1779   0012E2  360F               	rlcf	(___flmul@grs+1)^0,f,c
  1780   0012E4  3610               	rlcf	(___flmul@grs+2)^0,f,c
  1781   0012E6  3611               	rlcf	(___flmul@grs+3)^0,f,c
  1782   0012E8  0618               	decf	___flmul@temp^0,f,c
  1783   0012EA  A0D8               	btfss	status,0,c
  1784   0012EC  0619               	decf	(___flmul@temp+1)^0,f,c
  1785   0012EE                     i2l1222:
  1786   0012EE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  1787   0012F0  EF7C  F009         	goto	i2u44_41
  1788   0012F4  EF7E  F009         	goto	i2u44_40
  1789   0012F8                     i2u44_41:
  1790   0012F8  EF62  F009         	goto	i2l1216
  1791   0012FC                     i2u44_40:
  1792   0012FC  0E00               	movlw	0
  1793   0012FE  6E12               	movwf	___flmul@aexp^0,c
  1794   001300  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1795   001302  EF85  F009         	goto	i2u45_41
  1796   001306  EF87  F009         	goto	i2u45_40
  1797   00130A                     i2u45_41:
  1798   00130A  EFAB  F009         	goto	i2l766
  1799   00130E                     i2u45_40:
  1800   00130E  0EFF               	movlw	255
  1801   001310  140E               	andwf	___flmul@grs^0,w,c
  1802   001312  6E09               	movwf	??___flmul^0,c
  1803   001314  0EFF               	movlw	255
  1804   001316  140F               	andwf	(___flmul@grs+1)^0,w,c
  1805   001318  6E0A               	movwf	(??___flmul+1)^0,c
  1806   00131A  0EFF               	movlw	255
  1807   00131C  1410               	andwf	(___flmul@grs+2)^0,w,c
  1808   00131E  6E0B               	movwf	(??___flmul+2)^0,c
  1809   001320  0E7F               	movlw	127
  1810   001322  1411               	andwf	(___flmul@grs+3)^0,w,c
  1811   001324  6E0C               	movwf	(??___flmul+3)^0,c
  1812   001326  5009               	movf	??___flmul^0,w,c
  1813   001328  100A               	iorwf	(??___flmul+1)^0,w,c
  1814   00132A  100B               	iorwf	(??___flmul+2)^0,w,c
  1815   00132C  100C               	iorwf	(??___flmul+3)^0,w,c
  1816   00132E  B4D8               	btfsc	status,2,c
  1817   001330  EF9C  F009         	goto	i2u46_41
  1818   001334  EF9E  F009         	goto	i2u46_40
  1819   001338                     i2u46_41:
  1820   001338  EFA2  F009         	goto	i2l767
  1821   00133C                     i2u46_40:
  1822   00133C                     i2l1230:
  1823   00133C  0E01               	movlw	1
  1824   00133E  6E12               	movwf	___flmul@aexp^0,c
  1825   001340  EFAB  F009         	goto	i2l766
  1826   001344                     i2l767:
  1827   001344  A014               	btfss	___flmul@prod^0,0,c
  1828   001346  EFA7  F009         	goto	i2u47_41
  1829   00134A  EFA9  F009         	goto	i2u47_40
  1830   00134E                     i2u47_41:
  1831   00134E  EFAB  F009         	goto	i2l766
  1832   001352                     i2u47_40:
  1833   001352  EF9E  F009         	goto	i2l1230
  1834   001356                     i2l766:
  1835   001356  5012               	movf	___flmul@aexp^0,w,c
  1836   001358  B4D8               	btfsc	status,2,c
  1837   00135A  EFB1  F009         	goto	i2u48_41
  1838   00135E  EFB3  F009         	goto	i2u48_40
  1839   001362                     i2u48_41:
  1840   001362  EFD7  F009         	goto	i2l1242
  1841   001366                     i2u48_40:
  1842   001366  0E01               	movlw	1
  1843   001368  2614               	addwf	___flmul@prod^0,f,c
  1844   00136A  0E00               	movlw	0
  1845   00136C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1846   00136E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1847   001370  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1848   001372  A017               	btfss	(___flmul@prod+3)^0,0,c
  1849   001374  EFBE  F009         	goto	i2u49_41
  1850   001378  EFC0  F009         	goto	i2u49_40
  1851   00137C                     i2u49_41:
  1852   00137C  EFD7  F009         	goto	i2l1242
  1853   001380                     i2u49_40:
  1854   001380  C014  F009         	movff	___flmul@prod,??___flmul
  1855   001384  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  1856   001388  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  1857   00138C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  1858   001390  340C               	rlcf	(??___flmul+3)^0,w,c
  1859   001392  320C               	rrcf	(??___flmul+3)^0,f,c
  1860   001394  320B               	rrcf	(??___flmul+2)^0,f,c
  1861   001396  320A               	rrcf	(??___flmul+1)^0,f,c
  1862   001398  3209               	rrcf	??___flmul^0,f,c
  1863   00139A  C009  F014         	movff	??___flmul,___flmul@prod
  1864   00139E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  1865   0013A2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  1866   0013A6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  1867   0013AA  4A18               	infsnz	___flmul@temp^0,f,c
  1868   0013AC  2A19               	incf	(___flmul@temp+1)^0,f,c
  1869   0013AE                     i2l1242:
  1870   0013AE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1871   0013B0  EFE2  F009         	goto	i2u50_41
  1872   0013B4  5019               	movf	(___flmul@temp+1)^0,w,c
  1873   0013B6  E108               	bnz	i2u50_40
  1874   0013B8  2818               	incf	___flmul@temp^0,w,c
  1875   0013BA  A0D8               	btfss	status,0,c
  1876   0013BC  EFE2  F009         	goto	i2u50_41
  1877   0013C0  EFE4  F009         	goto	i2u50_40
  1878   0013C4                     i2u50_41:
  1879   0013C4  EFEE  F009         	goto	i2l1246
  1880   0013C8                     i2u50_40:
  1881   0013C8  0E00               	movlw	0
  1882   0013CA  6E14               	movwf	___flmul@prod^0,c
  1883   0013CC  0E00               	movlw	0
  1884   0013CE  6E15               	movwf	(___flmul@prod+1)^0,c
  1885   0013D0  0E80               	movlw	128
  1886   0013D2  6E16               	movwf	(___flmul@prod+2)^0,c
  1887   0013D4  0E7F               	movlw	127
  1888   0013D6  6E17               	movwf	(___flmul@prod+3)^0,c
  1889   0013D8  EF1C  F00A         	goto	i2l1258
  1890   0013DC                     i2l1246:
  1891   0013DC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1892   0013DE  EFFB  F009         	goto	i2u51_40
  1893   0013E2  5019               	movf	(___flmul@temp+1)^0,w,c
  1894   0013E4  E106               	bnz	i2u51_41
  1895   0013E6  0418               	decf	___flmul@temp^0,w,c
  1896   0013E8  B0D8               	btfsc	status,0,c
  1897   0013EA  EFF9  F009         	goto	i2u51_41
  1898   0013EE  EFFB  F009         	goto	i2u51_40
  1899   0013F2                     i2u51_41:
  1900   0013F2  EF07  F00A         	goto	i2l774
  1901   0013F6                     i2u51_40:
  1902   0013F6  0E00               	movlw	0
  1903   0013F8  6E14               	movwf	___flmul@prod^0,c
  1904   0013FA  0E00               	movlw	0
  1905   0013FC  6E15               	movwf	(___flmul@prod+1)^0,c
  1906   0013FE  0E00               	movlw	0
  1907   001400  6E16               	movwf	(___flmul@prod+2)^0,c
  1908   001402  0E00               	movlw	0
  1909   001404  6E17               	movwf	(___flmul@prod+3)^0,c
  1910   001406  0E00               	movlw	0
  1911   001408  6E0D               	movwf	___flmul@sign^0,c
  1912   00140A  EF1C  F00A         	goto	i2l1258
  1913   00140E                     i2l774:
  1914   00140E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  1915   001412  0EFF               	movlw	255
  1916   001414  1614               	andwf	___flmul@prod^0,f,c
  1917   001416  0EFF               	movlw	255
  1918   001418  1615               	andwf	(___flmul@prod+1)^0,f,c
  1919   00141A  0E7F               	movlw	127
  1920   00141C  1616               	andwf	(___flmul@prod+2)^0,f,c
  1921   00141E  0E00               	movlw	0
  1922   001420  1617               	andwf	(___flmul@prod+3)^0,f,c
  1923   001422  A013               	btfss	___flmul@bexp^0,0,c
  1924   001424  EF16  F00A         	goto	i2u52_41
  1925   001428  EF18  F00A         	goto	i2u52_40
  1926   00142C                     i2u52_41:
  1927   00142C  EF19  F00A         	goto	i2l1256
  1928   001430                     i2u52_40:
  1929   001430  8E16               	bsf	(___flmul@prod+2)^0,7,c
  1930   001432                     i2l1256:
  1931   001432  90D8               	bcf	status,0,c
  1932   001434  3013               	rrcf	___flmul@bexp^0,w,c
  1933   001436  6E17               	movwf	(___flmul@prod+3)^0,c
  1934   001438                     i2l1258:
  1935   001438  500D               	movf	___flmul@sign^0,w,c
  1936   00143A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  1937   00143C  C014  F001         	movff	___flmul@prod,?___flmul
  1938   001440  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  1939   001444  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  1940   001448  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  1941   00144C                     i2l761:
  1942   00144C  0012               	return		;funcret
  1943   00144E                     __end_of___flmul:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function _Manage_Motor_Direction *****************
  1947 ;; Defined at:
  1948 ;;		line 191 in file "main.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  in1             1    wreg     unsigned char 
  1951 ;;  in2             1    0[COMRAM] unsigned char 
  1952 ;;  in3             1    1[COMRAM] unsigned char 
  1953 ;;  in4             1    2[COMRAM] unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  in1             1    3[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:        4 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_Receive_Interrupt
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text11
  1979   00189A                     __ptext11:
  1980                           	callstack 0
  1981   00189A                     _Manage_Motor_Direction:
  1982                           	callstack 24
  1983                           
  1984                           ;incstack = 0
  1985                           ;Manage_Motor_Direction@in1 stored from wreg
  1986   00189A  6E04               	movwf	Manage_Motor_Direction@in1^0,c
  1987   00189C                     
  1988                           ;main.c: 193:     LATDbits.LD4 = in1;
  1989   00189C  B004               	btfsc	Manage_Motor_Direction@in1^0,0,c
  1990   00189E  D002               	bra	i2u60_45
  1991   0018A0  988C               	bcf	140,4,c	;volatile
  1992   0018A2  D001               	bra	i2u60_46
  1993   0018A4                     i2u60_45:
  1994   0018A4  888C               	bsf	140,4,c	;volatile
  1995   0018A6                     i2u60_46:
  1996   0018A6                     
  1997                           ;main.c: 194:     LATDbits.LD5 = in2;
  1998   0018A6  B001               	btfsc	Manage_Motor_Direction@in2^0,0,c
  1999   0018A8  D002               	bra	i2u61_45
  2000   0018AA  9A8C               	bcf	140,5,c	;volatile
  2001   0018AC  D001               	bra	i2u61_46
  2002   0018AE                     i2u61_45:
  2003   0018AE  8A8C               	bsf	140,5,c	;volatile
  2004   0018B0                     i2u61_46:
  2005   0018B0                     
  2006                           ;main.c: 195:     LATDbits.LD6 = in3;
  2007   0018B0  B002               	btfsc	Manage_Motor_Direction@in3^0,0,c
  2008   0018B2  D002               	bra	i2u62_45
  2009   0018B4  9C8C               	bcf	140,6,c	;volatile
  2010   0018B6  D001               	bra	i2u62_46
  2011   0018B8                     i2u62_45:
  2012   0018B8  8C8C               	bsf	140,6,c	;volatile
  2013   0018BA                     i2u62_46:
  2014   0018BA                     
  2015                           ;main.c: 196:     LATDbits.LD7 = in4;
  2016   0018BA  B003               	btfsc	Manage_Motor_Direction@in4^0,0,c
  2017   0018BC  D002               	bra	i2u63_45
  2018   0018BE  9E8C               	bcf	140,7,c	;volatile
  2019   0018C0  D001               	bra	i2u63_46
  2020   0018C2                     i2u63_45:
  2021   0018C2  8E8C               	bsf	140,7,c	;volatile
  2022   0018C4                     i2u63_46:
  2023   0018C4  0012               	return		;funcret
  2024   0018C6                     __end_of_Manage_Motor_Direction:
  2025                           	callstack 0
  2026                           
  2027                           	psect	rparam
  2028   000000                     
  2029                           	psect	temp
  2030   000036                     btemp:
  2031                           	callstack 0
  2032   000036                     	ds	1
  2033   000000                     int$flags	set	btemp
  2034   000000                     wtemp8	set	btemp+1
  2035   000000                     ttemp5	set	btemp+1
  2036   000000                     ttemp6	set	btemp+4
  2037   000000                     ttemp7	set	btemp+8
  2038                           
  2039                           	psect	config
  2040                           
  2041                           ; Padding undefined space
  2042   300000                     	org	3145728
  2043   300000  FF                 	db	255
  2044                           
  2045                           ;Config register CONFIG1H @ 0x300001
  2046                           ;	Oscillator Selection bits
  2047                           ;	FOSC = INTIO67, Internal oscillator block
  2048                           ;	4X PLL Enable
  2049                           ;	PLLCFG = OFF, Oscillator used directly
  2050                           ;	Primary clock enable bit
  2051                           ;	PRICLKEN = ON, Primary clock is always enabled
  2052                           ;	Fail-Safe Clock Monitor Enable bit
  2053                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2054                           ;	Internal/External Oscillator Switchover bit
  2055                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2056   300001                     	org	3145729
  2057   300001  28                 	db	40
  2058                           
  2059                           ;Config register CONFIG2L @ 0x300002
  2060                           ;	Power-up Timer Enable bit
  2061                           ;	PWRTEN = OFF, Power up timer disabled
  2062                           ;	Brown-out Reset Enable bits
  2063                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2064                           ;	Brown Out Reset Voltage bits
  2065                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2066   300002                     	org	3145730
  2067   300002  1F                 	db	31
  2068                           
  2069                           ;Config register CONFIG2H @ 0x300003
  2070                           ;	Watchdog Timer Enable bits
  2071                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2072                           ;	Watchdog Timer Postscale Select bits
  2073                           ;	WDTPS = 32768, 1:32768
  2074   300003                     	org	3145731
  2075   300003  3C                 	db	60
  2076                           
  2077                           ; Padding undefined space
  2078   300004                     	org	3145732
  2079   300004  FF                 	db	255
  2080                           
  2081                           ;Config register CONFIG3H @ 0x300005
  2082                           ;	CCP2 MUX bit
  2083                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2084                           ;	PORTB A/D Enable bit
  2085                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2086                           ;	P3A/CCP3 Mux bit
  2087                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2088                           ;	HFINTOSC Fast Start-up
  2089                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2090                           ;	Timer3 Clock input mux bit
  2091                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2092                           ;	ECCP2 B output mux bit
  2093                           ;	P2BMX = PORTD2, P2B is on RD2
  2094                           ;	MCLR Pin Enable bit
  2095                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2096   300005                     	org	3145733
  2097   300005  BB                 	db	187
  2098                           
  2099                           ;Config register CONFIG4L @ 0x300006
  2100                           ;	Stack Full/Underflow Reset Enable bit
  2101                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2102                           ;	Single-Supply ICSP Enable bit
  2103                           ;	LVP = OFF, Single-Supply ICSP disabled
  2104                           ;	Extended Instruction Set Enable bit
  2105                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2106                           ;	Background Debug
  2107                           ;	DEBUG = 0x1, unprogrammed default
  2108   300006                     	org	3145734
  2109   300006  81                 	db	129
  2110                           
  2111                           ; Padding undefined space
  2112   300007                     	org	3145735
  2113   300007  FF                 	db	255
  2114                           
  2115                           ;Config register CONFIG5L @ 0x300008
  2116                           ;	Code Protection Block 0
  2117                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2118                           ;	Code Protection Block 1
  2119                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2120                           ;	Code Protection Block 2
  2121                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2122                           ;	Code Protection Block 3
  2123                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2124   300008                     	org	3145736
  2125   300008  0F                 	db	15
  2126                           
  2127                           ;Config register CONFIG5H @ 0x300009
  2128                           ;	Boot Block Code Protection bit
  2129                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2130                           ;	Data EEPROM Code Protection bit
  2131                           ;	CPD = OFF, Data EEPROM not code-protected
  2132   300009                     	org	3145737
  2133   300009  C0                 	db	192
  2134                           
  2135                           ;Config register CONFIG6L @ 0x30000A
  2136                           ;	Write Protection Block 0
  2137                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2138                           ;	Write Protection Block 1
  2139                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2140                           ;	Write Protection Block 2
  2141                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2142                           ;	Write Protection Block 3
  2143                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2144   30000A                     	org	3145738
  2145   30000A  0F                 	db	15
  2146                           
  2147                           ;Config register CONFIG6H @ 0x30000B
  2148                           ;	Configuration Register Write Protection bit
  2149                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2150                           ;	Boot Block Write Protection bit
  2151                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2152                           ;	Data EEPROM Write Protection bit
  2153                           ;	WRTD = OFF, Data EEPROM not write-protected
  2154   30000B                     	org	3145739
  2155   30000B  E0                 	db	224
  2156                           
  2157                           ;Config register CONFIG7L @ 0x30000C
  2158                           ;	Table Read Protection Block 0
  2159                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2160                           ;	Table Read Protection Block 1
  2161                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2162                           ;	Table Read Protection Block 2
  2163                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2164                           ;	Table Read Protection Block 3
  2165                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2166   30000C                     	org	3145740
  2167   30000C  0F                 	db	15
  2168                           
  2169                           ;Config register CONFIG7H @ 0x30000D
  2170                           ;	Boot Block Table Read Protection bit
  2171                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2172   30000D                     	org	3145741
  2173   30000D  40                 	db	64
  2174                           tosu	equ	0xFFF
  2175                           tosh	equ	0xFFE
  2176                           tosl	equ	0xFFD
  2177                           stkptr	equ	0xFFC
  2178                           pclatu	equ	0xFFB
  2179                           pclath	equ	0xFFA
  2180                           pcl	equ	0xFF9
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           prodh	equ	0xFF4
  2186                           prodl	equ	0xFF3
  2187                           indf0	equ	0xFEF
  2188                           postinc0	equ	0xFEE
  2189                           postdec0	equ	0xFED
  2190                           preinc0	equ	0xFEC
  2191                           plusw0	equ	0xFEB
  2192                           fsr0h	equ	0xFEA
  2193                           fsr0l	equ	0xFE9
  2194                           wreg	equ	0xFE8
  2195                           indf1	equ	0xFE7
  2196                           postinc1	equ	0xFE6
  2197                           postdec1	equ	0xFE5
  2198                           preinc1	equ	0xFE4
  2199                           plusw1	equ	0xFE3
  2200                           fsr1h	equ	0xFE2
  2201                           fsr1l	equ	0xFE1
  2202                           bsr	equ	0xFE0
  2203                           indf2	equ	0xFDF
  2204                           postinc2	equ	0xFDE
  2205                           postdec2	equ	0xFDD
  2206                           preinc2	equ	0xFDC
  2207                           plusw2	equ	0xFDB
  2208                           fsr2h	equ	0xFDA
  2209                           fsr2l	equ	0xFD9
  2210                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Interrupt_Rx->_Receive_Interrupt
    _Receive_Interrupt->_Send_PWM_Motors
    _Send_PWM_Motors->___flmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     917
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     917
                                             42 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     917
                                             40 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             38 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         2     2      0    3701
                                             35 COMRAM     2     2      0
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Receive_Interrupt                                    2     2      0    3701
                                             33 COMRAM     2     2      0
             _Manage_Motor_Direction
                    _Send_PWM_Motors
 ---------------------------------------------------------------------------------
 (7) _Send_PWM_Motors                                      8     0      8    2929
                                             25 COMRAM     8     0      8
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    1896
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Motor_Direction                               4     1      3     772
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Manage_Motor_Direction
     _Send_PWM_Motors
       ___flmul
       ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      35       1       56.4%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRhllhhh     14      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      43        0.0%
BITBIGSFRhllhl       8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhh         6      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRhllhhl      1      0       0      40        0.0%
BITBIGSFRhlllh       1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      50        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 28 18:45:51 2024

                              l81 192A                                l82 192A                                l98 185C  
                              bsr 0FE0                               l131 1906                               l134 1898  
                             l128 17F4                               l820 1872                               l822 1876  
                             l824 1886                               l816 1860                               l826 1888  
                             l818 1862                               _PR2 0FBB                               u707 17E6  
                             u717 1868                               u645 18F6                               u646 18F8  
                             u727 187C                               u737 188E                               u677 175E  
                             u687 177C                               u697 1796                               wreg 0FE8  
                      _TXSTA1bits 0FAC                      ___flmul@aexp 0012                      ___flmul@bexp 0013  
                    ___flmul@sign 000D                      ___flmul@temp 0018                      ___flmul@prod 0014  
                    ___fltol@exp1 000A                              l1030 180A                              l1040 1824  
                            l1032 1814                              l1050 1832                              l1042 1826  
                            l1034 1816                              l1026 17F6                              l1060 183C  
                            l1052 1834                              l1044 1828                              l1036 1820  
                            l1028 1808                              l1062 183E                              l1054 1836  
                            l1046 182E                              l1038 1822                              l1064 1840  
                            l1056 1838                              l1048 1830                              l1066 185A  
                            l1058 183A                              l1330 1900                              l1340 17A0  
                            l1332 1754                              l1326 18EE                              l1350 17D2  
                            l1342 17AA                              l1334 176C                              l1328 18F8  
                            l1352 17DC                              l1344 17B4                              l1336 1776  
                            l1346 17BE                              l1338 1790                              l1348 17C8  
                            l1376 1922                              l1378 1926                              STR_1 1012  
                            STR_2 1001                              _LATD 0F8C                              _LATE 0F8D  
                            i1l95 001E                              i2l90 18E0                              _main 1922  
                            btemp 0036                              prodh 0FF4                              prodl 0FF3  
                            start 0026                      ___param_bank 0000                   _LCD_Instruction 185E  
Send_Instruction_Data@Instruction 002A                      _BAUDCON1bits 0FB8                     ___fltol@sign1 0009  
                           ?_main 0001                   __end_of___flmul 144E                   __end_of___fltol 165A  
                           _T2CON 0FBA                             i2l112 18C4                             i2l106 1752  
                           i2l109 1552                             i2l440 1658                             i2l761 144C  
                           i2l764 12DE                             i2l757 10E8                             i2l774 140E  
                           i2l766 1356                             i2l767 1344                             _SPBRG 0FAF  
                           _TRISD 0F95                             _TRISE 0F96                             ttemp5 0037  
                           ttemp6 003A                             ttemp7 003E                             status 0FD8  
                           wtemp8 0037                   __initialization 1908                      __end_of_main 1932  
                __end_of_Init_LCD 17F6             _Send_Instruction_Data 18EC          ??_Manage_Motor_Direction 0004  
                          ??_main 002D                     __activetblptr 0002                            _CCPR3L 0F5E  
                          _CCPR5L 0F55                            _ANSELC 0F3A                            _ANSELD 0F3B  
                          _ANSELE 0F3C                            i2l1200 11E4                            i2l1210 1262  
                          i2l1202 11F4                            i2l1220 12DC                            i2l1212 1298  
                          i2l1204 1210                            i2l1140 1040                            i2l1300 1628  
                          i2l1230 133C                            i2l1222 12EE                            i2l1214 12A6  
                          i2l1206 121C                            i2l1150 1086                            i2l1142 1050  
                          i2l1134 1024                            i2l1302 1638                            i2l1310 1482  
                          i2l1320 18A6                            i2l1240 13AA                            i2l1224 12FC  
                          i2l1216 12C4                            i2l1208 1238                            i2l1160 10B2  
                          i2l1152 108C                            i2l1144 1060                            i2l1136 1030  
                          i2l1304 1648                            i2l1312 14A8                            i2l1322 18B0  
                          i2l1250 1412                            i2l1234 1366                            i2l1242 13AE  
                          i2l1226 1300                            i2l1218 12CE                            i2l1170 1108  
                          i2l1162 10C2                            i2l1154 1092                            i2l1146 1070  
                          i2l1138 103E                            i2l1314 1504                            i2l1324 18BA  
                          i2l1260 143C                            i2l1252 1422                            i2l1244 13C8  
                          i2l1236 1372                            i2l1228 130E                            i2l1180 1148  
                          i2l1164 10D2                            i2l1156 10A0                            i2l1148 1076  
                          i2l1316 152A                            i2l1308 144E                            i2l1318 189C  
                          i2l1254 1430                            i2l1246 13DC                            i2l1238 1380  
                          i2l1190 1192                            i2l1182 1154                            i2l1174 111C  
                          i2l1166 10D8                            i2l1158 10A2                            i2l1270 157E  
                          i2l1256 1432                            i2l1248 13F6                            i2l1192 119E  
                          i2l1184 116C                            i2l1176 1128                            i2l1168 10F8  
                          i2l1280 15CC                            i2l1272 15A8                            i2l1264 1554  
                          i2l1360 1698                            i2l1258 1438                            i2l1194 11AE  
                          i2l1186 1178                            i2l1178 1132                            i2l1290 15F8  
                          i2l1274 15AA                            i2l1266 156A                            i2l1370 1726  
                          i2l1362 16B4                            i2l1354 165A                            i2l1196 11BA  
                          i2l1188 1184                            i2l1276 15BA                            i2l1364 16D8  
                          i2l1356 1662                            i2l1380 18CE                            i2l1198 11CA  
                          i2l1286 15E4                            i2l1278 15BE                            i2l1366 16EA  
                          i2l1358 1686                            i2l1374 173C                            i2l1382 18DC  
                          i2l1296 160C                            i2l1288 15EE                            i2l1368 1702  
                          i2l1298 1618                            _RCREG1 0FAE        LCD_Instruction@Instruction 0028  
                          _OSCCON 0FD3                     ?_Interrupt_Rx 0001           __end_of_LCD_Instruction 189A  
                       ??___flmul 0009                         ??___fltol 0005                            clear_0 190E  
                          isa$std 0001                 ??_Send_PWM_Motors 0022                      __mediumconst 0000  
                          tblptru 0FF8                        __accesstop 0060           __end_of__initialization 1914  
                  ??_Interrupt_Rx 0024                     ___rparam_used 0001                        ___fltol@f1 0001  
                  __pcstackCOMRAM 0001                 _Receive_Interrupt 165A            ?_Send_Instruction_Data 0029  
              ?_Receive_Interrupt 0001               ??_Receive_Interrupt 0022                       _Duty_Cycle1 0031  
                     _Duty_Cycle2 002D                 __end_of_Interrupt 0026                         ?_Init_LCD 0001  
                ?_LCD_Instruction 0001         __end_of_Receive_Interrupt 1754                           _CCP3CON 0F5D  
                         _CCP5CON 0F54                           i2u40_40 10F8                           i2u40_41 10F4  
                         i2u41_40 1108                           i2u41_41 1104                           i2u50_40 13C8  
                         i2u42_40 1282                           i2u34_40 103E                           i2u50_41 13C4  
                         i2u34_41 103A                           i2u42_45 1278                           i2u51_40 13F6  
                         i2u43_40 12DC                           i2u35_40 1050                           i2u51_41 13F2  
                         i2u43_41 12D8                           i2u35_41 104C                           i2u52_40 1430  
                         i2u44_40 12FC                           i2u36_40 1060                           i2u52_41 142C  
                         i2u44_41 12F8                           i2u36_41 105C                           i2u60_45 18A4  
                         i2u60_46 18A6                           i2u45_40 130E                           i2u37_40 10A0  
                         i2u53_40 156A                           i2u45_41 130A                           i2u37_41 109C  
                         i2u53_41 1566                           i2u61_45 18AE                           i2u61_46 18B0  
                         i2u46_40 133C                           i2u38_40 10B2                           i2u54_40 159E  
                         i2u46_41 1338                           i2u38_41 10AE                           i2u62_45 18B8  
                         i2u54_45 1594                           i2u62_46 18BA                           i2u47_40 1352  
                         i2u39_40 10C2                           i2u55_40 15CC                           i2u47_41 134E  
                         i2u39_41 10BE                           i2u55_41 15C8                           i2u63_45 18C2  
                         i2u63_46 18C4                           i2u48_40 1366                           i2u56_40 15E0  
                         i2u48_41 1362                           i2u56_41 15DC                           i2u49_40 1380  
                         i2u57_40 1608                           i2u65_40 18DC                           i2u49_41 137C  
                         i2u57_41 1604                           i2u65_41 18D8                           i2u58_40 1628  
                         i2u58_41 1624                           i2u74_47 16A2                           i2u59_40 1638  
                         i2u59_41 1634                           i2u75_47 16F4                        ??_Init_LCD 002B  
          _Manage_Motor_Direction 189A                           __Hparam 0000                           __Lparam 0000  
                         ___flmul 1024                           ___fltol 1554                      __psmallconst 1000  
                         __pcinit 1908                           __ramtop 1000                           __ptext0 1922  
                         __ptext1 1754                           __ptext2 18EC                           __ptext3 185E  
                         __ptext4 17F6                           __ptext7 165A                           __ptext8 144E  
                         __ptext9 1554              __end_of_Interrupt_Rx 18EC                         _T2CONbits 0FBA  
                  __pintcode_body 18C6              end_of_initialization 1914                     __Lmediumconst 0000  
                         int_func 18C6                   _Send_PWM_Motors 144E                         _RCSTAbits 0FAB  
                         postinc0 0FEE                         _TRISCbits 0F94                       ___flmul@grs 000E  
         ??_Send_Instruction_Data 002A               start_initialization 1908         Send_Instruction_Data@Data 0029  
                  _Configurations 17F6                         _Interrupt 0018           __end_of_Send_PWM_Motors 1554  
                       _Rx_Buffer 0035                         ___flmul@a 0005                         ___flmul@b 0001  
                     __pbssCOMRAM 002D            __end_of_Configurations 185E           ?_Manage_Motor_Direction 0001  
                      ?_Interrupt 0001                      _Interrupt_Rx 0008                         __pintcode 0008  
                        ?___flmul 0001                          ?___fltol 0001                       __pintcodelo 0018  
                     __smallconst 1000                   ?_Configurations 0001    __end_of_Manage_Motor_Direction 18C6  
                ?_Send_PWM_Motors 001A                          _LATCbits 0F8B                          _LATDbits 0F8C  
                        _PIE1bits 0F9D                          _PIR1bits 0F9E                          _RCONbits 0FD0  
                     ??_Interrupt 0026                          _Init_LCD 1754                          __Hrparam 0000  
                        __Lrparam 0000     __end_of_Send_Instruction_Data 1908                 ??_LCD_Instruction 0027  
       Send_PWM_Motors@PWM_LMotor 001E                          __ptext10 1024                          __ptext11 189A  
       Send_PWM_Motors@PWM_RMotor 001A                          isa$xinst 0000                          int$flags 0036  
                      _INTCONbits 0FF2                          intlevel1 0000                          intlevel2 0000  
                ??_Configurations 0027         Manage_Motor_Direction@in1 0004         Manage_Motor_Direction@in2 0001  
       Manage_Motor_Direction@in3 0002         Manage_Motor_Direction@in4 0003  
