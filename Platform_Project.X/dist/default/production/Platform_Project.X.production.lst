

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 28 11:30:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _LATEbits	set	3981
    56  0000                     _T2CONbits	set	4026
    57  0000                     _ANSELC	set	3898
    58  0000                     _PIR1bits	set	3998
    59  0000                     _RCSTAbits	set	4011
    60  0000                     _TXSTA1bits	set	4012
    61  0000                     _SPBRG	set	4015
    62  0000                     _RCONbits	set	4048
    63  0000                     _OSCCON	set	4051
    64  0000                     _INTCONbits	set	4082
    65  0000                     _CCP3CON	set	3933
    66  0000                     _LATCbits	set	3979
    67  0000                     _TRISCbits	set	3988
    68  0000                     _ANSELE	set	3900
    69  0000                     _ANSELD	set	3899
    70  0000                     _PIE1bits	set	3997
    71  0000                     _TRISE	set	3990
    72  0000                     _TRISD	set	3989
    73  0000                     _LATE	set	3981
    74  0000                     _LATD	set	3980
    75  0000                     _BAUDCON1bits	set	4024
    76  0000                     _RCREG1	set	4014
    77  0000                     _T2CON	set	4026
    78  0000                     _PR2	set	4027
    79  0000                     _CCPR3L	set	3934
    80                           
    81                           	psect	smallconst
    82  0000'                    __psmallconst:
    83                           	callstack 0
    84  0000' 00                 	db	0
    85  0001' 52                 	db	82	;'R'
    86  0002' 6F                 	db	111	;'o'
    87  0003' 62                 	db	98	;'b'
    88  0004' 6F                 	db	111	;'o'
    89  0005' 74                 	db	116	;'t'
    90  0006' 69                 	db	105	;'i'
    91  0007' 63                 	db	99	;'c'
    92  0008' 20                 	db	32
    93  0009' 50                 	db	80	;'P'
    94  000A' 6C                 	db	108	;'l'
    95  000B' 61                 	db	97	;'a'
    96  000C' 74                 	db	116	;'t'
    97  000D' 66                 	db	102	;'f'
    98  000E' 6F                 	db	111	;'o'
    99  000F' 72                 	db	114	;'r'
   100  0010' 6D                 	db	109	;'m'
   101  0011' 00                 	db	0
   102  0012' 52                 	db	82	;'R'
   103  0013' 65                 	db	101	;'e'
   104  0014' 73                 	db	115	;'s'
   105  0015' 65                 	db	101	;'e'
   106  0016' 61                 	db	97	;'a'
   107  0017' 72                 	db	114	;'r'
   108  0018' 63                 	db	99	;'c'
   109  0019' 68                 	db	104	;'h'
   110  001A' 20                 	db	32
   111  001B' 50                 	db	80	;'P'
   112  001C' 72                 	db	114	;'r'
   113  001D' 6F                 	db	111	;'o'
   114  001E' 6A                 	db	106	;'j'
   115  001F' 65                 	db	101	;'e'
   116  0020' 63                 	db	99	;'c'
   117  0021' 74                 	db	116	;'t'
   118  0022' 00                 	db	0
   119  0023' 00                 	db	0	; dummy byte at the end
   120  0000                     
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124  0000'                    __pcinit:
   125                           	callstack 0
   126  0000'                    start_initialization:
   127                           	callstack 0
   128  0000'                    __initialization:
   129                           	callstack 0
   130                           
   131                           ; Clear objects allocated to COMRAM (1 bytes)
   132  0000' 6A00'              	clrf	__pbssCOMRAM& (0+255),c
   133  0002'                    end_of_initialization:
   134                           	callstack 0
   135  0002'                    __end_of__initialization:
   136                           	callstack 0
   137  0002' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   138  0004' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   139  0006' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   140  0008' 6EF8               	movwf	tblptru,c
   141  000A' 0100               	movlb	0
   142  000C' EF00' F000'        	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145  0000'                    __pbssCOMRAM:
   146                           	callstack 0
   147  0000'                    _Rx_Buffer:
   148                           	callstack 0
   149  0000'                    	ds	1
   150                           
   151                           	psect	cstackCOMRAM
   152  0000'                    __pcstackCOMRAM:
   153                           	callstack 0
   154  0000'                    Moving_Platform@Command:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x0
   158  0000'                    	ds	1
   159  0001'                    ??_Interrupt:
   160                           
   161                           ; 1 bytes @ 0x1
   162  0001'                    	ds	1
   163  0002'                    
   164                           ; 1 bytes @ 0x2
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 35 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called: 5
   190 ;; This function calls:
   191 ;;		_Configurations
   192 ;;		_Init_LCD
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text0
   199  0000'                    __ptext0:
   200                           	callstack 0
   201  0000'                    _main:
   202                           	callstack 26
   203  0000'                    
   204                           ;main.c: 38:     Configurations();
   205  0000' EC00' F000'        	call	_Configurations	;wreg free
   206  0004'                    
   207                           ;main.c: 39:     Init_LCD();
   208  0004' EC00' F000'        	call	_Init_LCD	;wreg free
   209  0008'                    l69:
   210  0008' EF00' F000'        	goto	l69
   211  000C' EF00' F000'        	goto	start
   212  0010'                    __end_of_main:
   213                           	callstack 0
   214                           
   215 ;; *************** function _Configurations *****************
   216 ;; Defined at:
   217 ;;		line 72 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   235 ;;Total ram usage:        0 bytes
   236 ;; Hardware stack levels used: 1
   237 ;; Hardware stack levels required when called: 4
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		_main
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text1
   246  0000'                    __ptext1:
   247                           	callstack 0
   248  0000'                    _Configurations:
   249                           	callstack 26
   250  0000'                    
   251                           ;main.c: 74:     OSCCON = 0x72;
   252  0000' 0E72               	movlw	114
   253  0002' 6ED3               	movwf	211,c	;volatile
   254                           
   255                           ;main.c: 76:     ANSELC = 0;
   256  0004' 0E00               	movlw	0
   257  0006' 010F               	movlb	15	; () banked
   258  0008' 6F3A               	movwf	58,b	;volatile
   259                           
   260                           ;main.c: 77:     ANSELD = 0;
   261  000A' 0E00               	movlw	0
   262  000C' 6F3B               	movwf	59,b	;volatile
   263                           
   264                           ;main.c: 78:     ANSELE = 0;
   265  000E' 0E00               	movlw	0
   266  0010' 6F3C               	movwf	60,b	;volatile
   267  0012'                    
   268                           ; BSR set to: 15
   269                           ;main.c: 80:     TRISCbits.RC4 = 0;
   270  0012' 9894               	bcf	148,4,c	;volatile
   271  0014'                    
   272                           ; BSR set to: 15
   273                           ;main.c: 81:     TRISCbits.RC5 = 0;
   274  0014' 9A94               	bcf	148,5,c	;volatile
   275                           
   276                           ;main.c: 82:     TRISD = 0;
   277  0016' 0E00               	movlw	0
   278  0018' 6E95               	movwf	149,c	;volatile
   279                           
   280                           ;main.c: 83:     TRISE = 0;
   281  001A' 0E00               	movlw	0
   282  001C' 6E96               	movwf	150,c	;volatile
   283  001E'                    
   284                           ; BSR set to: 15
   285                           ;main.c: 86:     LATCbits.LC4 = 0;
   286  001E' 988B               	bcf	139,4,c	;volatile
   287  0020'                    
   288                           ; BSR set to: 15
   289                           ;main.c: 87:     LATCbits.LC5 = 0;
   290  0020' 9A8B               	bcf	139,5,c	;volatile
   291                           
   292                           ;main.c: 88:     LATD = 0;
   293  0022' 0E00               	movlw	0
   294  0024' 6E8C               	movwf	140,c	;volatile
   295                           
   296                           ;main.c: 89:     LATE = 0;
   297  0026' 0E00               	movlw	0
   298  0028' 6E8D               	movwf	141,c	;volatile
   299  002A'                    
   300                           ; BSR set to: 15
   301                           ;main.c: 92:     INTCONbits.GIE = 1;
   302  002A' 8EF2               	bsf	242,7,c	;volatile
   303  002C'                    
   304                           ; BSR set to: 15
   305                           ;main.c: 93:     INTCONbits.PEIE = 1;
   306  002C' 8CF2               	bsf	242,6,c	;volatile
   307  002E'                    
   308                           ; BSR set to: 15
   309                           ;main.c: 94:     RCONbits.IPEN = 1;
   310  002E' 8ED0               	bsf	208,7,c	;volatile
   311  0030'                    
   312                           ; BSR set to: 15
   313                           ;main.c: 96:     PIE1bits.RC1IE = 1;
   314  0030' 8A9D               	bsf	157,5,c	;volatile
   315  0032'                    
   316                           ; BSR set to: 15
   317                           ;main.c: 97:     PIR1bits.RC1IF = 0;
   318  0032' 9A9E               	bcf	158,5,c	;volatile
   319                           
   320                           ;main.c: 100:     SPBRG = 103;
   321  0034' 0E67               	movlw	103
   322  0036' 6EAF               	movwf	175,c	;volatile
   323  0038'                    
   324                           ; BSR set to: 15
   325                           ;main.c: 101:     TRISCbits.RC6 = 1;
   326  0038' 8C94               	bsf	148,6,c	;volatile
   327  003A'                    
   328                           ; BSR set to: 15
   329                           ;main.c: 102:     TRISCbits.RC7 = 1;
   330  003A' 8E94               	bsf	148,7,c	;volatile
   331  003C'                    
   332                           ; BSR set to: 15
   333                           ;main.c: 105:     TXSTA1bits.TX91 = 0;
   334  003C' 9CAC               	bcf	172,6,c	;volatile
   335  003E'                    
   336                           ; BSR set to: 15
   337                           ;main.c: 106:     TXSTA1bits.TXEN1 = 1;
   338  003E' 8AAC               	bsf	172,5,c	;volatile
   339  0040'                    
   340                           ; BSR set to: 15
   341                           ;main.c: 107:     TXSTA1bits.SYNC1 = 0;
   342  0040' 98AC               	bcf	172,4,c	;volatile
   343  0042'                    
   344                           ; BSR set to: 15
   345                           ;main.c: 108:     TXSTA1bits.BRGH1 = 1;
   346  0042' 84AC               	bsf	172,2,c	;volatile
   347  0044'                    
   348                           ; BSR set to: 15
   349                           ;main.c: 111:     RCSTAbits.SPEN1 = 1;
   350  0044' 8EAB               	bsf	171,7,c	;volatile
   351  0046'                    
   352                           ; BSR set to: 15
   353                           ;main.c: 112:     RCSTAbits.RX91 = 0;
   354  0046' 9CAB               	bcf	171,6,c	;volatile
   355  0048'                    
   356                           ; BSR set to: 15
   357                           ;main.c: 113:     RCSTAbits.CREN1 = 1;
   358  0048' 88AB               	bsf	171,4,c	;volatile
   359  004A'                    
   360                           ; BSR set to: 15
   361                           ;main.c: 116:     BAUDCON1bits.BRG16 = 0;
   362  004A' 96B8               	bcf	184,3,c	;volatile
   363                           
   364                           ;main.c: 128:     PR2 = 0xF9;
   365  004C' 0EF9               	movlw	249
   366  004E' 6EBB               	movwf	187,c	;volatile
   367                           
   368                           ;main.c: 129:     CCP3CON = 0x0C;
   369  0050' 0E0C               	movlw	12
   370  0052' 6F5D               	movwf	93,b	;volatile
   371                           
   372                           ;main.c: 130:     CCPR3L = 0x7D;
   373  0054' 0E7D               	movlw	125
   374  0056' 6F5E               	movwf	94,b	;volatile
   375                           
   376                           ;main.c: 131:     T2CON = 0x02;
   377  0058' 0E02               	movlw	2
   378  005A' 6EBA               	movwf	186,c	;volatile
   379  005C'                    
   380                           ; BSR set to: 15
   381                           ;main.c: 132:     T2CONbits.TMR2ON = 1;
   382  005C' 84BA               	bsf	186,2,c	;volatile
   383  005E'                    
   384                           ; BSR set to: 15
   385  005E' 0012               	return		;funcret
   386  0060'                    __end_of_Configurations:
   387                           	callstack 0
   388                           
   389 ;; *************** function _Interrupt *****************
   390 ;; Defined at:
   391 ;;		line 64 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		None
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 3
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		Interrupt level 1
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	intcodelo
   420  0000'                    __pintcodelo:
   421                           	callstack 0
   422  0000'                    _Interrupt:
   423                           	callstack 26
   424                           
   425                           ; BSR set to: 15
   426                           ;incstack = 0
   427  0000' 8000'              	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   428  0002' CFE0 F001'         	movff	bsr,??_Interrupt
   429  0006' C001' FFE0         	movff	??_Interrupt,bsr
   430  000A' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   431  000C' 0010               	retfie	
   432  000E'                    __end_of_Interrupt:
   433                           	callstack 0
   434                           
   435 ;; *************** function _Interrupt_Rx *****************
   436 ;; Defined at:
   437 ;;		line 52 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; Hardware stack levels required when called: 2
   458 ;; This function calls:
   459 ;;		_Receive_Interrupt
   460 ;; This function is called by:
   461 ;;		Interrupt level 2
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	intcode
   466  0000'                    __pintcode:
   467                           	callstack 0
   468  0000'                    _Interrupt_Rx:
   469                           	callstack 26
   470                           
   471                           ;incstack = 0
   472  0000' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   473  0002' EF00' F000'        	goto	int_func
   474                           
   475                           	psect	intcode_body
   476  0000'                    __pintcode_body:
   477                           	callstack 26
   478  0000'                    int_func:
   479                           	callstack 26
   480  0000'                    
   481                           ;main.c: 54:     if (PIR1bits.RC1IF) {
   482  0000' AA9E               	btfss	158,5,c	;volatile
   483  0002' EF00' F000'        	goto	i2u1_41
   484  0006' EF00' F000'        	goto	i2u1_40
   485  000A'                    i2u1_41:
   486  000A' EF00' F000'        	goto	i2l78
   487  000E'                    i2u1_40:
   488  000E'                    
   489                           ;main.c: 56:         Receive_Interrupt();
   490  000E' EC00' F000'        	call	_Receive_Interrupt	;wreg free
   491  0012'                    i2l78:
   492  0012' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   493  0014' 0011               	retfie		f
   494  0016'                    __end_of_Interrupt_Rx:
   495                           	callstack 0
   496                           
   497 ;; *************** function _Receive_Interrupt *****************
   498 ;; Defined at:
   499 ;;		line 136 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; Hardware stack levels required when called: 1
   520 ;; This function calls:
   521 ;;		_Moving_Platform
   522 ;; This function is called by:
   523 ;;		_Interrupt_Rx
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text4
   528  0000'                    __ptext4:
   529                           	callstack 0
   530  0000'                    _Receive_Interrupt:
   531                           	callstack 26
   532  0000'                    
   533                           ;main.c: 138:     Rx_Buffer = RCREG1;
   534  0000' CFAE F000'         	movff	4014,_Rx_Buffer	;volatile
   535                           
   536                           ;main.c: 140:     switch (Rx_Buffer) {
   537  0004' EF00' F000'        	goto	i2l832
   538  0008'                    i2l824:
   539                           
   540                           ;main.c: 143:             Moving_Platform(0b10100000);
   541  0008' 0EA0               	movlw	160
   542  000A' EC00' F000'        	call	_Moving_Platform
   543                           
   544                           ;main.c: 145:             break;
   545  000E' EF00' F000'        	goto	i2l94
   546  0012'                    i2l826:
   547                           
   548                           ;main.c: 148:             Moving_Platform(0b01010000);
   549  0012' 0E50               	movlw	80
   550  0014' EC00' F000'        	call	_Moving_Platform
   551                           
   552                           ;main.c: 149:             break;
   553  0018' EF00' F000'        	goto	i2l94
   554  001C'                    i2l828:
   555                           
   556                           ;main.c: 152:             LATD = 0x00;
   557  001C' 0E00               	movlw	0
   558  001E' 6E8C               	movwf	140,c	;volatile
   559                           
   560                           ;main.c: 153:             break;
   561  0020' EF00' F000'        	goto	i2l94
   562  0024'                    i2l832:
   563  0024' 5000'              	movf	_Rx_Buffer^0,w,c
   564                           
   565                           ; Switch size 1, requested type "simple"
   566                           ; Number of cases is 2, Range of values is 65 to 77
   567                           ; switch strategies available:
   568                           ; Name         Instructions Cycles
   569                           ; simple_byte            7     4 (average)
   570                           ;	Chosen strategy is simple_byte
   571  0026' 0A41               	xorlw	65	; case 65
   572  0028' B4D8               	btfsc	status,2,c
   573  002A' EF00' F000'        	goto	i2l826
   574  002E' 0A0C               	xorlw	12	; case 77
   575  0030' B4D8               	btfsc	status,2,c
   576  0032' EF00' F000'        	goto	i2l824
   577  0036' EF00' F000'        	goto	i2l828
   578  003A'                    i2l94:
   579  003A' 0012               	return		;funcret
   580  003C'                    __end_of_Receive_Interrupt:
   581                           	callstack 0
   582                           
   583 ;; *************** function _Moving_Platform *****************
   584 ;; Defined at:
   585 ;;		line 159 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  Command         1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  Command         1    0[COMRAM] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;Total ram usage:        1 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_Receive_Interrupt
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text5
   613  0000'                    __ptext5:
   614                           	callstack 0
   615  0000'                    _Moving_Platform:
   616                           	callstack 26
   617                           
   618                           ;incstack = 0
   619                           ;Moving_Platform@Command stored from wreg
   620  0000' 6E00'              	movwf	Moving_Platform@Command^0,c
   621  0002'                    
   622                           ;main.c: 161:     LATEbits.LATE0 = 1;
   623  0002' 808D               	bsf	141,0,c	;volatile
   624                           
   625                           ;main.c: 162:     LATEbits.LATE2 = 1;
   626  0004' 848D               	bsf	141,2,c	;volatile
   627  0006'                    
   628                           ;main.c: 163:     LATD = Command;
   629  0006' C000' FF8C         	movff	Moving_Platform@Command,3980	;volatile
   630  000A' 0012               	return		;funcret
   631  000C'                    __end_of_Moving_Platform:
   632                           	callstack 0
   633                           
   634                           	psect	rparam
   635  0000                     
   636                           	psect	temp
   637  0000'                    btemp:
   638                           	callstack 0
   639  0000'                    	ds	1
   640  0000                     int$flags	set	btemp
   641  0000                     wtemp8	set	btemp+1
   642  0000                     ttemp5	set	btemp+1
   643  0000                     ttemp6	set	btemp+4
   644  0000                     ttemp7	set	btemp+8
   645                           
   646                           	psect	config
   647                           
   648                           ; Padding undefined space
   649  300000                     	org	3145728
   650  300000  FF                 	db	255
   651                           
   652                           ;Config register CONFIG1H @ 0x300001
   653                           ;	Oscillator Selection bits
   654                           ;	FOSC = INTIO67, Internal oscillator block
   655                           ;	4X PLL Enable
   656                           ;	PLLCFG = OFF, Oscillator used directly
   657                           ;	Primary clock enable bit
   658                           ;	PRICLKEN = ON, Primary clock is always enabled
   659                           ;	Fail-Safe Clock Monitor Enable bit
   660                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   661                           ;	Internal/External Oscillator Switchover bit
   662                           ;	IESO = OFF, Oscillator Switchover mode disabled
   663  300001                     	org	3145729
   664  300001  28                 	db	40
   665                           
   666                           ;Config register CONFIG2L @ 0x300002
   667                           ;	Power-up Timer Enable bit
   668                           ;	PWRTEN = OFF, Power up timer disabled
   669                           ;	Brown-out Reset Enable bits
   670                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   671                           ;	Brown Out Reset Voltage bits
   672                           ;	BORV = 190, VBOR set to 1.90 V nominal
   673  300002                     	org	3145730
   674  300002  1F                 	db	31
   675                           
   676                           ;Config register CONFIG2H @ 0x300003
   677                           ;	Watchdog Timer Enable bits
   678                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   679                           ;	Watchdog Timer Postscale Select bits
   680                           ;	WDTPS = 32768, 1:32768
   681  300003                     	org	3145731
   682  300003  3C                 	db	60
   683                           
   684                           ; Padding undefined space
   685  300004                     	org	3145732
   686  300004  FF                 	db	255
   687                           
   688                           ;Config register CONFIG3H @ 0x300005
   689                           ;	CCP2 MUX bit
   690                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   691                           ;	PORTB A/D Enable bit
   692                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   693                           ;	P3A/CCP3 Mux bit
   694                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
   695                           ;	HFINTOSC Fast Start-up
   696                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   697                           ;	Timer3 Clock input mux bit
   698                           ;	T3CMX = PORTC0, T3CKI is on RC0
   699                           ;	ECCP2 B output mux bit
   700                           ;	P2BMX = PORTD2, P2B is on RD2
   701                           ;	MCLR Pin Enable bit
   702                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   703  300005                     	org	3145733
   704  300005  BB                 	db	187
   705                           
   706                           ;Config register CONFIG4L @ 0x300006
   707                           ;	Stack Full/Underflow Reset Enable bit
   708                           ;	STVREN = ON, Stack full/underflow will cause Reset
   709                           ;	Single-Supply ICSP Enable bit
   710                           ;	LVP = OFF, Single-Supply ICSP disabled
   711                           ;	Extended Instruction Set Enable bit
   712                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   713                           ;	Background Debug
   714                           ;	DEBUG = 0x1, unprogrammed default
   715  300006                     	org	3145734
   716  300006  81                 	db	129
   717                           
   718                           ; Padding undefined space
   719  300007                     	org	3145735
   720  300007  FF                 	db	255
   721                           
   722                           ;Config register CONFIG5L @ 0x300008
   723                           ;	Code Protection Block 0
   724                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   725                           ;	Code Protection Block 1
   726                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   727                           ;	Code Protection Block 2
   728                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   729                           ;	Code Protection Block 3
   730                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   731  300008                     	org	3145736
   732  300008  0F                 	db	15
   733                           
   734                           ;Config register CONFIG5H @ 0x300009
   735                           ;	Boot Block Code Protection bit
   736                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   737                           ;	Data EEPROM Code Protection bit
   738                           ;	CPD = OFF, Data EEPROM not code-protected
   739  300009                     	org	3145737
   740  300009  C0                 	db	192
   741                           
   742                           ;Config register CONFIG6L @ 0x30000A
   743                           ;	Write Protection Block 0
   744                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   745                           ;	Write Protection Block 1
   746                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   747                           ;	Write Protection Block 2
   748                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   749                           ;	Write Protection Block 3
   750                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   751  30000A                     	org	3145738
   752  30000A  0F                 	db	15
   753                           
   754                           ;Config register CONFIG6H @ 0x30000B
   755                           ;	Configuration Register Write Protection bit
   756                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   757                           ;	Boot Block Write Protection bit
   758                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   759                           ;	Data EEPROM Write Protection bit
   760                           ;	WRTD = OFF, Data EEPROM not write-protected
   761  30000B                     	org	3145739
   762  30000B  E0                 	db	224
   763                           
   764                           ;Config register CONFIG7L @ 0x30000C
   765                           ;	Table Read Protection Block 0
   766                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   767                           ;	Table Read Protection Block 1
   768                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   769                           ;	Table Read Protection Block 2
   770                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   771                           ;	Table Read Protection Block 3
   772                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   773  30000C                     	org	3145740
   774  30000C  0F                 	db	15
   775                           
   776                           ;Config register CONFIG7H @ 0x30000D
   777                           ;	Boot Block Table Read Protection bit
   778                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   779  30000D                     	org	3145741
   780  30000D  40                 	db	64
   781                           tosu	equ	0xFFF
   782                           tosh	equ	0xFFE
   783                           tosl	equ	0xFFD
   784                           stkptr	equ	0xFFC
   785                           pclatu	equ	0xFFB
   786                           pclath	equ	0xFFA
   787                           pcl	equ	0xFF9
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           prodh	equ	0xFF4
   793                           prodl	equ	0xFF3
   794                           indf0	equ	0xFEF
   795                           postinc0	equ	0xFEE
   796                           postdec0	equ	0xFED
   797                           preinc0	equ	0xFEC
   798                           plusw0	equ	0xFEB
   799                           fsr0h	equ	0xFEA
   800                           fsr0l	equ	0xFE9
   801                           wreg	equ	0xFE8
   802                           indf1	equ	0xFE7
   803                           postinc1	equ	0xFE6
   804                           postdec1	equ	0xFE5
   805                           preinc1	equ	0xFE4
   806                           plusw1	equ	0xFE3
   807                           fsr1h	equ	0xFE2
   808                           fsr1l	equ	0xFE1
   809                           bsr	equ	0xFE0
   810                           indf2	equ	0xFDF
   811                           postinc2	equ	0xFDE
   812                           postdec2	equ	0xFDD
   813                           preinc2	equ	0xFDC
   814                           plusw2	equ	0xFDB
   815                           fsr2h	equ	0xFDA
   816                           fsr2l	equ	0xFD9
   817                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String$0	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Receive_Interrupt->_Moving_Platform

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _Configurations
                           _Init_LCD
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrupt                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupt_Rx                                         0     0      0      15
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (4) _Receive_Interrupt                                    0     0      0      15
                    _Moving_Platform
 ---------------------------------------------------------------------------------
 (5) _Moving_Platform                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Moving_Platform

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       3       1        3.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlhllh      2C      0       0      47        0.0%
BITBIGSFRlhlll      20      0       0      48        0.0%
BITBIGSFRhhl        1E      0       0      38        0.0%
BITBIGSFRhllhhh     14      0       0      40        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhllll       C      0       0      44        0.0%
BITBIGSFRhllhl       8      0       0      42        0.0%
BITBIGSFRlhlh        6      0       0      46        0.0%
BITBIGSFRlhh         6      0       0      45        0.0%
BITBIGSFRhlh         2      0       0      39        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRhllhhl      1      0       0      41        0.0%
BITBIGSFRhlllh       1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      32        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 28 11:30:05 2024

                       l70 0008                         l69 0008                         l86 005E  
                       bsr 0FE0                        l800 0038                        l810 0042  
                      l802 003A                        l820 005C                        l812 0044  
                      l804 003C                        l814 0046                        l806 003E  
                      l816 0048                        l808 0040                        l818 004A  
                      l834 0000                        l780 0000                        l836 0004  
                      l790 002A                        l782 0012                        l792 002C  
                      l784 0014                        l794 002E                        l786 001E  
                      l796 0030                        l788 0020                        l798 0032  
                      _PR2 0FBB                 _TXSTA1bits 0FAC                       STR_1 0012  
                     STR_2 0001                       _LATD 0F8C                       _LATE 0F8D  
                     i1l83 0006                       i2l94 003A                       i2l78 0012  
                     i2l97 000A                       _main 0000                       btemp 0000  
                     start 0000*              ___param_bank 0000               _BAUDCON1bits 0FB8  
                    ?_main 0000                      _T2CON 0FBA                      i2l822 0000  
                    i2l824 0008                      i2l832 0024                      i2l840 000E  
                    i2l826 0012                      i2l828 001C                      i2l838 0000  
                    i2l776 0002                      i2l778 0006                      _SPBRG 0FAF  
                    _TRISD 0F95                      _TRISE 0F96                      ttemp5 0001  
                    ttemp6 0004                      ttemp7 0008                      status 0FD8  
                    wtemp8 0001            __initialization 0000               __end_of_main 0010  
                   ??_main 0002              __activetblptr 0002                     _CCPR3L 0F5E  
        ??_Moving_Platform 0000                     _ANSELC 0F3A                     _ANSELD 0F3B  
                   _ANSELE 0F3C                     _RCREG1 0FAE                     _OSCCON 0FD3  
                   i2u1_40 000E                     i2u1_41 000A              ?_Interrupt_Rx 0000  
                   isa$std 0001               __mediumconst 0000*                    tblptru 0FF8  
               __accesstop 0000*   __end_of__initialization 0002             ??_Interrupt_Rx 0001  
            ___rparam_used 0001             __pcstackCOMRAM 0000          _Receive_Interrupt 0000  
       ?_Receive_Interrupt 0000        ??_Receive_Interrupt 0001          __end_of_Interrupt 000E  
                ?_Init_LCD 0000  __end_of_Receive_Interrupt 003C                    _CCP3CON 0F5D  
               ??_Init_LCD 0000                    __Hparam 0000                    __Lparam 0000  
             __psmallconst 0000                    __pcinit 0000                    __ramtop 0000* 
                  __ptext0 0000                    __ptext1 0000                    __ptext4 0000  
                  __ptext5 0000            _Moving_Platform 0000       __end_of_Interrupt_Rx 0016  
                _T2CONbits 0FBA             __pintcode_body 0000       end_of_initialization 0002  
            __Lmediumconst 0000*                   int_func 0000                  _RCSTAbits 0FAB  
                _TRISCbits 0F94    __end_of_Moving_Platform 000C        start_initialization 0000  
           _Configurations 0000                  _Interrupt 0000                  _Rx_Buffer 0000  
              __pbssCOMRAM 0000     __end_of_Configurations 0060                 ?_Interrupt 0000  
             _Interrupt_Rx 0000                  __pintcode 0000           ?_Moving_Platform 0000  
              __pintcodelo 0000                __smallconst 0000*           ?_Configurations 0000  
                 _LATCbits 0F8B                   _LATEbits 0F8D                   _PIE1bits 0F9D  
                 _PIR1bits 0F9E                   _RCONbits 0FD0                ??_Interrupt 0001  
                 _Init_LCD 0000*    Moving_Platform@Command 0000                   __Hrparam 0000* 
                 __Lrparam 0000*                  isa$xinst 0000                   int$flags 0000  
               _INTCONbits 0FF2                   intlevel1 0000*                  intlevel2 0000* 
         ??_Configurations 0002  
