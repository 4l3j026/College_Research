

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Mar 06 11:19:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F46K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _LATDbits	set	3980
    63   000000                     _T2CONbits	set	4026
    64   000000                     _ANSELC	set	3898
    65   000000                     _PIR1bits	set	3998
    66   000000                     _RCSTAbits	set	4011
    67   000000                     _TXSTA1bits	set	4012
    68   000000                     _SPBRG	set	4015
    69   000000                     _RCONbits	set	4048
    70   000000                     _OSCCON	set	4051
    71   000000                     _INTCONbits	set	4082
    72   000000                     _CCP5CON	set	3924
    73   000000                     _CCP3CON	set	3933
    74   000000                     _LATCbits	set	3979
    75   000000                     _TRISCbits	set	3988
    76   000000                     _ANSELE	set	3900
    77   000000                     _ANSELD	set	3899
    78   000000                     _PIE1bits	set	3997
    79   000000                     _TRISE	set	3990
    80   000000                     _TRISD	set	3989
    81   000000                     _LATE	set	3981
    82   000000                     _LATD	set	3980
    83   000000                     _BAUDCON1bits	set	4024
    84   000000                     _RCREG1	set	4014
    85   000000                     _T2CON	set	4026
    86   000000                     _PR2	set	4027
    87   000000                     _CCPR3L	set	3934
    88   000000                     _CCPR5L	set	3925
    89                           
    90                           	psect	smallconst
    91   001000                     __psmallconst:
    92                           	callstack 0
    93   001000  00                 	db	0
    94   001001  52                 	db	82	;'R'
    95   001002  6F                 	db	111	;'o'
    96   001003  62                 	db	98	;'b'
    97   001004  6F                 	db	111	;'o'
    98   001005  74                 	db	116	;'t'
    99   001006  69                 	db	105	;'i'
   100   001007  63                 	db	99	;'c'
   101   001008  20                 	db	32
   102   001009  50                 	db	80	;'P'
   103   00100A  6C                 	db	108	;'l'
   104   00100B  61                 	db	97	;'a'
   105   00100C  74                 	db	116	;'t'
   106   00100D  66                 	db	102	;'f'
   107   00100E  6F                 	db	111	;'o'
   108   00100F  72                 	db	114	;'r'
   109   001010  6D                 	db	109	;'m'
   110   001011  00                 	db	0
   111   001012  52                 	db	82	;'R'
   112   001013  65                 	db	101	;'e'
   113   001014  73                 	db	115	;'s'
   114   001015  65                 	db	101	;'e'
   115   001016  61                 	db	97	;'a'
   116   001017  72                 	db	114	;'r'
   117   001018  63                 	db	99	;'c'
   118   001019  68                 	db	104	;'h'
   119   00101A  20                 	db	32
   120   00101B  50                 	db	80	;'P'
   121   00101C  72                 	db	114	;'r'
   122   00101D  6F                 	db	111	;'o'
   123   00101E  6A                 	db	106	;'j'
   124   00101F  65                 	db	101	;'e'
   125   001020  63                 	db	99	;'c'
   126   001021  74                 	db	116	;'t'
   127   001022  00                 	db	0
   128   001023  00                 	db	0	; dummy byte at the end
   129   000000                     
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133   001952                     __pcinit:
   134                           	callstack 0
   135   001952                     start_initialization:
   136                           	callstack 0
   137   001952                     __initialization:
   138                           	callstack 0
   139                           
   140                           ; Clear objects allocated to COMRAM (9 bytes)
   141   001952  EE00  F02F         	lfsr	0,__pbssCOMRAM
   142   001956  0E09               	movlw	9
   143   001958                     clear_0:
   144   001958  6AEE               	clrf	postinc0,c
   145   00195A  06E8               	decf	wreg,f,c
   146   00195C  E1FD               	bnz	clear_0
   147   00195E                     end_of_initialization:
   148                           	callstack 0
   149   00195E                     __end_of__initialization:
   150                           	callstack 0
   151   00195E  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   152   001960  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   153   001962  0E00               	movlw	low (__Lmediumconst shr (0+16))
   154   001964  6EF8               	movwf	tblptru,c
   155   001966  0100               	movlb	0
   156   001968  EF8A  F00C         	goto	_main	;jump to C main() function
   157                           
   158                           	psect	bssCOMRAM
   159   00002F                     __pbssCOMRAM:
   160                           	callstack 0
   161   00002F                     _Duty_Cycle2:
   162                           	callstack 0
   163   00002F                     	ds	4
   164   000033                     _Duty_Cycle1:
   165                           	callstack 0
   166   000033                     	ds	4
   167   000037                     _Rx_Buffer:
   168                           	callstack 0
   169   000037                     	ds	1
   170                           
   171                           	psect	cstackCOMRAM
   172   000001                     __pcstackCOMRAM:
   173                           	callstack 0
   174   000001                     ?___flmul:
   175                           	callstack 0
   176   000001                     ?___fltol:
   177                           	callstack 0
   178   000001                     Manage_Motor_Direction@in2:
   179                           	callstack 0
   180   000001                     ___fltol@f1:
   181                           	callstack 0
   182   000001                     ___flmul@b:
   183                           	callstack 0
   184                           
   185                           ; 4 bytes @ 0x0
   186   000001                     	ds	1
   187   000002                     Manage_Motor_Direction@in3:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x1
   191   000002                     	ds	1
   192   000003                     Manage_Motor_Direction@in4:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x2
   196   000003                     	ds	1
   197   000004                     Manage_Motor_Direction@in1:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x3
   201   000004                     	ds	1
   202   000005                     ??___fltol:
   203   000005                     ___flmul@a:
   204                           	callstack 0
   205                           
   206                           ; 4 bytes @ 0x4
   207   000005                     	ds	4
   208   000009                     ??___flmul:
   209   000009                     ___fltol@sign1:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x8
   213   000009                     	ds	1
   214   00000A                     ___fltol@exp1:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x9
   218   00000A                     	ds	3
   219   00000D                     ___flmul@sign:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0xC
   223   00000D                     	ds	1
   224   00000E                     ___flmul@grs:
   225                           	callstack 0
   226                           
   227                           ; 4 bytes @ 0xD
   228   00000E                     	ds	4
   229   000012                     ___flmul@aexp:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x11
   233   000012                     	ds	1
   234   000013                     ___flmul@bexp:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x12
   238   000013                     	ds	1
   239   000014                     ___flmul@prod:
   240                           	callstack 0
   241                           
   242                           ; 4 bytes @ 0x13
   243   000014                     	ds	4
   244   000018                     ___flmul@temp:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x17
   248   000018                     	ds	2
   249   00001A                     Send_PWM_Motors@PWM_RMotor:
   250                           	callstack 0
   251                           
   252                           ; 4 bytes @ 0x19
   253   00001A                     	ds	4
   254   00001E                     Send_PWM_Motors@PWM_LMotor:
   255                           	callstack 0
   256                           
   257                           ; 4 bytes @ 0x1D
   258   00001E                     	ds	4
   259   000022                     ??_Receive_Interrupt:
   260   000022                     
   261                           ; 1 bytes @ 0x21
   262   000022                     	ds	2
   263   000024                     ??_Interrupt_Rx:
   264                           
   265                           ; 1 bytes @ 0x23
   266   000024                     	ds	2
   267   000026                     ??_Interrupt:
   268                           
   269                           ; 1 bytes @ 0x25
   270   000026                     	ds	1
   271   000027                     ??_LCD_Instruction:
   272   000027                     Platform_Mode@Data:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x26
   276   000027                     	ds	1
   277   000028                     LCD_Instruction@Instruction:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x27
   281   000028                     	ds	1
   282   000029                     Send_Instruction_Data@Data:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x28
   286   000029                     	ds	1
   287   00002A                     Send_Instruction_Data@Instruction:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x29
   291   00002A                     	ds	1
   292   00002B                     ??_Init_LCD:
   293                           
   294                           ; 1 bytes @ 0x2A
   295   00002B                     	ds	2
   296   00002D                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x2C
   299   00002D                     	ds	2
   300                           
   301 ;;
   302 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   303 ;;
   304 ;; *************** function _main *****************
   305 ;; Defined at:
   306 ;;		line 41 in file "main.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;Total ram usage:        2 bytes
   325 ;; Hardware stack levels required when called: 8
   326 ;; This function calls:
   327 ;;		_Configurations
   328 ;;		_Init_LCD
   329 ;;		_Platform_Mode
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text0
   336   001914                     __ptext0:
   337                           	callstack 0
   338   001914                     _main:
   339                           	callstack 23
   340   001914                     
   341                           ;main.c: 44:     Configurations();
   342   001914  ECFB  F00B         	call	_Configurations	;wreg free
   343   001918                     
   344                           ;main.c: 45:     Init_LCD();
   345   001918  ECAA  F00B         	call	_Init_LCD	;wreg free
   346   00191C                     l1405:
   347                           
   348                           ;main.c: 50:         Platform_Mode(Rx_Buffer);
   349   00191C  5037               	movf	_Rx_Buffer^0,w,c
   350   00191E  6E2D               	movwf	??_main^0,c
   351   001920  6A2E               	clrf	(??_main+1)^0,c
   352   001922  C02D  F027         	movff	??_main,Platform_Mode@Data
   353   001926  C02E  F028         	movff	??_main+1,Platform_Mode@Data+1
   354   00192A  EC63  F00C         	call	_Platform_Mode	;wreg free
   355   00192E  EF8E  F00C         	goto	l1405
   356   001932  EF13  F000         	goto	start
   357   001936                     __end_of_main:
   358                           	callstack 0
   359                           
   360 ;; *************** function _Platform_Mode *****************
   361 ;; Defined at:
   362 ;;		line 203 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;  Data            2   38[COMRAM] PTR unsigned char 
   365 ;;		 -> RAM(4095), 
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;Total ram usage:        2 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; Hardware stack levels required when called: 5
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text1
   392   0018C6                     __ptext1:
   393                           	callstack 0
   394   0018C6                     _Platform_Mode:
   395                           	callstack 25
   396   0018C6  C027  FFD9         	movff	Platform_Mode@Data,fsr2l
   397   0018CA  C028  FFDA         	movff	Platform_Mode@Data+1,fsr2h
   398   0018CE  50DF               	movf	indf2,w,c
   399                           
   400                           ; Switch size 1, requested type "simple"
   401                           ; Number of cases is 3, Range of values is 65 to 83
   402                           ; switch strategies available:
   403                           ; Name         Instructions Cycles
   404                           ; simple_byte           10     6 (average)
   405                           ;	Chosen strategy is simple_byte
   406   0018D0  0A41               	xorlw	65	; case 65
   407   0018D2  B4D8               	btfsc	status,2,c
   408   0018D4  EF76  F00C         	goto	l123
   409   0018D8  0A0C               	xorlw	12	; case 77
   410   0018DA  B4D8               	btfsc	status,2,c
   411   0018DC  EF76  F00C         	goto	l123
   412   0018E0  0A1E               	xorlw	30	; case 83
   413   0018E2  B4D8               	btfsc	status,2,c
   414   0018E4  EF76  F00C         	goto	l123
   415   0018E8  EF76  F00C         	goto	l123
   416   0018EC                     l123:
   417   0018EC  0012               	return		;funcret
   418   0018EE                     __end_of_Platform_Mode:
   419                           	callstack 0
   420                           
   421 ;; *************** function _Init_LCD *****************
   422 ;; Defined at:
   423 ;;		line 5 in file "LCD_Library.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;Total ram usage:        2 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; Hardware stack levels required when called: 7
   444 ;; This function calls:
   445 ;;		_Send_Instruction_Data
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text2
   452   001754                     __ptext2:
   453                           	callstack 0
   454   001754                     _Init_LCD:
   455                           	callstack 23
   456   001754                     
   457                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   458   001754  0E03               	movlw	3
   459   001756  6E2C               	movwf	(??_Init_LCD+1)^0,c
   460   001758  0E08               	movlw	8
   461   00175A  6E2B               	movwf	??_Init_LCD^0,c
   462   00175C  0E77               	movlw	119
   463   00175E                     u677:
   464   00175E  2EE8               	decfsz	wreg,f,c
   465   001760  D7FE               	bra	u677
   466   001762  2E2B               	decfsz	??_Init_LCD^0,f,c
   467   001764  D7FC               	bra	u677
   468   001766  2E2C               	decfsz	(??_Init_LCD+1)^0,f,c
   469   001768  D7FA               	bra	u677
   470   00176A  0000               	nop	
   471   00176C                     
   472                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   473   00176C  0E30               	movlw	48
   474   00176E  6E29               	movwf	Send_Instruction_Data@Data^0,c
   475   001770  0E00               	movlw	0
   476   001772  EC9B  F00C         	call	_Send_Instruction_Data
   477   001776                     
   478                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   479   001776  0E1A               	movlw	26
   480   001778  6E2B               	movwf	??_Init_LCD^0,c
   481   00177A  0EF8               	movlw	248
   482   00177C                     u687:
   483   00177C  2EE8               	decfsz	wreg,f,c
   484   00177E  D7FE               	bra	u687
   485   001780  2E2B               	decfsz	??_Init_LCD^0,f,c
   486   001782  D7FC               	bra	u687
   487   001784  D000               	nop2	
   488                           
   489                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   490   001786  0E30               	movlw	48
   491   001788  6E29               	movwf	Send_Instruction_Data@Data^0,c
   492   00178A  0E00               	movlw	0
   493   00178C  EC9B  F00C         	call	_Send_Instruction_Data
   494   001790                     
   495                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   496   001790  0E1A               	movlw	26
   497   001792  6E2B               	movwf	??_Init_LCD^0,c
   498   001794  0EF8               	movlw	248
   499   001796                     u697:
   500   001796  2EE8               	decfsz	wreg,f,c
   501   001798  D7FE               	bra	u697
   502   00179A  2E2B               	decfsz	??_Init_LCD^0,f,c
   503   00179C  D7FC               	bra	u697
   504   00179E  D000               	nop2	
   505   0017A0                     
   506                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   507   0017A0  0E30               	movlw	48
   508   0017A2  6E29               	movwf	Send_Instruction_Data@Data^0,c
   509   0017A4  0E00               	movlw	0
   510   0017A6  EC9B  F00C         	call	_Send_Instruction_Data
   511   0017AA                     
   512                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   513   0017AA  0E02               	movlw	2
   514   0017AC  6E29               	movwf	Send_Instruction_Data@Data^0,c
   515   0017AE  0E00               	movlw	0
   516   0017B0  EC9B  F00C         	call	_Send_Instruction_Data
   517   0017B4                     
   518                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   519   0017B4  0E06               	movlw	6
   520   0017B6  6E29               	movwf	Send_Instruction_Data@Data^0,c
   521   0017B8  0E00               	movlw	0
   522   0017BA  EC9B  F00C         	call	_Send_Instruction_Data
   523   0017BE                     
   524                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   525   0017BE  0E0F               	movlw	15
   526   0017C0  6E29               	movwf	Send_Instruction_Data@Data^0,c
   527   0017C2  0E00               	movlw	0
   528   0017C4  EC9B  F00C         	call	_Send_Instruction_Data
   529   0017C8                     
   530                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   531   0017C8  0E28               	movlw	40
   532   0017CA  6E29               	movwf	Send_Instruction_Data@Data^0,c
   533   0017CC  0E00               	movlw	0
   534   0017CE  EC9B  F00C         	call	_Send_Instruction_Data
   535   0017D2                     
   536                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   537   0017D2  0E01               	movlw	1
   538   0017D4  6E29               	movwf	Send_Instruction_Data@Data^0,c
   539   0017D6  0E00               	movlw	0
   540   0017D8  EC9B  F00C         	call	_Send_Instruction_Data
   541   0017DC                     
   542                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   543   0017DC  0E03               	movlw	3
   544   0017DE  6E2C               	movwf	(??_Init_LCD+1)^0,c
   545   0017E0  0E08               	movlw	8
   546   0017E2  6E2B               	movwf	??_Init_LCD^0,c
   547   0017E4  0E77               	movlw	119
   548   0017E6                     u707:
   549   0017E6  2EE8               	decfsz	wreg,f,c
   550   0017E8  D7FE               	bra	u707
   551   0017EA  2E2B               	decfsz	??_Init_LCD^0,f,c
   552   0017EC  D7FC               	bra	u707
   553   0017EE  2E2C               	decfsz	(??_Init_LCD+1)^0,f,c
   554   0017F0  D7FA               	bra	u707
   555   0017F2  0000               	nop	
   556   0017F4  0012               	return		;funcret
   557   0017F6                     __end_of_Init_LCD:
   558                           	callstack 0
   559                           
   560 ;; *************** function _Send_Instruction_Data *****************
   561 ;; Defined at:
   562 ;;		line 24 in file "LCD_Library.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  Instruction     1    wreg     unsigned char 
   565 ;;  Data            1   40[COMRAM] unsigned char 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  Instruction     1   41[COMRAM] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   577 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;Total ram usage:        2 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 6
   584 ;; This function calls:
   585 ;;		_LCD_Instruction
   586 ;; This function is called by:
   587 ;;		_Init_LCD
   588 ;;		_Init_Message_Platform
   589 ;;		_Send_String
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text3
   594   001936                     __ptext3:
   595                           	callstack 0
   596   001936                     _Send_Instruction_Data:
   597                           	callstack 23
   598                           
   599                           ;incstack = 0
   600                           ;Send_Instruction_Data@Instruction stored from wreg
   601   001936  6E2A               	movwf	Send_Instruction_Data@Instruction^0,c
   602   001938                     
   603                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   604   001938  B02A               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   605   00193A  D002               	bra	u645
   606   00193C  988B               	bcf	139,4,c	;volatile
   607   00193E  D001               	bra	u646
   608   001940                     u645:
   609   001940  888B               	bsf	139,4,c	;volatile
   610   001942                     u646:
   611   001942                     
   612                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   613   001942  3829               	swapf	Send_Instruction_Data@Data^0,w,c
   614   001944  0B0F               	andlw	15
   615   001946  EC2F  F00C         	call	_LCD_Instruction
   616   00194A                     
   617                           ;LCD_Library.c: 28:     LCD_Instruction(Data);
   618   00194A  5029               	movf	Send_Instruction_Data@Data^0,w,c
   619   00194C  EC2F  F00C         	call	_LCD_Instruction
   620   001950  0012               	return		;funcret
   621   001952                     __end_of_Send_Instruction_Data:
   622                           	callstack 0
   623                           
   624 ;; *************** function _LCD_Instruction *****************
   625 ;; Defined at:
   626 ;;		line 33 in file "LCD_Library.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  Instruction     1    wreg     unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  Instruction     1   39[COMRAM] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 5
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_Send_Instruction_Data
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text4
   655   00185E                     __ptext4:
   656                           	callstack 0
   657   00185E                     _LCD_Instruction:
   658                           	callstack 23
   659                           
   660                           ;incstack = 0
   661                           ;LCD_Instruction@Instruction stored from wreg
   662   00185E  6E28               	movwf	LCD_Instruction@Instruction^0,c
   663   001860                     
   664                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   665   001860  8A8B               	bsf	139,5,c	;volatile
   666   001862                     
   667                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   668   001862  0E4E               	movlw	78
   669   001864  6E27               	movwf	??_LCD_Instruction^0,c
   670   001866  0EEB               	movlw	235
   671   001868                     u717:
   672   001868  2EE8               	decfsz	wreg,f,c
   673   00186A  D7FE               	bra	u717
   674   00186C  2E27               	decfsz	??_LCD_Instruction^0,f,c
   675   00186E  D7FC               	bra	u717
   676   001870  0000               	nop	
   677   001872                     
   678                           ;LCD_Library.c: 37:     LATD = Instruction;
   679   001872  C028  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   680   001876                     
   681                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   682   001876  0E4E               	movlw	78
   683   001878  6E27               	movwf	??_LCD_Instruction^0,c
   684   00187A  0EEB               	movlw	235
   685   00187C                     u727:
   686   00187C  2EE8               	decfsz	wreg,f,c
   687   00187E  D7FE               	bra	u727
   688   001880  2E27               	decfsz	??_LCD_Instruction^0,f,c
   689   001882  D7FC               	bra	u727
   690   001884  0000               	nop	
   691   001886                     
   692                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   693   001886  9A8B               	bcf	139,5,c	;volatile
   694   001888                     
   695                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   696   001888  0E4E               	movlw	78
   697   00188A  6E27               	movwf	??_LCD_Instruction^0,c
   698   00188C  0EEB               	movlw	235
   699   00188E                     u737:
   700   00188E  2EE8               	decfsz	wreg,f,c
   701   001890  D7FE               	bra	u737
   702   001892  2E27               	decfsz	??_LCD_Instruction^0,f,c
   703   001894  D7FC               	bra	u737
   704   001896  0000               	nop	
   705   001898  0012               	return		;funcret
   706   00189A                     __end_of_LCD_Instruction:
   707                           	callstack 0
   708                           
   709 ;; *************** function _Configurations *****************
   710 ;; Defined at:
   711 ;;		line 78 in file "main.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; Hardware stack levels required when called: 5
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text5
   740   0017F6                     __ptext5:
   741                           	callstack 0
   742   0017F6                     _Configurations:
   743                           	callstack 25
   744   0017F6                     
   745                           ;main.c: 80:     OSCCON = 0x72;
   746   0017F6  0E72               	movlw	114
   747   0017F8  6ED3               	movwf	211,c	;volatile
   748                           
   749                           ;main.c: 82:     ANSELC = 0;
   750   0017FA  0E00               	movlw	0
   751   0017FC  010F               	movlb	15	; () banked
   752   0017FE  6F3A               	movwf	58,b	;volatile
   753                           
   754                           ;main.c: 83:     ANSELD = 0;
   755   001800  0E00               	movlw	0
   756   001802  6F3B               	movwf	59,b	;volatile
   757                           
   758                           ;main.c: 84:     ANSELE = 0;
   759   001804  0E00               	movlw	0
   760   001806  6F3C               	movwf	60,b	;volatile
   761   001808                     
   762                           ; BSR set to: 15
   763                           ;main.c: 87:     TRISCbits.RC4 = 0;
   764   001808  9894               	bcf	148,4,c	;volatile
   765   00180A                     
   766                           ; BSR set to: 15
   767                           ;main.c: 88:     TRISCbits.RC5 = 0;
   768   00180A  9A94               	bcf	148,5,c	;volatile
   769                           
   770                           ;main.c: 89:     TRISD = 0;
   771   00180C  0E00               	movlw	0
   772   00180E  6E95               	movwf	149,c	;volatile
   773                           
   774                           ;main.c: 90:     TRISE = 0;
   775   001810  0E00               	movlw	0
   776   001812  6E96               	movwf	150,c	;volatile
   777   001814                     
   778                           ; BSR set to: 15
   779                           ;main.c: 93:     LATCbits.LC4 = 0;
   780   001814  988B               	bcf	139,4,c	;volatile
   781   001816                     
   782                           ; BSR set to: 15
   783                           ;main.c: 94:     LATCbits.LC5 = 0;
   784   001816  9A8B               	bcf	139,5,c	;volatile
   785                           
   786                           ;main.c: 95:     LATD = 0;
   787   001818  0E00               	movlw	0
   788   00181A  6E8C               	movwf	140,c	;volatile
   789                           
   790                           ;main.c: 96:     LATE = 0;
   791   00181C  0E00               	movlw	0
   792   00181E  6E8D               	movwf	141,c	;volatile
   793   001820                     
   794                           ; BSR set to: 15
   795                           ;main.c: 99:     INTCONbits.GIE = 1;
   796   001820  8EF2               	bsf	242,7,c	;volatile
   797   001822                     
   798                           ; BSR set to: 15
   799                           ;main.c: 100:     INTCONbits.PEIE = 1;
   800   001822  8CF2               	bsf	242,6,c	;volatile
   801   001824                     
   802                           ; BSR set to: 15
   803                           ;main.c: 101:     RCONbits.IPEN = 1;
   804   001824  8ED0               	bsf	208,7,c	;volatile
   805   001826                     
   806                           ; BSR set to: 15
   807                           ;main.c: 103:     PIE1bits.RC1IE = 1;
   808   001826  8A9D               	bsf	157,5,c	;volatile
   809   001828                     
   810                           ; BSR set to: 15
   811                           ;main.c: 104:     PIR1bits.RC1IF = 0;
   812   001828  9A9E               	bcf	158,5,c	;volatile
   813                           
   814                           ;main.c: 107:     SPBRG = 103;
   815   00182A  0E67               	movlw	103
   816   00182C  6EAF               	movwf	175,c	;volatile
   817   00182E                     
   818                           ; BSR set to: 15
   819                           ;main.c: 108:     TRISCbits.RC6 = 1;
   820   00182E  8C94               	bsf	148,6,c	;volatile
   821   001830                     
   822                           ; BSR set to: 15
   823                           ;main.c: 109:     TRISCbits.RC7 = 1;
   824   001830  8E94               	bsf	148,7,c	;volatile
   825   001832                     
   826                           ; BSR set to: 15
   827                           ;main.c: 112:     TXSTA1bits.TX91 = 0;
   828   001832  9CAC               	bcf	172,6,c	;volatile
   829   001834                     
   830                           ; BSR set to: 15
   831                           ;main.c: 113:     TXSTA1bits.TXEN1 = 1;
   832   001834  8AAC               	bsf	172,5,c	;volatile
   833   001836                     
   834                           ; BSR set to: 15
   835                           ;main.c: 114:     TXSTA1bits.SYNC1 = 0;
   836   001836  98AC               	bcf	172,4,c	;volatile
   837   001838                     
   838                           ; BSR set to: 15
   839                           ;main.c: 115:     TXSTA1bits.BRGH1 = 1;
   840   001838  84AC               	bsf	172,2,c	;volatile
   841   00183A                     
   842                           ; BSR set to: 15
   843                           ;main.c: 118:     RCSTAbits.SPEN1 = 1;
   844   00183A  8EAB               	bsf	171,7,c	;volatile
   845   00183C                     
   846                           ; BSR set to: 15
   847                           ;main.c: 119:     RCSTAbits.RX91 = 0;
   848   00183C  9CAB               	bcf	171,6,c	;volatile
   849   00183E                     
   850                           ; BSR set to: 15
   851                           ;main.c: 120:     RCSTAbits.CREN1 = 1;
   852   00183E  88AB               	bsf	171,4,c	;volatile
   853   001840                     
   854                           ; BSR set to: 15
   855                           ;main.c: 123:     BAUDCON1bits.BRG16 = 0;
   856   001840  96B8               	bcf	184,3,c	;volatile
   857                           
   858                           ;main.c: 135:     PR2 = 0xF9;
   859   001842  0EF9               	movlw	249
   860   001844  6EBB               	movwf	187,c	;volatile
   861                           
   862                           ;main.c: 136:     T2CON = 0x00;
   863   001846  0E00               	movlw	0
   864   001848  6EBA               	movwf	186,c	;volatile
   865                           
   866                           ;main.c: 137:     CCP3CON = 0x0C;
   867   00184A  0E0C               	movlw	12
   868   00184C  6F5D               	movwf	93,b	;volatile
   869                           
   870                           ;main.c: 138:     CCPR3L = 0xFA;
   871   00184E  0EFA               	movlw	250
   872   001850  6F5E               	movwf	94,b	;volatile
   873                           
   874                           ;main.c: 139:     CCP5CON = 0x0C;
   875   001852  0E0C               	movlw	12
   876   001854  6F54               	movwf	84,b	;volatile
   877                           
   878                           ;main.c: 140:     CCPR5L = 0xFA;
   879   001856  0EFA               	movlw	250
   880   001858  6F55               	movwf	85,b	;volatile
   881   00185A                     
   882                           ; BSR set to: 15
   883                           ;main.c: 141:     T2CONbits.TMR2ON = 1;
   884   00185A  84BA               	bsf	186,2,c	;volatile
   885   00185C                     
   886                           ; BSR set to: 15
   887   00185C  0012               	return		;funcret
   888   00185E                     __end_of_Configurations:
   889                           	callstack 0
   890                           
   891 ;; *************** function _Interrupt *****************
   892 ;; Defined at:
   893 ;;		line 70 in file "main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		None
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;Total ram usage:        1 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 4
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		Interrupt level 1
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	intcodelo
   922   000018                     __pintcodelo:
   923                           	callstack 0
   924   000018                     _Interrupt:
   925                           	callstack 23
   926                           
   927                           ; BSR set to: 15
   928                           ;incstack = 0
   929   000018  8038               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   930   00001A  CFE0 F026          	movff	bsr,??_Interrupt
   931   00001E  C026  FFE0         	movff	??_Interrupt,bsr
   932   000022  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   933   000024  0010               	retfie	
   934   000026                     __end_of_Interrupt:
   935                           	callstack 0
   936                           
   937 ;; *************** function _Interrupt_Rx *****************
   938 ;; Defined at:
   939 ;;		line 58 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        2 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 3
   960 ;; This function calls:
   961 ;;		_Receive_Interrupt
   962 ;; This function is called by:
   963 ;;		Interrupt level 2
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	intcode
   968   000008                     __pintcode:
   969                           	callstack 0
   970   000008                     _Interrupt_Rx:
   971                           	callstack 23
   972                           
   973                           ;incstack = 0
   974   000008  8238               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   975   00000A  EF77  F00C         	goto	int_func
   976                           
   977                           	psect	intcode_body
   978   0018EE                     __pintcode_body:
   979                           	callstack 23
   980   0018EE                     int_func:
   981                           	callstack 23
   982   0018EE  CFF3 F024          	movff	prodl,??_Interrupt_Rx
   983   0018F2  CFF4 F025          	movff	prodh,??_Interrupt_Rx+1
   984   0018F6                     
   985                           ;main.c: 60:     if (PIR1bits.RC1IF) {
   986   0018F6  AA9E               	btfss	158,5,c	;volatile
   987   0018F8  EF80  F00C         	goto	i2u65_41
   988   0018FC  EF82  F00C         	goto	i2u65_40
   989   001900                     i2u65_41:
   990   001900  EF84  F00C         	goto	i2l92
   991   001904                     i2u65_40:
   992   001904                     
   993                           ;main.c: 62:         Receive_Interrupt();
   994   001904  EC2D  F00B         	call	_Receive_Interrupt	;wreg free
   995   001908                     i2l92:
   996   001908  C025  FFF4         	movff	??_Interrupt_Rx+1,prodh
   997   00190C  C024  FFF3         	movff	??_Interrupt_Rx,prodl
   998   001910  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   999   001912  0011               	retfie		f
  1000   001914                     __end_of_Interrupt_Rx:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _Receive_Interrupt *****************
  1004 ;; Defined at:
  1005 ;;		line 145 in file "main.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;Total ram usage:        2 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 2
  1026 ;; This function calls:
  1027 ;;		_Manage_Motor_Direction
  1028 ;;		_Send_PWM_Motors
  1029 ;; This function is called by:
  1030 ;;		_Interrupt_Rx
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text8
  1035   00165A                     __ptext8:
  1036                           	callstack 0
  1037   00165A                     _Receive_Interrupt:
  1038                           	callstack 23
  1039   00165A                     
  1040                           ;main.c: 147:     Rx_Buffer = RCREG1;
  1041   00165A  CFAE F037          	movff	4014,_Rx_Buffer	;volatile
  1042                           
  1043                           ;main.c: 149:     switch (Rx_Buffer) {
  1044   00165E  EF9E  F00B         	goto	i2l1399
  1045   001662                     i2l1381:
  1046                           
  1047                           ;main.c: 153:             Send_PWM_Motors(1023.00, 1023.00);
  1048   001662  0E00               	movlw	0
  1049   001664  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
  1050   001666  0EC0               	movlw	192
  1051   001668  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
  1052   00166A  0E7F               	movlw	127
  1053   00166C  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
  1054   00166E  0E44               	movlw	68
  1055   001670  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
  1056   001672  0E00               	movlw	0
  1057   001674  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
  1058   001676  0EC0               	movlw	192
  1059   001678  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
  1060   00167A  0E7F               	movlw	127
  1061   00167C  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
  1062   00167E  0E44               	movlw	68
  1063   001680  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
  1064   001682  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
  1065   001686                     
  1066                           ;main.c: 154:             Manage_Motor_Direction(0, 1, 1, 0);
  1067   001686  0E01               	movlw	1
  1068   001688  6E01               	movwf	Manage_Motor_Direction@in2^0,c
  1069   00168A  0E01               	movlw	1
  1070   00168C  6E02               	movwf	Manage_Motor_Direction@in3^0,c
  1071   00168E  0E00               	movlw	0
  1072   001690  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1073   001692  0E00               	movlw	0
  1074   001694  EC4D  F00C         	call	_Manage_Motor_Direction
  1075   001698                     
  1076                           ;main.c: 155:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  1077   001698  0E66               	movlw	102
  1078   00169A  6E23               	movwf	(??_Receive_Interrupt+1)^0,c
  1079   00169C  0E76               	movlw	118
  1080   00169E  6E22               	movwf	??_Receive_Interrupt^0,c
  1081   0016A0  0EC1               	movlw	193
  1082   0016A2                     i2u74_47:
  1083   0016A2  2EE8               	decfsz	wreg,f,c
  1084   0016A4  D7FE               	bra	i2u74_47
  1085   0016A6  2E22               	decfsz	??_Receive_Interrupt^0,f,c
  1086   0016A8  D7FC               	bra	i2u74_47
  1087   0016AA  2E23               	decfsz	(??_Receive_Interrupt+1)^0,f,c
  1088   0016AC  D7FA               	bra	i2u74_47
  1089   0016AE  0000               	nop	
  1090                           
  1091                           ;main.c: 157:             break;
  1092   0016B0  EFA9  F00B         	goto	i2l108
  1093   0016B4                     i2l1387:
  1094                           
  1095                           ;main.c: 161:             Send_PWM_Motors(1023.00, 1023.00);
  1096   0016B4  0E00               	movlw	0
  1097   0016B6  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
  1098   0016B8  0EC0               	movlw	192
  1099   0016BA  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
  1100   0016BC  0E7F               	movlw	127
  1101   0016BE  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
  1102   0016C0  0E44               	movlw	68
  1103   0016C2  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
  1104   0016C4  0E00               	movlw	0
  1105   0016C6  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
  1106   0016C8  0EC0               	movlw	192
  1107   0016CA  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
  1108   0016CC  0E7F               	movlw	127
  1109   0016CE  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
  1110   0016D0  0E44               	movlw	68
  1111   0016D2  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
  1112   0016D4  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
  1113   0016D8                     
  1114                           ;main.c: 162:             Manage_Motor_Direction(1, 0, 0, 1);
  1115   0016D8  0E00               	movlw	0
  1116   0016DA  6E01               	movwf	Manage_Motor_Direction@in2^0,c
  1117   0016DC  0E00               	movlw	0
  1118   0016DE  6E02               	movwf	Manage_Motor_Direction@in3^0,c
  1119   0016E0  0E01               	movlw	1
  1120   0016E2  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1121   0016E4  0E01               	movlw	1
  1122   0016E6  EC4D  F00C         	call	_Manage_Motor_Direction
  1123   0016EA                     
  1124                           ;main.c: 163:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  1125   0016EA  0E66               	movlw	102
  1126   0016EC  6E23               	movwf	(??_Receive_Interrupt+1)^0,c
  1127   0016EE  0E76               	movlw	118
  1128   0016F0  6E22               	movwf	??_Receive_Interrupt^0,c
  1129   0016F2  0EC1               	movlw	193
  1130   0016F4                     i2u75_47:
  1131   0016F4  2EE8               	decfsz	wreg,f,c
  1132   0016F6  D7FE               	bra	i2u75_47
  1133   0016F8  2E22               	decfsz	??_Receive_Interrupt^0,f,c
  1134   0016FA  D7FC               	bra	i2u75_47
  1135   0016FC  2E23               	decfsz	(??_Receive_Interrupt+1)^0,f,c
  1136   0016FE  D7FA               	bra	i2u75_47
  1137   001700  0000               	nop	
  1138   001702                     i2l1393:
  1139                           
  1140                           ;main.c: 167:             Send_PWM_Motors(0.00, 0.00);
  1141   001702  0E00               	movlw	0
  1142   001704  6E1A               	movwf	Send_PWM_Motors@PWM_RMotor^0,c
  1143   001706  0E00               	movlw	0
  1144   001708  6E1B               	movwf	(Send_PWM_Motors@PWM_RMotor+1)^0,c
  1145   00170A  0E00               	movlw	0
  1146   00170C  6E1C               	movwf	(Send_PWM_Motors@PWM_RMotor+2)^0,c
  1147   00170E  0E00               	movlw	0
  1148   001710  6E1D               	movwf	(Send_PWM_Motors@PWM_RMotor+3)^0,c
  1149   001712  0E00               	movlw	0
  1150   001714  6E1E               	movwf	Send_PWM_Motors@PWM_LMotor^0,c
  1151   001716  0E00               	movlw	0
  1152   001718  6E1F               	movwf	(Send_PWM_Motors@PWM_LMotor+1)^0,c
  1153   00171A  0E00               	movlw	0
  1154   00171C  6E20               	movwf	(Send_PWM_Motors@PWM_LMotor+2)^0,c
  1155   00171E  0E00               	movlw	0
  1156   001720  6E21               	movwf	(Send_PWM_Motors@PWM_LMotor+3)^0,c
  1157   001722  EC27  F00A         	call	_Send_PWM_Motors	;wreg free
  1158   001726                     
  1159                           ;main.c: 168:             Manage_Motor_Direction(1, 0, 0, 1);
  1160   001726  0E00               	movlw	0
  1161   001728  6E01               	movwf	Manage_Motor_Direction@in2^0,c
  1162   00172A  0E00               	movlw	0
  1163   00172C  6E02               	movwf	Manage_Motor_Direction@in3^0,c
  1164   00172E  0E01               	movlw	1
  1165   001730  6E03               	movwf	Manage_Motor_Direction@in4^0,c
  1166   001732  0E01               	movlw	1
  1167   001734  EC4D  F00C         	call	_Manage_Motor_Direction
  1168                           
  1169                           ;main.c: 170:             break;
  1170   001738  EFA9  F00B         	goto	i2l108
  1171   00173C                     i2l1399:
  1172   00173C  5037               	movf	_Rx_Buffer^0,w,c
  1173                           
  1174                           ; Switch size 1, requested type "simple"
  1175                           ; Number of cases is 2, Range of values is 65 to 77
  1176                           ; switch strategies available:
  1177                           ; Name         Instructions Cycles
  1178                           ; simple_byte            7     4 (average)
  1179                           ;	Chosen strategy is simple_byte
  1180   00173E  0A41               	xorlw	65	; case 65
  1181   001740  B4D8               	btfsc	status,2,c
  1182   001742  EF5A  F00B         	goto	i2l1387
  1183   001746  0A0C               	xorlw	12	; case 77
  1184   001748  B4D8               	btfsc	status,2,c
  1185   00174A  EF31  F00B         	goto	i2l1381
  1186   00174E  EF81  F00B         	goto	i2l1393
  1187   001752                     i2l108:
  1188   001752  0012               	return		;funcret
  1189   001754                     __end_of_Receive_Interrupt:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _Send_PWM_Motors *****************
  1193 ;; Defined at:
  1194 ;;		line 178 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  PWM_RMotor      4   25[COMRAM] float 
  1197 ;;  PWM_LMotor      4   29[COMRAM] float 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1209 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;Total ram usage:        8 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 1
  1216 ;; This function calls:
  1217 ;;		___flmul
  1218 ;;		___fltol
  1219 ;; This function is called by:
  1220 ;;		_Receive_Interrupt
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text9
  1225   00144E                     __ptext9:
  1226                           	callstack 0
  1227   00144E                     _Send_PWM_Motors:
  1228                           	callstack 23
  1229   00144E                     
  1230                           ;main.c: 180:     Duty_Cycle1 = (float) (PWM_RMotor * (1000.00 / 1023.00));
  1231   00144E  C01A  F001         	movff	Send_PWM_Motors@PWM_RMotor,___flmul@b
  1232   001452  C01B  F002         	movff	Send_PWM_Motors@PWM_RMotor+1,___flmul@b+1
  1233   001456  C01C  F003         	movff	Send_PWM_Motors@PWM_RMotor+2,___flmul@b+2
  1234   00145A  C01D  F004         	movff	Send_PWM_Motors@PWM_RMotor+3,___flmul@b+3
  1235   00145E  0E90               	movlw	144
  1236   001460  6E05               	movwf	___flmul@a^0,c
  1237   001462  0E3E               	movlw	62
  1238   001464  6E06               	movwf	(___flmul@a+1)^0,c
  1239   001466  0E7A               	movlw	122
  1240   001468  6E07               	movwf	(___flmul@a+2)^0,c
  1241   00146A  0E3F               	movlw	63
  1242   00146C  6E08               	movwf	(___flmul@a+3)^0,c
  1243   00146E  EC12  F008         	call	___flmul	;wreg free
  1244   001472  C001  F033         	movff	?___flmul,_Duty_Cycle1
  1245   001476  C002  F034         	movff	?___flmul+1,_Duty_Cycle1+1
  1246   00147A  C003  F035         	movff	?___flmul+2,_Duty_Cycle1+2
  1247   00147E  C004  F036         	movff	?___flmul+3,_Duty_Cycle1+3
  1248   001482                     
  1249                           ;main.c: 181:     CCPR3L = (int) Duty_Cycle1 >> 2;
  1250   001482  C033  F001         	movff	_Duty_Cycle1,___fltol@f1
  1251   001486  C034  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1252   00148A  C035  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1253   00148E  C036  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1254   001492  ECAA  F00A         	call	___fltol	;wreg free
  1255   001496  3402               	rlcf	(?___fltol+1)^0,w,c
  1256   001498  3202               	rrcf	(?___fltol+1)^0,f,c
  1257   00149A  3201               	rrcf	?___fltol^0,f,c
  1258   00149C  3402               	rlcf	(?___fltol+1)^0,w,c
  1259   00149E  3202               	rrcf	(?___fltol+1)^0,f,c
  1260   0014A0  3201               	rrcf	?___fltol^0,f,c
  1261   0014A2  5001               	movf	?___fltol^0,w,c
  1262   0014A4  010F               	movlb	15	; () banked
  1263   0014A6  6F5E               	movwf	94,b	;volatile
  1264   0014A8                     
  1265                           ; BSR set to: 15
  1266                           ;main.c: 182:     CCP3CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle1 & 0x03) << 4));
  1267   0014A8  C033  F001         	movff	_Duty_Cycle1,___fltol@f1
  1268   0014AC  C034  F002         	movff	_Duty_Cycle1+1,___fltol@f1+1
  1269   0014B0  C035  F003         	movff	_Duty_Cycle1+2,___fltol@f1+2
  1270   0014B4  C036  F004         	movff	_Duty_Cycle1+3,___fltol@f1+3
  1271   0014B8  ECAA  F00A         	call	___fltol	;wreg free
  1272   0014BC  0E03               	movlw	3
  1273   0014BE  1601               	andwf	?___fltol^0,f,c
  1274   0014C0  3A01               	swapf	?___fltol^0,f,c
  1275   0014C2  0EF0               	movlw	240
  1276   0014C4  1601               	andwf	?___fltol^0,f,c
  1277   0014C6  010F               	movlb	15	; () banked
  1278   0014C8  515D               	movf	93,w,b	;volatile
  1279   0014CA  0B0F               	andlw	15
  1280   0014CC  1001               	iorwf	?___fltol^0,w,c
  1281   0014CE  6F5D               	movwf	93,b	;volatile
  1282                           
  1283                           ;main.c: 184:     Duty_Cycle2 = (float) (PWM_LMotor * (1000.00 / 1023.00));
  1284   0014D0  C01E  F001         	movff	Send_PWM_Motors@PWM_LMotor,___flmul@b
  1285   0014D4  C01F  F002         	movff	Send_PWM_Motors@PWM_LMotor+1,___flmul@b+1
  1286   0014D8  C020  F003         	movff	Send_PWM_Motors@PWM_LMotor+2,___flmul@b+2
  1287   0014DC  C021  F004         	movff	Send_PWM_Motors@PWM_LMotor+3,___flmul@b+3
  1288   0014E0  0E90               	movlw	144
  1289   0014E2  6E05               	movwf	___flmul@a^0,c
  1290   0014E4  0E3E               	movlw	62
  1291   0014E6  6E06               	movwf	(___flmul@a+1)^0,c
  1292   0014E8  0E7A               	movlw	122
  1293   0014EA  6E07               	movwf	(___flmul@a+2)^0,c
  1294   0014EC  0E3F               	movlw	63
  1295   0014EE  6E08               	movwf	(___flmul@a+3)^0,c
  1296   0014F0  EC12  F008         	call	___flmul	;wreg free
  1297   0014F4  C001  F02F         	movff	?___flmul,_Duty_Cycle2
  1298   0014F8  C002  F030         	movff	?___flmul+1,_Duty_Cycle2+1
  1299   0014FC  C003  F031         	movff	?___flmul+2,_Duty_Cycle2+2
  1300   001500  C004  F032         	movff	?___flmul+3,_Duty_Cycle2+3
  1301   001504                     
  1302                           ;main.c: 185:     CCPR5L = (int) Duty_Cycle2 >> 2;
  1303   001504  C02F  F001         	movff	_Duty_Cycle2,___fltol@f1
  1304   001508  C030  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1305   00150C  C031  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1306   001510  C032  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1307   001514  ECAA  F00A         	call	___fltol	;wreg free
  1308   001518  3402               	rlcf	(?___fltol+1)^0,w,c
  1309   00151A  3202               	rrcf	(?___fltol+1)^0,f,c
  1310   00151C  3201               	rrcf	?___fltol^0,f,c
  1311   00151E  3402               	rlcf	(?___fltol+1)^0,w,c
  1312   001520  3202               	rrcf	(?___fltol+1)^0,f,c
  1313   001522  3201               	rrcf	?___fltol^0,f,c
  1314   001524  5001               	movf	?___fltol^0,w,c
  1315   001526  010F               	movlb	15	; () banked
  1316   001528  6F55               	movwf	85,b	;volatile
  1317   00152A                     
  1318                           ; BSR set to: 15
  1319                           ;main.c: 186:     CCP5CON = ((CCP3CON & 0x0F) | (((int) Duty_Cycle2 & 0x03) << 4));
  1320   00152A  C02F  F001         	movff	_Duty_Cycle2,___fltol@f1
  1321   00152E  C030  F002         	movff	_Duty_Cycle2+1,___fltol@f1+1
  1322   001532  C031  F003         	movff	_Duty_Cycle2+2,___fltol@f1+2
  1323   001536  C032  F004         	movff	_Duty_Cycle2+3,___fltol@f1+3
  1324   00153A  ECAA  F00A         	call	___fltol	;wreg free
  1325   00153E  0E03               	movlw	3
  1326   001540  1601               	andwf	?___fltol^0,f,c
  1327   001542  3A01               	swapf	?___fltol^0,f,c
  1328   001544  0EF0               	movlw	240
  1329   001546  1601               	andwf	?___fltol^0,f,c
  1330   001548  010F               	movlb	15	; () banked
  1331   00154A  515D               	movf	93,w,b	;volatile
  1332   00154C  0B0F               	andlw	15
  1333   00154E  1001               	iorwf	?___fltol^0,w,c
  1334   001550  6F54               	movwf	84,b	;volatile
  1335   001552                     
  1336                           ; BSR set to: 15
  1337   001552  0012               	return		;funcret
  1338   001554                     __end_of_Send_PWM_Motors:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function ___fltol *****************
  1342 ;; Defined at:
  1343 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  f1              4    0[COMRAM] void 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  exp1            1    9[COMRAM] unsigned char 
  1348 ;;  sign1           1    8[COMRAM] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  4    0[COMRAM] long 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;Total ram usage:       10 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_Send_PWM_Motors
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text10
  1372   001554                     __ptext10:
  1373                           	callstack 0
  1374   001554                     ___fltol:
  1375                           	callstack 23
  1376   001554  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1377   001556  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1378   001558  6E0A               	movwf	___fltol@exp1^0,c
  1379   00155A  500A               	movf	___fltol@exp1^0,w,c
  1380   00155C  A4D8               	btfss	status,2,c
  1381   00155E  EFB3  F00A         	goto	i2u53_41
  1382   001562  EFB5  F00A         	goto	i2u53_40
  1383   001566                     i2u53_41:
  1384   001566  EFBF  F00A         	goto	i2l1289
  1385   00156A                     i2u53_40:
  1386   00156A                     i2l1285:
  1387   00156A  0E00               	movlw	0
  1388   00156C  6E01               	movwf	?___fltol^0,c
  1389   00156E  0E00               	movlw	0
  1390   001570  6E02               	movwf	(?___fltol+1)^0,c
  1391   001572  0E00               	movlw	0
  1392   001574  6E03               	movwf	(?___fltol+2)^0,c
  1393   001576  0E00               	movlw	0
  1394   001578  6E04               	movwf	(?___fltol+3)^0,c
  1395   00157A  EF2C  F00B         	goto	i2l451
  1396   00157E                     i2l1289:
  1397   00157E  C001  F005         	movff	___fltol@f1,??___fltol
  1398   001582  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1399   001586  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1400   00158A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1401   00158E  0E20               	movlw	32
  1402   001590  EFCF  F00A         	goto	i2u54_40
  1403   001594                     i2u54_45:
  1404   001594  90D8               	bcf	status,0,c
  1405   001596  3208               	rrcf	(??___fltol+3)^0,f,c
  1406   001598  3207               	rrcf	(??___fltol+2)^0,f,c
  1407   00159A  3206               	rrcf	(??___fltol+1)^0,f,c
  1408   00159C  3205               	rrcf	??___fltol^0,f,c
  1409   00159E                     i2u54_40:
  1410   00159E  2EE8               	decfsz	wreg,f,c
  1411   0015A0  EFCA  F00A         	goto	i2u54_45
  1412   0015A4  5005               	movf	??___fltol^0,w,c
  1413   0015A6  6E09               	movwf	___fltol@sign1^0,c
  1414   0015A8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1415   0015AA  0EFF               	movlw	255
  1416   0015AC  1601               	andwf	___fltol@f1^0,f,c
  1417   0015AE  0EFF               	movlw	255
  1418   0015B0  1602               	andwf	(___fltol@f1+1)^0,f,c
  1419   0015B2  0EFF               	movlw	255
  1420   0015B4  1603               	andwf	(___fltol@f1+2)^0,f,c
  1421   0015B6  0E00               	movlw	0
  1422   0015B8  1604               	andwf	(___fltol@f1+3)^0,f,c
  1423   0015BA  0E96               	movlw	150
  1424   0015BC  5E0A               	subwf	___fltol@exp1^0,f,c
  1425   0015BE  BE0A               	btfsc	___fltol@exp1^0,7,c
  1426   0015C0  EFE6  F00A         	goto	i2u55_40
  1427   0015C4  EFE4  F00A         	goto	i2u55_41
  1428   0015C8                     i2u55_41:
  1429   0015C8  EFFC  F00A         	goto	i2l1309
  1430   0015CC                     i2u55_40:
  1431   0015CC  500A               	movf	___fltol@exp1^0,w,c
  1432   0015CE  0A80               	xorlw	128
  1433   0015D0  0F97               	addlw	151
  1434   0015D2  B0D8               	btfsc	status,0,c
  1435   0015D4  EFEE  F00A         	goto	i2u56_41
  1436   0015D8  EFF0  F00A         	goto	i2u56_40
  1437   0015DC                     i2u56_41:
  1438   0015DC  EFF2  F00A         	goto	i2l1305
  1439   0015E0                     i2u56_40:
  1440   0015E0  EFB5  F00A         	goto	i2l1285
  1441   0015E4                     i2l1305:
  1442   0015E4  90D8               	bcf	status,0,c
  1443   0015E6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1444   0015E8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1445   0015EA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1446   0015EC  3201               	rrcf	___fltol@f1^0,f,c
  1447   0015EE  3E0A               	incfsz	___fltol@exp1^0,f,c
  1448   0015F0  EFF2  F00A         	goto	i2l1305
  1449   0015F4  EF14  F00B         	goto	i2l1319
  1450   0015F8                     i2l1309:
  1451   0015F8  0E1F               	movlw	31
  1452   0015FA  640A               	cpfsgt	___fltol@exp1^0,c
  1453   0015FC  EF02  F00B         	goto	i2u57_41
  1454   001600  EF04  F00B         	goto	i2u57_40
  1455   001604                     i2u57_41:
  1456   001604  EF0C  F00B         	goto	i2l1317
  1457   001608                     i2u57_40:
  1458   001608  EFB5  F00A         	goto	i2l1285
  1459   00160C                     i2l1315:
  1460   00160C  90D8               	bcf	status,0,c
  1461   00160E  3601               	rlcf	___fltol@f1^0,f,c
  1462   001610  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1463   001612  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1464   001614  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1465   001616  060A               	decf	___fltol@exp1^0,f,c
  1466   001618                     i2l1317:
  1467   001618  500A               	movf	___fltol@exp1^0,w,c
  1468   00161A  A4D8               	btfss	status,2,c
  1469   00161C  EF12  F00B         	goto	i2u58_41
  1470   001620  EF14  F00B         	goto	i2u58_40
  1471   001624                     i2u58_41:
  1472   001624  EF06  F00B         	goto	i2l1315
  1473   001628                     i2u58_40:
  1474   001628                     i2l1319:
  1475   001628  5009               	movf	___fltol@sign1^0,w,c
  1476   00162A  B4D8               	btfsc	status,2,c
  1477   00162C  EF1A  F00B         	goto	i2u59_41
  1478   001630  EF1C  F00B         	goto	i2u59_40
  1479   001634                     i2u59_41:
  1480   001634  EF24  F00B         	goto	i2l1323
  1481   001638                     i2u59_40:
  1482   001638  1E04               	comf	(___fltol@f1+3)^0,f,c
  1483   00163A  1E03               	comf	(___fltol@f1+2)^0,f,c
  1484   00163C  1E02               	comf	(___fltol@f1+1)^0,f,c
  1485   00163E  6C01               	negf	___fltol@f1^0,c
  1486   001640  0E00               	movlw	0
  1487   001642  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1488   001644  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1489   001646  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1490   001648                     i2l1323:
  1491   001648  C001  F001         	movff	___fltol@f1,?___fltol
  1492   00164C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1493   001650  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1494   001654  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1495   001658                     i2l451:
  1496   001658  0012               	return		;funcret
  1497   00165A                     __end_of___fltol:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function ___flmul *****************
  1501 ;; Defined at:
  1502 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  b               4    0[COMRAM] long 
  1505 ;;  a               4    4[COMRAM] long 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  prod            4   19[COMRAM] struct .
  1508 ;;  grs             4   13[COMRAM] unsigned long 
  1509 ;;  temp            2   23[COMRAM] struct .
  1510 ;;  bexp            1   18[COMRAM] unsigned char 
  1511 ;;  aexp            1   17[COMRAM] unsigned char 
  1512 ;;  sign            1   12[COMRAM] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  4    0[COMRAM] unsigned char 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, prodl, prodh
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1522 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;Total ram usage:       25 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_Send_PWM_Motors
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text11
  1536   001024                     __ptext11:
  1537                           	callstack 0
  1538   001024                     ___flmul:
  1539                           	callstack 23
  1540   001024  5004               	movf	(___flmul@b+3)^0,w,c
  1541   001026  0B80               	andlw	128
  1542   001028  6E0D               	movwf	___flmul@sign^0,c
  1543   00102A  5004               	movf	(___flmul@b+3)^0,w,c
  1544   00102C  2404               	addwf	(___flmul@b+3)^0,w,c
  1545   00102E  6E13               	movwf	___flmul@bexp^0,c
  1546   001030  AE03               	btfss	(___flmul@b+2)^0,7,c
  1547   001032  EF1D  F008         	goto	i2u34_41
  1548   001036  EF1F  F008         	goto	i2u34_40
  1549   00103A                     i2u34_41:
  1550   00103A  EF20  F008         	goto	i2l1159
  1551   00103E                     i2u34_40:
  1552   00103E  8013               	bsf	___flmul@bexp^0,0,c
  1553   001040                     i2l1159:
  1554   001040  5013               	movf	___flmul@bexp^0,w,c
  1555   001042  B4D8               	btfsc	status,2,c
  1556   001044  EF26  F008         	goto	i2u35_41
  1557   001048  EF28  F008         	goto	i2u35_40
  1558   00104C                     i2u35_41:
  1559   00104C  EF3B  F008         	goto	i2l1167
  1560   001050                     i2u35_40:
  1561   001050  2813               	incf	___flmul@bexp^0,w,c
  1562   001052  A4D8               	btfss	status,2,c
  1563   001054  EF2E  F008         	goto	i2u36_41
  1564   001058  EF30  F008         	goto	i2u36_40
  1565   00105C                     i2u36_41:
  1566   00105C  EF38  F008         	goto	i2l1165
  1567   001060                     i2u36_40:
  1568   001060  0E00               	movlw	0
  1569   001062  6E01               	movwf	___flmul@b^0,c
  1570   001064  0E00               	movlw	0
  1571   001066  6E02               	movwf	(___flmul@b+1)^0,c
  1572   001068  0E00               	movlw	0
  1573   00106A  6E03               	movwf	(___flmul@b+2)^0,c
  1574   00106C  0E00               	movlw	0
  1575   00106E  6E04               	movwf	(___flmul@b+3)^0,c
  1576   001070                     i2l1165:
  1577   001070  8E03               	bsf	(___flmul@b+2)^0,7,c
  1578   001072  EF43  F008         	goto	i2l1169
  1579   001076                     i2l1167:
  1580   001076  0E00               	movlw	0
  1581   001078  6E01               	movwf	___flmul@b^0,c
  1582   00107A  0E00               	movlw	0
  1583   00107C  6E02               	movwf	(___flmul@b+1)^0,c
  1584   00107E  0E00               	movlw	0
  1585   001080  6E03               	movwf	(___flmul@b+2)^0,c
  1586   001082  0E00               	movlw	0
  1587   001084  6E04               	movwf	(___flmul@b+3)^0,c
  1588   001086                     i2l1169:
  1589   001086  5008               	movf	(___flmul@a+3)^0,w,c
  1590   001088  0B80               	andlw	128
  1591   00108A  1A0D               	xorwf	___flmul@sign^0,f,c
  1592   00108C  5008               	movf	(___flmul@a+3)^0,w,c
  1593   00108E  2408               	addwf	(___flmul@a+3)^0,w,c
  1594   001090  6E12               	movwf	___flmul@aexp^0,c
  1595   001092  AE07               	btfss	(___flmul@a+2)^0,7,c
  1596   001094  EF4E  F008         	goto	i2u37_41
  1597   001098  EF50  F008         	goto	i2u37_40
  1598   00109C                     i2u37_41:
  1599   00109C  EF51  F008         	goto	i2l1177
  1600   0010A0                     i2u37_40:
  1601   0010A0  8012               	bsf	___flmul@aexp^0,0,c
  1602   0010A2                     i2l1177:
  1603   0010A2  5012               	movf	___flmul@aexp^0,w,c
  1604   0010A4  B4D8               	btfsc	status,2,c
  1605   0010A6  EF57  F008         	goto	i2u38_41
  1606   0010AA  EF59  F008         	goto	i2u38_40
  1607   0010AE                     i2u38_41:
  1608   0010AE  EF6C  F008         	goto	i2l1185
  1609   0010B2                     i2u38_40:
  1610   0010B2  2812               	incf	___flmul@aexp^0,w,c
  1611   0010B4  A4D8               	btfss	status,2,c
  1612   0010B6  EF5F  F008         	goto	i2u39_41
  1613   0010BA  EF61  F008         	goto	i2u39_40
  1614   0010BE                     i2u39_41:
  1615   0010BE  EF69  F008         	goto	i2l1183
  1616   0010C2                     i2u39_40:
  1617   0010C2  0E00               	movlw	0
  1618   0010C4  6E05               	movwf	___flmul@a^0,c
  1619   0010C6  0E00               	movlw	0
  1620   0010C8  6E06               	movwf	(___flmul@a+1)^0,c
  1621   0010CA  0E00               	movlw	0
  1622   0010CC  6E07               	movwf	(___flmul@a+2)^0,c
  1623   0010CE  0E00               	movlw	0
  1624   0010D0  6E08               	movwf	(___flmul@a+3)^0,c
  1625   0010D2                     i2l1183:
  1626   0010D2  8E07               	bsf	(___flmul@a+2)^0,7,c
  1627   0010D4  EF74  F008         	goto	i2l768
  1628   0010D8                     i2l1185:
  1629   0010D8  0E00               	movlw	0
  1630   0010DA  6E05               	movwf	___flmul@a^0,c
  1631   0010DC  0E00               	movlw	0
  1632   0010DE  6E06               	movwf	(___flmul@a+1)^0,c
  1633   0010E0  0E00               	movlw	0
  1634   0010E2  6E07               	movwf	(___flmul@a+2)^0,c
  1635   0010E4  0E00               	movlw	0
  1636   0010E6  6E08               	movwf	(___flmul@a+3)^0,c
  1637   0010E8                     i2l768:
  1638   0010E8  5012               	movf	___flmul@aexp^0,w,c
  1639   0010EA  B4D8               	btfsc	status,2,c
  1640   0010EC  EF7A  F008         	goto	i2u40_41
  1641   0010F0  EF7C  F008         	goto	i2u40_40
  1642   0010F4                     i2u40_41:
  1643   0010F4  EF84  F008         	goto	i2l1189
  1644   0010F8                     i2u40_40:
  1645   0010F8  5013               	movf	___flmul@bexp^0,w,c
  1646   0010FA  A4D8               	btfss	status,2,c
  1647   0010FC  EF82  F008         	goto	i2u41_41
  1648   001100  EF84  F008         	goto	i2u41_40
  1649   001104                     i2u41_41:
  1650   001104  EF8E  F008         	goto	i2l1193
  1651   001108                     i2u41_40:
  1652   001108                     i2l1189:
  1653   001108  0E00               	movlw	0
  1654   00110A  6E01               	movwf	?___flmul^0,c
  1655   00110C  0E00               	movlw	0
  1656   00110E  6E02               	movwf	(?___flmul+1)^0,c
  1657   001110  0E00               	movlw	0
  1658   001112  6E03               	movwf	(?___flmul+2)^0,c
  1659   001114  0E00               	movlw	0
  1660   001116  6E04               	movwf	(?___flmul+3)^0,c
  1661   001118  EF26  F00A         	goto	i2l772
  1662   00111C                     i2l1193:
  1663   00111C  5007               	movf	(___flmul@a+2)^0,w,c
  1664   00111E  0201               	mulwf	___flmul@b^0,c
  1665   001120  CFF3 F018          	movff	prodl,___flmul@temp
  1666   001124  CFF4 F019          	movff	prodh,___flmul@temp+1
  1667   001128  5018               	movf	___flmul@temp^0,w,c
  1668   00112A  6E0E               	movwf	___flmul@grs^0,c
  1669   00112C  6A0F               	clrf	(___flmul@grs+1)^0,c
  1670   00112E  6A10               	clrf	(___flmul@grs+2)^0,c
  1671   001130  6A11               	clrf	(___flmul@grs+3)^0,c
  1672   001132  5019               	movf	(___flmul@temp+1)^0,w,c
  1673   001134  6E14               	movwf	___flmul@prod^0,c
  1674   001136  6A15               	clrf	(___flmul@prod+1)^0,c
  1675   001138  6A16               	clrf	(___flmul@prod+2)^0,c
  1676   00113A  6A17               	clrf	(___flmul@prod+3)^0,c
  1677   00113C  5006               	movf	(___flmul@a+1)^0,w,c
  1678   00113E  0202               	mulwf	(___flmul@b+1)^0,c
  1679   001140  CFF3 F018          	movff	prodl,___flmul@temp
  1680   001144  CFF4 F019          	movff	prodh,___flmul@temp+1
  1681   001148  5018               	movf	___flmul@temp^0,w,c
  1682   00114A  260E               	addwf	___flmul@grs^0,f,c
  1683   00114C  0E00               	movlw	0
  1684   00114E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1685   001150  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1686   001152  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1687   001154  5019               	movf	(___flmul@temp+1)^0,w,c
  1688   001156  2614               	addwf	___flmul@prod^0,f,c
  1689   001158  0E00               	movlw	0
  1690   00115A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1691   00115C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1692   00115E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1693   001160  5005               	movf	___flmul@a^0,w,c
  1694   001162  0203               	mulwf	(___flmul@b+2)^0,c
  1695   001164  CFF3 F018          	movff	prodl,___flmul@temp
  1696   001168  CFF4 F019          	movff	prodh,___flmul@temp+1
  1697   00116C  5018               	movf	___flmul@temp^0,w,c
  1698   00116E  260E               	addwf	___flmul@grs^0,f,c
  1699   001170  0E00               	movlw	0
  1700   001172  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1701   001174  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1702   001176  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1703   001178  5019               	movf	(___flmul@temp+1)^0,w,c
  1704   00117A  2614               	addwf	___flmul@prod^0,f,c
  1705   00117C  0E00               	movlw	0
  1706   00117E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1707   001180  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1708   001182  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1709   001184  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1710   001188  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1711   00118C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1712   001190  6A0E               	clrf	___flmul@grs^0,c
  1713   001192  5005               	movf	___flmul@a^0,w,c
  1714   001194  0202               	mulwf	(___flmul@b+1)^0,c
  1715   001196  CFF3 F018          	movff	prodl,___flmul@temp
  1716   00119A  CFF4 F019          	movff	prodh,___flmul@temp+1
  1717   00119E  5018               	movf	___flmul@temp^0,w,c
  1718   0011A0  260E               	addwf	___flmul@grs^0,f,c
  1719   0011A2  5019               	movf	(___flmul@temp+1)^0,w,c
  1720   0011A4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1721   0011A6  0E00               	movlw	0
  1722   0011A8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1723   0011AA  0E00               	movlw	0
  1724   0011AC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1725   0011AE  5006               	movf	(___flmul@a+1)^0,w,c
  1726   0011B0  0201               	mulwf	___flmul@b^0,c
  1727   0011B2  CFF3 F018          	movff	prodl,___flmul@temp
  1728   0011B6  CFF4 F019          	movff	prodh,___flmul@temp+1
  1729   0011BA  5018               	movf	___flmul@temp^0,w,c
  1730   0011BC  260E               	addwf	___flmul@grs^0,f,c
  1731   0011BE  5019               	movf	(___flmul@temp+1)^0,w,c
  1732   0011C0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1733   0011C2  0E00               	movlw	0
  1734   0011C4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1735   0011C6  0E00               	movlw	0
  1736   0011C8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1737   0011CA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1738   0011CE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1739   0011D2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1740   0011D6  6A0E               	clrf	___flmul@grs^0,c
  1741   0011D8  5005               	movf	___flmul@a^0,w,c
  1742   0011DA  0201               	mulwf	___flmul@b^0,c
  1743   0011DC  CFF3 F018          	movff	prodl,___flmul@temp
  1744   0011E0  CFF4 F019          	movff	prodh,___flmul@temp+1
  1745   0011E4  5018               	movf	___flmul@temp^0,w,c
  1746   0011E6  260E               	addwf	___flmul@grs^0,f,c
  1747   0011E8  5019               	movf	(___flmul@temp+1)^0,w,c
  1748   0011EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1749   0011EC  0E00               	movlw	0
  1750   0011EE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1751   0011F0  0E00               	movlw	0
  1752   0011F2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1753   0011F4  5007               	movf	(___flmul@a+2)^0,w,c
  1754   0011F6  0202               	mulwf	(___flmul@b+1)^0,c
  1755   0011F8  CFF3 F018          	movff	prodl,___flmul@temp
  1756   0011FC  CFF4 F019          	movff	prodh,___flmul@temp+1
  1757   001200  5018               	movf	___flmul@temp^0,w,c
  1758   001202  2614               	addwf	___flmul@prod^0,f,c
  1759   001204  5019               	movf	(___flmul@temp+1)^0,w,c
  1760   001206  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1761   001208  0E00               	movlw	0
  1762   00120A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1763   00120C  0E00               	movlw	0
  1764   00120E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1765   001210  5006               	movf	(___flmul@a+1)^0,w,c
  1766   001212  0203               	mulwf	(___flmul@b+2)^0,c
  1767   001214  CFF3 F018          	movff	prodl,___flmul@temp
  1768   001218  CFF4 F019          	movff	prodh,___flmul@temp+1
  1769   00121C  5018               	movf	___flmul@temp^0,w,c
  1770   00121E  2614               	addwf	___flmul@prod^0,f,c
  1771   001220  5019               	movf	(___flmul@temp+1)^0,w,c
  1772   001222  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1773   001224  0E00               	movlw	0
  1774   001226  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1775   001228  0E00               	movlw	0
  1776   00122A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1777   00122C  5007               	movf	(___flmul@a+2)^0,w,c
  1778   00122E  0203               	mulwf	(___flmul@b+2)^0,c
  1779   001230  CFF3 F018          	movff	prodl,___flmul@temp
  1780   001234  CFF4 F019          	movff	prodh,___flmul@temp+1
  1781   001238  5018               	movf	___flmul@temp^0,w,c
  1782   00123A  6E09               	movwf	??___flmul^0,c
  1783   00123C  5019               	movf	(___flmul@temp+1)^0,w,c
  1784   00123E  6E0A               	movwf	(??___flmul+1)^0,c
  1785   001240  6A0B               	clrf	(??___flmul+2)^0,c
  1786   001242  6A0C               	clrf	(??___flmul+3)^0,c
  1787   001244  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  1788   001248  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  1789   00124C  C009  F00A         	movff	??___flmul,??___flmul+1
  1790   001250  6A09               	clrf	??___flmul^0,c
  1791   001252  5009               	movf	??___flmul^0,w,c
  1792   001254  2614               	addwf	___flmul@prod^0,f,c
  1793   001256  500A               	movf	(??___flmul+1)^0,w,c
  1794   001258  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1795   00125A  500B               	movf	(??___flmul+2)^0,w,c
  1796   00125C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1797   00125E  500C               	movf	(??___flmul+3)^0,w,c
  1798   001260  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1799   001262  C00E  F009         	movff	___flmul@grs,??___flmul
  1800   001266  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  1801   00126A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  1802   00126E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  1803   001272  0E19               	movlw	25
  1804   001274  EF41  F009         	goto	i2u42_40
  1805   001278                     i2u42_45:
  1806   001278  90D8               	bcf	status,0,c
  1807   00127A  320C               	rrcf	(??___flmul+3)^0,f,c
  1808   00127C  320B               	rrcf	(??___flmul+2)^0,f,c
  1809   00127E  320A               	rrcf	(??___flmul+1)^0,f,c
  1810   001280  3209               	rrcf	??___flmul^0,f,c
  1811   001282                     i2u42_40:
  1812   001282  2EE8               	decfsz	wreg,f,c
  1813   001284  EF3C  F009         	goto	i2u42_45
  1814   001288  5009               	movf	??___flmul^0,w,c
  1815   00128A  2614               	addwf	___flmul@prod^0,f,c
  1816   00128C  500A               	movf	(??___flmul+1)^0,w,c
  1817   00128E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1818   001290  500B               	movf	(??___flmul+2)^0,w,c
  1819   001292  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1820   001294  500C               	movf	(??___flmul+3)^0,w,c
  1821   001296  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1822   001298  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  1823   00129C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  1824   0012A0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  1825   0012A4  6A0E               	clrf	___flmul@grs^0,c
  1826   0012A6  5012               	movf	___flmul@aexp^0,w,c
  1827   0012A8  C013  F009         	movff	___flmul@bexp,??___flmul
  1828   0012AC  6A0A               	clrf	(??___flmul+1)^0,c
  1829   0012AE  2609               	addwf	??___flmul^0,f,c
  1830   0012B0  0E00               	movlw	0
  1831   0012B2  220A               	addwfc	(??___flmul+1)^0,f,c
  1832   0012B4  0E82               	movlw	130
  1833   0012B6  2409               	addwf	??___flmul^0,w,c
  1834   0012B8  6E18               	movwf	___flmul@temp^0,c
  1835   0012BA  0EFF               	movlw	255
  1836   0012BC  200A               	addwfc	(??___flmul+1)^0,w,c
  1837   0012BE  6E19               	movwf	(___flmul@temp+1)^0,c
  1838   0012C0  EF77  F009         	goto	i2l1241
  1839   0012C4                     i2l1235:
  1840   0012C4  90D8               	bcf	status,0,c
  1841   0012C6  3614               	rlcf	___flmul@prod^0,f,c
  1842   0012C8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  1843   0012CA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  1844   0012CC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  1845   0012CE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1846   0012D0  EF6C  F009         	goto	i2u43_41
  1847   0012D4  EF6E  F009         	goto	i2u43_40
  1848   0012D8                     i2u43_41:
  1849   0012D8  EF6F  F009         	goto	i2l775
  1850   0012DC                     i2u43_40:
  1851   0012DC  8014               	bsf	___flmul@prod^0,0,c
  1852   0012DE                     i2l775:
  1853   0012DE  90D8               	bcf	status,0,c
  1854   0012E0  360E               	rlcf	___flmul@grs^0,f,c
  1855   0012E2  360F               	rlcf	(___flmul@grs+1)^0,f,c
  1856   0012E4  3610               	rlcf	(___flmul@grs+2)^0,f,c
  1857   0012E6  3611               	rlcf	(___flmul@grs+3)^0,f,c
  1858   0012E8  0618               	decf	___flmul@temp^0,f,c
  1859   0012EA  A0D8               	btfss	status,0,c
  1860   0012EC  0619               	decf	(___flmul@temp+1)^0,f,c
  1861   0012EE                     i2l1241:
  1862   0012EE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  1863   0012F0  EF7C  F009         	goto	i2u44_41
  1864   0012F4  EF7E  F009         	goto	i2u44_40
  1865   0012F8                     i2u44_41:
  1866   0012F8  EF62  F009         	goto	i2l1235
  1867   0012FC                     i2u44_40:
  1868   0012FC  0E00               	movlw	0
  1869   0012FE  6E12               	movwf	___flmul@aexp^0,c
  1870   001300  AE11               	btfss	(___flmul@grs+3)^0,7,c
  1871   001302  EF85  F009         	goto	i2u45_41
  1872   001306  EF87  F009         	goto	i2u45_40
  1873   00130A                     i2u45_41:
  1874   00130A  EFAB  F009         	goto	i2l777
  1875   00130E                     i2u45_40:
  1876   00130E  0EFF               	movlw	255
  1877   001310  140E               	andwf	___flmul@grs^0,w,c
  1878   001312  6E09               	movwf	??___flmul^0,c
  1879   001314  0EFF               	movlw	255
  1880   001316  140F               	andwf	(___flmul@grs+1)^0,w,c
  1881   001318  6E0A               	movwf	(??___flmul+1)^0,c
  1882   00131A  0EFF               	movlw	255
  1883   00131C  1410               	andwf	(___flmul@grs+2)^0,w,c
  1884   00131E  6E0B               	movwf	(??___flmul+2)^0,c
  1885   001320  0E7F               	movlw	127
  1886   001322  1411               	andwf	(___flmul@grs+3)^0,w,c
  1887   001324  6E0C               	movwf	(??___flmul+3)^0,c
  1888   001326  5009               	movf	??___flmul^0,w,c
  1889   001328  100A               	iorwf	(??___flmul+1)^0,w,c
  1890   00132A  100B               	iorwf	(??___flmul+2)^0,w,c
  1891   00132C  100C               	iorwf	(??___flmul+3)^0,w,c
  1892   00132E  B4D8               	btfsc	status,2,c
  1893   001330  EF9C  F009         	goto	i2u46_41
  1894   001334  EF9E  F009         	goto	i2u46_40
  1895   001338                     i2u46_41:
  1896   001338  EFA2  F009         	goto	i2l778
  1897   00133C                     i2u46_40:
  1898   00133C                     i2l1249:
  1899   00133C  0E01               	movlw	1
  1900   00133E  6E12               	movwf	___flmul@aexp^0,c
  1901   001340  EFAB  F009         	goto	i2l777
  1902   001344                     i2l778:
  1903   001344  A014               	btfss	___flmul@prod^0,0,c
  1904   001346  EFA7  F009         	goto	i2u47_41
  1905   00134A  EFA9  F009         	goto	i2u47_40
  1906   00134E                     i2u47_41:
  1907   00134E  EFAB  F009         	goto	i2l777
  1908   001352                     i2u47_40:
  1909   001352  EF9E  F009         	goto	i2l1249
  1910   001356                     i2l777:
  1911   001356  5012               	movf	___flmul@aexp^0,w,c
  1912   001358  B4D8               	btfsc	status,2,c
  1913   00135A  EFB1  F009         	goto	i2u48_41
  1914   00135E  EFB3  F009         	goto	i2u48_40
  1915   001362                     i2u48_41:
  1916   001362  EFD7  F009         	goto	i2l1261
  1917   001366                     i2u48_40:
  1918   001366  0E01               	movlw	1
  1919   001368  2614               	addwf	___flmul@prod^0,f,c
  1920   00136A  0E00               	movlw	0
  1921   00136C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1922   00136E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1923   001370  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1924   001372  A017               	btfss	(___flmul@prod+3)^0,0,c
  1925   001374  EFBE  F009         	goto	i2u49_41
  1926   001378  EFC0  F009         	goto	i2u49_40
  1927   00137C                     i2u49_41:
  1928   00137C  EFD7  F009         	goto	i2l1261
  1929   001380                     i2u49_40:
  1930   001380  C014  F009         	movff	___flmul@prod,??___flmul
  1931   001384  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  1932   001388  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  1933   00138C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  1934   001390  340C               	rlcf	(??___flmul+3)^0,w,c
  1935   001392  320C               	rrcf	(??___flmul+3)^0,f,c
  1936   001394  320B               	rrcf	(??___flmul+2)^0,f,c
  1937   001396  320A               	rrcf	(??___flmul+1)^0,f,c
  1938   001398  3209               	rrcf	??___flmul^0,f,c
  1939   00139A  C009  F014         	movff	??___flmul,___flmul@prod
  1940   00139E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  1941   0013A2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  1942   0013A6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  1943   0013AA  4A18               	infsnz	___flmul@temp^0,f,c
  1944   0013AC  2A19               	incf	(___flmul@temp+1)^0,f,c
  1945   0013AE                     i2l1261:
  1946   0013AE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1947   0013B0  EFE2  F009         	goto	i2u50_41
  1948   0013B4  5019               	movf	(___flmul@temp+1)^0,w,c
  1949   0013B6  E108               	bnz	i2u50_40
  1950   0013B8  2818               	incf	___flmul@temp^0,w,c
  1951   0013BA  A0D8               	btfss	status,0,c
  1952   0013BC  EFE2  F009         	goto	i2u50_41
  1953   0013C0  EFE4  F009         	goto	i2u50_40
  1954   0013C4                     i2u50_41:
  1955   0013C4  EFEE  F009         	goto	i2l1265
  1956   0013C8                     i2u50_40:
  1957   0013C8  0E00               	movlw	0
  1958   0013CA  6E14               	movwf	___flmul@prod^0,c
  1959   0013CC  0E00               	movlw	0
  1960   0013CE  6E15               	movwf	(___flmul@prod+1)^0,c
  1961   0013D0  0E80               	movlw	128
  1962   0013D2  6E16               	movwf	(___flmul@prod+2)^0,c
  1963   0013D4  0E7F               	movlw	127
  1964   0013D6  6E17               	movwf	(___flmul@prod+3)^0,c
  1965   0013D8  EF1C  F00A         	goto	i2l1277
  1966   0013DC                     i2l1265:
  1967   0013DC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  1968   0013DE  EFFB  F009         	goto	i2u51_40
  1969   0013E2  5019               	movf	(___flmul@temp+1)^0,w,c
  1970   0013E4  E106               	bnz	i2u51_41
  1971   0013E6  0418               	decf	___flmul@temp^0,w,c
  1972   0013E8  B0D8               	btfsc	status,0,c
  1973   0013EA  EFF9  F009         	goto	i2u51_41
  1974   0013EE  EFFB  F009         	goto	i2u51_40
  1975   0013F2                     i2u51_41:
  1976   0013F2  EF07  F00A         	goto	i2l785
  1977   0013F6                     i2u51_40:
  1978   0013F6  0E00               	movlw	0
  1979   0013F8  6E14               	movwf	___flmul@prod^0,c
  1980   0013FA  0E00               	movlw	0
  1981   0013FC  6E15               	movwf	(___flmul@prod+1)^0,c
  1982   0013FE  0E00               	movlw	0
  1983   001400  6E16               	movwf	(___flmul@prod+2)^0,c
  1984   001402  0E00               	movlw	0
  1985   001404  6E17               	movwf	(___flmul@prod+3)^0,c
  1986   001406  0E00               	movlw	0
  1987   001408  6E0D               	movwf	___flmul@sign^0,c
  1988   00140A  EF1C  F00A         	goto	i2l1277
  1989   00140E                     i2l785:
  1990   00140E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  1991   001412  0EFF               	movlw	255
  1992   001414  1614               	andwf	___flmul@prod^0,f,c
  1993   001416  0EFF               	movlw	255
  1994   001418  1615               	andwf	(___flmul@prod+1)^0,f,c
  1995   00141A  0E7F               	movlw	127
  1996   00141C  1616               	andwf	(___flmul@prod+2)^0,f,c
  1997   00141E  0E00               	movlw	0
  1998   001420  1617               	andwf	(___flmul@prod+3)^0,f,c
  1999   001422  A013               	btfss	___flmul@bexp^0,0,c
  2000   001424  EF16  F00A         	goto	i2u52_41
  2001   001428  EF18  F00A         	goto	i2u52_40
  2002   00142C                     i2u52_41:
  2003   00142C  EF19  F00A         	goto	i2l1275
  2004   001430                     i2u52_40:
  2005   001430  8E16               	bsf	(___flmul@prod+2)^0,7,c
  2006   001432                     i2l1275:
  2007   001432  90D8               	bcf	status,0,c
  2008   001434  3013               	rrcf	___flmul@bexp^0,w,c
  2009   001436  6E17               	movwf	(___flmul@prod+3)^0,c
  2010   001438                     i2l1277:
  2011   001438  500D               	movf	___flmul@sign^0,w,c
  2012   00143A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  2013   00143C  C014  F001         	movff	___flmul@prod,?___flmul
  2014   001440  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  2015   001444  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  2016   001448  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  2017   00144C                     i2l772:
  2018   00144C  0012               	return		;funcret
  2019   00144E                     __end_of___flmul:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _Manage_Motor_Direction *****************
  2023 ;; Defined at:
  2024 ;;		line 192 in file "main.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  in1             1    wreg     unsigned char 
  2027 ;;  in2             1    0[COMRAM] unsigned char 
  2028 ;;  in3             1    1[COMRAM] unsigned char 
  2029 ;;  in4             1    2[COMRAM] unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  in1             1    3[COMRAM] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2041 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;Total ram usage:        4 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_Receive_Interrupt
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text12
  2055   00189A                     __ptext12:
  2056                           	callstack 0
  2057   00189A                     _Manage_Motor_Direction:
  2058                           	callstack 24
  2059                           
  2060                           ;incstack = 0
  2061                           ;Manage_Motor_Direction@in1 stored from wreg
  2062   00189A  6E04               	movwf	Manage_Motor_Direction@in1^0,c
  2063   00189C                     
  2064                           ;main.c: 194:     LATDbits.LD4 = in1;
  2065   00189C  B004               	btfsc	Manage_Motor_Direction@in1^0,0,c
  2066   00189E  D002               	bra	i2u60_45
  2067   0018A0  988C               	bcf	140,4,c	;volatile
  2068   0018A2  D001               	bra	i2u60_46
  2069   0018A4                     i2u60_45:
  2070   0018A4  888C               	bsf	140,4,c	;volatile
  2071   0018A6                     i2u60_46:
  2072   0018A6                     
  2073                           ;main.c: 195:     LATDbits.LD5 = in2;
  2074   0018A6  B001               	btfsc	Manage_Motor_Direction@in2^0,0,c
  2075   0018A8  D002               	bra	i2u61_45
  2076   0018AA  9A8C               	bcf	140,5,c	;volatile
  2077   0018AC  D001               	bra	i2u61_46
  2078   0018AE                     i2u61_45:
  2079   0018AE  8A8C               	bsf	140,5,c	;volatile
  2080   0018B0                     i2u61_46:
  2081   0018B0                     
  2082                           ;main.c: 196:     LATDbits.LD6 = in3;
  2083   0018B0  B002               	btfsc	Manage_Motor_Direction@in3^0,0,c
  2084   0018B2  D002               	bra	i2u62_45
  2085   0018B4  9C8C               	bcf	140,6,c	;volatile
  2086   0018B6  D001               	bra	i2u62_46
  2087   0018B8                     i2u62_45:
  2088   0018B8  8C8C               	bsf	140,6,c	;volatile
  2089   0018BA                     i2u62_46:
  2090   0018BA                     
  2091                           ;main.c: 197:     LATDbits.LD7 = in4;
  2092   0018BA  B003               	btfsc	Manage_Motor_Direction@in4^0,0,c
  2093   0018BC  D002               	bra	i2u63_45
  2094   0018BE  9E8C               	bcf	140,7,c	;volatile
  2095   0018C0  D001               	bra	i2u63_46
  2096   0018C2                     i2u63_45:
  2097   0018C2  8E8C               	bsf	140,7,c	;volatile
  2098   0018C4                     i2u63_46:
  2099   0018C4  0012               	return		;funcret
  2100   0018C6                     __end_of_Manage_Motor_Direction:
  2101                           	callstack 0
  2102                           
  2103                           	psect	rparam
  2104   000000                     
  2105                           	psect	temp
  2106   000038                     btemp:
  2107                           	callstack 0
  2108   000038                     	ds	1
  2109   000000                     int$flags	set	btemp
  2110   000000                     wtemp8	set	btemp+1
  2111   000000                     ttemp5	set	btemp+1
  2112   000000                     ttemp6	set	btemp+4
  2113   000000                     ttemp7	set	btemp+8
  2114                           
  2115                           	psect	config
  2116                           
  2117                           ; Padding undefined space
  2118   300000                     	org	3145728
  2119   300000  FF                 	db	255
  2120                           
  2121                           ;Config register CONFIG1H @ 0x300001
  2122                           ;	Oscillator Selection bits
  2123                           ;	FOSC = INTIO67, Internal oscillator block
  2124                           ;	4X PLL Enable
  2125                           ;	PLLCFG = OFF, Oscillator used directly
  2126                           ;	Primary clock enable bit
  2127                           ;	PRICLKEN = ON, Primary clock is always enabled
  2128                           ;	Fail-Safe Clock Monitor Enable bit
  2129                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2130                           ;	Internal/External Oscillator Switchover bit
  2131                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2132   300001                     	org	3145729
  2133   300001  28                 	db	40
  2134                           
  2135                           ;Config register CONFIG2L @ 0x300002
  2136                           ;	Power-up Timer Enable bit
  2137                           ;	PWRTEN = OFF, Power up timer disabled
  2138                           ;	Brown-out Reset Enable bits
  2139                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2140                           ;	Brown Out Reset Voltage bits
  2141                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2142   300002                     	org	3145730
  2143   300002  1F                 	db	31
  2144                           
  2145                           ;Config register CONFIG2H @ 0x300003
  2146                           ;	Watchdog Timer Enable bits
  2147                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2148                           ;	Watchdog Timer Postscale Select bits
  2149                           ;	WDTPS = 32768, 1:32768
  2150   300003                     	org	3145731
  2151   300003  3C                 	db	60
  2152                           
  2153                           ; Padding undefined space
  2154   300004                     	org	3145732
  2155   300004  FF                 	db	255
  2156                           
  2157                           ;Config register CONFIG3H @ 0x300005
  2158                           ;	CCP2 MUX bit
  2159                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2160                           ;	PORTB A/D Enable bit
  2161                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2162                           ;	P3A/CCP3 Mux bit
  2163                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2164                           ;	HFINTOSC Fast Start-up
  2165                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2166                           ;	Timer3 Clock input mux bit
  2167                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2168                           ;	ECCP2 B output mux bit
  2169                           ;	P2BMX = PORTD2, P2B is on RD2
  2170                           ;	MCLR Pin Enable bit
  2171                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2172   300005                     	org	3145733
  2173   300005  BB                 	db	187
  2174                           
  2175                           ;Config register CONFIG4L @ 0x300006
  2176                           ;	Stack Full/Underflow Reset Enable bit
  2177                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2178                           ;	Single-Supply ICSP Enable bit
  2179                           ;	LVP = OFF, Single-Supply ICSP disabled
  2180                           ;	Extended Instruction Set Enable bit
  2181                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2182                           ;	Background Debug
  2183                           ;	DEBUG = 0x1, unprogrammed default
  2184   300006                     	org	3145734
  2185   300006  81                 	db	129
  2186                           
  2187                           ; Padding undefined space
  2188   300007                     	org	3145735
  2189   300007  FF                 	db	255
  2190                           
  2191                           ;Config register CONFIG5L @ 0x300008
  2192                           ;	Code Protection Block 0
  2193                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2194                           ;	Code Protection Block 1
  2195                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2196                           ;	Code Protection Block 2
  2197                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2198                           ;	Code Protection Block 3
  2199                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2200   300008                     	org	3145736
  2201   300008  0F                 	db	15
  2202                           
  2203                           ;Config register CONFIG5H @ 0x300009
  2204                           ;	Boot Block Code Protection bit
  2205                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2206                           ;	Data EEPROM Code Protection bit
  2207                           ;	CPD = OFF, Data EEPROM not code-protected
  2208   300009                     	org	3145737
  2209   300009  C0                 	db	192
  2210                           
  2211                           ;Config register CONFIG6L @ 0x30000A
  2212                           ;	Write Protection Block 0
  2213                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2214                           ;	Write Protection Block 1
  2215                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2216                           ;	Write Protection Block 2
  2217                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2218                           ;	Write Protection Block 3
  2219                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2220   30000A                     	org	3145738
  2221   30000A  0F                 	db	15
  2222                           
  2223                           ;Config register CONFIG6H @ 0x30000B
  2224                           ;	Configuration Register Write Protection bit
  2225                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2226                           ;	Boot Block Write Protection bit
  2227                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2228                           ;	Data EEPROM Write Protection bit
  2229                           ;	WRTD = OFF, Data EEPROM not write-protected
  2230   30000B                     	org	3145739
  2231   30000B  E0                 	db	224
  2232                           
  2233                           ;Config register CONFIG7L @ 0x30000C
  2234                           ;	Table Read Protection Block 0
  2235                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2236                           ;	Table Read Protection Block 1
  2237                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2238                           ;	Table Read Protection Block 2
  2239                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2240                           ;	Table Read Protection Block 3
  2241                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2242   30000C                     	org	3145740
  2243   30000C  0F                 	db	15
  2244                           
  2245                           ;Config register CONFIG7H @ 0x30000D
  2246                           ;	Boot Block Table Read Protection bit
  2247                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2248   30000D                     	org	3145741
  2249   30000D  40                 	db	64
  2250                           tosu	equ	0xFFF
  2251                           tosh	equ	0xFFE
  2252                           tosl	equ	0xFFD
  2253                           stkptr	equ	0xFFC
  2254                           pclatu	equ	0xFFB
  2255                           pclath	equ	0xFFA
  2256                           pcl	equ	0xFF9
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodh	equ	0xFF4
  2262                           prodl	equ	0xFF3
  2263                           indf0	equ	0xFEF
  2264                           postinc0	equ	0xFEE
  2265                           postdec0	equ	0xFED
  2266                           preinc0	equ	0xFEC
  2267                           plusw0	equ	0xFEB
  2268                           fsr0h	equ	0xFEA
  2269                           fsr0l	equ	0xFE9
  2270                           wreg	equ	0xFE8
  2271                           indf1	equ	0xFE7
  2272                           postinc1	equ	0xFE6
  2273                           postdec1	equ	0xFE5
  2274                           preinc1	equ	0xFE4
  2275                           plusw1	equ	0xFE3
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           bsr	equ	0xFE0
  2279                           indf2	equ	0xFDF
  2280                           postinc2	equ	0xFDE
  2281                           postdec2	equ	0xFDD
  2282                           preinc2	equ	0xFDC
  2283                           plusw2	equ	0xFDB
  2284                           fsr2h	equ	0xFDA
  2285                           fsr2l	equ	0xFD9
  2286                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Platform_Mode@Data	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 


Critical Paths under _main in COMRAM

    _main->_Init_LCD
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Interrupt in COMRAM

    None.

Critical Paths under _Interrupt_Rx in COMRAM

    _Interrupt_Rx->_Receive_Interrupt
    _Receive_Interrupt->_Send_PWM_Motors
    _Send_PWM_Motors->___flmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _Interrupt_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _Interrupt_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _Interrupt_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _Interrupt_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _Interrupt_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _Interrupt_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _Interrupt_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Critical Paths under _Interrupt_Rx in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt in BANK8

    None.

Critical Paths under _Interrupt_Rx in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt in BANK9

    None.

Critical Paths under _Interrupt_Rx in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt in BANK10

    None.

Critical Paths under _Interrupt_Rx in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt in BANK11

    None.

Critical Paths under _Interrupt_Rx in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt in BANK12

    None.

Critical Paths under _Interrupt_Rx in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt in BANK13

    None.

Critical Paths under _Interrupt_Rx in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt in BANK14

    None.

Critical Paths under _Interrupt_Rx in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt in BANK15

    None.

Critical Paths under _Interrupt_Rx in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1015
                                             44 COMRAM     2     2      0
                     _Configurations
                           _Init_LCD
                      _Platform_Mode
 ---------------------------------------------------------------------------------
 (1) _Platform_Mode                                        2     0      2      98
                                             38 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     917
                                             42 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1     917
                                             40 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             38 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt                                            1     1      0       0
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Rx                                         2     2      0    3701
                                             35 COMRAM     2     2      0
                  _Receive_Interrupt
 ---------------------------------------------------------------------------------
 (6) _Receive_Interrupt                                    2     2      0    3701
                                             33 COMRAM     2     2      0
             _Manage_Motor_Direction
                    _Send_PWM_Motors
 ---------------------------------------------------------------------------------
 (7) _Send_PWM_Motors                                      8     0      8    2929
                                             25 COMRAM     8     0      8
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    1896
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Motor_Direction                               4     1      3     772
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Platform_Mode

 _Interrupt (ROOT)

 _Interrupt_Rx (ROOT)
   _Receive_Interrupt
     _Manage_Motor_Direction
     _Send_PWM_Motors
       ___flmul
       ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      37       1       58.5%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlhllh      2C      0       0      46        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRlhllll     17      0       0      48        0.0%
BITBIGSFRhllhhh     14      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhllll       C      0       0      43        0.0%
BITBIGSFRhllhl       8      0       0      41        0.0%
BITBIGSFRlhlllh      7      0       0      47        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhh         6      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRll          2      0       0      49        0.0%
BITBIGSFRhllhhl      1      0       0      40        0.0%
BITBIGSFRhlllh       1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      50        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Mar 06 11:19:28 2024

                              bsr 0FE0                               l100 185C                               l123 18EC  
                             l142 1950                               l145 1898                               l139 17F4  
                             l831 1872                               l833 1876                               l835 1886  
                             l827 1860                               l837 1888                               l829 1862  
                             _PR2 0FBB                               u707 17E6                               u717 1868  
                             u645 1940                               u646 1942                               u727 187C  
                             u737 188E                               u677 175E                               u687 177C  
                             u697 1796                               wreg 0FE8                        _TXSTA1bits 0FAC  
                    ___flmul@aexp 0012                      ___flmul@bexp 0013                      ___flmul@sign 000D  
                    ___flmul@temp 0018                      ___flmul@prod 0014                      ___fltol@exp1 000A  
                            l1041 180A                              l1051 1824                              l1043 1814  
                            l1061 1832                              l1053 1826                              l1045 1816  
                            l1037 17F6                              l1071 183C                              l1063 1834  
                            l1055 1828                              l1047 1820                              l1039 1808  
                            l1073 183E                              l1065 1836                              l1057 182E  
                            l1049 1822                              l1401 1914                              l1075 1840  
                            l1067 1838                              l1059 1830                              l1403 1918  
                            l1077 185A                              l1069 183A                              l1405 191C  
                            l1351 1754                              l1345 1938                              l1361 17AA  
                            l1353 176C                              l1347 1942                              l1371 17DC  
                            l1363 17B4                              l1355 1776                              l1349 194A  
                            l1365 17BE                              l1357 1790                              l1373 18C6  
                            l1367 17C8                              l1359 17A0                              l1369 17D2  
                            l1377 18C6                              STR_1 1012                              STR_2 1001  
                            _LATD 0F8C                              _LATE 0F8D                              i1l97 001E  
                            i2l92 1908                              _main 1914                              fsr2h 0FDA  
                            indf2 0FDF                              fsr2l 0FD9                              btemp 0038  
                            prodh 0FF4                              prodl 0FF3                              start 0026  
                    ___param_bank 0000                   _LCD_Instruction 185E  Send_Instruction_Data@Instruction 002A  
                    _BAUDCON1bits 0FB8                     ___fltol@sign1 0009                             ?_main 0001  
                 __end_of___flmul 144E                   __end_of___fltol 165A                             _T2CON 0FBA  
                           i2l111 1552                             i2l114 18C4                             i2l108 1752  
                           i2l451 1658                             i2l772 144C                             i2l775 12DE  
                           i2l768 10E8                             i2l785 140E                             i2l777 1356  
                           i2l778 1344                             _SPBRG 0FAF                             _TRISD 0F95  
                           _TRISE 0F96                             ttemp5 0039                             ttemp6 003C  
                           ttemp7 0040                             status 0FD8                             wtemp8 0039  
                 __initialization 1952                      __end_of_main 1936                  __end_of_Init_LCD 17F6  
           _Send_Instruction_Data 1936          ??_Manage_Motor_Direction 0004                            ??_main 002D  
                   __activetblptr 0002                            _CCPR3L 0F5E                            _CCPR5L 0F55  
                          _ANSELC 0F3A                            _ANSELD 0F3B                            _ANSELE 0F3C  
                          i2l1201 1154                            i2l1211 119E                            i2l1203 116C  
                          i2l1221 11F4                            i2l1213 11AE                            i2l1205 1178  
                          i2l1231 1298                            i2l1223 1210                            i2l1215 11BA  
                          i2l1207 1184                            i2l1241 12EE                            i2l1233 12A6  
                          i2l1225 121C                            i2l1217 11CA                            i2l1209 1192  
                          i2l1161 1050                            i2l1153 1024                            i2l1321 1638  
                          i2l1305 15E4                            i2l1243 12FC                            i2l1235 12C4  
                          i2l1227 1238                            i2l1219 11E4                            i2l1171 108C  
                          i2l1163 1060                            i2l1155 1030                            i2l1323 1648  
                          i2l1315 160C                            i2l1307 15EE                            i2l1331 14A8  
                          i2l1341 18B0                            i2l1253 1366                            i2l1261 13AE  
                          i2l1245 1300                            i2l1237 12CE                            i2l1229 1262  
                          i2l1181 10C2                            i2l1173 1092                            i2l1165 1070  
                          i2l1157 103E                            i2l1317 1618                            i2l1309 15F8  
                          i2l1333 1504                            i2l1343 18BA                            i2l1271 1422  
                          i2l1263 13C8                            i2l1255 1372                            i2l1247 130E  
                          i2l1239 12DC                            i2l1183 10D2                            i2l1175 10A0  
                          i2l1167 1076                            i2l1159 1040                            i2l1319 1628  
                          i2l1335 152A                            i2l1327 144E                            i2l1407 18F6  
                          i2l1337 189C                            i2l1273 1430                            i2l1265 13DC  
                          i2l1257 1380                            i2l1249 133C                            i2l1193 111C  
                          i2l1185 10D8                            i2l1177 10A2                            i2l1169 1086  
                          i2l1329 1482                            i2l1409 1904                            i2l1339 18A6  
                          i2l1275 1432                            i2l1267 13F6                            i2l1259 13AA  
                          i2l1195 1128                            i2l1187 10F8                            i2l1179 10B2  
                          i2l1291 15A8                            i2l1283 1554                            i2l1269 1412  
                          i2l1277 1438                            i2l1197 1132                            i2l1189 1108  
                          i2l1293 15AA                            i2l1285 156A                            i2l1381 1662  
                          i2l1279 143C                            i2l1199 1148                            i2l1295 15BA  
                          i2l1391 16EA                            i2l1383 1686                            i2l1297 15BE  
                          i2l1289 157E                            i2l1393 1702                            i2l1385 1698  
                          i2l1299 15CC                            i2l1395 1726                            i2l1387 16B4  
                          i2l1379 165A                            i2l1389 16D8                            i2l1399 173C  
                          _RCREG1 0FAE        LCD_Instruction@Instruction 0028                            _OSCCON 0FD3  
                   ?_Interrupt_Rx 0001           __end_of_LCD_Instruction 189A                         ??___flmul 0009  
                       ??___fltol 0005                            clear_0 1958                            isa$std 0001  
               ??_Send_PWM_Motors 0022                      __mediumconst 0000                            tblptru 0FF8  
                      __accesstop 0060           __end_of__initialization 195E                    ??_Interrupt_Rx 0024  
                   ___rparam_used 0001                        ___fltol@f1 0001                    __pcstackCOMRAM 0001  
               _Receive_Interrupt 165A            ?_Send_Instruction_Data 0029                ?_Receive_Interrupt 0001  
             ??_Receive_Interrupt 0022                       _Duty_Cycle1 0033                       _Duty_Cycle2 002F  
               __end_of_Interrupt 0026                         ?_Init_LCD 0001                  ?_LCD_Instruction 0001  
       __end_of_Receive_Interrupt 1754                           _CCP3CON 0F5D                           _CCP5CON 0F54  
                         i2u40_40 10F8                           i2u40_41 10F4                           i2u41_40 1108  
                         i2u41_41 1104                           i2u50_40 13C8                           i2u42_40 1282  
                         i2u34_40 103E                           i2u50_41 13C4                           i2u34_41 103A  
                         i2u42_45 1278                           i2u51_40 13F6                           i2u43_40 12DC  
                         i2u35_40 1050                           i2u51_41 13F2                           i2u43_41 12D8  
                         i2u35_41 104C                           i2u52_40 1430                           i2u44_40 12FC  
                         i2u36_40 1060                           i2u52_41 142C                           i2u44_41 12F8  
                         i2u36_41 105C                           i2u60_45 18A4                           i2u60_46 18A6  
                         i2u45_40 130E                           i2u37_40 10A0                           i2u53_40 156A  
                         i2u45_41 130A                           i2u37_41 109C                           i2u53_41 1566  
                         i2u61_45 18AE                           i2u61_46 18B0                           i2u46_40 133C  
                         i2u38_40 10B2                           i2u54_40 159E                           i2u46_41 1338  
                         i2u38_41 10AE                           i2u62_45 18B8                           i2u54_45 1594  
                         i2u62_46 18BA                           i2u47_40 1352                           i2u39_40 10C2  
                         i2u55_40 15CC                           i2u47_41 134E                           i2u39_41 10BE  
                         i2u55_41 15C8                           i2u63_45 18C2                           i2u63_46 18C4  
                         i2u48_40 1366                           i2u56_40 15E0                           i2u48_41 1362  
                         i2u56_41 15DC                           i2u49_40 1380                           i2u57_40 1608  
                         i2u65_40 1904                           i2u49_41 137C                           i2u57_41 1604  
                         i2u65_41 1900                           i2u58_40 1628                           i2u58_41 1624  
                         i2u74_47 16A2                           i2u59_40 1638                           i2u59_41 1634  
                         i2u75_47 16F4                        ??_Init_LCD 002B            _Manage_Motor_Direction 189A  
                         __Hparam 0000                           __Lparam 0000                           ___flmul 1024  
                         ___fltol 1554                      __psmallconst 1000                           __pcinit 1952  
                         __ramtop 1000                           __ptext0 1914                           __ptext1 18C6  
                         __ptext2 1754                           __ptext3 1936                           __ptext4 185E  
                         __ptext5 17F6                           __ptext8 165A                           __ptext9 144E  
            __end_of_Interrupt_Rx 1914                         _T2CONbits 0FBA                    __pintcode_body 18EE  
            end_of_initialization 195E                     __Lmediumconst 0000                           int_func 18EE  
                   _Platform_Mode 18C6                   _Send_PWM_Motors 144E                         _RCSTAbits 0FAB  
                         postinc0 0FEE                         _TRISCbits 0F94                       ___flmul@grs 000E  
                  ?_Platform_Mode 0027           ??_Send_Instruction_Data 002A               start_initialization 1952  
       Send_Instruction_Data@Data 0029                    _Configurations 17F6                         _Interrupt 0018  
         __end_of_Send_PWM_Motors 1554                         _Rx_Buffer 0037                         ___flmul@a 0005  
                       ___flmul@b 0001                       __pbssCOMRAM 002F            __end_of_Configurations 185E  
         ?_Manage_Motor_Direction 0001                   ??_Platform_Mode 0029                        ?_Interrupt 0001  
                    _Interrupt_Rx 0008                         __pintcode 0008                          ?___flmul 0001  
                        ?___fltol 0001                       __pintcodelo 0018                       __smallconst 1000  
                 ?_Configurations 0001    __end_of_Manage_Motor_Direction 18C6                  ?_Send_PWM_Motors 001A  
                        _LATCbits 0F8B                          _LATDbits 0F8C                          _PIE1bits 0F9D  
                        _PIR1bits 0F9E                          _RCONbits 0FD0                       ??_Interrupt 0026  
                        _Init_LCD 1754                          __Hrparam 0000                          __Lrparam 0000  
   __end_of_Send_Instruction_Data 1952                 ??_LCD_Instruction 0027         Send_PWM_Motors@PWM_LMotor 001E  
                        __ptext10 1554                          __ptext11 1024                          __ptext12 189A  
       Send_PWM_Motors@PWM_RMotor 001A                          isa$xinst 0000                          int$flags 0038  
                      _INTCONbits 0FF2                 Platform_Mode@Data 0027                          intlevel1 0000  
                        intlevel2 0000                  ??_Configurations 0027             __end_of_Platform_Mode 18EE  
       Manage_Motor_Direction@in1 0004         Manage_Motor_Direction@in2 0001         Manage_Motor_Direction@in3 0002  
       Manage_Motor_Direction@in4 0003  
