

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 09 19:12:17 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 06/04/2022 GMT
    79                           ; 
    80                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F45K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK1
   114   004E88                     __pidataBANK1:
   115                           	callstack 0
   116                           
   117                           ;initializer for _text2
   118   004E88  4D                 	db	77
   119   004E89  44                 	db	68
   120   004E8A  3A                 	db	58
   121   004E8B  00                 	db	0
   122   004E8C  00                 	db	0
   123   004E8D  00                 	db	0
   124   004E8E  00                 	db	0
   125   004E8F  00                 	db	0
   126   004E90  00                 	db	0
   127   004E91  00                 	db	0
   128                           
   129                           ;initializer for _text
   130   004E92  4D                 	db	77
   131   004E93  49                 	db	73
   132   004E94  3A                 	db	58
   133   004E95  00                 	db	0
   134   004E96  00                 	db	0
   135   004E97  00                 	db	0
   136   004E98  00                 	db	0
   137   004E99  00                 	db	0
   138   004E9A  00                 	db	0
   139   004E9B  00                 	db	0
   140   000000                     _TMR1	set	4046
   141   000000                     _CCPR1	set	4030
   142   000000                     _ADRESL	set	4035
   143   000000                     _ADRESH	set	4036
   144   000000                     _T1CON	set	4045
   145   000000                     _CCP1CON	set	4029
   146   000000                     _RCONbits	set	4048
   147   000000                     _TMR2	set	4028
   148   000000                     _TMR5ON	set	31344
   149   000000                     _LATDbits	set	3980
   150   000000                     _ADCON0bits	set	4034
   151   000000                     _LATB	set	3978
   152   000000                     _LATA	set	3977
   153   000000                     _LATA7	set	31823
   154   000000                     _LATA6	set	31822
   155   000000                     _LATA5	set	31821
   156   000000                     _LATA4	set	31820
   157   000000                     _TMR3ON	set	32136
   158   000000                     _GO	set	32273
   159   000000                     _LATB1	set	31825
   160   000000                     _LATB0	set	31824
   161   000000                     _TMR2ON	set	32210
   162   000000                     _TMR1ON	set	32360
   163   000000                     _CCP1IF	set	31986
   164   000000                     _CCP1IE	set	31978
   165   000000                     _RBIF	set	32656
   166   000000                     _RBIE	set	32659
   167   000000                     _PEIE	set	32662
   168   000000                     _T5CON	set	3918
   169   000000                     _CCP5CON	set	3924
   170   000000                     _CCP3CON	set	3933
   171   000000                     _CCPR3L	set	3934
   172   000000                     _CCPR2L	set	3943
   173   000000                     _ANSELE	set	3900
   174   000000                     _ANSELD	set	3899
   175   000000                     _ANSELC	set	3898
   176   000000                     _ANSELB	set	3897
   177   000000                     _ANSELA	set	3896
   178   000000                     _LATAbits	set	3977
   179   000000                     _LATD	set	3980
   180   000000                     _TRISA	set	3986
   181   000000                     _OSCCON	set	4051
   182   000000                     _LATBbits	set	3978
   183   000000                     _RBIP	set	32648
   184   000000                     _GIE	set	32663
   185   000000                     _RCSTA1	set	4011
   186   000000                     _SPBRG1	set	4015
   187   000000                     _T2CON	set	4026
   188   000000                     _PR2	set	4027
   189   000000                     _ADCON2	set	4032
   190   000000                     _ADCON1	set	4033
   191   000000                     _ADCON0	set	4034
   192   000000                     _TRISE	set	3990
   193   000000                     _TRISD	set	3989
   194   000000                     _TRISCbits	set	3988
   195   000000                     _TRISB	set	3987
   196   000000                     _RC1IE	set	31981
   197   000000                     _LATE	set	3981
   198   000000                     _CCP5IE	set	31698
   199   000000                     _IOCB	set	3938
   200   000000                     _CCP2CON	set	3942
   201   000000                     _T3CON	set	4017
   202   000000                     _RCREG1	set	4014
   203   000000                     _TXSTA1	set	4012
   204   000000                     _TMR3IP	set	32017
   205   000000                     _TMR3IF	set	32009
   206   000000                     _TMR3IE	set	32001
   207   000000                     _RC1IP	set	31997
   208   000000                     _RC1IF	set	31989
   209   000000                     _PORTB	set	3969
   210   000000                     _CCP5IF	set	31706
   211   000000                     _CCPR5	set	3925
   212   000000                     _TMR5	set	3919
   213   000000                     _TMR3	set	4018
   214                           
   215                           	psect	smallconst
   216   000600                     __psmallconst:
   217                           	callstack 0
   218   000600  00                 	db	0
   219   000601                     STR_1:
   220   000601  25                 	db	37
   221   000602  2E                 	db	46
   222   000603  32                 	db	50	;'2'
   223   000604  66                 	db	102	;'f'
   224   000605  25                 	db	37
   225   000606  25                 	db	37
   226   000607  20                 	db	32
   227   000608  25                 	db	37
   228   000609  64                 	db	100	;'d'
   229   00060A  20                 	db	32
   230   00060B  52                 	db	82	;'R'
   231   00060C  50                 	db	80	;'P'
   232   00060D  4D                 	db	77	;'M'
   233   00060E  00                 	db	0
   234   00060F                     STR_3:
   235   00060F  69                 	db	105	;'i'
   236   000610  6E                 	db	110	;'n'
   237   000611  66                 	db	102	;'f'
   238   000612  00                 	db	0
   239   000613                     STR_6:
   240   000613  6E                 	db	110	;'n'
   241   000614  61                 	db	97	;'a'
   242   000615  6E                 	db	110	;'n'
   243   000616  00                 	db	0
   244   000617  00                 	db	0	; dummy byte at the end
   245   000000                     
   246                           ; #config settings
   247                           
   248                           	psect	cinit
   249   004ADA                     __pcinit:
   250                           	callstack 0
   251   004ADA                     start_initialization:
   252                           	callstack 0
   253   004ADA                     __initialization:
   254                           	callstack 0
   255                           
   256                           ; Initialize objects allocated to BANK1 (20 bytes)
   257                           ; load TBLPTR registers with __pidataBANK1
   258   004ADA  0E88               	movlw	low __pidataBANK1
   259   004ADC  6EF6               	movwf	tblptrl,c
   260   004ADE  0E4E               	movlw	high __pidataBANK1
   261   004AE0  6EF7               	movwf	tblptrh,c
   262   004AE2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   263   004AE4  6EF8               	movwf	tblptru,c
   264   004AE6  EE01  F0E5         	lfsr	0,__pdataBANK1
   265   004AEA  EE10 F014          	lfsr	1,20
   266   004AEE                     copy_data0:
   267   004AEE  0009               	tblrd		*+
   268   004AF0  CFF5 FFEE          	movff	tablat,postinc0
   269   004AF4  50E5               	movf	postdec1,w,c
   270   004AF6  50E1               	movf	fsr1l,w,c
   271   004AF8  E1FA               	bnz	copy_data0
   272                           
   273                           ; Clear objects allocated to BANK2 (40 bytes)
   274   004AFA  EE02  F000         	lfsr	0,__pbssBANK2
   275   004AFE  0E28               	movlw	40
   276   004B00                     clear_0:
   277   004B00  6AEE               	clrf	postinc0,c
   278   004B02  06E8               	decf	wreg,f,c
   279   004B04  E1FD               	bnz	clear_0
   280                           
   281                           ; Clear objects allocated to BANK1 (193 bytes)
   282   004B06  EE01  F000         	lfsr	0,__pbssBANK1
   283   004B0A  0EC1               	movlw	193
   284   004B0C                     clear_1:
   285   004B0C  6AEE               	clrf	postinc0,c
   286   004B0E  06E8               	decf	wreg,f,c
   287   004B10  E1FD               	bnz	clear_1
   288                           
   289                           ; Clear objects allocated to COMRAM (43 bytes)
   290   004B12  EE00  F001         	lfsr	0,__pbssCOMRAM
   291   004B16  0E2B               	movlw	43
   292   004B18                     clear_2:
   293   004B18  6AEE               	clrf	postinc0,c
   294   004B1A  06E8               	decf	wreg,f,c
   295   004B1C  E1FD               	bnz	clear_2
   296   004B1E                     end_of_initialization:
   297                           	callstack 0
   298   004B1E                     __end_of__initialization:
   299                           	callstack 0
   300   004B1E  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   301   004B20  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   302   004B22  0E00               	movlw	low (__Lmediumconst shr (0+16))
   303   004B24  6EF8               	movwf	tblptru,c
   304   004B26  0100               	movlb	0
   305   004B28  EF5F  F024         	goto	_main	;jump to C main() function
   306                           
   307                           	psect	bssCOMRAM
   308   000001                     __pbssCOMRAM:
   309                           	callstack 0
   310   000001                     floorf@F526:
   311                           	callstack 0
   312   000001                     	ds	4
   313   000005                     ___fpclassifyf@F465:
   314                           	callstack 0
   315   000005                     	ds	4
   316   000009                     _distance1:
   317                           	callstack 0
   318   000009                     	ds	4
   319   00000D                     _voltage:
   320                           	callstack 0
   321   00000D                     	ds	4
   322   000011                     _DutyCycle2:
   323                           	callstack 0
   324   000011                     	ds	4
   325   000015                     _DutyCycle1:
   326                           	callstack 0
   327   000015                     	ds	4
   328   000019                     _width:
   329                           	callstack 0
   330   000019                     	ds	2
   331   00001B                     _prec:
   332                           	callstack 0
   333   00001B                     	ds	2
   334   00001D                     _a:
   335                           	callstack 0
   336   00001D                     	ds	2
   337   00001F                     _x:
   338                           	callstack 0
   339   00001F                     	ds	2
   340   000021                     _cont:
   341                           	callstack 0
   342   000021                     	ds	2
   343   000023                     _binario:
   344                           	callstack 0
   345   000023                     	ds	2
   346   000025                     _t3:
   347                           	callstack 0
   348   000025                     	ds	2
   349   000027                     _t1:
   350                           	callstack 0
   351   000027                     	ds	2
   352   000029                     _flags:
   353                           	callstack 0
   354   000029                     	ds	1
   355   00002A                     _n:
   356                           	callstack 0
   357   00002A                     	ds	1
   358   00002B                     _canal:
   359                           	callstack 0
   360   00002B                     	ds	1
   361                           
   362                           	psect	bssBANK1
   363   000100                     __pbssBANK1:
   364                           	callstack 0
   365   000100                     _text6:
   366                           	callstack 0
   367   000100                     	ds	10
   368   00010A                     _text5:
   369                           	callstack 0
   370   00010A                     	ds	10
   371   000114                     _wD:
   372                           	callstack 0
   373   000114                     	ds	4
   374   000118                     _fD:
   375                           	callstack 0
   376   000118                     	ds	4
   377   00011C                     _wI:
   378                           	callstack 0
   379   00011C                     	ds	4
   380   000120                     _fI:
   381                           	callstack 0
   382   000120                     	ds	4
   383   000124                     _delay:
   384                           	callstack 0
   385   000124                     	ds	4
   386   000128                     _distance2:
   387                           	callstack 0
   388   000128                     	ds	4
   389   00012C                     _DutyCycle:
   390                           	callstack 0
   391   00012C                     	ds	4
   392   000130                     _b:
   393                           	callstack 0
   394   000130                     	ds	4
   395   000134                     _t:
   396                           	callstack 0
   397   000134                     	ds	2
   398   000136                     _s:
   399                           	callstack 0
   400   000136                     	ds	2
   401   000138                     _mood:
   402                           	callstack 0
   403   000138                     	ds	2
   404   00013A                     _digital2:
   405                           	callstack 0
   406   00013A                     	ds	2
   407   00013C                     _digital1:
   408                           	callstack 0
   409   00013C                     	ds	2
   410   00013E                     _digital:
   411                           	callstack 0
   412   00013E                     	ds	2
   413   000140                     _i:
   414                           	callstack 0
   415   000140                     	ds	2
   416   000142                     _m:
   417                           	callstack 0
   418   000142                     	ds	1
   419   000143                     _flag2:
   420                           	callstack 0
   421   000143                     	ds	1
   422   000144                     _flag1:
   423                           	callstack 0
   424   000144                     	ds	1
   425   000145                     _flag:
   426                           	callstack 0
   427   000145                     	ds	1
   428   000146                     _dbuf:
   429                           	callstack 0
   430   000146                     	ds	80
   431   000196                     _buffer:
   432                           	callstack 0
   433   000196                     	ds	15
   434   0001A5                     _t4:
   435                           	callstack 0
   436   0001A5                     	ds	4
   437   0001A9                     _t2:
   438                           	callstack 0
   439   0001A9                     	ds	4
   440   0001AD                     _conversion4:
   441                           	callstack 0
   442   0001AD                     	ds	4
   443   0001B1                     _conversion3:
   444                           	callstack 0
   445   0001B1                     	ds	4
   446   0001B5                     _conversion2:
   447                           	callstack 0
   448   0001B5                     	ds	4
   449   0001B9                     _conversion1:
   450                           	callstack 0
   451   0001B9                     	ds	4
   452   0001BD                     _conversion:
   453                           	callstack 0
   454   0001BD                     	ds	4
   455                           
   456                           	psect	dataBANK1
   457   0001E5                     __pdataBANK1:
   458                           	callstack 0
   459   0001E5                     _text2:
   460                           	callstack 0
   461   0001E5                     	ds	10
   462   0001EF                     _text:
   463                           	callstack 0
   464   0001EF                     	ds	10
   465                           
   466                           	psect	bssBANK2
   467   000200                     __pbssBANK2:
   468                           	callstack 0
   469   000200                     _text4:
   470                           	callstack 0
   471   000200                     	ds	20
   472   000214                     _text3:
   473                           	callstack 0
   474   000214                     	ds	20
   475                           
   476                           	psect	cstackBANK1
   477   0001C1                     __pcstackBANK1:
   478                           	callstack 0
   479   0001C1                     ?_vfprintf:
   480                           	callstack 0
   481   0001C1                     vfprintf@fp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x0
   485   0001C1                     	ds	2
   486   0001C3                     vfprintf@fmt:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x2
   490   0001C3                     	ds	2
   491   0001C5                     vfprintf@ap:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x4
   495   0001C5                     	ds	2
   496   0001C7                     vfprintf@cfmt:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x6
   500   0001C7                     	ds	2
   501   0001C9                     ?_sprintf:
   502                           	callstack 0
   503   0001C9                     sprintf@s:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x8
   507   0001C9                     	ds	2
   508   0001CB                     sprintf@fmt:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xA
   512   0001CB                     	ds	8
   513   0001D3                     sprintf@ap:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x12
   517   0001D3                     	ds	2
   518   0001D5                     sprintf@f:
   519                           	callstack 0
   520                           
   521                           ; 12 bytes @ 0x14
   522   0001D5                     	ds	12
   523   0001E1                     Data2LCD@pwm:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x20
   527   0001E1                     	ds	1
   528   0001E2                     _Data2LCD$1516:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x21
   532   0001E2                     	ds	2
   533   0001E4                     ??_forward:
   534   0001E4                     ??_back:
   535                           
   536                           ; 1 bytes @ 0x23
   537   0001E4                     	ds	1
   538                           
   539                           	psect	cstackBANK0
   540   000060                     __pcstackBANK0:
   541                           	callstack 0
   542   000060                     ??_sensor:
   543                           
   544                           ; 1 bytes @ 0x0
   545   000060                     	ds	4
   546   000064                     ??_LCD:
   547   000064                     ??_PWM_increase:
   548   000064                     ?_strlen:
   549                           	callstack 0
   550   000064                     ?___fpclassifyf:
   551                           	callstack 0
   552   000064                     ?___wmul:
   553                           	callstack 0
   554   000064                     ?___awdiv:
   555                           	callstack 0
   556   000064                     ?___awmod:
   557                           	callstack 0
   558   000064                     ?___fladd:
   559                           	callstack 0
   560   000064                     ?_labs:
   561                           	callstack 0
   562   000064                     ?___flneg:
   563                           	callstack 0
   564   000064                     ?___fltol:
   565                           	callstack 0
   566   000064                     ?___xxtofl:
   567                           	callstack 0
   568   000064                     ___wmul@multiplier:
   569                           	callstack 0
   570   000064                     ___awdiv@dividend:
   571                           	callstack 0
   572   000064                     ___awmod@dividend:
   573                           	callstack 0
   574   000064                     memcpy@d1:
   575                           	callstack 0
   576   000064                     fputc@c:
   577                           	callstack 0
   578   000064                     strcpy@dest:
   579                           	callstack 0
   580   000064                     strlen@s:
   581                           	callstack 0
   582   000064                     ___fleq@ff1:
   583                           	callstack 0
   584   000064                     ___flneg@f1:
   585                           	callstack 0
   586   000064                     ___fltol@f1:
   587                           	callstack 0
   588   000064                     ___fladd@b:
   589                           	callstack 0
   590   000064                     ___xxtofl@val:
   591                           	callstack 0
   592   000064                     ___fpclassifyf@x:
   593                           	callstack 0
   594   000064                     labs@a:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x4
   598   000064                     	ds	1
   599   000065                     LCD@data:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x5
   603   000065                     	ds	1
   604   000066                     SettingsLCD@word:
   605                           	callstack 0
   606   000066                     WriteLCD@word:
   607                           	callstack 0
   608   000066                     ___wmul@multiplicand:
   609                           	callstack 0
   610   000066                     ___awdiv@divisor:
   611                           	callstack 0
   612   000066                     ___awmod@divisor:
   613                           	callstack 0
   614   000066                     memcpy@s1:
   615                           	callstack 0
   616   000066                     fputc@fp:
   617                           	callstack 0
   618   000066                     strcpy@src:
   619                           	callstack 0
   620   000066                     strlen@a:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x6
   624   000066                     	ds	2
   625   000068                     ??_fputc:
   626   000068                     ??___fpclassifyf:
   627   000068                     ??_labs:
   628   000068                     ??___fltol:
   629   000068                     ??___xxtofl:
   630   000068                     ___awdiv@counter:
   631                           	callstack 0
   632   000068                     ___awmod@counter:
   633                           	callstack 0
   634   000068                     ___wmul@product:
   635                           	callstack 0
   636   000068                     memcpy@n:
   637                           	callstack 0
   638   000068                     strcpy@s:
   639                           	callstack 0
   640   000068                     ___fleq@ff2:
   641                           	callstack 0
   642   000068                     ___fladd@a:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x8
   646   000068                     	ds	1
   647   000069                     ___awdiv@sign:
   648                           	callstack 0
   649   000069                     ___awmod@sign:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x9
   653   000069                     	ds	1
   654   00006A                     ?_abs:
   655                           	callstack 0
   656   00006A                     ?_read_prec_or_width:
   657                           	callstack 0
   658   00006A                     memcpy@tmp:
   659                           	callstack 0
   660   00006A                     ___awdiv@quotient:
   661                           	callstack 0
   662   00006A                     read_prec_or_width@fmt:
   663                           	callstack 0
   664   00006A                     abs@a:
   665                           	callstack 0
   666   00006A                     strcpy@d:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xA
   670   00006A                     	ds	1
   671   00006B                     memcpy@d:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0xB
   675   00006B                     	ds	1
   676   00006C                     ??___fladd:
   677   00006C                     ??_abs:
   678   00006C                     ??___fleq:
   679   00006C                     ___fltol@sign1:
   680                           	callstack 0
   681   00006C                     ___xxtofl@sign:
   682                           	callstack 0
   683   00006C                     read_prec_or_width@ap:
   684                           	callstack 0
   685   00006C                     ___fpclassifyf@e:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0xC
   689   00006C                     	ds	1
   690   00006D                     ___fltol@exp1:
   691                           	callstack 0
   692   00006D                     ___xxtofl@exp:
   693                           	callstack 0
   694   00006D                     memcpy@s:
   695                           	callstack 0
   696   00006D                     fputs@s:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0xD
   700   00006D                     	ds	1
   701   00006E                     ??_read_prec_or_width:
   702   00006E                     ___xxtofl@arg:
   703                           	callstack 0
   704   00006E                     ___fpclassifyf@u:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0xE
   708   00006E                     	ds	1
   709   00006F                     fputs@fp:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0xF
   713   00006F                     	ds	1
   714   000070                     ___fladd@signs:
   715                           	callstack 0
   716   000070                     read_prec_or_width@c:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x10
   720   000070                     	ds	1
   721   000071                     ___fladd@aexp:
   722                           	callstack 0
   723   000071                     fputs@c:
   724                           	callstack 0
   725   000071                     read_prec_or_width@n:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x11
   729   000071                     	ds	1
   730   000072                     ?___flmul:
   731                           	callstack 0
   732   000072                     ___fladd@bexp:
   733                           	callstack 0
   734   000072                     fputs@i:
   735                           	callstack 0
   736   000072                     ___flmul@b:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x12
   740   000072                     	ds	1
   741   000073                     ___fladd@grs:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x13
   745   000073                     	ds	1
   746   000074                     pad@fp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750   000074                     	ds	2
   751   000076                     pad@buf:
   752                           	callstack 0
   753   000076                     ___flmul@a:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x16
   757   000076                     	ds	2
   758   000078                     pad@p:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x18
   762   000078                     	ds	2
   763   00007A                     ??___flmul:
   764   00007A                     ??_pad:
   765                           
   766                           ; 1 bytes @ 0x1A
   767   00007A                     	ds	1
   768   00007B                     pad@i:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x1B
   772   00007B                     	ds	2
   773   00007D                     pad@w:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x1D
   777   00007D                     	ds	1
   778   00007E                     ___flmul@sign:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x1E
   782   00007E                     	ds	1
   783   00007F                     ___flmul@aexp:
   784                           	callstack 0
   785   00007F                     dtoa@fp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x1F
   789   00007F                     	ds	1
   790   000080                     ___flmul@grs:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x20
   794   000080                     	ds	1
   795   000081                     dtoa@d:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x21
   799   000081                     	ds	2
   800   000083                     _dtoa$1164:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x23
   804   000083                     	ds	1
   805   000084                     ___flmul@bexp:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x24
   809   000084                     	ds	1
   810   000085                     dtoa@p:
   811                           	callstack 0
   812   000085                     ___flmul@prod:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x25
   816   000085                     	ds	2
   817   000087                     dtoa@w:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x27
   821   000087                     	ds	2
   822   000089                     dtoa@s:
   823                           	callstack 0
   824   000089                     ___flmul@temp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x29
   828   000089                     	ds	1
   829   00008A                     dtoa@i:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x2A
   833   00008A                     	ds	1
   834   00008B                     ??_start:
   835   00008B                     ?___fldiv:
   836                           	callstack 0
   837   00008B                     ?___flsub:
   838                           	callstack 0
   839   00008B                     ___flge@ff1:
   840                           	callstack 0
   841   00008B                     ___flsub@b:
   842                           	callstack 0
   843   00008B                     ___fldiv@b:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x2B
   847   00008B                     	ds	4
   848   00008F                     ___flge@ff2:
   849                           	callstack 0
   850   00008F                     ___flsub@a:
   851                           	callstack 0
   852   00008F                     ___fldiv@a:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x2F
   856   00008F                     	ds	4
   857   000093                     ??___fldiv:
   858   000093                     ??___flge:
   859                           
   860                           ; 1 bytes @ 0x33
   861   000093                     	ds	4
   862   000097                     ___fldiv@rem:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x37
   866   000097                     	ds	4
   867   00009B                     ___fldiv@sign:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x3B
   871   00009B                     	ds	1
   872   00009C                     ___fldiv@new_exp:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x3C
   876   00009C                     	ds	2
   877   00009E                     ___fldiv@grs:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x3E
   881   00009E                     	ds	4
   882   0000A2                     ___fldiv@bexp:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x42
   886   0000A2                     	ds	1
   887   0000A3                     ___fldiv@aexp:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x43
   891   0000A3                     	ds	1
   892   0000A4                     ?_floorf:
   893                           	callstack 0
   894   0000A4                     floorf@x:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x44
   898   0000A4                     	ds	4
   899   0000A8                     ??_floorf:
   900                           
   901                           ; 1 bytes @ 0x48
   902   0000A8                     	ds	6
   903   0000AE                     floorf@m:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x4E
   907   0000AE                     	ds	4
   908   0000B2                     floorf@e:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x52
   912   0000B2                     	ds	2
   913   0000B4                     floorf@u:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x54
   917   0000B4                     	ds	4
   918   0000B8                     efgtoa@fp:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x58
   922   0000B8                     	ds	2
   923   0000BA                     efgtoa@f:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x5A
   927   0000BA                     	ds	4
   928   0000BE                     efgtoa@c:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x5E
   932   0000BE                     	ds	1
   933   0000BF                     ??_efgtoa:
   934                           
   935                           ; 1 bytes @ 0x5F
   936   0000BF                     	ds	2
   937   0000C1                     efgtoa@ne:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x61
   941   0000C1                     	ds	2
   942   0000C3                     efgtoa@p:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x63
   946   0000C3                     	ds	2
   947   0000C5                     efgtoa@t:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x65
   951   0000C5                     	ds	2
   952   0000C7                     _efgtoa$1195:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x67
   956   0000C7                     	ds	2
   957   0000C9                     efgtoa@pp:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x69
   961   0000C9                     	ds	1
   962   0000CA                     efgtoa@mode:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x6A
   966   0000CA                     	ds	1
   967   0000CB                     efgtoa@nmode:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x6B
   971   0000CB                     	ds	1
   972   0000CC                     efgtoa@d:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x6C
   976   0000CC                     	ds	2
   977   0000CE                     efgtoa@m:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x6E
   981   0000CE                     	ds	2
   982   0000D0                     efgtoa@e:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x70
   986   0000D0                     	ds	2
   987   0000D2                     efgtoa@w:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x72
   991   0000D2                     	ds	2
   992   0000D4                     efgtoa@ou:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x74
   996   0000D4                     	ds	4
   997   0000D8                     efgtoa@i:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x78
  1001   0000D8                     	ds	2
  1002   0000DA                     efgtoa@h:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x7A
  1006   0000DA                     	ds	4
  1007   0000DE                     efgtoa@l:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x7E
  1011   0000DE                     	ds	4
  1012   0000E2                     efgtoa@sign:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x82
  1016   0000E2                     	ds	1
  1017   0000E3                     efgtoa@g:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x83
  1021   0000E3                     	ds	4
  1022   0000E7                     efgtoa@n:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x87
  1026   0000E7                     	ds	2
  1027   0000E9                     efgtoa@u:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x89
  1031   0000E9                     	ds	4
  1032   0000ED                     vfpfcnvrt@fp:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x8D
  1036   0000ED                     	ds	2
  1037   0000EF                     vfpfcnvrt@fmt:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x8F
  1041   0000EF                     	ds	2
  1042   0000F1                     vfpfcnvrt@ap:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x91
  1046   0000F1                     	ds	2
  1047   0000F3                     ??_vfpfcnvrt:
  1048                           
  1049                           ; 1 bytes @ 0x93
  1050   0000F3                     	ds	2
  1051   0000F5                     vfpfcnvrt@convarg:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x95
  1055   0000F5                     	ds	4
  1056   0000F9                     vfpfcnvrt@c:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x99
  1060   0000F9                     	ds	1
  1061   0000FA                     vfpfcnvrt@cp:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x9A
  1065   0000FA                     	ds	2
  1066   0000FC                     
  1067                           ; 1 bytes @ 0x9C
  1068                           
  1069                           	psect	cstackCOMRAM
  1070   00002C                     __pcstackCOMRAM:
  1071                           	callstack 0
  1072   00002C                     ?i2___xxtofl:
  1073                           	callstack 0
  1074   00002C                     i2___xxtofl@val:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x0
  1078   00002C                     	ds	4
  1079   000030                     ??i2___xxtofl:
  1080                           
  1081                           ; 1 bytes @ 0x4
  1082   000030                     	ds	4
  1083   000034                     i2___xxtofl@sign:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x8
  1087   000034                     	ds	1
  1088   000035                     i2___xxtofl@exp:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x9
  1092   000035                     	ds	1
  1093   000036                     i2___xxtofl@arg:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0xA
  1097   000036                     	ds	4
  1098   00003A                     ?i2___flmul:
  1099                           	callstack 0
  1100   00003A                     i2___flmul@b:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0xE
  1104   00003A                     	ds	4
  1105   00003E                     i2___flmul@a:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x12
  1109   00003E                     	ds	4
  1110   000042                     ??i2___flmul:
  1111                           
  1112                           ; 1 bytes @ 0x16
  1113   000042                     	ds	4
  1114   000046                     i2___flmul@sign:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x1A
  1118   000046                     	ds	1
  1119   000047                     i2___flmul@grs:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x1B
  1123   000047                     	ds	4
  1124   00004B                     i2___flmul@aexp:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x1F
  1128   00004B                     	ds	1
  1129   00004C                     i2___flmul@bexp:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x20
  1133   00004C                     	ds	1
  1134   00004D                     i2___flmul@prod:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x21
  1138   00004D                     	ds	4
  1139   000051                     i2___flmul@temp:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x25
  1143   000051                     	ds	2
  1144   000053                     ??_UART_Rx:
  1145                           
  1146                           ; 1 bytes @ 0x27
  1147   000053                     	ds	2
  1148   000055                     UART_Rx@a:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x29
  1152   000055                     	ds	1
  1153                           
  1154 ;;
  1155 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1156 ;;
  1157 ;; *************** function _main *****************
  1158 ;; Defined at:
  1159 ;;		line 80 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1173 ;;      Params:         0       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0
  1176 ;;      Totals:         0       0       0       0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels required when called: 15
  1179 ;; This function calls:
  1180 ;;		_Manual
  1181 ;;		_automatic
  1182 ;;		_brake
  1183 ;;		_settings
  1184 ;; This function is called by:
  1185 ;;		Startup code after reset
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text0
  1190   0048BE                     __ptext0:
  1191                           	callstack 0
  1192   0048BE                     _main:
  1193                           	callstack 16
  1194   0048BE                     
  1195                           ;main.c: 81:     settings();
  1196   0048BE  EC66  F020         	call	_settings	;wreg free
  1197   0048C2                     l7774:
  1198                           
  1199                           ;main.c: 84:         if (mood == 1) {
  1200   0048C2  0101               	movlb	1	; () banked
  1201   0048C4  0538               	decf	_mood& (0+255),w,b
  1202   0048C6  1139               	iorwf	(_mood+1)& (0+255),w,b
  1203   0048C8  A4D8               	btfss	status,2,c
  1204   0048CA  EF69  F024         	goto	u9651
  1205   0048CE  EF6B  F024         	goto	u9650
  1206   0048D2                     u9651:
  1207   0048D2  EF89  F024         	goto	l7788
  1208   0048D6                     u9650:
  1209   0048D6                     
  1210                           ; BSR set to: 1
  1211                           ;main.c: 85:             if (s == 0) {
  1212   0048D6  5136               	movf	_s& (0+255),w,b
  1213   0048D8  1137               	iorwf	(_s+1)& (0+255),w,b
  1214   0048DA  A4D8               	btfss	status,2,c
  1215   0048DC  EF72  F024         	goto	u9661
  1216   0048E0  EF74  F024         	goto	u9660
  1217   0048E4                     u9661:
  1218   0048E4  EF7B  F024         	goto	l7782
  1219   0048E8                     u9660:
  1220   0048E8                     
  1221                           ; BSR set to: 1
  1222                           ;main.c: 86:                 LATAbits.LA2 = 1;
  1223   0048E8  8489               	bsf	137,2,c	;volatile
  1224                           
  1225                           ;main.c: 87:                 LATAbits.LA3 = 0;
  1226   0048EA  9689               	bcf	137,3,c	;volatile
  1227                           
  1228                           ;main.c: 88:                 LATBbits.LB2 = 0;
  1229   0048EC  948A               	bcf	138,2,c	;volatile
  1230   0048EE                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 89:                 Manual();
  1233   0048EE  EC67  F021         	call	_Manual	;wreg free
  1234                           
  1235                           ;main.c: 90:             } else if (s == 1) {
  1236   0048F2  EF61  F024         	goto	l7774
  1237   0048F6                     l7782:
  1238                           
  1239                           ; BSR set to: 1
  1240   0048F6  0536               	decf	_s& (0+255),w,b
  1241   0048F8  1137               	iorwf	(_s+1)& (0+255),w,b
  1242   0048FA  A4D8               	btfss	status,2,c
  1243   0048FC  EF82  F024         	goto	u9671
  1244   004900  EF84  F024         	goto	u9670
  1245   004904                     u9671:
  1246   004904  EFAF  F024         	goto	l286
  1247   004908                     u9670:
  1248   004908                     
  1249                           ; BSR set to: 1
  1250                           ;main.c: 91:                 LATBbits.LB2 = 1;
  1251   004908  848A               	bsf	138,2,c	;volatile
  1252   00490A                     l7786:
  1253                           
  1254                           ; BSR set to: 1
  1255                           ;main.c: 92:                 brake();
  1256   00490A  EC5C  F027         	call	_brake	;wreg free
  1257   00490E  EF61  F024         	goto	l7774
  1258   004912                     l7788:
  1259                           
  1260                           ; BSR set to: 1
  1261   004912  0E02               	movlw	2
  1262   004914  1938               	xorwf	_mood& (0+255),w,b
  1263   004916  1139               	iorwf	(_mood+1)& (0+255),w,b
  1264   004918  A4D8               	btfss	status,2,c
  1265   00491A  EF91  F024         	goto	u9681
  1266   00491E  EF93  F024         	goto	u9680
  1267   004922                     u9681:
  1268   004922  EF61  F024         	goto	l7774
  1269   004926                     u9680:
  1270   004926                     
  1271                           ; BSR set to: 1
  1272                           ;main.c: 95:             if (s == 0) {
  1273   004926  5136               	movf	_s& (0+255),w,b
  1274   004928  1137               	iorwf	(_s+1)& (0+255),w,b
  1275   00492A  A4D8               	btfss	status,2,c
  1276   00492C  EF9A  F024         	goto	u9691
  1277   004930  EF9C  F024         	goto	u9690
  1278   004934                     u9691:
  1279   004934  EFA3  F024         	goto	l7796
  1280   004938                     u9690:
  1281   004938                     
  1282                           ; BSR set to: 1
  1283                           ;main.c: 96:                 LATAbits.LA3 = 1;
  1284   004938  8689               	bsf	137,3,c	;volatile
  1285                           
  1286                           ;main.c: 97:                 LATAbits.LA2 = 0;
  1287   00493A  9489               	bcf	137,2,c	;volatile
  1288                           
  1289                           ;main.c: 98:                 LATBbits.LB2 = 0;
  1290   00493C  948A               	bcf	138,2,c	;volatile
  1291   00493E                     
  1292                           ; BSR set to: 1
  1293                           ;main.c: 99:                 automatic();
  1294   00493E  EC0C  F008         	call	_automatic	;wreg free
  1295                           
  1296                           ;main.c: 100:             } else if (s == 1) {
  1297   004942  EF61  F024         	goto	l7774
  1298   004946                     l7796:
  1299                           
  1300                           ; BSR set to: 1
  1301   004946  0536               	decf	_s& (0+255),w,b
  1302   004948  1137               	iorwf	(_s+1)& (0+255),w,b
  1303   00494A  A4D8               	btfss	status,2,c
  1304   00494C  EFAA  F024         	goto	u9701
  1305   004950  EFAC  F024         	goto	u9700
  1306   004954                     u9701:
  1307   004954  EF61  F024         	goto	l7774
  1308   004958                     u9700:
  1309   004958                     
  1310                           ; BSR set to: 1
  1311                           ;main.c: 101:                 LATBbits.LB2 = 1;
  1312   004958  848A               	bsf	138,2,c	;volatile
  1313   00495A  EF85  F024         	goto	l7786
  1314   00495E                     l286:
  1315                           
  1316                           ; BSR set to: 1
  1317   00495E  EF61  F024         	goto	l7774
  1318   004962  EF66  F000         	goto	start
  1319   004966                     __end_of_main:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _settings *****************
  1323 ;; Defined at:
  1324 ;;		line 108 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1338 ;;      Params:         0       0       0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0
  1341 ;;      Totals:         0       0       0       0       0       0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 6
  1345 ;; This function calls:
  1346 ;;		_Data1LCD
  1347 ;;		_SettingsLCD
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text1
  1354   0040CC                     __ptext1:
  1355                           	callstack 0
  1356   0040CC                     _settings:
  1357                           	callstack 24
  1358   0040CC                     
  1359                           ;main.c: 109:     OSCCON = 0x52;
  1360   0040CC  0E52               	movlw	82
  1361   0040CE  6ED3               	movwf	211,c	;volatile
  1362                           
  1363                           ;main.c: 110:     ANSELA = 0x01;
  1364   0040D0  0E01               	movlw	1
  1365   0040D2  010F               	movlb	15	; () banked
  1366   0040D4  6F38               	movwf	56,b	;volatile
  1367                           
  1368                           ;main.c: 111:     ANSELB = 0x00;
  1369   0040D6  0E00               	movlw	0
  1370   0040D8  6F39               	movwf	57,b	;volatile
  1371                           
  1372                           ;main.c: 112:     ANSELC = 0x00;
  1373   0040DA  0E00               	movlw	0
  1374   0040DC  6F3A               	movwf	58,b	;volatile
  1375                           
  1376                           ;main.c: 113:     ANSELD = 0x00;
  1377   0040DE  0E00               	movlw	0
  1378   0040E0  6F3B               	movwf	59,b	;volatile
  1379                           
  1380                           ;main.c: 114:     ANSELE = 0x00;
  1381   0040E2  0E00               	movlw	0
  1382   0040E4  6F3C               	movwf	60,b	;volatile
  1383                           
  1384                           ;main.c: 115:     TRISA = 0b00000001;
  1385   0040E6  0E01               	movlw	1
  1386   0040E8  6E92               	movwf	146,c	;volatile
  1387                           
  1388                           ;main.c: 116:     TRISB = 0xF0;
  1389   0040EA  0EF0               	movlw	240
  1390   0040EC  6E93               	movwf	147,c	;volatile
  1391   0040EE                     
  1392                           ; BSR set to: 15
  1393                           ;main.c: 117:     TRISCbits.TRISC2 = 1;
  1394   0040EE  8494               	bsf	148,2,c	;volatile
  1395                           
  1396                           ;main.c: 118:     TRISD = 0;
  1397   0040F0  0E00               	movlw	0
  1398   0040F2  6E95               	movwf	149,c	;volatile
  1399                           
  1400                           ;main.c: 119:     TRISE = 0x04;
  1401   0040F4  0E04               	movlw	4
  1402   0040F6  6E96               	movwf	150,c	;volatile
  1403                           
  1404                           ;main.c: 120:     LATA = 0;
  1405   0040F8  0E00               	movlw	0
  1406   0040FA  6E89               	movwf	137,c	;volatile
  1407                           
  1408                           ;main.c: 121:     LATB = 0x00;
  1409   0040FC  0E00               	movlw	0
  1410   0040FE  6E8A               	movwf	138,c	;volatile
  1411                           
  1412                           ;main.c: 122:     LATD = 0;
  1413   004100  0E00               	movlw	0
  1414   004102  6E8C               	movwf	140,c	;volatile
  1415                           
  1416                           ;main.c: 123:     LATE = 0;
  1417   004104  0E00               	movlw	0
  1418   004106  6E8D               	movwf	141,c	;volatile
  1419                           
  1420                           ;main.c: 125:     ADCON0 = 0x01;
  1421   004108  0E01               	movlw	1
  1422   00410A  6EC2               	movwf	194,c	;volatile
  1423                           
  1424                           ;main.c: 126:     ADCON1 = 0x00;
  1425   00410C  0E00               	movlw	0
  1426   00410E  6EC1               	movwf	193,c	;volatile
  1427                           
  1428                           ;main.c: 127:     ADCON2 = 0x94;
  1429   004110  0E94               	movlw	148
  1430   004112  6EC0               	movwf	192,c	;volatile
  1431                           
  1432                           ;main.c: 129:     PR2 = 0x3E;
  1433   004114  0E3E               	movlw	62
  1434   004116  6EBB               	movwf	187,c	;volatile
  1435                           
  1436                           ;main.c: 130:     CCPR2L = 0x2E;
  1437   004118  0E2E               	movlw	46
  1438   00411A  6E67               	movwf	103,c	;volatile
  1439                           
  1440                           ;main.c: 131:     CCPR3L = 0x00;
  1441   00411C  0E00               	movlw	0
  1442   00411E  6F5E               	movwf	94,b	;volatile
  1443                           
  1444                           ;main.c: 132:     T2CON = 0x02;
  1445   004120  0E02               	movlw	2
  1446   004122  6EBA               	movwf	186,c	;volatile
  1447                           
  1448                           ;main.c: 133:     TMR2 = 0;
  1449   004124  0E00               	movlw	0
  1450   004126  6EBC               	movwf	188,c	;volatile
  1451                           
  1452                           ;main.c: 134:     CCP2CON = 0x3C;
  1453   004128  0E3C               	movlw	60
  1454   00412A  6E66               	movwf	102,c	;volatile
  1455                           
  1456                           ;main.c: 135:     CCP3CON = 0x0C;
  1457   00412C  0E0C               	movlw	12
  1458   00412E  6F5D               	movwf	93,b	;volatile
  1459   004130                     
  1460                           ; BSR set to: 15
  1461                           ;main.c: 137:     SettingsLCD(0x02);
  1462   004130  0E02               	movlw	2
  1463   004132  EC36  F027         	call	_SettingsLCD
  1464   004136                     
  1465                           ;main.c: 138:     SettingsLCD(0x06);
  1466   004136  0E06               	movlw	6
  1467   004138  EC36  F027         	call	_SettingsLCD
  1468   00413C                     
  1469                           ;main.c: 139:     SettingsLCD(0x0E);
  1470   00413C  0E0E               	movlw	14
  1471   00413E  EC36  F027         	call	_SettingsLCD
  1472   004142                     
  1473                           ;main.c: 140:     SettingsLCD(0x28);
  1474   004142  0E28               	movlw	40
  1475   004144  EC36  F027         	call	_SettingsLCD
  1476   004148                     
  1477                           ;main.c: 141:     SettingsLCD(0x01);
  1478   004148  0E01               	movlw	1
  1479   00414A  EC36  F027         	call	_SettingsLCD
  1480   00414E                     
  1481                           ;main.c: 142:     Data1LCD();
  1482   00414E  ECFE  F022         	call	_Data1LCD	;wreg free
  1483   004152                     
  1484                           ;main.c: 144:     TRISCbits.TRISC6 = 0;
  1485   004152  9C94               	bcf	148,6,c	;volatile
  1486   004154                     
  1487                           ;main.c: 145:     TRISCbits.TRISC7 = 1;
  1488   004154  8E94               	bsf	148,7,c	;volatile
  1489   004156                     
  1490                           ;main.c: 146:     SPBRG1 = 25;
  1491   004156  0E19               	movlw	25
  1492   004158  6EAF               	movwf	175,c	;volatile
  1493   00415A                     
  1494                           ;main.c: 147:     RCSTA1 = 0x90;
  1495   00415A  0E90               	movlw	144
  1496   00415C  6EAB               	movwf	171,c	;volatile
  1497   00415E                     
  1498                           ;main.c: 148:     TXSTA1 = 0x24;
  1499   00415E  0E24               	movlw	36
  1500   004160  6EAC               	movwf	172,c	;volatile
  1501   004162                     
  1502                           ;main.c: 150:     GIE = 1;
  1503   004162  8EF2               	bsf	4082,7,c	;volatile
  1504   004164                     
  1505                           ;main.c: 151:     PEIE = 1;
  1506   004164  8CF2               	bsf	4082,6,c	;volatile
  1507   004166                     
  1508                           ;main.c: 152:     RCONbits.IPEN = 1;
  1509   004166  8ED0               	bsf	208,7,c	;volatile
  1510   004168                     
  1511                           ;main.c: 153:     RC1IE = 1;
  1512   004168  8A9D               	bsf	3997,5,c	;volatile
  1513   00416A                     
  1514                           ;main.c: 154:     RC1IF = 0;
  1515   00416A  9A9E               	bcf	3998,5,c	;volatile
  1516   00416C                     
  1517                           ;main.c: 155:     RC1IP = 1;
  1518   00416C  8A9F               	bsf	3999,5,c	;volatile
  1519   00416E                     
  1520                           ;main.c: 157:     RBIE = 1;
  1521   00416E  86F2               	bsf	4082,3,c	;volatile
  1522   004170                     
  1523                           ;main.c: 158:     RBIF = 0;
  1524   004170  90F2               	bcf	4082,0,c	;volatile
  1525   004172                     
  1526                           ;main.c: 159:     IOCB = 0xF0;
  1527   004172  0EF0               	movlw	240
  1528   004174  6E62               	movwf	98,c	;volatile
  1529   004176                     
  1530                           ;main.c: 160:     RBIP = 0;
  1531   004176  90F1               	bcf	4081,0,c	;volatile
  1532   004178                     
  1533                           ;main.c: 162:     CCP1IE = 1;
  1534   004178  849D               	bsf	3997,2,c	;volatile
  1535   00417A                     
  1536                           ;main.c: 163:     CCP1IF = 0;
  1537   00417A  949E               	bcf	3998,2,c	;volatile
  1538   00417C                     
  1539                           ;main.c: 164:     CCP5IE = 1;
  1540   00417C  847A               	bsf	3962,2,c	;volatile
  1541   00417E                     
  1542                           ;main.c: 165:     CCP5IF = 0;
  1543   00417E  947B               	bcf	3963,2,c	;volatile
  1544   004180                     
  1545                           ;main.c: 167:     CCP1CON = 0x05;
  1546   004180  0E05               	movlw	5
  1547   004182  6EBD               	movwf	189,c	;volatile
  1548   004184                     
  1549                           ;main.c: 168:     CCPR1 = 0x00;
  1550   004184  0E00               	movlw	0
  1551   004186  6EBF               	movwf	191,c	;volatile
  1552   004188  0E00               	movlw	0
  1553   00418A  6EBE               	movwf	190,c	;volatile
  1554   00418C                     
  1555                           ;main.c: 169:     CCP5CON = 0x05;
  1556   00418C  0E05               	movlw	5
  1557   00418E  010F               	movlb	15	; () banked
  1558   004190  6F54               	movwf	84,b	;volatile
  1559   004192                     
  1560                           ; BSR set to: 15
  1561                           ;main.c: 170:     CCPR5 = 0x00;
  1562   004192  0E00               	movlw	0
  1563   004194  6F56               	movwf	86,b	;volatile
  1564   004196  0E00               	movlw	0
  1565   004198  6F55               	movwf	85,b	;volatile
  1566   00419A                     
  1567                           ; BSR set to: 15
  1568                           ;main.c: 172:     T1CON = 0x32;
  1569   00419A  0E32               	movlw	50
  1570   00419C  6ECD               	movwf	205,c	;volatile
  1571   00419E                     
  1572                           ; BSR set to: 15
  1573                           ;main.c: 173:     TMR1 = 0;
  1574   00419E  0E00               	movlw	0
  1575   0041A0  6ECF               	movwf	207,c	;volatile
  1576   0041A2  0E00               	movlw	0
  1577   0041A4  6ECE               	movwf	206,c	;volatile
  1578   0041A6                     
  1579                           ; BSR set to: 15
  1580                           ;main.c: 174:     T5CON = 0x32;
  1581   0041A6  0E32               	movlw	50
  1582   0041A8  6F4E               	movwf	78,b	;volatile
  1583   0041AA                     
  1584                           ; BSR set to: 15
  1585                           ;main.c: 175:     TMR5 = 0;
  1586   0041AA  0E00               	movlw	0
  1587   0041AC  6F50               	movwf	80,b	;volatile
  1588   0041AE  0E00               	movlw	0
  1589   0041B0  6F4F               	movwf	79,b	;volatile
  1590   0041B2                     
  1591                           ; BSR set to: 15
  1592                           ;main.c: 176:     TMR1ON = 1;
  1593   0041B2  80CD               	bsf	4045,0,c	;volatile
  1594   0041B4                     
  1595                           ; BSR set to: 15
  1596                           ;main.c: 177:     TMR5ON = 1;
  1597   0041B4  814E               	bsf	78,0,b	;volatile
  1598   0041B6                     
  1599                           ; BSR set to: 15
  1600                           ;main.c: 179:     TMR2ON = 1;
  1601   0041B6  84BA               	bsf	4026,2,c	;volatile
  1602   0041B8                     
  1603                           ; BSR set to: 15
  1604                           ;main.c: 180:     ADCON0bits.GO = 1;
  1605   0041B8  82C2               	bsf	194,1,c	;volatile
  1606   0041BA                     
  1607                           ; BSR set to: 15
  1608                           ;main.c: 182:     TMR3IE = 1;
  1609   0041BA  82A0               	bsf	4000,1,c	;volatile
  1610   0041BC                     
  1611                           ; BSR set to: 15
  1612                           ;main.c: 183:     TMR3IF = 0;
  1613   0041BC  92A1               	bcf	4001,1,c	;volatile
  1614   0041BE                     
  1615                           ; BSR set to: 15
  1616                           ;main.c: 184:     TMR3IP = 0;
  1617   0041BE  92A2               	bcf	4002,1,c	;volatile
  1618   0041C0                     
  1619                           ; BSR set to: 15
  1620                           ;main.c: 186:     T3CON = 0x12;
  1621   0041C0  0E12               	movlw	18
  1622   0041C2  6EB1               	movwf	177,c	;volatile
  1623   0041C4                     
  1624                           ; BSR set to: 15
  1625                           ;main.c: 187:     TMR3 = 0x3CAF;
  1626   0041C4  0E3C               	movlw	60
  1627   0041C6  6EB3               	movwf	179,c	;volatile
  1628   0041C8  0EAF               	movlw	175
  1629   0041CA  6EB2               	movwf	178,c	;volatile
  1630   0041CC                     
  1631                           ; BSR set to: 15
  1632   0041CC  0012               	return		;funcret
  1633   0041CE                     __end_of_settings:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _Data1LCD *****************
  1637 ;; Defined at:
  1638 ;;		line 651 in file "main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1652 ;;      Params:         0       0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 5
  1659 ;; This function calls:
  1660 ;;		_SettingsLCD
  1661 ;;		_WriteLCD
  1662 ;;		_strlen
  1663 ;; This function is called by:
  1664 ;;		_settings
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text2
  1669   0045FC                     __ptext2:
  1670                           	callstack 0
  1671   0045FC                     _Data1LCD:
  1672                           	callstack 24
  1673   0045FC                     
  1674                           ;main.c: 652:     SettingsLCD(0x80);
  1675   0045FC  0E80               	movlw	128
  1676   0045FE  EC36  F027         	call	_SettingsLCD
  1677   004602                     
  1678                           ;main.c: 653:     for (i = 0; i <= strlen(text); i++) {
  1679   004602  0E00               	movlw	0
  1680   004604  0101               	movlb	1	; () banked
  1681   004606  6F41               	movwf	(_i+1)& (0+255),b
  1682   004608  0E00               	movlw	0
  1683   00460A  6F40               	movwf	_i& (0+255),b
  1684   00460C  EF15  F023         	goto	l7288
  1685   004610                     l7284:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 654:         WriteLCD(text[i]);
  1689   004610  0EEF               	movlw	low _text
  1690   004612  0101               	movlb	1	; () banked
  1691   004614  2540               	addwf	_i& (0+255),w,b
  1692   004616  6ED9               	movwf	fsr2l,c
  1693   004618  0E01               	movlw	high _text
  1694   00461A  2141               	addwfc	(_i+1)& (0+255),w,b
  1695   00461C  6EDA               	movwf	fsr2h,c
  1696   00461E  50DF               	movf	indf2,w,c
  1697   004620  EC28  F027         	call	_WriteLCD
  1698   004624                     
  1699                           ;main.c: 655:     }
  1700   004624  0101               	movlb	1	; () banked
  1701   004626  4B40               	infsnz	_i& (0+255),f,b
  1702   004628  2B41               	incf	(_i+1)& (0+255),f,b
  1703   00462A                     l7288:
  1704                           
  1705                           ; BSR set to: 1
  1706   00462A  0EEF               	movlw	low _text
  1707   00462C  0100               	movlb	0	; () banked
  1708   00462E  6F64               	movwf	strlen@s& (0+255),b
  1709   004630  0E01               	movlw	high _text
  1710   004632  6F65               	movwf	(strlen@s+1)& (0+255),b
  1711   004634  EC9A  F026         	call	_strlen	;wreg free
  1712   004638  0101               	movlb	1	; () banked
  1713   00463A  5140               	movf	_i& (0+255),w,b
  1714   00463C  0100               	movlb	0	; () banked
  1715   00463E  5D64               	subwf	?_strlen& (0+255),w,b
  1716   004640  0101               	movlb	1	; () banked
  1717   004642  5141               	movf	(_i+1)& (0+255),w,b
  1718   004644  0100               	movlb	0	; () banked
  1719   004646  5965               	subwfb	(?_strlen+1)& (0+255),w,b
  1720   004648  B0D8               	btfsc	status,0,c
  1721   00464A  EF29  F023         	goto	u8841
  1722   00464E  EF2B  F023         	goto	u8840
  1723   004652                     u8841:
  1724   004652  EF08  F023         	goto	l7284
  1725   004656                     u8840:
  1726   004656                     
  1727                           ; BSR set to: 0
  1728                           ;main.c: 656:     SettingsLCD(0xC0);
  1729   004656  0EC0               	movlw	192
  1730   004658  EC36  F027         	call	_SettingsLCD
  1731   00465C                     
  1732                           ;main.c: 657:     for (i = 0; i <= strlen(text2); i++) {
  1733   00465C  0E00               	movlw	0
  1734   00465E  0101               	movlb	1	; () banked
  1735   004660  6F41               	movwf	(_i+1)& (0+255),b
  1736   004662  0E00               	movlw	0
  1737   004664  6F40               	movwf	_i& (0+255),b
  1738   004666  EF42  F023         	goto	l7298
  1739   00466A                     l7294:
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;main.c: 658:         WriteLCD(text2[i]);
  1743   00466A  0EE5               	movlw	low _text2
  1744   00466C  0101               	movlb	1	; () banked
  1745   00466E  2540               	addwf	_i& (0+255),w,b
  1746   004670  6ED9               	movwf	fsr2l,c
  1747   004672  0E01               	movlw	high _text2
  1748   004674  2141               	addwfc	(_i+1)& (0+255),w,b
  1749   004676  6EDA               	movwf	fsr2h,c
  1750   004678  50DF               	movf	indf2,w,c
  1751   00467A  EC28  F027         	call	_WriteLCD
  1752   00467E                     
  1753                           ;main.c: 659:     }
  1754   00467E  0101               	movlb	1	; () banked
  1755   004680  4B40               	infsnz	_i& (0+255),f,b
  1756   004682  2B41               	incf	(_i+1)& (0+255),f,b
  1757   004684                     l7298:
  1758                           
  1759                           ; BSR set to: 1
  1760   004684  0EE5               	movlw	low _text2
  1761   004686  0100               	movlb	0	; () banked
  1762   004688  6F64               	movwf	strlen@s& (0+255),b
  1763   00468A  0E01               	movlw	high _text2
  1764   00468C  6F65               	movwf	(strlen@s+1)& (0+255),b
  1765   00468E  EC9A  F026         	call	_strlen	;wreg free
  1766   004692  0101               	movlb	1	; () banked
  1767   004694  5140               	movf	_i& (0+255),w,b
  1768   004696  0100               	movlb	0	; () banked
  1769   004698  5D64               	subwf	?_strlen& (0+255),w,b
  1770   00469A  0101               	movlb	1	; () banked
  1771   00469C  5141               	movf	(_i+1)& (0+255),w,b
  1772   00469E  0100               	movlb	0	; () banked
  1773   0046A0  5965               	subwfb	(?_strlen+1)& (0+255),w,b
  1774   0046A2  B0D8               	btfsc	status,0,c
  1775   0046A4  EF56  F023         	goto	u8851
  1776   0046A8  EF58  F023         	goto	u8850
  1777   0046AC                     u8851:
  1778   0046AC  EF35  F023         	goto	l7294
  1779   0046B0                     u8850:
  1780   0046B0                     
  1781                           ; BSR set to: 0
  1782   0046B0  0012               	return		;funcret
  1783   0046B2                     __end_of_Data1LCD:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _automatic *****************
  1787 ;; Defined at:
  1788 ;;		line 345 in file "main.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1802 ;;      Params:         0       0       0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0
  1805 ;;      Totals:         0       0       0       0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 14
  1809 ;; This function calls:
  1810 ;;		___flge
  1811 ;;		_brake
  1812 ;;		_forward
  1813 ;;		_left
  1814 ;;		_start
  1815 ;;		_ups
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text3
  1822   001018                     __ptext3:
  1823                           	callstack 0
  1824   001018                     _automatic:
  1825                           	callstack 16
  1826   001018                     
  1827                           ;main.c: 346:     for (i = 0; i <= 3; i++) {
  1828   001018  0E00               	movlw	0
  1829   00101A  0101               	movlb	1	; () banked
  1830   00101C  6F41               	movwf	(_i+1)& (0+255),b
  1831   00101E  0E00               	movlw	0
  1832   001020  6F40               	movwf	_i& (0+255),b
  1833   001022                     l7590:
  1834                           
  1835                           ; BSR set to: 1
  1836   001022  BF41               	btfsc	(_i+1)& (0+255),7,b
  1837   001024  EF1D  F008         	goto	u9301
  1838   001028  5141               	movf	(_i+1)& (0+255),w,b
  1839   00102A  E109               	bnz	u9300
  1840   00102C  0E04               	movlw	4
  1841   00102E  5D40               	subwf	_i& (0+255),w,b
  1842   001030  A0D8               	btfss	status,0,c
  1843   001032  EF1D  F008         	goto	u9301
  1844   001036  EF1F  F008         	goto	u9300
  1845   00103A                     u9301:
  1846   00103A  EF23  F008         	goto	l7596
  1847   00103E                     u9300:
  1848   00103E  EFEA  F00A         	goto	l483
  1849   001042                     l7594:
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;main.c: 348:             start();
  1853   001042  ECB3  F024         	call	_start	;wreg free
  1854   001046                     l7596:
  1855                           
  1856                           ;main.c: 347:         while (b >= 4.5) {
  1857   001046  C130  F08B         	movff	_b,___flge@ff1
  1858   00104A  C131  F08C         	movff	_b+1,___flge@ff1+1
  1859   00104E  C132  F08D         	movff	_b+2,___flge@ff1+2
  1860   001052  C133  F08E         	movff	_b+3,___flge@ff1+3
  1861   001056  0E00               	movlw	0
  1862   001058  0100               	movlb	0	; () banked
  1863   00105A  6F8F               	movwf	___flge@ff2& (0+255),b
  1864   00105C  0E00               	movlw	0
  1865   00105E  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  1866   001060  0E90               	movlw	144
  1867   001062  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  1868   001064  0E40               	movlw	64
  1869   001066  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  1870   001068  ECE3  F01F         	call	___flge	;wreg free
  1871   00106C  0100               	movlb	0	; () banked
  1872   00106E  B0D8               	btfsc	status,0,c
  1873   001070  EF3C  F008         	goto	u9311
  1874   001074  EF3E  F008         	goto	u9310
  1875   001078                     u9311:
  1876   001078  EF21  F008         	goto	l7594
  1877   00107C                     u9310:
  1878   00107C                     
  1879                           ; BSR set to: 0
  1880                           ;main.c: 350:         t = 0;
  1881   00107C  0E00               	movlw	0
  1882   00107E  0101               	movlb	1	; () banked
  1883   001080  6F35               	movwf	(_t+1)& (0+255),b
  1884   001082  0E00               	movlw	0
  1885   001084  6F34               	movwf	_t& (0+255),b
  1886                           
  1887                           ;main.c: 351:         TMR1 = 0x3CAF;
  1888   001086  0E3C               	movlw	60
  1889   001088  6ECF               	movwf	207,c	;volatile
  1890   00108A  0EAF               	movlw	175
  1891   00108C  6ECE               	movwf	206,c	;volatile
  1892   00108E                     
  1893                           ; BSR set to: 1
  1894                           ;main.c: 352:         TMR3ON = 1;
  1895   00108E  80B1               	bsf	4017,0,c	;volatile
  1896                           
  1897                           ;main.c: 354:         while (t <= 24) {
  1898   001090  EF59  F008         	goto	l7608
  1899   001094                     l7602:
  1900                           
  1901                           ; BSR set to: 1
  1902                           ;main.c: 356:             if (s == 0) {
  1903   001094  5136               	movf	_s& (0+255),w,b
  1904   001096  1137               	iorwf	(_s+1)& (0+255),w,b
  1905   001098  A4D8               	btfss	status,2,c
  1906   00109A  EF51  F008         	goto	u9321
  1907   00109E  EF53  F008         	goto	u9320
  1908   0010A2                     u9321:
  1909   0010A2  EF57  F008         	goto	l7606
  1910   0010A6                     u9320:
  1911   0010A6                     
  1912                           ; BSR set to: 1
  1913                           ;main.c: 357:                 forward();
  1914   0010A6  ECF9  F026         	call	_forward	;wreg free
  1915                           
  1916                           ;main.c: 358:             } else {
  1917   0010AA  EF59  F008         	goto	l7608
  1918   0010AE                     l7606:
  1919                           
  1920                           ; BSR set to: 1
  1921                           ;main.c: 359:                 ups();
  1922   0010AE  EC19  F027         	call	_ups	;wreg free
  1923   0010B2                     l7608:
  1924                           
  1925                           ;main.c: 354:         while (t <= 24) {
  1926   0010B2  0101               	movlb	1	; () banked
  1927   0010B4  BF35               	btfsc	(_t+1)& (0+255),7,b
  1928   0010B6  EF66  F008         	goto	u9331
  1929   0010BA  5135               	movf	(_t+1)& (0+255),w,b
  1930   0010BC  E109               	bnz	u9330
  1931   0010BE  0E19               	movlw	25
  1932   0010C0  5D34               	subwf	_t& (0+255),w,b
  1933   0010C2  A0D8               	btfss	status,0,c
  1934   0010C4  EF66  F008         	goto	u9331
  1935   0010C8  EF68  F008         	goto	u9330
  1936   0010CC                     u9331:
  1937   0010CC  EF4A  F008         	goto	l7602
  1938   0010D0                     u9330:
  1939   0010D0                     
  1940                           ; BSR set to: 1
  1941                           ;main.c: 362:         t = 0;
  1942   0010D0  0E00               	movlw	0
  1943   0010D2  6F35               	movwf	(_t+1)& (0+255),b
  1944   0010D4  0E00               	movlw	0
  1945   0010D6  6F34               	movwf	_t& (0+255),b
  1946                           
  1947                           ;main.c: 363:         TMR1 = 0x3CAF;
  1948   0010D8  0E3C               	movlw	60
  1949   0010DA  6ECF               	movwf	207,c	;volatile
  1950   0010DC  0EAF               	movlw	175
  1951   0010DE  6ECE               	movwf	206,c	;volatile
  1952                           
  1953                           ;main.c: 364:         while (t <= 20) {
  1954   0010E0  EF81  F008         	goto	l7618
  1955   0010E4                     l7612:
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;main.c: 366:             if (s == 0) {
  1959   0010E4  5136               	movf	_s& (0+255),w,b
  1960   0010E6  1137               	iorwf	(_s+1)& (0+255),w,b
  1961   0010E8  A4D8               	btfss	status,2,c
  1962   0010EA  EF79  F008         	goto	u9341
  1963   0010EE  EF7B  F008         	goto	u9340
  1964   0010F2                     u9341:
  1965   0010F2  EF7F  F008         	goto	l7616
  1966   0010F6                     u9340:
  1967   0010F6                     
  1968                           ; BSR set to: 1
  1969                           ;main.c: 367:                 brake();
  1970   0010F6  EC5C  F027         	call	_brake	;wreg free
  1971                           
  1972                           ;main.c: 368:             } else {
  1973   0010FA  EF81  F008         	goto	l7618
  1974   0010FE                     l7616:
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;main.c: 369:                 ups();
  1978   0010FE  EC19  F027         	call	_ups	;wreg free
  1979   001102                     l7618:
  1980                           
  1981                           ;main.c: 364:         while (t <= 20) {
  1982   001102  0101               	movlb	1	; () banked
  1983   001104  BF35               	btfsc	(_t+1)& (0+255),7,b
  1984   001106  EF8E  F008         	goto	u9351
  1985   00110A  5135               	movf	(_t+1)& (0+255),w,b
  1986   00110C  E109               	bnz	u9350
  1987   00110E  0E15               	movlw	21
  1988   001110  5D34               	subwf	_t& (0+255),w,b
  1989   001112  A0D8               	btfss	status,0,c
  1990   001114  EF8E  F008         	goto	u9351
  1991   001118  EF90  F008         	goto	u9350
  1992   00111C                     u9351:
  1993   00111C  EF72  F008         	goto	l7612
  1994   001120                     u9350:
  1995   001120                     
  1996                           ; BSR set to: 1
  1997                           ;main.c: 372:         t = 0;
  1998   001120  0E00               	movlw	0
  1999   001122  6F35               	movwf	(_t+1)& (0+255),b
  2000   001124  0E00               	movlw	0
  2001   001126  6F34               	movwf	_t& (0+255),b
  2002                           
  2003                           ;main.c: 373:         TMR1 = 0x3CAF;
  2004   001128  0E3C               	movlw	60
  2005   00112A  6ECF               	movwf	207,c	;volatile
  2006   00112C  0EAF               	movlw	175
  2007   00112E  6ECE               	movwf	206,c	;volatile
  2008                           
  2009                           ;main.c: 374:         while (t <= 8) {
  2010   001130  EFA9  F008         	goto	l7628
  2011   001134                     l7622:
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;main.c: 376:             if (s == 0) {
  2015   001134  5136               	movf	_s& (0+255),w,b
  2016   001136  1137               	iorwf	(_s+1)& (0+255),w,b
  2017   001138  A4D8               	btfss	status,2,c
  2018   00113A  EFA1  F008         	goto	u9361
  2019   00113E  EFA3  F008         	goto	u9360
  2020   001142                     u9361:
  2021   001142  EFA7  F008         	goto	l7626
  2022   001146                     u9360:
  2023   001146                     
  2024                           ; BSR set to: 1
  2025                           ;main.c: 377:                 left();
  2026   001146  EC55  F027         	call	_left	;wreg free
  2027                           
  2028                           ;main.c: 378:             } else {
  2029   00114A  EFA9  F008         	goto	l7628
  2030   00114E                     l7626:
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;main.c: 379:                 ups();
  2034   00114E  EC19  F027         	call	_ups	;wreg free
  2035   001152                     l7628:
  2036                           
  2037                           ;main.c: 374:         while (t <= 8) {
  2038   001152  0101               	movlb	1	; () banked
  2039   001154  BF35               	btfsc	(_t+1)& (0+255),7,b
  2040   001156  EFB6  F008         	goto	u9371
  2041   00115A  5135               	movf	(_t+1)& (0+255),w,b
  2042   00115C  E109               	bnz	u9370
  2043   00115E  0E09               	movlw	9
  2044   001160  5D34               	subwf	_t& (0+255),w,b
  2045   001162  A0D8               	btfss	status,0,c
  2046   001164  EFB6  F008         	goto	u9371
  2047   001168  EFB8  F008         	goto	u9370
  2048   00116C                     u9371:
  2049   00116C  EF9A  F008         	goto	l7622
  2050   001170                     u9370:
  2051   001170                     
  2052                           ; BSR set to: 1
  2053                           ;main.c: 382:         t = 0;
  2054   001170  0E00               	movlw	0
  2055   001172  6F35               	movwf	(_t+1)& (0+255),b
  2056   001174  0E00               	movlw	0
  2057   001176  6F34               	movwf	_t& (0+255),b
  2058                           
  2059                           ;main.c: 383:         TMR1 = 0x3CAF;
  2060   001178  0E3C               	movlw	60
  2061   00117A  6ECF               	movwf	207,c	;volatile
  2062   00117C  0EAF               	movlw	175
  2063   00117E  6ECE               	movwf	206,c	;volatile
  2064                           
  2065                           ;main.c: 384:         while (t <= 20) {
  2066   001180  EFD1  F008         	goto	l7638
  2067   001184                     l7632:
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;main.c: 386:             if (s == 0) {
  2071   001184  5136               	movf	_s& (0+255),w,b
  2072   001186  1137               	iorwf	(_s+1)& (0+255),w,b
  2073   001188  A4D8               	btfss	status,2,c
  2074   00118A  EFC9  F008         	goto	u9381
  2075   00118E  EFCB  F008         	goto	u9380
  2076   001192                     u9381:
  2077   001192  EFCF  F008         	goto	l7636
  2078   001196                     u9380:
  2079   001196                     
  2080                           ; BSR set to: 1
  2081                           ;main.c: 387:                 brake();
  2082   001196  EC5C  F027         	call	_brake	;wreg free
  2083                           
  2084                           ;main.c: 388:             } else {
  2085   00119A  EFD1  F008         	goto	l7638
  2086   00119E                     l7636:
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;main.c: 389:                 ups();
  2090   00119E  EC19  F027         	call	_ups	;wreg free
  2091   0011A2                     l7638:
  2092                           
  2093                           ;main.c: 384:         while (t <= 20) {
  2094   0011A2  0101               	movlb	1	; () banked
  2095   0011A4  BF35               	btfsc	(_t+1)& (0+255),7,b
  2096   0011A6  EFDE  F008         	goto	u9391
  2097   0011AA  5135               	movf	(_t+1)& (0+255),w,b
  2098   0011AC  E109               	bnz	u9390
  2099   0011AE  0E15               	movlw	21
  2100   0011B0  5D34               	subwf	_t& (0+255),w,b
  2101   0011B2  A0D8               	btfss	status,0,c
  2102   0011B4  EFDE  F008         	goto	u9391
  2103   0011B8  EFE0  F008         	goto	u9390
  2104   0011BC                     u9391:
  2105   0011BC  EFC2  F008         	goto	l7632
  2106   0011C0                     u9390:
  2107   0011C0                     
  2108                           ; BSR set to: 1
  2109                           ;main.c: 392:         t = 0;
  2110   0011C0  0E00               	movlw	0
  2111   0011C2  6F35               	movwf	(_t+1)& (0+255),b
  2112   0011C4  0E00               	movlw	0
  2113   0011C6  6F34               	movwf	_t& (0+255),b
  2114                           
  2115                           ;main.c: 393:         TMR1 = 0x3CAF;
  2116   0011C8  0E3C               	movlw	60
  2117   0011CA  6ECF               	movwf	207,c	;volatile
  2118   0011CC  0EAF               	movlw	175
  2119   0011CE  6ECE               	movwf	206,c	;volatile
  2120                           
  2121                           ;main.c: 394:         while (t <= 22) {
  2122   0011D0  EFF9  F008         	goto	l7648
  2123   0011D4                     l7642:
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;main.c: 396:             if (s == 0) {
  2127   0011D4  5136               	movf	_s& (0+255),w,b
  2128   0011D6  1137               	iorwf	(_s+1)& (0+255),w,b
  2129   0011D8  A4D8               	btfss	status,2,c
  2130   0011DA  EFF1  F008         	goto	u9401
  2131   0011DE  EFF3  F008         	goto	u9400
  2132   0011E2                     u9401:
  2133   0011E2  EFF7  F008         	goto	l7646
  2134   0011E6                     u9400:
  2135   0011E6                     
  2136                           ; BSR set to: 1
  2137                           ;main.c: 397:                 forward();
  2138   0011E6  ECF9  F026         	call	_forward	;wreg free
  2139                           
  2140                           ;main.c: 398:             } else {
  2141   0011EA  EFF9  F008         	goto	l7648
  2142   0011EE                     l7646:
  2143                           
  2144                           ; BSR set to: 1
  2145                           ;main.c: 399:                 ups();
  2146   0011EE  EC19  F027         	call	_ups	;wreg free
  2147   0011F2                     l7648:
  2148                           
  2149                           ;main.c: 394:         while (t <= 22) {
  2150   0011F2  0101               	movlb	1	; () banked
  2151   0011F4  BF35               	btfsc	(_t+1)& (0+255),7,b
  2152   0011F6  EF06  F009         	goto	u9411
  2153   0011FA  5135               	movf	(_t+1)& (0+255),w,b
  2154   0011FC  E109               	bnz	u9410
  2155   0011FE  0E17               	movlw	23
  2156   001200  5D34               	subwf	_t& (0+255),w,b
  2157   001202  A0D8               	btfss	status,0,c
  2158   001204  EF06  F009         	goto	u9411
  2159   001208  EF08  F009         	goto	u9410
  2160   00120C                     u9411:
  2161   00120C  EFEA  F008         	goto	l7642
  2162   001210                     u9410:
  2163   001210                     
  2164                           ; BSR set to: 1
  2165                           ;main.c: 402:         t = 0;
  2166   001210  0E00               	movlw	0
  2167   001212  6F35               	movwf	(_t+1)& (0+255),b
  2168   001214  0E00               	movlw	0
  2169   001216  6F34               	movwf	_t& (0+255),b
  2170                           
  2171                           ;main.c: 403:         TMR1 = 0x3CAF;
  2172   001218  0E3C               	movlw	60
  2173   00121A  6ECF               	movwf	207,c	;volatile
  2174   00121C  0EAF               	movlw	175
  2175   00121E  6ECE               	movwf	206,c	;volatile
  2176                           
  2177                           ;main.c: 404:         while (t <= 29) {
  2178   001220  EF21  F009         	goto	l7658
  2179   001224                     l7652:
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;main.c: 406:             if (s == 0) {
  2183   001224  5136               	movf	_s& (0+255),w,b
  2184   001226  1137               	iorwf	(_s+1)& (0+255),w,b
  2185   001228  A4D8               	btfss	status,2,c
  2186   00122A  EF19  F009         	goto	u9421
  2187   00122E  EF1B  F009         	goto	u9420
  2188   001232                     u9421:
  2189   001232  EF1F  F009         	goto	l7656
  2190   001236                     u9420:
  2191   001236                     
  2192                           ; BSR set to: 1
  2193                           ;main.c: 407:                 brake();
  2194   001236  EC5C  F027         	call	_brake	;wreg free
  2195                           
  2196                           ;main.c: 408:             } else {
  2197   00123A  EF21  F009         	goto	l7658
  2198   00123E                     l7656:
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;main.c: 409:                 ups();
  2202   00123E  EC19  F027         	call	_ups	;wreg free
  2203   001242                     l7658:
  2204                           
  2205                           ;main.c: 404:         while (t <= 29) {
  2206   001242  0101               	movlb	1	; () banked
  2207   001244  BF35               	btfsc	(_t+1)& (0+255),7,b
  2208   001246  EF2E  F009         	goto	u9431
  2209   00124A  5135               	movf	(_t+1)& (0+255),w,b
  2210   00124C  E109               	bnz	u9430
  2211   00124E  0E1E               	movlw	30
  2212   001250  5D34               	subwf	_t& (0+255),w,b
  2213   001252  A0D8               	btfss	status,0,c
  2214   001254  EF2E  F009         	goto	u9431
  2215   001258  EF30  F009         	goto	u9430
  2216   00125C                     u9431:
  2217   00125C  EF12  F009         	goto	l7652
  2218   001260                     u9430:
  2219   001260                     l7660:
  2220                           
  2221                           ;main.c: 413:         start();
  2222   001260  ECB3  F024         	call	_start	;wreg free
  2223   001264                     
  2224                           ;main.c: 414:         while (b < 4.5) {
  2225   001264  C130  F08B         	movff	_b,___flge@ff1
  2226   001268  C131  F08C         	movff	_b+1,___flge@ff1+1
  2227   00126C  C132  F08D         	movff	_b+2,___flge@ff1+2
  2228   001270  C133  F08E         	movff	_b+3,___flge@ff1+3
  2229   001274  0E00               	movlw	0
  2230   001276  0100               	movlb	0	; () banked
  2231   001278  6F8F               	movwf	___flge@ff2& (0+255),b
  2232   00127A  0E00               	movlw	0
  2233   00127C  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  2234   00127E  0E90               	movlw	144
  2235   001280  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  2236   001282  0E40               	movlw	64
  2237   001284  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  2238   001286  ECE3  F01F         	call	___flge	;wreg free
  2239   00128A  0100               	movlb	0	; () banked
  2240   00128C  A0D8               	btfss	status,0,c
  2241   00128E  EF4B  F009         	goto	u9441
  2242   001292  EF4D  F009         	goto	u9440
  2243   001296                     u9441:
  2244   001296  EF30  F009         	goto	l7660
  2245   00129A                     u9440:
  2246   00129A                     
  2247                           ; BSR set to: 0
  2248                           ;main.c: 418:         t = 0;
  2249   00129A  0E00               	movlw	0
  2250   00129C  0101               	movlb	1	; () banked
  2251   00129E  6F35               	movwf	(_t+1)& (0+255),b
  2252   0012A0  0E00               	movlw	0
  2253   0012A2  6F34               	movwf	_t& (0+255),b
  2254                           
  2255                           ;main.c: 419:         TMR1 = 0x3CAF;
  2256   0012A4  0E3C               	movlw	60
  2257   0012A6  6ECF               	movwf	207,c	;volatile
  2258   0012A8  0EAF               	movlw	175
  2259   0012AA  6ECE               	movwf	206,c	;volatile
  2260                           
  2261                           ;main.c: 420:         while (t <= 8) {
  2262   0012AC  EF67  F009         	goto	l7674
  2263   0012B0                     l7668:
  2264                           
  2265                           ; BSR set to: 1
  2266                           ;main.c: 422:             if (s == 0) {
  2267   0012B0  5136               	movf	_s& (0+255),w,b
  2268   0012B2  1137               	iorwf	(_s+1)& (0+255),w,b
  2269   0012B4  A4D8               	btfss	status,2,c
  2270   0012B6  EF5F  F009         	goto	u9451
  2271   0012BA  EF61  F009         	goto	u9450
  2272   0012BE                     u9451:
  2273   0012BE  EF65  F009         	goto	l7672
  2274   0012C2                     u9450:
  2275   0012C2                     
  2276                           ; BSR set to: 1
  2277                           ;main.c: 423:                 left();
  2278   0012C2  EC55  F027         	call	_left	;wreg free
  2279                           
  2280                           ;main.c: 424:             } else {
  2281   0012C6  EF67  F009         	goto	l7674
  2282   0012CA                     l7672:
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;main.c: 425:                 ups();
  2286   0012CA  EC19  F027         	call	_ups	;wreg free
  2287   0012CE                     l7674:
  2288                           
  2289                           ;main.c: 420:         while (t <= 8) {
  2290   0012CE  0101               	movlb	1	; () banked
  2291   0012D0  BF35               	btfsc	(_t+1)& (0+255),7,b
  2292   0012D2  EF74  F009         	goto	u9461
  2293   0012D6  5135               	movf	(_t+1)& (0+255),w,b
  2294   0012D8  E109               	bnz	u9460
  2295   0012DA  0E09               	movlw	9
  2296   0012DC  5D34               	subwf	_t& (0+255),w,b
  2297   0012DE  A0D8               	btfss	status,0,c
  2298   0012E0  EF74  F009         	goto	u9461
  2299   0012E4  EF76  F009         	goto	u9460
  2300   0012E8                     u9461:
  2301   0012E8  EF58  F009         	goto	l7668
  2302   0012EC                     u9460:
  2303   0012EC                     
  2304                           ; BSR set to: 1
  2305                           ;main.c: 428:         t = 0;
  2306   0012EC  0E00               	movlw	0
  2307   0012EE  6F35               	movwf	(_t+1)& (0+255),b
  2308   0012F0  0E00               	movlw	0
  2309   0012F2  6F34               	movwf	_t& (0+255),b
  2310                           
  2311                           ;main.c: 429:         TMR1 = 0x3CAF;
  2312   0012F4  0E3C               	movlw	60
  2313   0012F6  6ECF               	movwf	207,c	;volatile
  2314   0012F8  0EAF               	movlw	175
  2315   0012FA  6ECE               	movwf	206,c	;volatile
  2316                           
  2317                           ;main.c: 430:         while (t <= 20) {
  2318   0012FC  EF8F  F009         	goto	l7684
  2319   001300                     l7678:
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;main.c: 431:             if (s == 0) {
  2323   001300  5136               	movf	_s& (0+255),w,b
  2324   001302  1137               	iorwf	(_s+1)& (0+255),w,b
  2325   001304  A4D8               	btfss	status,2,c
  2326   001306  EF87  F009         	goto	u9471
  2327   00130A  EF89  F009         	goto	u9470
  2328   00130E                     u9471:
  2329   00130E  EF8D  F009         	goto	l7682
  2330   001312                     u9470:
  2331   001312                     
  2332                           ; BSR set to: 1
  2333                           ;main.c: 432:                 brake();
  2334   001312  EC5C  F027         	call	_brake	;wreg free
  2335                           
  2336                           ;main.c: 433:             } else {
  2337   001316  EF8F  F009         	goto	l7684
  2338   00131A                     l7682:
  2339                           
  2340                           ; BSR set to: 1
  2341                           ;main.c: 434:                 ups();
  2342   00131A  EC19  F027         	call	_ups	;wreg free
  2343   00131E                     l7684:
  2344                           
  2345                           ;main.c: 430:         while (t <= 20) {
  2346   00131E  0101               	movlb	1	; () banked
  2347   001320  BF35               	btfsc	(_t+1)& (0+255),7,b
  2348   001322  EF9C  F009         	goto	u9481
  2349   001326  5135               	movf	(_t+1)& (0+255),w,b
  2350   001328  E109               	bnz	u9480
  2351   00132A  0E15               	movlw	21
  2352   00132C  5D34               	subwf	_t& (0+255),w,b
  2353   00132E  A0D8               	btfss	status,0,c
  2354   001330  EF9C  F009         	goto	u9481
  2355   001334  EF9E  F009         	goto	u9480
  2356   001338                     u9481:
  2357   001338  EF80  F009         	goto	l7678
  2358   00133C                     u9480:
  2359   00133C                     
  2360                           ; BSR set to: 1
  2361                           ;main.c: 437:         t = 0;
  2362   00133C  0E00               	movlw	0
  2363   00133E  6F35               	movwf	(_t+1)& (0+255),b
  2364   001340  0E00               	movlw	0
  2365   001342  6F34               	movwf	_t& (0+255),b
  2366                           
  2367                           ;main.c: 438:         TMR1 = 0x3CAF;
  2368   001344  0E3C               	movlw	60
  2369   001346  6ECF               	movwf	207,c	;volatile
  2370   001348  0EAF               	movlw	175
  2371   00134A  6ECE               	movwf	206,c	;volatile
  2372                           
  2373                           ;main.c: 439:         while (t <= 19) {
  2374   00134C  EFB7  F009         	goto	l7694
  2375   001350                     l7688:
  2376                           
  2377                           ; BSR set to: 1
  2378                           ;main.c: 441:             if (s == 0) {
  2379   001350  5136               	movf	_s& (0+255),w,b
  2380   001352  1137               	iorwf	(_s+1)& (0+255),w,b
  2381   001354  A4D8               	btfss	status,2,c
  2382   001356  EFAF  F009         	goto	u9491
  2383   00135A  EFB1  F009         	goto	u9490
  2384   00135E                     u9491:
  2385   00135E  EFB5  F009         	goto	l7692
  2386   001362                     u9490:
  2387   001362                     
  2388                           ; BSR set to: 1
  2389                           ;main.c: 442:                 forward();
  2390   001362  ECF9  F026         	call	_forward	;wreg free
  2391                           
  2392                           ;main.c: 443:             } else {
  2393   001366  EFB7  F009         	goto	l7694
  2394   00136A                     l7692:
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;main.c: 444:                 ups();
  2398   00136A  EC19  F027         	call	_ups	;wreg free
  2399   00136E                     l7694:
  2400                           
  2401                           ;main.c: 439:         while (t <= 19) {
  2402   00136E  0101               	movlb	1	; () banked
  2403   001370  BF35               	btfsc	(_t+1)& (0+255),7,b
  2404   001372  EFC4  F009         	goto	u9501
  2405   001376  5135               	movf	(_t+1)& (0+255),w,b
  2406   001378  E109               	bnz	u9500
  2407   00137A  0E14               	movlw	20
  2408   00137C  5D34               	subwf	_t& (0+255),w,b
  2409   00137E  A0D8               	btfss	status,0,c
  2410   001380  EFC4  F009         	goto	u9501
  2411   001384  EFC6  F009         	goto	u9500
  2412   001388                     u9501:
  2413   001388  EFA8  F009         	goto	l7688
  2414   00138C                     u9500:
  2415   00138C                     
  2416                           ; BSR set to: 1
  2417                           ;main.c: 447:         t = 0;
  2418   00138C  0E00               	movlw	0
  2419   00138E  6F35               	movwf	(_t+1)& (0+255),b
  2420   001390  0E00               	movlw	0
  2421   001392  6F34               	movwf	_t& (0+255),b
  2422                           
  2423                           ;main.c: 448:         TMR1 = 0x3CAF;
  2424   001394  0E3C               	movlw	60
  2425   001396  6ECF               	movwf	207,c	;volatile
  2426   001398  0EAF               	movlw	175
  2427   00139A  6ECE               	movwf	206,c	;volatile
  2428                           
  2429                           ;main.c: 449:         while (t <= 20) {
  2430   00139C  EFDF  F009         	goto	l7704
  2431   0013A0                     l7698:
  2432                           
  2433                           ; BSR set to: 1
  2434                           ;main.c: 451:             if (s == 0) {
  2435   0013A0  5136               	movf	_s& (0+255),w,b
  2436   0013A2  1137               	iorwf	(_s+1)& (0+255),w,b
  2437   0013A4  A4D8               	btfss	status,2,c
  2438   0013A6  EFD7  F009         	goto	u9511
  2439   0013AA  EFD9  F009         	goto	u9510
  2440   0013AE                     u9511:
  2441   0013AE  EFDD  F009         	goto	l7702
  2442   0013B2                     u9510:
  2443   0013B2                     
  2444                           ; BSR set to: 1
  2445                           ;main.c: 452:                 brake();
  2446   0013B2  EC5C  F027         	call	_brake	;wreg free
  2447                           
  2448                           ;main.c: 453:             } else {
  2449   0013B6  EFDF  F009         	goto	l7704
  2450   0013BA                     l7702:
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;main.c: 454:                 ups();
  2454   0013BA  EC19  F027         	call	_ups	;wreg free
  2455   0013BE                     l7704:
  2456                           
  2457                           ;main.c: 449:         while (t <= 20) {
  2458   0013BE  0101               	movlb	1	; () banked
  2459   0013C0  BF35               	btfsc	(_t+1)& (0+255),7,b
  2460   0013C2  EFEC  F009         	goto	u9521
  2461   0013C6  5135               	movf	(_t+1)& (0+255),w,b
  2462   0013C8  E109               	bnz	u9520
  2463   0013CA  0E15               	movlw	21
  2464   0013CC  5D34               	subwf	_t& (0+255),w,b
  2465   0013CE  A0D8               	btfss	status,0,c
  2466   0013D0  EFEC  F009         	goto	u9521
  2467   0013D4  EFEE  F009         	goto	u9520
  2468   0013D8                     u9521:
  2469   0013D8  EFD0  F009         	goto	l7698
  2470   0013DC                     u9520:
  2471   0013DC                     
  2472                           ; BSR set to: 1
  2473                           ;main.c: 457:         t = 0;
  2474   0013DC  0E00               	movlw	0
  2475   0013DE  6F35               	movwf	(_t+1)& (0+255),b
  2476   0013E0  0E00               	movlw	0
  2477   0013E2  6F34               	movwf	_t& (0+255),b
  2478                           
  2479                           ;main.c: 458:         TMR1 = 0x3CAF;
  2480   0013E4  0E3C               	movlw	60
  2481   0013E6  6ECF               	movwf	207,c	;volatile
  2482   0013E8  0EAF               	movlw	175
  2483   0013EA  6ECE               	movwf	206,c	;volatile
  2484                           
  2485                           ;main.c: 459:         while (t <= 8) {
  2486   0013EC  EF07  F00A         	goto	l7714
  2487   0013F0                     l7708:
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;main.c: 461:             if (s == 0) {
  2491   0013F0  5136               	movf	_s& (0+255),w,b
  2492   0013F2  1137               	iorwf	(_s+1)& (0+255),w,b
  2493   0013F4  A4D8               	btfss	status,2,c
  2494   0013F6  EFFF  F009         	goto	u9531
  2495   0013FA  EF01  F00A         	goto	u9530
  2496   0013FE                     u9531:
  2497   0013FE  EF05  F00A         	goto	l7712
  2498   001402                     u9530:
  2499   001402                     
  2500                           ; BSR set to: 1
  2501                           ;main.c: 462:                 left();
  2502   001402  EC55  F027         	call	_left	;wreg free
  2503                           
  2504                           ;main.c: 463:             } else {
  2505   001406  EF07  F00A         	goto	l7714
  2506   00140A                     l7712:
  2507                           
  2508                           ; BSR set to: 1
  2509                           ;main.c: 464:                 ups();
  2510   00140A  EC19  F027         	call	_ups	;wreg free
  2511   00140E                     l7714:
  2512                           
  2513                           ;main.c: 459:         while (t <= 8) {
  2514   00140E  0101               	movlb	1	; () banked
  2515   001410  BF35               	btfsc	(_t+1)& (0+255),7,b
  2516   001412  EF14  F00A         	goto	u9541
  2517   001416  5135               	movf	(_t+1)& (0+255),w,b
  2518   001418  E109               	bnz	u9540
  2519   00141A  0E09               	movlw	9
  2520   00141C  5D34               	subwf	_t& (0+255),w,b
  2521   00141E  A0D8               	btfss	status,0,c
  2522   001420  EF14  F00A         	goto	u9541
  2523   001424  EF16  F00A         	goto	u9540
  2524   001428                     u9541:
  2525   001428  EFF8  F009         	goto	l7708
  2526   00142C                     u9540:
  2527   00142C                     
  2528                           ; BSR set to: 1
  2529                           ;main.c: 467:         t = 0;
  2530   00142C  0E00               	movlw	0
  2531   00142E  6F35               	movwf	(_t+1)& (0+255),b
  2532   001430  0E00               	movlw	0
  2533   001432  6F34               	movwf	_t& (0+255),b
  2534                           
  2535                           ;main.c: 468:         TMR1 = 0x3CAF;
  2536   001434  0E3C               	movlw	60
  2537   001436  6ECF               	movwf	207,c	;volatile
  2538   001438  0EAF               	movlw	175
  2539   00143A  6ECE               	movwf	206,c	;volatile
  2540                           
  2541                           ;main.c: 469:         while (t <= 20) {
  2542   00143C  EF2F  F00A         	goto	l7724
  2543   001440                     l7718:
  2544                           
  2545                           ; BSR set to: 1
  2546                           ;main.c: 471:             if (s == 0) {
  2547   001440  5136               	movf	_s& (0+255),w,b
  2548   001442  1137               	iorwf	(_s+1)& (0+255),w,b
  2549   001444  A4D8               	btfss	status,2,c
  2550   001446  EF27  F00A         	goto	u9551
  2551   00144A  EF29  F00A         	goto	u9550
  2552   00144E                     u9551:
  2553   00144E  EF2D  F00A         	goto	l7722
  2554   001452                     u9550:
  2555   001452                     
  2556                           ; BSR set to: 1
  2557                           ;main.c: 472:                 brake();
  2558   001452  EC5C  F027         	call	_brake	;wreg free
  2559                           
  2560                           ;main.c: 473:             } else {
  2561   001456  EF2F  F00A         	goto	l7724
  2562   00145A                     l7722:
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;main.c: 474:                 ups();
  2566   00145A  EC19  F027         	call	_ups	;wreg free
  2567   00145E                     l7724:
  2568                           
  2569                           ;main.c: 469:         while (t <= 20) {
  2570   00145E  0101               	movlb	1	; () banked
  2571   001460  BF35               	btfsc	(_t+1)& (0+255),7,b
  2572   001462  EF3C  F00A         	goto	u9561
  2573   001466  5135               	movf	(_t+1)& (0+255),w,b
  2574   001468  E109               	bnz	u9560
  2575   00146A  0E15               	movlw	21
  2576   00146C  5D34               	subwf	_t& (0+255),w,b
  2577   00146E  A0D8               	btfss	status,0,c
  2578   001470  EF3C  F00A         	goto	u9561
  2579   001474  EF3E  F00A         	goto	u9560
  2580   001478                     u9561:
  2581   001478  EF20  F00A         	goto	l7718
  2582   00147C                     u9560:
  2583   00147C                     
  2584                           ; BSR set to: 1
  2585                           ;main.c: 477:         t = 0;
  2586   00147C  0E00               	movlw	0
  2587   00147E  6F35               	movwf	(_t+1)& (0+255),b
  2588   001480  0E00               	movlw	0
  2589   001482  6F34               	movwf	_t& (0+255),b
  2590                           
  2591                           ;main.c: 478:         TMR1 = 0x3CAF;
  2592   001484  0E3C               	movlw	60
  2593   001486  6ECF               	movwf	207,c	;volatile
  2594   001488  0EAF               	movlw	175
  2595   00148A  6ECE               	movwf	206,c	;volatile
  2596                           
  2597                           ;main.c: 479:         while (t <= 18) {
  2598   00148C  EF57  F00A         	goto	l7734
  2599   001490                     l7728:
  2600                           
  2601                           ; BSR set to: 1
  2602                           ;main.c: 481:             if (s == 0) {
  2603   001490  5136               	movf	_s& (0+255),w,b
  2604   001492  1137               	iorwf	(_s+1)& (0+255),w,b
  2605   001494  A4D8               	btfss	status,2,c
  2606   001496  EF4F  F00A         	goto	u9571
  2607   00149A  EF51  F00A         	goto	u9570
  2608   00149E                     u9571:
  2609   00149E  EF55  F00A         	goto	l7732
  2610   0014A2                     u9570:
  2611   0014A2                     
  2612                           ; BSR set to: 1
  2613                           ;main.c: 482:                 forward();
  2614   0014A2  ECF9  F026         	call	_forward	;wreg free
  2615                           
  2616                           ;main.c: 483:             } else {
  2617   0014A6  EF57  F00A         	goto	l7734
  2618   0014AA                     l7732:
  2619                           
  2620                           ; BSR set to: 1
  2621                           ;main.c: 484:                 ups();
  2622   0014AA  EC19  F027         	call	_ups	;wreg free
  2623   0014AE                     l7734:
  2624                           
  2625                           ;main.c: 479:         while (t <= 18) {
  2626   0014AE  0101               	movlb	1	; () banked
  2627   0014B0  BF35               	btfsc	(_t+1)& (0+255),7,b
  2628   0014B2  EF64  F00A         	goto	u9581
  2629   0014B6  5135               	movf	(_t+1)& (0+255),w,b
  2630   0014B8  E109               	bnz	u9580
  2631   0014BA  0E13               	movlw	19
  2632   0014BC  5D34               	subwf	_t& (0+255),w,b
  2633   0014BE  A0D8               	btfss	status,0,c
  2634   0014C0  EF64  F00A         	goto	u9581
  2635   0014C4  EF66  F00A         	goto	u9580
  2636   0014C8                     u9581:
  2637   0014C8  EF48  F00A         	goto	l7728
  2638   0014CC                     u9580:
  2639   0014CC                     
  2640                           ; BSR set to: 1
  2641                           ;main.c: 487:         t = 0;
  2642   0014CC  0E00               	movlw	0
  2643   0014CE  6F35               	movwf	(_t+1)& (0+255),b
  2644   0014D0  0E00               	movlw	0
  2645   0014D2  6F34               	movwf	_t& (0+255),b
  2646                           
  2647                           ;main.c: 488:         TMR1 = 0x3CAF;
  2648   0014D4  0E3C               	movlw	60
  2649   0014D6  6ECF               	movwf	207,c	;volatile
  2650   0014D8  0EAF               	movlw	175
  2651   0014DA  6ECE               	movwf	206,c	;volatile
  2652                           
  2653                           ;main.c: 489:         while (t <= 20) {
  2654   0014DC  EF7F  F00A         	goto	l7744
  2655   0014E0                     l7738:
  2656                           
  2657                           ; BSR set to: 1
  2658                           ;main.c: 491:             if (s == 0) {
  2659   0014E0  5136               	movf	_s& (0+255),w,b
  2660   0014E2  1137               	iorwf	(_s+1)& (0+255),w,b
  2661   0014E4  A4D8               	btfss	status,2,c
  2662   0014E6  EF77  F00A         	goto	u9591
  2663   0014EA  EF79  F00A         	goto	u9590
  2664   0014EE                     u9591:
  2665   0014EE  EF7D  F00A         	goto	l7742
  2666   0014F2                     u9590:
  2667   0014F2                     
  2668                           ; BSR set to: 1
  2669                           ;main.c: 492:                 brake();
  2670   0014F2  EC5C  F027         	call	_brake	;wreg free
  2671                           
  2672                           ;main.c: 493:             } else {
  2673   0014F6  EF7F  F00A         	goto	l7744
  2674   0014FA                     l7742:
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;main.c: 494:                 ups();
  2678   0014FA  EC19  F027         	call	_ups	;wreg free
  2679   0014FE                     l7744:
  2680                           
  2681                           ;main.c: 489:         while (t <= 20) {
  2682   0014FE  0101               	movlb	1	; () banked
  2683   001500  BF35               	btfsc	(_t+1)& (0+255),7,b
  2684   001502  EF8C  F00A         	goto	u9601
  2685   001506  5135               	movf	(_t+1)& (0+255),w,b
  2686   001508  E109               	bnz	u9600
  2687   00150A  0E15               	movlw	21
  2688   00150C  5D34               	subwf	_t& (0+255),w,b
  2689   00150E  A0D8               	btfss	status,0,c
  2690   001510  EF8C  F00A         	goto	u9601
  2691   001514  EF8E  F00A         	goto	u9600
  2692   001518                     u9601:
  2693   001518  EF70  F00A         	goto	l7738
  2694   00151C                     u9600:
  2695   00151C                     
  2696                           ; BSR set to: 1
  2697                           ;main.c: 497:         t = 0;
  2698   00151C  0E00               	movlw	0
  2699   00151E  6F35               	movwf	(_t+1)& (0+255),b
  2700   001520  0E00               	movlw	0
  2701   001522  6F34               	movwf	_t& (0+255),b
  2702                           
  2703                           ;main.c: 498:         TMR1 = 0x3CAF;
  2704   001524  0E3C               	movlw	60
  2705   001526  6ECF               	movwf	207,c	;volatile
  2706   001528  0EAF               	movlw	175
  2707   00152A  6ECE               	movwf	206,c	;volatile
  2708                           
  2709                           ;main.c: 499:         while (t <= 8) {
  2710   00152C  EFA7  F00A         	goto	l7754
  2711   001530                     l7748:
  2712                           
  2713                           ; BSR set to: 1
  2714                           ;main.c: 501:             if (s == 0) {
  2715   001530  5136               	movf	_s& (0+255),w,b
  2716   001532  1137               	iorwf	(_s+1)& (0+255),w,b
  2717   001534  A4D8               	btfss	status,2,c
  2718   001536  EF9F  F00A         	goto	u9611
  2719   00153A  EFA1  F00A         	goto	u9610
  2720   00153E                     u9611:
  2721   00153E  EFA5  F00A         	goto	l7752
  2722   001542                     u9610:
  2723   001542                     
  2724                           ; BSR set to: 1
  2725                           ;main.c: 502:                 left();
  2726   001542  EC55  F027         	call	_left	;wreg free
  2727                           
  2728                           ;main.c: 503:             } else {
  2729   001546  EFA7  F00A         	goto	l7754
  2730   00154A                     l7752:
  2731                           
  2732                           ; BSR set to: 1
  2733                           ;main.c: 504:                 ups();
  2734   00154A  EC19  F027         	call	_ups	;wreg free
  2735   00154E                     l7754:
  2736                           
  2737                           ;main.c: 499:         while (t <= 8) {
  2738   00154E  0101               	movlb	1	; () banked
  2739   001550  BF35               	btfsc	(_t+1)& (0+255),7,b
  2740   001552  EFB4  F00A         	goto	u9621
  2741   001556  5135               	movf	(_t+1)& (0+255),w,b
  2742   001558  E109               	bnz	u9620
  2743   00155A  0E09               	movlw	9
  2744   00155C  5D34               	subwf	_t& (0+255),w,b
  2745   00155E  A0D8               	btfss	status,0,c
  2746   001560  EFB4  F00A         	goto	u9621
  2747   001564  EFB6  F00A         	goto	u9620
  2748   001568                     u9621:
  2749   001568  EF98  F00A         	goto	l7748
  2750   00156C                     u9620:
  2751   00156C                     
  2752                           ; BSR set to: 1
  2753                           ;main.c: 507:         t = 0;
  2754   00156C  0E00               	movlw	0
  2755   00156E  6F35               	movwf	(_t+1)& (0+255),b
  2756   001570  0E00               	movlw	0
  2757   001572  6F34               	movwf	_t& (0+255),b
  2758                           
  2759                           ;main.c: 508:         TMR1 = 0x3CAF;
  2760   001574  0E3C               	movlw	60
  2761   001576  6ECF               	movwf	207,c	;volatile
  2762   001578  0EAF               	movlw	175
  2763   00157A  6ECE               	movwf	206,c	;volatile
  2764                           
  2765                           ;main.c: 509:         while (t <= 50) {
  2766   00157C  EFCF  F00A         	goto	l7764
  2767   001580                     l7758:
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;main.c: 511:             if (s == 0) {
  2771   001580  5136               	movf	_s& (0+255),w,b
  2772   001582  1137               	iorwf	(_s+1)& (0+255),w,b
  2773   001584  A4D8               	btfss	status,2,c
  2774   001586  EFC7  F00A         	goto	u9631
  2775   00158A  EFC9  F00A         	goto	u9630
  2776   00158E                     u9631:
  2777   00158E  EFCD  F00A         	goto	l7762
  2778   001592                     u9630:
  2779   001592                     
  2780                           ; BSR set to: 1
  2781                           ;main.c: 512:                 brake();
  2782   001592  EC5C  F027         	call	_brake	;wreg free
  2783                           
  2784                           ;main.c: 513:             } else {
  2785   001596  EFCF  F00A         	goto	l7764
  2786   00159A                     l7762:
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;main.c: 514:                 ups();
  2790   00159A  EC19  F027         	call	_ups	;wreg free
  2791   00159E                     l7764:
  2792                           
  2793                           ;main.c: 509:         while (t <= 50) {
  2794   00159E  0101               	movlb	1	; () banked
  2795   0015A0  BF35               	btfsc	(_t+1)& (0+255),7,b
  2796   0015A2  EFDC  F00A         	goto	u9641
  2797   0015A6  5135               	movf	(_t+1)& (0+255),w,b
  2798   0015A8  E109               	bnz	u9640
  2799   0015AA  0E33               	movlw	51
  2800   0015AC  5D34               	subwf	_t& (0+255),w,b
  2801   0015AE  A0D8               	btfss	status,0,c
  2802   0015B0  EFDC  F00A         	goto	u9641
  2803   0015B4  EFDE  F00A         	goto	u9640
  2804   0015B8                     u9641:
  2805   0015B8  EFC0  F00A         	goto	l7758
  2806   0015BC                     u9640:
  2807   0015BC                     
  2808                           ; BSR set to: 1
  2809                           ;main.c: 517:         t = 0;
  2810   0015BC  0E00               	movlw	0
  2811   0015BE  6F35               	movwf	(_t+1)& (0+255),b
  2812   0015C0  0E00               	movlw	0
  2813   0015C2  6F34               	movwf	_t& (0+255),b
  2814                           
  2815                           ;main.c: 518:         TMR1 = 0x3CAF;
  2816   0015C4  0E3C               	movlw	60
  2817   0015C6  6ECF               	movwf	207,c	;volatile
  2818   0015C8  0EAF               	movlw	175
  2819   0015CA  6ECE               	movwf	206,c	;volatile
  2820   0015CC                     
  2821                           ; BSR set to: 1
  2822                           ;main.c: 519:     }
  2823   0015CC  4B40               	infsnz	_i& (0+255),f,b
  2824   0015CE  2B41               	incf	(_i+1)& (0+255),f,b
  2825   0015D0  EF11  F008         	goto	l7590
  2826   0015D4                     l483:
  2827                           
  2828                           ; BSR set to: 1
  2829   0015D4  0012               	return		;funcret
  2830   0015D6                     __end_of_automatic:
  2831                           	callstack 0
  2832                           
  2833 ;; *************** function _ups *****************
  2834 ;; Defined at:
  2835 ;;		line 323 in file "main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2849 ;;      Params:         0       0       0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; Hardware stack levels required when called: 4
  2856 ;; This function calls:
  2857 ;;		_brake
  2858 ;; This function is called by:
  2859 ;;		_automatic
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text4
  2864   004E32                     __ptext4:
  2865                           	callstack 0
  2866   004E32                     _ups:
  2867                           	callstack 25
  2868   004E32                     
  2869                           ;main.c: 324:     TMR3ON = 0;
  2870   004E32  90B1               	bcf	4017,0,c	;volatile
  2871   004E34                     l7458:
  2872                           
  2873                           ;main.c: 326:         brake();
  2874   004E34  EC5C  F027         	call	_brake	;wreg free
  2875   004E38                     
  2876                           ;main.c: 327:         if (s == 0) {
  2877   004E38  0101               	movlb	1	; () banked
  2878   004E3A  5136               	movf	_s& (0+255),w,b
  2879   004E3C  1137               	iorwf	(_s+1)& (0+255),w,b
  2880   004E3E  A4D8               	btfss	status,2,c
  2881   004E40  EF24  F027         	goto	u9201
  2882   004E44  EF26  F027         	goto	u9200
  2883   004E48                     u9201:
  2884   004E48  EF1A  F027         	goto	l7458
  2885   004E4C                     u9200:
  2886   004E4C                     
  2887                           ; BSR set to: 1
  2888                           ;main.c: 328:             TMR3ON = 1;
  2889   004E4C  80B1               	bsf	4017,0,c	;volatile
  2890   004E4E                     
  2891                           ; BSR set to: 1
  2892   004E4E  0012               	return		;funcret
  2893   004E50                     __end_of_ups:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _start *****************
  2897 ;; Defined at:
  2898 ;;		line 283 in file "main.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2912 ;;      Params:         0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0
  2914 ;;      Temps:          0       2       0       0       0       0       0
  2915 ;;      Totals:         0       2       0       0       0       0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 4
  2919 ;; This function calls:
  2920 ;;		___flmul
  2921 ;;		___xxtofl
  2922 ;; This function is called by:
  2923 ;;		_automatic
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text5
  2928   004966                     __ptext5:
  2929                           	callstack 0
  2930   004966                     _start:
  2931                           	callstack 25
  2932   004966                     
  2933                           ;main.c: 284:     ADCON0bits.GO = 1;
  2934   004966  82C2               	bsf	194,1,c	;volatile
  2935   004968                     l355:
  2936   004968  B2C2               	btfsc	4034,1,c	;volatile
  2937   00496A  EFB9  F024         	goto	u8861
  2938   00496E  EFBB  F024         	goto	u8860
  2939   004972                     u8861:
  2940   004972  EFB4  F024         	goto	l355
  2941   004976                     u8860:
  2942   004976                     
  2943                           ;main.c: 286:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2944   004976  0E82               	movlw	130
  2945   004978  0100               	movlb	0	; () banked
  2946   00497A  6F8B               	movwf	??_start& (0+255),b
  2947   00497C  0EDD               	movlw	221
  2948   00497E                     u9767:
  2949   00497E  2EE8               	decfsz	wreg,f,c
  2950   004980  D7FE               	bra	u9767
  2951   004982  2F8B               	decfsz	??_start& (0+255),f,b
  2952   004984  D7FC               	bra	u9767
  2953   004986  D000               	nop2	
  2954   004988                     
  2955                           ;main.c: 287:     a = ADRESH << 8 | ADRESL;
  2956   004988  50C3               	movf	195,w,c	;volatile
  2957   00498A  CFC4 F08B          	movff	4036,??_start	;volatile
  2958   00498E  0100               	movlb	0	; () banked
  2959   004990  6B8C               	clrf	(??_start+1)& (0+255),b
  2960   004992  C08B  F08C         	movff	??_start,??_start+1
  2961   004996  6B8B               	clrf	??_start& (0+255),b
  2962   004998  118B               	iorwf	??_start& (0+255),w,b
  2963   00499A  6E1D               	movwf	_a^0,c
  2964   00499C  518C               	movf	(??_start+1)& (0+255),w,b
  2965   00499E  6E1E               	movwf	(_a+1)^0,c
  2966   0049A0                     
  2967                           ; BSR set to: 0
  2968                           ;main.c: 288:     b = (float) a * (5.0 / 1023.0);
  2969   0049A0  C01D  F064         	movff	_a,___xxtofl@val
  2970   0049A4  C01E  F065         	movff	_a+1,___xxtofl@val+1
  2971   0049A8  0E00               	movlw	0
  2972   0049AA  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2973   0049AC  0EFF               	movlw	-1
  2974   0049AE  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  2975   0049B0  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  2976   0049B2  0E01               	movlw	1
  2977   0049B4  EC32  F01C         	call	___xxtofl
  2978   0049B8  C064  F072         	movff	?___xxtofl,___flmul@b
  2979   0049BC  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  2980   0049C0  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  2981   0049C4  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  2982   0049C8  0E0A               	movlw	10
  2983   0049CA  0100               	movlb	0	; () banked
  2984   0049CC  6F76               	movwf	___flmul@a& (0+255),b
  2985   0049CE  0E28               	movlw	40
  2986   0049D0  6F77               	movwf	(___flmul@a+1)& (0+255),b
  2987   0049D2  0EA0               	movlw	160
  2988   0049D4  6F78               	movwf	(___flmul@a+2)& (0+255),b
  2989   0049D6  0E3B               	movlw	59
  2990   0049D8  6F79               	movwf	(___flmul@a+3)& (0+255),b
  2991   0049DA  EC4C  F00D         	call	___flmul	;wreg free
  2992   0049DE  C072  F130         	movff	?___flmul,_b
  2993   0049E2  C073  F131         	movff	?___flmul+1,_b+1
  2994   0049E6  C074  F132         	movff	?___flmul+2,_b+2
  2995   0049EA  C075  F133         	movff	?___flmul+3,_b+3
  2996   0049EE                     
  2997                           ;main.c: 289:     _delay((unsigned long)((3)*(4000000/4000000.0)));
  2998   0049EE  D000               	nop2		;2 cycle nop
  2999   0049F0  F000               	nop	
  3000   0049F2  0012               	return		;funcret
  3001   0049F4                     __end_of_start:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _Manual *****************
  3005 ;; Defined at:
  3006 ;;		line 292 in file "main.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3020 ;;      Params:         0       0       0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 14
  3027 ;; This function calls:
  3028 ;;		_PWM_increase
  3029 ;;		_back
  3030 ;;		_brake
  3031 ;;		_forward
  3032 ;;		_left
  3033 ;;		_right
  3034 ;;		_ups2
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text6
  3041   0042CE                     __ptext6:
  3042                           	callstack 0
  3043   0042CE                     _Manual:
  3044                           	callstack 16
  3045   0042CE                     
  3046                           ;main.c: 293:     if (m == 0) {
  3047   0042CE  0101               	movlb	1	; () banked
  3048   0042D0  5142               	movf	_m& (0+255),w,b
  3049   0042D2  A4D8               	btfss	status,2,c
  3050   0042D4  EF6E  F021         	goto	u9211
  3051   0042D8  EF70  F021         	goto	u9210
  3052   0042DC                     u9211:
  3053   0042DC  EF74  F021         	goto	l7556
  3054   0042E0                     u9210:
  3055   0042E0                     
  3056                           ; BSR set to: 1
  3057                           ;main.c: 294:         brake();
  3058   0042E0  EC5C  F027         	call	_brake	;wreg free
  3059                           
  3060                           ;main.c: 295:     } else if (m == 1) {
  3061   0042E4  EFCD  F021         	goto	l362
  3062   0042E8                     l7556:
  3063                           
  3064                           ; BSR set to: 1
  3065   0042E8  0542               	decf	_m& (0+255),w,b
  3066   0042EA  A4D8               	btfss	status,2,c
  3067   0042EC  EF7A  F021         	goto	u9221
  3068   0042F0  EF7C  F021         	goto	u9220
  3069   0042F4                     u9221:
  3070   0042F4  EF8D  F021         	goto	l7564
  3071   0042F8                     u9220:
  3072   0042F8                     
  3073                           ; BSR set to: 1
  3074                           ;main.c: 296:         if (s == 0) {
  3075   0042F8  5136               	movf	_s& (0+255),w,b
  3076   0042FA  1137               	iorwf	(_s+1)& (0+255),w,b
  3077   0042FC  A4D8               	btfss	status,2,c
  3078   0042FE  EF83  F021         	goto	u9231
  3079   004302  EF85  F021         	goto	u9230
  3080   004306                     u9231:
  3081   004306  EF89  F021         	goto	l7562
  3082   00430A                     u9230:
  3083   00430A                     
  3084                           ; BSR set to: 1
  3085                           ;main.c: 297:             forward();
  3086   00430A  ECF9  F026         	call	_forward	;wreg free
  3087                           
  3088                           ;main.c: 298:         } else {
  3089   00430E  EFCD  F021         	goto	l362
  3090   004312                     l7562:
  3091                           
  3092                           ; BSR set to: 1
  3093                           ;main.c: 299:             ups2();
  3094   004312  ECE8  F026         	call	_ups2	;wreg free
  3095   004316  EFCD  F021         	goto	l362
  3096   00431A                     l7564:
  3097                           
  3098                           ; BSR set to: 1
  3099   00431A  0E02               	movlw	2
  3100   00431C  1942               	xorwf	_m& (0+255),w,b
  3101   00431E  A4D8               	btfss	status,2,c
  3102   004320  EF94  F021         	goto	u9241
  3103   004324  EF96  F021         	goto	u9240
  3104   004328                     u9241:
  3105   004328  EFA3  F021         	goto	l7572
  3106   00432C                     u9240:
  3107   00432C                     
  3108                           ; BSR set to: 1
  3109                           ;main.c: 302:         if (s == 0) {
  3110   00432C  5136               	movf	_s& (0+255),w,b
  3111   00432E  1137               	iorwf	(_s+1)& (0+255),w,b
  3112   004330  A4D8               	btfss	status,2,c
  3113   004332  EF9D  F021         	goto	u9251
  3114   004336  EF9F  F021         	goto	u9250
  3115   00433A                     u9251:
  3116   00433A  EF89  F021         	goto	l7562
  3117   00433E                     u9250:
  3118   00433E                     
  3119                           ; BSR set to: 1
  3120                           ;main.c: 303:             back();
  3121   00433E  EC09  F027         	call	_back	;wreg free
  3122                           
  3123                           ;main.c: 304:         } else {
  3124   004342  EFCD  F021         	goto	l362
  3125   004346                     l7572:
  3126                           
  3127                           ; BSR set to: 1
  3128   004346  0E03               	movlw	3
  3129   004348  1942               	xorwf	_m& (0+255),w,b
  3130   00434A  A4D8               	btfss	status,2,c
  3131   00434C  EFAA  F021         	goto	u9261
  3132   004350  EFAC  F021         	goto	u9260
  3133   004354                     u9261:
  3134   004354  EFB9  F021         	goto	l7580
  3135   004358                     u9260:
  3136   004358                     
  3137                           ; BSR set to: 1
  3138                           ;main.c: 308:         if (s == 0) {
  3139   004358  5136               	movf	_s& (0+255),w,b
  3140   00435A  1137               	iorwf	(_s+1)& (0+255),w,b
  3141   00435C  A4D8               	btfss	status,2,c
  3142   00435E  EFB3  F021         	goto	u9271
  3143   004362  EFB5  F021         	goto	u9270
  3144   004366                     u9271:
  3145   004366  EF89  F021         	goto	l7562
  3146   00436A                     u9270:
  3147   00436A                     
  3148                           ; BSR set to: 1
  3149                           ;main.c: 309:             left();
  3150   00436A  EC55  F027         	call	_left	;wreg free
  3151                           
  3152                           ;main.c: 310:         } else {
  3153   00436E  EFCD  F021         	goto	l362
  3154   004372                     l7580:
  3155                           
  3156                           ; BSR set to: 1
  3157   004372  0E04               	movlw	4
  3158   004374  1942               	xorwf	_m& (0+255),w,b
  3159   004376  A4D8               	btfss	status,2,c
  3160   004378  EFC0  F021         	goto	u9281
  3161   00437C  EFC2  F021         	goto	u9280
  3162   004380                     u9281:
  3163   004380  EFCD  F021         	goto	l362
  3164   004384                     u9280:
  3165   004384                     
  3166                           ; BSR set to: 1
  3167                           ;main.c: 314:         if (s == 0) {
  3168   004384  5136               	movf	_s& (0+255),w,b
  3169   004386  1137               	iorwf	(_s+1)& (0+255),w,b
  3170   004388  A4D8               	btfss	status,2,c
  3171   00438A  EFC9  F021         	goto	u9291
  3172   00438E  EFCB  F021         	goto	u9290
  3173   004392                     u9291:
  3174   004392  EF89  F021         	goto	l7562
  3175   004396                     u9290:
  3176   004396                     
  3177                           ; BSR set to: 1
  3178                           ;main.c: 315:             right();
  3179   004396  EC4E  F027         	call	_right	;wreg free
  3180   00439A                     l362:
  3181                           
  3182                           ;main.c: 320:     PWM_increase();
  3183   00439A  EC45  F013         	call	_PWM_increase	;wreg free
  3184   00439E  0012               	return		;funcret
  3185   0043A0                     __end_of_Manual:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _ups2 *****************
  3189 ;; Defined at:
  3190 ;;		line 334 in file "main.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3204 ;;      Params:         0       0       0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 4
  3211 ;; This function calls:
  3212 ;;		_Data3LCD
  3213 ;;		_Data4LCD
  3214 ;;		_brake
  3215 ;; This function is called by:
  3216 ;;		_Manual
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text7
  3221   004DD0                     __ptext7:
  3222                           	callstack 0
  3223   004DD0                     _ups2:
  3224                           	callstack 25
  3225   004DD0                     l388:
  3226   004DD0                     
  3227                           ;main.c: 336:         brake();
  3228   004DD0  EC5C  F027         	call	_brake	;wreg free
  3229                           
  3230                           ;main.c: 337:         Data3LCD();
  3231   004DD4  EC62  F027         	call	_Data3LCD	;wreg free
  3232   004DD8                     
  3233                           ;main.c: 338:         if (s == 0) {
  3234   004DD8  0101               	movlb	1	; () banked
  3235   004DDA  5136               	movf	_s& (0+255),w,b
  3236   004DDC  1137               	iorwf	(_s+1)& (0+255),w,b
  3237   004DDE  A4D8               	btfss	status,2,c
  3238   004DE0  EFF4  F026         	goto	u8871
  3239   004DE4  EFF6  F026         	goto	u8870
  3240   004DE8                     u8871:
  3241   004DE8  EFE8  F026         	goto	l388
  3242   004DEC                     u8870:
  3243   004DEC                     
  3244                           ; BSR set to: 1
  3245                           ;main.c: 339:             Data4LCD();
  3246   004DEC  EC61  F027         	call	_Data4LCD	;wreg free
  3247   004DF0  0012               	return		;funcret
  3248   004DF2                     __end_of_ups2:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _brake *****************
  3252 ;; Defined at:
  3253 ;;		line 734 in file "main.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		None
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3267 ;;      Params:         0       0       0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 3
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;;		_Manual
  3279 ;;		_ups
  3280 ;;		_ups2
  3281 ;;		_automatic
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text8
  3286   004EB8                     __ptext8:
  3287                           	callstack 0
  3288   004EB8                     _brake:
  3289                           	callstack 27
  3290   004EB8                     
  3291                           ;main.c: 735:     LATA4 = 0;
  3292   004EB8  9889               	bcf	3977,4,c	;volatile
  3293                           
  3294                           ;main.c: 736:     LATA5 = 0;
  3295   004EBA  9A89               	bcf	3977,5,c	;volatile
  3296                           
  3297                           ;main.c: 737:     LATA6 = 0;
  3298   004EBC  9C89               	bcf	3977,6,c	;volatile
  3299                           
  3300                           ;main.c: 738:     LATA7 = 0;
  3301   004EBE  9E89               	bcf	3977,7,c	;volatile
  3302   004EC0  0012               	return		;funcret
  3303   004EC2                     __end_of_brake:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _Data4LCD *****************
  3307 ;; Defined at:
  3308 ;;		line 687 in file "main.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		None
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3322 ;;      Params:         0       0       0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 3
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_ups2
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text9
  3337   004EC2                     __ptext9:
  3338                           	callstack 0
  3339   004EC2                     _Data4LCD:
  3340                           	callstack 25
  3341   004EC2  0012               	return		;funcret
  3342   004EC4                     __end_of_Data4LCD:
  3343                           	callstack 0
  3344                           
  3345 ;; *************** function _Data3LCD *****************
  3346 ;; Defined at:
  3347 ;;		line 679 in file "main.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		None
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3361 ;;      Params:         0       0       0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used: 1
  3367 ;; Hardware stack levels required when called: 3
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_ups2
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text10
  3376   004EC4                     __ptext10:
  3377                           	callstack 0
  3378   004EC4                     _Data3LCD:
  3379                           	callstack 25
  3380   004EC4  0012               	return		;funcret
  3381   004EC6                     __end_of_Data3LCD:
  3382                           	callstack 0
  3383                           
  3384 ;; *************** function _right *****************
  3385 ;; Defined at:
  3386 ;;		line 715 in file "main.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3400 ;;      Params:         0       0       0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 13
  3407 ;; This function calls:
  3408 ;;		_PWMD
  3409 ;; This function is called by:
  3410 ;;		_Manual
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text11
  3415   004E9C                     __ptext11:
  3416                           	callstack 0
  3417   004E9C                     _right:
  3418                           	callstack 16
  3419   004E9C                     
  3420                           ;main.c: 716:     PWMD();
  3421   004E9C  EC4C  F01A         	call	_PWMD	;wreg free
  3422   004EA0                     
  3423                           ;main.c: 717:     LATA4 = 1;
  3424   004EA0  8889               	bsf	3977,4,c	;volatile
  3425   004EA2                     
  3426                           ;main.c: 718:     LATA5 = 0;
  3427   004EA2  9A89               	bcf	3977,5,c	;volatile
  3428   004EA4                     
  3429                           ;main.c: 719:     LATA6 = 1;
  3430   004EA4  8C89               	bsf	3977,6,c	;volatile
  3431   004EA6                     
  3432                           ;main.c: 720:     LATA7 = 0;
  3433   004EA6  9E89               	bcf	3977,7,c	;volatile
  3434   004EA8  0012               	return		;funcret
  3435   004EAA                     __end_of_right:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _PWMD *****************
  3439 ;; Defined at:
  3440 ;;		line 556 in file "main.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 12
  3461 ;; This function calls:
  3462 ;;		_Data2LCD
  3463 ;;		___flmul
  3464 ;;		___fltol
  3465 ;;		___xxtofl
  3466 ;; This function is called by:
  3467 ;;		_right
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text12
  3472   003498                     __ptext12:
  3473                           	callstack 0
  3474   003498                     _PWMD:
  3475                           	callstack 16
  3476   003498                     
  3477                           ;main.c: 557:     if (flag2 == 0) {
  3478   003498  0101               	movlb	1	; () banked
  3479   00349A  5143               	movf	_flag2& (0+255),w,b
  3480   00349C  A4D8               	btfss	status,2,c
  3481   00349E  EF53  F01A         	goto	u8831
  3482   0034A2  EF55  F01A         	goto	u8830
  3483   0034A6                     u8831:
  3484   0034A6  EF5E  F01A         	goto	l494
  3485   0034AA                     u8830:
  3486   0034AA                     
  3487                           ; BSR set to: 1
  3488                           ;main.c: 558:         digital2 = 256;
  3489   0034AA  0E01               	movlw	1
  3490   0034AC  6F3B               	movwf	(_digital2+1)& (0+255),b
  3491   0034AE  0E00               	movlw	0
  3492   0034B0  6F3A               	movwf	_digital2& (0+255),b
  3493                           
  3494                           ;main.c: 559:         digital1 = 767;
  3495   0034B2  0E02               	movlw	2
  3496   0034B4  6F3D               	movwf	(_digital1+1)& (0+255),b
  3497   0034B6  693C               	setf	_digital1& (0+255),b
  3498                           
  3499                           ;main.c: 560:         flag2 = 1;
  3500   0034B8  0E01               	movlw	1
  3501   0034BA  6F43               	movwf	_flag2& (0+255),b
  3502   0034BC                     l494:
  3503                           
  3504                           ; BSR set to: 1
  3505                           ;main.c: 562:     flag1 = 0;
  3506   0034BC  0E00               	movlw	0
  3507   0034BE  6F44               	movwf	_flag1& (0+255),b
  3508   0034C0                     
  3509                           ; BSR set to: 1
  3510                           ;main.c: 563:     conversion3 = ((float) digital1 * (250.0 / 1023.0));
  3511   0034C0  C13C  F064         	movff	_digital1,___xxtofl@val
  3512   0034C4  C13D  F065         	movff	_digital1+1,___xxtofl@val+1
  3513   0034C8  0100               	movlb	0	; () banked
  3514   0034CA  0E00               	movlw	0
  3515   0034CC  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3516   0034CE  0EFF               	movlw	-1
  3517   0034D0  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  3518   0034D2  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  3519   0034D4  0E01               	movlw	1
  3520   0034D6  EC32  F01C         	call	___xxtofl
  3521   0034DA  C064  F072         	movff	?___xxtofl,___flmul@b
  3522   0034DE  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  3523   0034E2  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  3524   0034E6  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  3525   0034EA  0E90               	movlw	144
  3526   0034EC  0100               	movlb	0	; () banked
  3527   0034EE  6F76               	movwf	___flmul@a& (0+255),b
  3528   0034F0  0E3E               	movlw	62
  3529   0034F2  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3530   0034F4  0E7A               	movlw	122
  3531   0034F6  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3532   0034F8  0E3E               	movlw	62
  3533   0034FA  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3534   0034FC  EC4C  F00D         	call	___flmul	;wreg free
  3535   003500  C072  F1B1         	movff	?___flmul,_conversion3
  3536   003504  C073  F1B2         	movff	?___flmul+1,_conversion3+1
  3537   003508  C074  F1B3         	movff	?___flmul+2,_conversion3+2
  3538   00350C  C075  F1B4         	movff	?___flmul+3,_conversion3+3
  3539   003510                     
  3540                           ;main.c: 564:     DutyCycle = conversion3 * (100.0 / 250.0);
  3541   003510  C1B1  F072         	movff	_conversion3,___flmul@b
  3542   003514  C1B2  F073         	movff	_conversion3+1,___flmul@b+1
  3543   003518  C1B3  F074         	movff	_conversion3+2,___flmul@b+2
  3544   00351C  C1B4  F075         	movff	_conversion3+3,___flmul@b+3
  3545   003520  0ECD               	movlw	205
  3546   003522  0100               	movlb	0	; () banked
  3547   003524  6F76               	movwf	___flmul@a& (0+255),b
  3548   003526  0ECC               	movlw	204
  3549   003528  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3550   00352A  0ECC               	movlw	204
  3551   00352C  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3552   00352E  0E3E               	movlw	62
  3553   003530  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3554   003532  EC4C  F00D         	call	___flmul	;wreg free
  3555   003536  C072  F12C         	movff	?___flmul,_DutyCycle
  3556   00353A  C073  F12D         	movff	?___flmul+1,_DutyCycle+1
  3557   00353E  C074  F12E         	movff	?___flmul+2,_DutyCycle+2
  3558   003542  C075  F12F         	movff	?___flmul+3,_DutyCycle+3
  3559   003546                     
  3560                           ;main.c: 565:     CCPR2L = ((int) conversion3 >> 2);
  3561   003546  C1B1  F064         	movff	_conversion3,___fltol@f1
  3562   00354A  C1B2  F065         	movff	_conversion3+1,___fltol@f1+1
  3563   00354E  C1B3  F066         	movff	_conversion3+2,___fltol@f1+2
  3564   003552  C1B4  F067         	movff	_conversion3+3,___fltol@f1+3
  3565   003556  EC5F  F01F         	call	___fltol	;wreg free
  3566   00355A  0100               	movlb	0	; () banked
  3567   00355C  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3568   00355E  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3569   003560  3364               	rrcf	?___fltol& (0+255),f,b
  3570   003562  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3571   003564  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3572   003566  3364               	rrcf	?___fltol& (0+255),f,b
  3573   003568  5164               	movf	?___fltol& (0+255),w,b
  3574   00356A  6E67               	movwf	103,c	;volatile
  3575   00356C                     
  3576                           ; BSR set to: 0
  3577                           ;main.c: 566:     CCP2CON = (CCP2CON & 0x0F) | (((int) conversion3 & 0x03) << 4);
  3578   00356C  C1B1  F064         	movff	_conversion3,___fltol@f1
  3579   003570  C1B2  F065         	movff	_conversion3+1,___fltol@f1+1
  3580   003574  C1B3  F066         	movff	_conversion3+2,___fltol@f1+2
  3581   003578  C1B4  F067         	movff	_conversion3+3,___fltol@f1+3
  3582   00357C  EC5F  F01F         	call	___fltol	;wreg free
  3583   003580  0E03               	movlw	3
  3584   003582  0100               	movlb	0	; () banked
  3585   003584  1764               	andwf	?___fltol& (0+255),f,b
  3586   003586  3B64               	swapf	?___fltol& (0+255),f,b
  3587   003588  0EF0               	movlw	240
  3588   00358A  1764               	andwf	?___fltol& (0+255),f,b
  3589   00358C  5066               	movf	102,w,c	;volatile
  3590   00358E  0B0F               	andlw	15
  3591   003590  1164               	iorwf	?___fltol& (0+255),w,b
  3592   003592  6E66               	movwf	102,c	;volatile
  3593   003594                     
  3594                           ; BSR set to: 0
  3595                           ;main.c: 567:     Data2LCD(2);
  3596   003594  0E02               	movlw	2
  3597   003596  ECB2  F016         	call	_Data2LCD
  3598   00359A                     
  3599                           ;main.c: 568:     conversion4 = ((float) digital2 * (250.0 / 1023.0));
  3600   00359A  C13A  F064         	movff	_digital2,___xxtofl@val
  3601   00359E  C13B  F065         	movff	_digital2+1,___xxtofl@val+1
  3602   0035A2  0100               	movlb	0	; () banked
  3603   0035A4  0E00               	movlw	0
  3604   0035A6  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3605   0035A8  0EFF               	movlw	-1
  3606   0035AA  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  3607   0035AC  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  3608   0035AE  0E01               	movlw	1
  3609   0035B0  EC32  F01C         	call	___xxtofl
  3610   0035B4  C064  F072         	movff	?___xxtofl,___flmul@b
  3611   0035B8  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  3612   0035BC  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  3613   0035C0  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  3614   0035C4  0E90               	movlw	144
  3615   0035C6  0100               	movlb	0	; () banked
  3616   0035C8  6F76               	movwf	___flmul@a& (0+255),b
  3617   0035CA  0E3E               	movlw	62
  3618   0035CC  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3619   0035CE  0E7A               	movlw	122
  3620   0035D0  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3621   0035D2  0E3E               	movlw	62
  3622   0035D4  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3623   0035D6  EC4C  F00D         	call	___flmul	;wreg free
  3624   0035DA  C072  F1AD         	movff	?___flmul,_conversion4
  3625   0035DE  C073  F1AE         	movff	?___flmul+1,_conversion4+1
  3626   0035E2  C074  F1AF         	movff	?___flmul+2,_conversion4+2
  3627   0035E6  C075  F1B0         	movff	?___flmul+3,_conversion4+3
  3628   0035EA                     
  3629                           ;main.c: 569:     DutyCycle = conversion4 * (100.0 / 250.0);
  3630   0035EA  C1AD  F072         	movff	_conversion4,___flmul@b
  3631   0035EE  C1AE  F073         	movff	_conversion4+1,___flmul@b+1
  3632   0035F2  C1AF  F074         	movff	_conversion4+2,___flmul@b+2
  3633   0035F6  C1B0  F075         	movff	_conversion4+3,___flmul@b+3
  3634   0035FA  0ECD               	movlw	205
  3635   0035FC  0100               	movlb	0	; () banked
  3636   0035FE  6F76               	movwf	___flmul@a& (0+255),b
  3637   003600  0ECC               	movlw	204
  3638   003602  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3639   003604  0ECC               	movlw	204
  3640   003606  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3641   003608  0E3E               	movlw	62
  3642   00360A  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3643   00360C  EC4C  F00D         	call	___flmul	;wreg free
  3644   003610  C072  F12C         	movff	?___flmul,_DutyCycle
  3645   003614  C073  F12D         	movff	?___flmul+1,_DutyCycle+1
  3646   003618  C074  F12E         	movff	?___flmul+2,_DutyCycle+2
  3647   00361C  C075  F12F         	movff	?___flmul+3,_DutyCycle+3
  3648   003620                     
  3649                           ;main.c: 570:     CCPR3L = ((int) conversion4 >> 2);
  3650   003620  C1AD  F064         	movff	_conversion4,___fltol@f1
  3651   003624  C1AE  F065         	movff	_conversion4+1,___fltol@f1+1
  3652   003628  C1AF  F066         	movff	_conversion4+2,___fltol@f1+2
  3653   00362C  C1B0  F067         	movff	_conversion4+3,___fltol@f1+3
  3654   003630  EC5F  F01F         	call	___fltol	;wreg free
  3655   003634  0100               	movlb	0	; () banked
  3656   003636  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3657   003638  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3658   00363A  3364               	rrcf	?___fltol& (0+255),f,b
  3659   00363C  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3660   00363E  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3661   003640  3364               	rrcf	?___fltol& (0+255),f,b
  3662   003642  5164               	movf	?___fltol& (0+255),w,b
  3663   003644  010F               	movlb	15	; () banked
  3664   003646  6F5E               	movwf	94,b	;volatile
  3665   003648                     
  3666                           ; BSR set to: 15
  3667                           ;main.c: 571:     CCP3CON = (CCP3CON & 0x0F) | (((int) conversion4 & 0x03) << 4);
  3668   003648  C1AD  F064         	movff	_conversion4,___fltol@f1
  3669   00364C  C1AE  F065         	movff	_conversion4+1,___fltol@f1+1
  3670   003650  C1AF  F066         	movff	_conversion4+2,___fltol@f1+2
  3671   003654  C1B0  F067         	movff	_conversion4+3,___fltol@f1+3
  3672   003658  EC5F  F01F         	call	___fltol	;wreg free
  3673   00365C  0E03               	movlw	3
  3674   00365E  0100               	movlb	0	; () banked
  3675   003660  1764               	andwf	?___fltol& (0+255),f,b
  3676   003662  3B64               	swapf	?___fltol& (0+255),f,b
  3677   003664  0EF0               	movlw	240
  3678   003666  1764               	andwf	?___fltol& (0+255),f,b
  3679   003668  010F               	movlb	15	; () banked
  3680   00366A  515D               	movf	93,w,b	;volatile
  3681   00366C  0B0F               	andlw	15
  3682   00366E  0100               	movlb	0	; () banked
  3683   003670  1164               	iorwf	?___fltol& (0+255),w,b
  3684   003672  010F               	movlb	15	; () banked
  3685   003674  6F5D               	movwf	93,b	;volatile
  3686   003676                     
  3687                           ; BSR set to: 15
  3688                           ;main.c: 572:     Data2LCD(3);
  3689   003676  0E03               	movlw	3
  3690   003678  ECB2  F016         	call	_Data2LCD
  3691   00367C  0012               	return		;funcret
  3692   00367E                     __end_of_PWMD:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _left *****************
  3696 ;; Defined at:
  3697 ;;		line 724 in file "main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3711 ;;      Params:         0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 13
  3718 ;; This function calls:
  3719 ;;		_PWMI
  3720 ;; This function is called by:
  3721 ;;		_Manual
  3722 ;;		_automatic
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text13
  3727   004EAA                     __ptext13:
  3728                           	callstack 0
  3729   004EAA                     _left:
  3730                           	callstack 16
  3731   004EAA                     
  3732                           ;main.c: 726:     PWMI();
  3733   004EAA  EC3F  F01B         	call	_PWMI	;wreg free
  3734   004EAE                     
  3735                           ;main.c: 727:     LATA4 = 1;
  3736   004EAE  8889               	bsf	3977,4,c	;volatile
  3737   004EB0                     
  3738                           ;main.c: 728:     LATA5 = 0;
  3739   004EB0  9A89               	bcf	3977,5,c	;volatile
  3740   004EB2                     
  3741                           ;main.c: 729:     LATA6 = 1;
  3742   004EB2  8C89               	bsf	3977,6,c	;volatile
  3743   004EB4                     
  3744                           ;main.c: 730:     LATA7 = 0;
  3745   004EB4  9E89               	bcf	3977,7,c	;volatile
  3746   004EB6  0012               	return		;funcret
  3747   004EB8                     __end_of_left:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _PWMI *****************
  3751 ;; Defined at:
  3752 ;;		line 537 in file "main.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3766 ;;      Params:         0       0       0       0       0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0
  3769 ;;      Totals:         0       0       0       0       0       0       0
  3770 ;;Total ram usage:        0 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 12
  3773 ;; This function calls:
  3774 ;;		_Data2LCD
  3775 ;;		___flmul
  3776 ;;		___fltol
  3777 ;;		___xxtofl
  3778 ;; This function is called by:
  3779 ;;		_left
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text14
  3784   00367E                     __ptext14:
  3785                           	callstack 0
  3786   00367E                     _PWMI:
  3787                           	callstack 16
  3788   00367E                     
  3789                           ;main.c: 538:     if (flag1 == 0) {
  3790   00367E  0101               	movlb	1	; () banked
  3791   003680  5144               	movf	_flag1& (0+255),w,b
  3792   003682  A4D8               	btfss	status,2,c
  3793   003684  EF46  F01B         	goto	u8821
  3794   003688  EF48  F01B         	goto	u8820
  3795   00368C                     u8821:
  3796   00368C  EF51  F01B         	goto	l490
  3797   003690                     u8820:
  3798   003690                     
  3799                           ; BSR set to: 1
  3800                           ;main.c: 539:         digital1 = 256;
  3801   003690  0E01               	movlw	1
  3802   003692  6F3D               	movwf	(_digital1+1)& (0+255),b
  3803   003694  0E00               	movlw	0
  3804   003696  6F3C               	movwf	_digital1& (0+255),b
  3805                           
  3806                           ;main.c: 540:         digital2 = 767;
  3807   003698  0E02               	movlw	2
  3808   00369A  6F3B               	movwf	(_digital2+1)& (0+255),b
  3809   00369C  693A               	setf	_digital2& (0+255),b
  3810                           
  3811                           ;main.c: 541:         flag1 = 1;
  3812   00369E  0E01               	movlw	1
  3813   0036A0  6F44               	movwf	_flag1& (0+255),b
  3814   0036A2                     l490:
  3815                           
  3816                           ; BSR set to: 1
  3817                           ;main.c: 543:     flag2 = 0;
  3818   0036A2  0E00               	movlw	0
  3819   0036A4  6F43               	movwf	_flag2& (0+255),b
  3820   0036A6                     
  3821                           ; BSR set to: 1
  3822                           ;main.c: 544:     conversion1 = ((float) digital1 * (250.0 / 1023.0));
  3823   0036A6  C13C  F064         	movff	_digital1,___xxtofl@val
  3824   0036AA  C13D  F065         	movff	_digital1+1,___xxtofl@val+1
  3825   0036AE  0100               	movlb	0	; () banked
  3826   0036B0  0E00               	movlw	0
  3827   0036B2  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3828   0036B4  0EFF               	movlw	-1
  3829   0036B6  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  3830   0036B8  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  3831   0036BA  0E01               	movlw	1
  3832   0036BC  EC32  F01C         	call	___xxtofl
  3833   0036C0  C064  F072         	movff	?___xxtofl,___flmul@b
  3834   0036C4  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  3835   0036C8  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  3836   0036CC  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  3837   0036D0  0E90               	movlw	144
  3838   0036D2  0100               	movlb	0	; () banked
  3839   0036D4  6F76               	movwf	___flmul@a& (0+255),b
  3840   0036D6  0E3E               	movlw	62
  3841   0036D8  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3842   0036DA  0E7A               	movlw	122
  3843   0036DC  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3844   0036DE  0E3E               	movlw	62
  3845   0036E0  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3846   0036E2  EC4C  F00D         	call	___flmul	;wreg free
  3847   0036E6  C072  F1B9         	movff	?___flmul,_conversion1
  3848   0036EA  C073  F1BA         	movff	?___flmul+1,_conversion1+1
  3849   0036EE  C074  F1BB         	movff	?___flmul+2,_conversion1+2
  3850   0036F2  C075  F1BC         	movff	?___flmul+3,_conversion1+3
  3851   0036F6                     
  3852                           ;main.c: 545:     DutyCycle = conversion1 * (100.0 / 250.0);
  3853   0036F6  C1B9  F072         	movff	_conversion1,___flmul@b
  3854   0036FA  C1BA  F073         	movff	_conversion1+1,___flmul@b+1
  3855   0036FE  C1BB  F074         	movff	_conversion1+2,___flmul@b+2
  3856   003702  C1BC  F075         	movff	_conversion1+3,___flmul@b+3
  3857   003706  0ECD               	movlw	205
  3858   003708  0100               	movlb	0	; () banked
  3859   00370A  6F76               	movwf	___flmul@a& (0+255),b
  3860   00370C  0ECC               	movlw	204
  3861   00370E  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3862   003710  0ECC               	movlw	204
  3863   003712  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3864   003714  0E3E               	movlw	62
  3865   003716  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3866   003718  EC4C  F00D         	call	___flmul	;wreg free
  3867   00371C  C072  F12C         	movff	?___flmul,_DutyCycle
  3868   003720  C073  F12D         	movff	?___flmul+1,_DutyCycle+1
  3869   003724  C074  F12E         	movff	?___flmul+2,_DutyCycle+2
  3870   003728  C075  F12F         	movff	?___flmul+3,_DutyCycle+3
  3871   00372C                     
  3872                           ;main.c: 546:     CCPR2L = ((int) conversion1 >> 2);
  3873   00372C  C1B9  F064         	movff	_conversion1,___fltol@f1
  3874   003730  C1BA  F065         	movff	_conversion1+1,___fltol@f1+1
  3875   003734  C1BB  F066         	movff	_conversion1+2,___fltol@f1+2
  3876   003738  C1BC  F067         	movff	_conversion1+3,___fltol@f1+3
  3877   00373C  EC5F  F01F         	call	___fltol	;wreg free
  3878   003740  0100               	movlb	0	; () banked
  3879   003742  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3880   003744  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3881   003746  3364               	rrcf	?___fltol& (0+255),f,b
  3882   003748  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3883   00374A  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3884   00374C  3364               	rrcf	?___fltol& (0+255),f,b
  3885   00374E  5164               	movf	?___fltol& (0+255),w,b
  3886   003750  6E67               	movwf	103,c	;volatile
  3887   003752                     
  3888                           ; BSR set to: 0
  3889                           ;main.c: 547:     CCP2CON = (CCP2CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  3890   003752  C1B9  F064         	movff	_conversion1,___fltol@f1
  3891   003756  C1BA  F065         	movff	_conversion1+1,___fltol@f1+1
  3892   00375A  C1BB  F066         	movff	_conversion1+2,___fltol@f1+2
  3893   00375E  C1BC  F067         	movff	_conversion1+3,___fltol@f1+3
  3894   003762  EC5F  F01F         	call	___fltol	;wreg free
  3895   003766  0E03               	movlw	3
  3896   003768  0100               	movlb	0	; () banked
  3897   00376A  1764               	andwf	?___fltol& (0+255),f,b
  3898   00376C  3B64               	swapf	?___fltol& (0+255),f,b
  3899   00376E  0EF0               	movlw	240
  3900   003770  1764               	andwf	?___fltol& (0+255),f,b
  3901   003772  5066               	movf	102,w,c	;volatile
  3902   003774  0B0F               	andlw	15
  3903   003776  1164               	iorwf	?___fltol& (0+255),w,b
  3904   003778  6E66               	movwf	102,c	;volatile
  3905   00377A                     
  3906                           ; BSR set to: 0
  3907                           ;main.c: 548:     Data2LCD(2);
  3908   00377A  0E02               	movlw	2
  3909   00377C  ECB2  F016         	call	_Data2LCD
  3910   003780                     
  3911                           ;main.c: 549:     conversion2 = ((float) digital2 * (250.0 / 1023.0));
  3912   003780  C13A  F064         	movff	_digital2,___xxtofl@val
  3913   003784  C13B  F065         	movff	_digital2+1,___xxtofl@val+1
  3914   003788  0100               	movlb	0	; () banked
  3915   00378A  0E00               	movlw	0
  3916   00378C  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3917   00378E  0EFF               	movlw	-1
  3918   003790  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  3919   003792  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  3920   003794  0E01               	movlw	1
  3921   003796  EC32  F01C         	call	___xxtofl
  3922   00379A  C064  F072         	movff	?___xxtofl,___flmul@b
  3923   00379E  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  3924   0037A2  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  3925   0037A6  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  3926   0037AA  0E90               	movlw	144
  3927   0037AC  0100               	movlb	0	; () banked
  3928   0037AE  6F76               	movwf	___flmul@a& (0+255),b
  3929   0037B0  0E3E               	movlw	62
  3930   0037B2  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3931   0037B4  0E7A               	movlw	122
  3932   0037B6  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3933   0037B8  0E3E               	movlw	62
  3934   0037BA  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3935   0037BC  EC4C  F00D         	call	___flmul	;wreg free
  3936   0037C0  C072  F1B5         	movff	?___flmul,_conversion2
  3937   0037C4  C073  F1B6         	movff	?___flmul+1,_conversion2+1
  3938   0037C8  C074  F1B7         	movff	?___flmul+2,_conversion2+2
  3939   0037CC  C075  F1B8         	movff	?___flmul+3,_conversion2+3
  3940   0037D0                     
  3941                           ;main.c: 550:     DutyCycle = conversion2 * (100.0 / 250.0);
  3942   0037D0  C1B5  F072         	movff	_conversion2,___flmul@b
  3943   0037D4  C1B6  F073         	movff	_conversion2+1,___flmul@b+1
  3944   0037D8  C1B7  F074         	movff	_conversion2+2,___flmul@b+2
  3945   0037DC  C1B8  F075         	movff	_conversion2+3,___flmul@b+3
  3946   0037E0  0ECD               	movlw	205
  3947   0037E2  0100               	movlb	0	; () banked
  3948   0037E4  6F76               	movwf	___flmul@a& (0+255),b
  3949   0037E6  0ECC               	movlw	204
  3950   0037E8  6F77               	movwf	(___flmul@a+1)& (0+255),b
  3951   0037EA  0ECC               	movlw	204
  3952   0037EC  6F78               	movwf	(___flmul@a+2)& (0+255),b
  3953   0037EE  0E3E               	movlw	62
  3954   0037F0  6F79               	movwf	(___flmul@a+3)& (0+255),b
  3955   0037F2  EC4C  F00D         	call	___flmul	;wreg free
  3956   0037F6  C072  F12C         	movff	?___flmul,_DutyCycle
  3957   0037FA  C073  F12D         	movff	?___flmul+1,_DutyCycle+1
  3958   0037FE  C074  F12E         	movff	?___flmul+2,_DutyCycle+2
  3959   003802  C075  F12F         	movff	?___flmul+3,_DutyCycle+3
  3960   003806                     
  3961                           ;main.c: 551:     CCPR3L = ((int) conversion2 >> 2);
  3962   003806  C1B5  F064         	movff	_conversion2,___fltol@f1
  3963   00380A  C1B6  F065         	movff	_conversion2+1,___fltol@f1+1
  3964   00380E  C1B7  F066         	movff	_conversion2+2,___fltol@f1+2
  3965   003812  C1B8  F067         	movff	_conversion2+3,___fltol@f1+3
  3966   003816  EC5F  F01F         	call	___fltol	;wreg free
  3967   00381A  0100               	movlb	0	; () banked
  3968   00381C  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3969   00381E  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3970   003820  3364               	rrcf	?___fltol& (0+255),f,b
  3971   003822  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  3972   003824  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  3973   003826  3364               	rrcf	?___fltol& (0+255),f,b
  3974   003828  5164               	movf	?___fltol& (0+255),w,b
  3975   00382A  010F               	movlb	15	; () banked
  3976   00382C  6F5E               	movwf	94,b	;volatile
  3977   00382E                     
  3978                           ; BSR set to: 15
  3979                           ;main.c: 552:     CCP3CON = (CCP3CON & 0x0F) | (((int) conversion2 & 0x03) << 4);
  3980   00382E  C1B5  F064         	movff	_conversion2,___fltol@f1
  3981   003832  C1B6  F065         	movff	_conversion2+1,___fltol@f1+1
  3982   003836  C1B7  F066         	movff	_conversion2+2,___fltol@f1+2
  3983   00383A  C1B8  F067         	movff	_conversion2+3,___fltol@f1+3
  3984   00383E  EC5F  F01F         	call	___fltol	;wreg free
  3985   003842  0E03               	movlw	3
  3986   003844  0100               	movlb	0	; () banked
  3987   003846  1764               	andwf	?___fltol& (0+255),f,b
  3988   003848  3B64               	swapf	?___fltol& (0+255),f,b
  3989   00384A  0EF0               	movlw	240
  3990   00384C  1764               	andwf	?___fltol& (0+255),f,b
  3991   00384E  010F               	movlb	15	; () banked
  3992   003850  515D               	movf	93,w,b	;volatile
  3993   003852  0B0F               	andlw	15
  3994   003854  0100               	movlb	0	; () banked
  3995   003856  1164               	iorwf	?___fltol& (0+255),w,b
  3996   003858  010F               	movlb	15	; () banked
  3997   00385A  6F5D               	movwf	93,b	;volatile
  3998   00385C                     
  3999                           ; BSR set to: 15
  4000                           ;main.c: 553:     Data2LCD(3);
  4001   00385C  0E03               	movlw	3
  4002   00385E  ECB2  F016         	call	_Data2LCD
  4003   003862  0012               	return		;funcret
  4004   003864                     __end_of_PWMI:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _forward *****************
  4008 ;; Defined at:
  4009 ;;		line 695 in file "main.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4023 ;;      Params:         0       0       0       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0
  4025 ;;      Temps:          0       0       1       0       0       0       0
  4026 ;;      Totals:         0       0       1       0       0       0       0
  4027 ;;Total ram usage:        1 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 13
  4030 ;; This function calls:
  4031 ;;		_PWM
  4032 ;; This function is called by:
  4033 ;;		_Manual
  4034 ;;		_automatic
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text15
  4039   004DF2                     __ptext15:
  4040                           	callstack 0
  4041   004DF2                     _forward:
  4042                           	callstack 16
  4043   004DF2                     
  4044                           ;main.c: 696:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4045   004DF2  0E82               	movlw	130
  4046   004DF4  0101               	movlb	1	; () banked
  4047   004DF6  6FE4               	movwf	??_forward& (0+255),b
  4048   004DF8  0EDD               	movlw	221
  4049   004DFA                     u9777:
  4050   004DFA  2EE8               	decfsz	wreg,f,c
  4051   004DFC  D7FE               	bra	u9777
  4052   004DFE  2FE4               	decfsz	??_forward& (0+255),f,b
  4053   004E00  D7FC               	bra	u9777
  4054   004E02  D000               	nop2	
  4055   004E04                     
  4056                           ;main.c: 697:     PWM();
  4057   004E04  ECB5  F01E         	call	_PWM	;wreg free
  4058   004E08                     
  4059                           ;main.c: 698:     LATA4 = 1;
  4060   004E08  8889               	bsf	3977,4,c	;volatile
  4061   004E0A                     
  4062                           ;main.c: 699:     LATA5 = 0;
  4063   004E0A  9A89               	bcf	3977,5,c	;volatile
  4064   004E0C                     
  4065                           ;main.c: 700:     LATA6 = 1;
  4066   004E0C  8C89               	bsf	3977,6,c	;volatile
  4067   004E0E                     
  4068                           ;main.c: 701:     LATA7 = 0;
  4069   004E0E  9E89               	bcf	3977,7,c	;volatile
  4070   004E10  0012               	return		;funcret
  4071   004E12                     __end_of_forward:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _back *****************
  4075 ;; Defined at:
  4076 ;;		line 705 in file "main.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4090 ;;      Params:         0       0       0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0
  4092 ;;      Temps:          0       0       1       0       0       0       0
  4093 ;;      Totals:         0       0       1       0       0       0       0
  4094 ;;Total ram usage:        1 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 13
  4097 ;; This function calls:
  4098 ;;		_PWM
  4099 ;; This function is called by:
  4100 ;;		_Manual
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text16
  4105   004E12                     __ptext16:
  4106                           	callstack 0
  4107   004E12                     _back:
  4108                           	callstack 16
  4109   004E12                     
  4110                           ;main.c: 706:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4111   004E12  0E82               	movlw	130
  4112   004E14  0101               	movlb	1	; () banked
  4113   004E16  6FE4               	movwf	??_back& (0+255),b
  4114   004E18  0EDD               	movlw	221
  4115   004E1A                     u9787:
  4116   004E1A  2EE8               	decfsz	wreg,f,c
  4117   004E1C  D7FE               	bra	u9787
  4118   004E1E  2FE4               	decfsz	??_back& (0+255),f,b
  4119   004E20  D7FC               	bra	u9787
  4120   004E22  D000               	nop2	
  4121   004E24                     
  4122                           ;main.c: 707:     PWM();
  4123   004E24  ECB5  F01E         	call	_PWM	;wreg free
  4124   004E28                     
  4125                           ;main.c: 708:     LATA4 = 0;
  4126   004E28  9889               	bcf	3977,4,c	;volatile
  4127   004E2A                     
  4128                           ;main.c: 709:     LATA5 = 1;
  4129   004E2A  8A89               	bsf	3977,5,c	;volatile
  4130   004E2C                     
  4131                           ;main.c: 710:     LATA6 = 0;
  4132   004E2C  9C89               	bcf	3977,6,c	;volatile
  4133   004E2E                     
  4134                           ;main.c: 711:     LATA7 = 1;
  4135   004E2E  8E89               	bsf	3977,7,c	;volatile
  4136   004E30  0012               	return		;funcret
  4137   004E32                     __end_of_back:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _PWM *****************
  4141 ;; Defined at:
  4142 ;;		line 522 in file "main.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;		None
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4156 ;;      Params:         0       0       0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0
  4159 ;;      Totals:         0       0       0       0       0       0       0
  4160 ;;Total ram usage:        0 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 12
  4163 ;; This function calls:
  4164 ;;		_Data2LCD
  4165 ;;		___flmul
  4166 ;;		___fltol
  4167 ;;		___xxtofl
  4168 ;; This function is called by:
  4169 ;;		_forward
  4170 ;;		_back
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text17
  4175   003D6A                     __ptext17:
  4176                           	callstack 0
  4177   003D6A                     _PWM:
  4178                           	callstack 16
  4179   003D6A                     
  4180                           ;main.c: 523:     if (flag == 0) {
  4181   003D6A  0101               	movlb	1	; () banked
  4182   003D6C  5145               	movf	_flag& (0+255),w,b
  4183   003D6E  A4D8               	btfss	status,2,c
  4184   003D70  EFBC  F01E         	goto	u8811
  4185   003D74  EFBE  F01E         	goto	u8810
  4186   003D78                     u8811:
  4187   003D78  EFC3  F01E         	goto	l7216
  4188   003D7C                     u8810:
  4189   003D7C                     
  4190                           ; BSR set to: 1
  4191                           ;main.c: 524:         digital = 511;
  4192   003D7C  0E01               	movlw	1
  4193   003D7E  6F3F               	movwf	(_digital+1)& (0+255),b
  4194   003D80  693E               	setf	_digital& (0+255),b
  4195                           
  4196                           ;main.c: 525:         flag = 1;
  4197   003D82  0E01               	movlw	1
  4198   003D84  6F45               	movwf	_flag& (0+255),b
  4199   003D86                     l7216:
  4200                           
  4201                           ; BSR set to: 1
  4202                           ;main.c: 527:     conversion = ((float) digital * (250.0 / 1023.0));
  4203   003D86  C13E  F064         	movff	_digital,___xxtofl@val
  4204   003D8A  C13F  F065         	movff	_digital+1,___xxtofl@val+1
  4205   003D8E  0100               	movlb	0	; () banked
  4206   003D90  0E00               	movlw	0
  4207   003D92  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  4208   003D94  0EFF               	movlw	-1
  4209   003D96  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  4210   003D98  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  4211   003D9A  0E01               	movlw	1
  4212   003D9C  EC32  F01C         	call	___xxtofl
  4213   003DA0  C064  F072         	movff	?___xxtofl,___flmul@b
  4214   003DA4  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  4215   003DA8  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  4216   003DAC  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  4217   003DB0  0E90               	movlw	144
  4218   003DB2  0100               	movlb	0	; () banked
  4219   003DB4  6F76               	movwf	___flmul@a& (0+255),b
  4220   003DB6  0E3E               	movlw	62
  4221   003DB8  6F77               	movwf	(___flmul@a+1)& (0+255),b
  4222   003DBA  0E7A               	movlw	122
  4223   003DBC  6F78               	movwf	(___flmul@a+2)& (0+255),b
  4224   003DBE  0E3E               	movlw	62
  4225   003DC0  6F79               	movwf	(___flmul@a+3)& (0+255),b
  4226   003DC2  EC4C  F00D         	call	___flmul	;wreg free
  4227   003DC6  C072  F1BD         	movff	?___flmul,_conversion
  4228   003DCA  C073  F1BE         	movff	?___flmul+1,_conversion+1
  4229   003DCE  C074  F1BF         	movff	?___flmul+2,_conversion+2
  4230   003DD2  C075  F1C0         	movff	?___flmul+3,_conversion+3
  4231   003DD6                     
  4232                           ;main.c: 528:     DutyCycle = conversion * (100.0 / 250.0);
  4233   003DD6  C1BD  F072         	movff	_conversion,___flmul@b
  4234   003DDA  C1BE  F073         	movff	_conversion+1,___flmul@b+1
  4235   003DDE  C1BF  F074         	movff	_conversion+2,___flmul@b+2
  4236   003DE2  C1C0  F075         	movff	_conversion+3,___flmul@b+3
  4237   003DE6  0ECD               	movlw	205
  4238   003DE8  0100               	movlb	0	; () banked
  4239   003DEA  6F76               	movwf	___flmul@a& (0+255),b
  4240   003DEC  0ECC               	movlw	204
  4241   003DEE  6F77               	movwf	(___flmul@a+1)& (0+255),b
  4242   003DF0  0ECC               	movlw	204
  4243   003DF2  6F78               	movwf	(___flmul@a+2)& (0+255),b
  4244   003DF4  0E3E               	movlw	62
  4245   003DF6  6F79               	movwf	(___flmul@a+3)& (0+255),b
  4246   003DF8  EC4C  F00D         	call	___flmul	;wreg free
  4247   003DFC  C072  F12C         	movff	?___flmul,_DutyCycle
  4248   003E00  C073  F12D         	movff	?___flmul+1,_DutyCycle+1
  4249   003E04  C074  F12E         	movff	?___flmul+2,_DutyCycle+2
  4250   003E08  C075  F12F         	movff	?___flmul+3,_DutyCycle+3
  4251   003E0C                     
  4252                           ;main.c: 529:     CCPR2L = ((int) conversion >> 2);
  4253   003E0C  C1BD  F064         	movff	_conversion,___fltol@f1
  4254   003E10  C1BE  F065         	movff	_conversion+1,___fltol@f1+1
  4255   003E14  C1BF  F066         	movff	_conversion+2,___fltol@f1+2
  4256   003E18  C1C0  F067         	movff	_conversion+3,___fltol@f1+3
  4257   003E1C  EC5F  F01F         	call	___fltol	;wreg free
  4258   003E20  0100               	movlb	0	; () banked
  4259   003E22  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  4260   003E24  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  4261   003E26  3364               	rrcf	?___fltol& (0+255),f,b
  4262   003E28  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  4263   003E2A  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  4264   003E2C  3364               	rrcf	?___fltol& (0+255),f,b
  4265   003E2E  5164               	movf	?___fltol& (0+255),w,b
  4266   003E30  6E67               	movwf	103,c	;volatile
  4267   003E32                     
  4268                           ; BSR set to: 0
  4269                           ;main.c: 530:     CCP2CON = (CCP2CON & 0x0F) | (((int) conversion & 0x03) << 4);
  4270   003E32  C1BD  F064         	movff	_conversion,___fltol@f1
  4271   003E36  C1BE  F065         	movff	_conversion+1,___fltol@f1+1
  4272   003E3A  C1BF  F066         	movff	_conversion+2,___fltol@f1+2
  4273   003E3E  C1C0  F067         	movff	_conversion+3,___fltol@f1+3
  4274   003E42  EC5F  F01F         	call	___fltol	;wreg free
  4275   003E46  0E03               	movlw	3
  4276   003E48  0100               	movlb	0	; () banked
  4277   003E4A  1764               	andwf	?___fltol& (0+255),f,b
  4278   003E4C  3B64               	swapf	?___fltol& (0+255),f,b
  4279   003E4E  0EF0               	movlw	240
  4280   003E50  1764               	andwf	?___fltol& (0+255),f,b
  4281   003E52  5066               	movf	102,w,c	;volatile
  4282   003E54  0B0F               	andlw	15
  4283   003E56  1164               	iorwf	?___fltol& (0+255),w,b
  4284   003E58  6E66               	movwf	102,c	;volatile
  4285   003E5A                     
  4286                           ; BSR set to: 0
  4287                           ;main.c: 531:     Data2LCD(2);
  4288   003E5A  0E02               	movlw	2
  4289   003E5C  ECB2  F016         	call	_Data2LCD
  4290   003E60                     
  4291                           ;main.c: 532:     CCPR3L = ((int) conversion >> 2);
  4292   003E60  C1BD  F064         	movff	_conversion,___fltol@f1
  4293   003E64  C1BE  F065         	movff	_conversion+1,___fltol@f1+1
  4294   003E68  C1BF  F066         	movff	_conversion+2,___fltol@f1+2
  4295   003E6C  C1C0  F067         	movff	_conversion+3,___fltol@f1+3
  4296   003E70  EC5F  F01F         	call	___fltol	;wreg free
  4297   003E74  0100               	movlb	0	; () banked
  4298   003E76  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  4299   003E78  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  4300   003E7A  3364               	rrcf	?___fltol& (0+255),f,b
  4301   003E7C  3565               	rlcf	(?___fltol+1)& (0+255),w,b
  4302   003E7E  3365               	rrcf	(?___fltol+1)& (0+255),f,b
  4303   003E80  3364               	rrcf	?___fltol& (0+255),f,b
  4304   003E82  5164               	movf	?___fltol& (0+255),w,b
  4305   003E84  010F               	movlb	15	; () banked
  4306   003E86  6F5E               	movwf	94,b	;volatile
  4307   003E88                     
  4308                           ; BSR set to: 15
  4309                           ;main.c: 533:     CCP3CON = (CCP3CON & 0x0F) | (((int) conversion & 0x03) << 4);
  4310   003E88  C1BD  F064         	movff	_conversion,___fltol@f1
  4311   003E8C  C1BE  F065         	movff	_conversion+1,___fltol@f1+1
  4312   003E90  C1BF  F066         	movff	_conversion+2,___fltol@f1+2
  4313   003E94  C1C0  F067         	movff	_conversion+3,___fltol@f1+3
  4314   003E98  EC5F  F01F         	call	___fltol	;wreg free
  4315   003E9C  0E03               	movlw	3
  4316   003E9E  0100               	movlb	0	; () banked
  4317   003EA0  1764               	andwf	?___fltol& (0+255),f,b
  4318   003EA2  3B64               	swapf	?___fltol& (0+255),f,b
  4319   003EA4  0EF0               	movlw	240
  4320   003EA6  1764               	andwf	?___fltol& (0+255),f,b
  4321   003EA8  010F               	movlb	15	; () banked
  4322   003EAA  515D               	movf	93,w,b	;volatile
  4323   003EAC  0B0F               	andlw	15
  4324   003EAE  0100               	movlb	0	; () banked
  4325   003EB0  1164               	iorwf	?___fltol& (0+255),w,b
  4326   003EB2  010F               	movlb	15	; () banked
  4327   003EB4  6F5D               	movwf	93,b	;volatile
  4328   003EB6                     
  4329                           ; BSR set to: 15
  4330                           ;main.c: 534:     Data2LCD(3);
  4331   003EB6  0E03               	movlw	3
  4332   003EB8  ECB2  F016         	call	_Data2LCD
  4333   003EBC  0012               	return		;funcret
  4334   003EBE                     __end_of_PWM:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function ___xxtofl *****************
  4338 ;; Defined at:
  4339 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  sign            1    wreg     unsigned char 
  4342 ;;  val             4    4[BANK0 ] long 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  sign            1   12[BANK0 ] unsigned char 
  4345 ;;  arg             4   14[BANK0 ] unsigned long 
  4346 ;;  exp             1   13[BANK0 ] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  4    4[BANK0 ] unsigned char 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4356 ;;      Params:         0       4       0       0       0       0       0
  4357 ;;      Locals:         0       6       0       0       0       0       0
  4358 ;;      Temps:          0       4       0       0       0       0       0
  4359 ;;      Totals:         0      14       0       0       0       0       0
  4360 ;;Total ram usage:       14 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 3
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_start
  4367 ;;		_PWM
  4368 ;;		_PWMI
  4369 ;;		_PWMD
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text18
  4374   003864                     __ptext18:
  4375                           	callstack 0
  4376   003864                     ___xxtofl:
  4377                           	callstack 25
  4378                           
  4379                           ;incstack = 0
  4380                           ;___xxtofl@sign stored from wreg
  4381   003864  0100               	movlb	0	; () banked
  4382   003866  6F6C               	movwf	___xxtofl@sign& (0+255),b
  4383   003868  0100               	movlb	0	; () banked
  4384   00386A  516C               	movf	___xxtofl@sign& (0+255),w,b
  4385   00386C  B4D8               	btfsc	status,2,c
  4386   00386E  EF3B  F01C         	goto	u5371
  4387   003872  EF3D  F01C         	goto	u5370
  4388   003876                     u5371:
  4389   003876  EF5F  F01C         	goto	l1242
  4390   00387A                     u5370:
  4391   00387A                     
  4392                           ; BSR set to: 0
  4393   00387A  BF67               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  4394   00387C  EF44  F01C         	goto	u5380
  4395   003880  EF42  F01C         	goto	u5381
  4396   003884                     u5381:
  4397   003884  EF5F  F01C         	goto	l1242
  4398   003888                     u5380:
  4399   003888                     
  4400                           ; BSR set to: 0
  4401   003888  C064  F068         	movff	___xxtofl@val,??___xxtofl
  4402   00388C  C065  F069         	movff	___xxtofl@val+1,??___xxtofl+1
  4403   003890  C066  F06A         	movff	___xxtofl@val+2,??___xxtofl+2
  4404   003894  C067  F06B         	movff	___xxtofl@val+3,??___xxtofl+3
  4405   003898  1F68               	comf	??___xxtofl& (0+255),f,b
  4406   00389A  1F69               	comf	(??___xxtofl+1)& (0+255),f,b
  4407   00389C  1F6A               	comf	(??___xxtofl+2)& (0+255),f,b
  4408   00389E  1F6B               	comf	(??___xxtofl+3)& (0+255),f,b
  4409   0038A0  2B68               	incf	??___xxtofl& (0+255),f,b
  4410   0038A2  0E00               	movlw	0
  4411   0038A4  2369               	addwfc	(??___xxtofl+1)& (0+255),f,b
  4412   0038A6  236A               	addwfc	(??___xxtofl+2)& (0+255),f,b
  4413   0038A8  236B               	addwfc	(??___xxtofl+3)& (0+255),f,b
  4414   0038AA  C068  F06E         	movff	??___xxtofl,___xxtofl@arg
  4415   0038AE  C069  F06F         	movff	??___xxtofl+1,___xxtofl@arg+1
  4416   0038B2  C06A  F070         	movff	??___xxtofl+2,___xxtofl@arg+2
  4417   0038B6  C06B  F071         	movff	??___xxtofl+3,___xxtofl@arg+3
  4418   0038BA  EF67  F01C         	goto	l4974
  4419   0038BE                     l1242:
  4420                           
  4421                           ; BSR set to: 0
  4422   0038BE  C064  F06E         	movff	___xxtofl@val,___xxtofl@arg
  4423   0038C2  C065  F06F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4424   0038C6  C066  F070         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4425   0038CA  C067  F071         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4426   0038CE                     l4974:
  4427                           
  4428                           ; BSR set to: 0
  4429   0038CE  5164               	movf	___xxtofl@val& (0+255),w,b
  4430   0038D0  1165               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  4431   0038D2  1166               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  4432   0038D4  1167               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  4433   0038D6  A4D8               	btfss	status,2,c
  4434   0038D8  EF70  F01C         	goto	u5391
  4435   0038DC  EF72  F01C         	goto	u5390
  4436   0038E0                     u5391:
  4437   0038E0  EF7C  F01C         	goto	l4980
  4438   0038E4                     u5390:
  4439   0038E4                     
  4440                           ; BSR set to: 0
  4441   0038E4  0E00               	movlw	0
  4442   0038E6  6F64               	movwf	?___xxtofl& (0+255),b
  4443   0038E8  0E00               	movlw	0
  4444   0038EA  6F65               	movwf	(?___xxtofl+1)& (0+255),b
  4445   0038EC  0E00               	movlw	0
  4446   0038EE  6F66               	movwf	(?___xxtofl+2)& (0+255),b
  4447   0038F0  0E00               	movlw	0
  4448   0038F2  6F67               	movwf	(?___xxtofl+3)& (0+255),b
  4449   0038F4  EF0D  F01D         	goto	l1245
  4450   0038F8                     l4980:
  4451                           
  4452                           ; BSR set to: 0
  4453   0038F8  0E96               	movlw	150
  4454   0038FA  6F6D               	movwf	___xxtofl@exp& (0+255),b
  4455   0038FC  EF86  F01C         	goto	l4984
  4456   003900                     l4982:
  4457                           
  4458                           ; BSR set to: 0
  4459   003900  2B6D               	incf	___xxtofl@exp& (0+255),f,b
  4460   003902  90D8               	bcf	status,0,c
  4461   003904  3371               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4462   003906  3370               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4463   003908  336F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4464   00390A  336E               	rrcf	___xxtofl@arg& (0+255),f,b
  4465   00390C                     l4984:
  4466                           
  4467                           ; BSR set to: 0
  4468   00390C  0E00               	movlw	0
  4469   00390E  156E               	andwf	___xxtofl@arg& (0+255),w,b
  4470   003910  6F68               	movwf	??___xxtofl& (0+255),b
  4471   003912  0E00               	movlw	0
  4472   003914  156F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4473   003916  6F69               	movwf	(??___xxtofl+1)& (0+255),b
  4474   003918  0E00               	movlw	0
  4475   00391A  1570               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4476   00391C  6F6A               	movwf	(??___xxtofl+2)& (0+255),b
  4477   00391E  0EFE               	movlw	254
  4478   003920  1571               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4479   003922  6F6B               	movwf	(??___xxtofl+3)& (0+255),b
  4480   003924  5168               	movf	??___xxtofl& (0+255),w,b
  4481   003926  1169               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4482   003928  116A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4483   00392A  116B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4484   00392C  A4D8               	btfss	status,2,c
  4485   00392E  EF9B  F01C         	goto	u5401
  4486   003932  EF9D  F01C         	goto	u5400
  4487   003936                     u5401:
  4488   003936  EF80  F01C         	goto	l4982
  4489   00393A                     u5400:
  4490   00393A  EFAB  F01C         	goto	l1249
  4491   00393E                     l4986:
  4492                           
  4493                           ; BSR set to: 0
  4494   00393E  2B6D               	incf	___xxtofl@exp& (0+255),f,b
  4495   003940                     
  4496                           ; BSR set to: 0
  4497   003940  0E01               	movlw	1
  4498   003942  276E               	addwf	___xxtofl@arg& (0+255),f,b
  4499   003944  0E00               	movlw	0
  4500   003946  236F               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  4501   003948  2370               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  4502   00394A  2371               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  4503   00394C                     
  4504                           ; BSR set to: 0
  4505   00394C  90D8               	bcf	status,0,c
  4506   00394E  3371               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4507   003950  3370               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4508   003952  336F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4509   003954  336E               	rrcf	___xxtofl@arg& (0+255),f,b
  4510   003956                     l1249:
  4511                           
  4512                           ; BSR set to: 0
  4513   003956  0E00               	movlw	0
  4514   003958  156E               	andwf	___xxtofl@arg& (0+255),w,b
  4515   00395A  6F68               	movwf	??___xxtofl& (0+255),b
  4516   00395C  0E00               	movlw	0
  4517   00395E  156F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4518   003960  6F69               	movwf	(??___xxtofl+1)& (0+255),b
  4519   003962  0E00               	movlw	0
  4520   003964  1570               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4521   003966  6F6A               	movwf	(??___xxtofl+2)& (0+255),b
  4522   003968  0EFF               	movlw	255
  4523   00396A  1571               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4524   00396C  6F6B               	movwf	(??___xxtofl+3)& (0+255),b
  4525   00396E  5168               	movf	??___xxtofl& (0+255),w,b
  4526   003970  1169               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4527   003972  116A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4528   003974  116B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4529   003976  A4D8               	btfss	status,2,c
  4530   003978  EFC0  F01C         	goto	u5411
  4531   00397C  EFC2  F01C         	goto	u5410
  4532   003980                     u5411:
  4533   003980  EF9F  F01C         	goto	l4986
  4534   003984                     u5410:
  4535   003984  EFCA  F01C         	goto	l4994
  4536   003988                     l4992:
  4537                           
  4538                           ; BSR set to: 0
  4539   003988  076D               	decf	___xxtofl@exp& (0+255),f,b
  4540   00398A  90D8               	bcf	status,0,c
  4541   00398C  376E               	rlcf	___xxtofl@arg& (0+255),f,b
  4542   00398E  376F               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  4543   003990  3770               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  4544   003992  3771               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  4545   003994                     l4994:
  4546                           
  4547                           ; BSR set to: 0
  4548   003994  BF70               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  4549   003996  EFCF  F01C         	goto	u5421
  4550   00399A  EFD1  F01C         	goto	u5420
  4551   00399E                     u5421:
  4552   00399E  EFD9  F01C         	goto	l1256
  4553   0039A2                     u5420:
  4554   0039A2                     
  4555                           ; BSR set to: 0
  4556   0039A2  0E02               	movlw	2
  4557   0039A4  616D               	cpfslt	___xxtofl@exp& (0+255),b
  4558   0039A6  EFD7  F01C         	goto	u5431
  4559   0039AA  EFD9  F01C         	goto	u5430
  4560   0039AE                     u5431:
  4561   0039AE  EFC4  F01C         	goto	l4992
  4562   0039B2                     u5430:
  4563   0039B2                     l1256:
  4564                           
  4565                           ; BSR set to: 0
  4566   0039B2  B16D               	btfsc	___xxtofl@exp& (0+255),0,b
  4567   0039B4  EFDE  F01C         	goto	u5441
  4568   0039B8  EFE0  F01C         	goto	u5440
  4569   0039BC                     u5441:
  4570   0039BC  EFE1  F01C         	goto	l5000
  4571   0039C0                     u5440:
  4572   0039C0                     
  4573                           ; BSR set to: 0
  4574   0039C0  9F70               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  4575   0039C2                     l5000:
  4576                           
  4577                           ; BSR set to: 0
  4578   0039C2  90D8               	bcf	status,0,c
  4579   0039C4  336D               	rrcf	___xxtofl@exp& (0+255),f,b
  4580   0039C6                     
  4581                           ; BSR set to: 0
  4582   0039C6  C06D  F068         	movff	___xxtofl@exp,??___xxtofl
  4583   0039CA  6B69               	clrf	(??___xxtofl+1)& (0+255),b
  4584   0039CC  6B6A               	clrf	(??___xxtofl+2)& (0+255),b
  4585   0039CE  6B6B               	clrf	(??___xxtofl+3)& (0+255),b
  4586   0039D0  C068  F06B         	movff	??___xxtofl,??___xxtofl+3
  4587   0039D4  6B6A               	clrf	(??___xxtofl+2)& (0+255),b
  4588   0039D6  6B69               	clrf	(??___xxtofl+1)& (0+255),b
  4589   0039D8  6B68               	clrf	??___xxtofl& (0+255),b
  4590   0039DA  5168               	movf	??___xxtofl& (0+255),w,b
  4591   0039DC  136E               	iorwf	___xxtofl@arg& (0+255),f,b
  4592   0039DE  5169               	movf	(??___xxtofl+1)& (0+255),w,b
  4593   0039E0  136F               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4594   0039E2  516A               	movf	(??___xxtofl+2)& (0+255),w,b
  4595   0039E4  1370               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4596   0039E6  516B               	movf	(??___xxtofl+3)& (0+255),w,b
  4597   0039E8  1371               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4598   0039EA                     
  4599                           ; BSR set to: 0
  4600   0039EA  516C               	movf	___xxtofl@sign& (0+255),w,b
  4601   0039EC  B4D8               	btfsc	status,2,c
  4602   0039EE  EFFB  F01C         	goto	u5451
  4603   0039F2  EFFD  F01C         	goto	u5450
  4604   0039F6                     u5451:
  4605   0039F6  EF05  F01D         	goto	l5010
  4606   0039FA                     u5450:
  4607   0039FA                     
  4608                           ; BSR set to: 0
  4609   0039FA  BF67               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  4610   0039FC  EF04  F01D         	goto	u5460
  4611   003A00  EF02  F01D         	goto	u5461
  4612   003A04                     u5461:
  4613   003A04  EF05  F01D         	goto	l5010
  4614   003A08                     u5460:
  4615   003A08                     
  4616                           ; BSR set to: 0
  4617   003A08  8F71               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4618   003A0A                     l5010:
  4619                           
  4620                           ; BSR set to: 0
  4621   003A0A  C06E  F064         	movff	___xxtofl@arg,?___xxtofl
  4622   003A0E  C06F  F065         	movff	___xxtofl@arg+1,?___xxtofl+1
  4623   003A12  C070  F066         	movff	___xxtofl@arg+2,?___xxtofl+2
  4624   003A16  C071  F067         	movff	___xxtofl@arg+3,?___xxtofl+3
  4625   003A1A                     l1245:
  4626                           
  4627                           ; BSR set to: 0
  4628   003A1A  0012               	return		;funcret
  4629   003A1C                     __end_of___xxtofl:
  4630                           	callstack 0
  4631                           
  4632 ;; *************** function _Data2LCD *****************
  4633 ;; Defined at:
  4634 ;;		line 662 in file "main.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  pwm             1    wreg     unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  pwm             1   32[BANK1 ] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4648 ;;      Params:         0       0       0       0       0       0       0
  4649 ;;      Locals:         0       0       3       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0
  4651 ;;      Totals:         0       0       3       0       0       0       0
  4652 ;;Total ram usage:        3 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 11
  4655 ;; This function calls:
  4656 ;;		_SettingsLCD
  4657 ;;		_WriteLCD
  4658 ;;		___fldiv
  4659 ;;		___flmul
  4660 ;;		___fltol
  4661 ;;		_sprintf
  4662 ;;		_strlen
  4663 ;; This function is called by:
  4664 ;;		_PWM
  4665 ;;		_PWMI
  4666 ;;		_PWMD
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text19
  4671   002D64                     __ptext19:
  4672                           	callstack 0
  4673   002D64                     _Data2LCD:
  4674                           	callstack 16
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;incstack = 0
  4678                           ;Data2LCD@pwm stored from wreg
  4679   002D64  0101               	movlb	1	; () banked
  4680   002D66  6FE1               	movwf	Data2LCD@pwm& (0+255),b
  4681   002D68                     
  4682                           ;main.c: 663:     if (pwm == 2) {
  4683   002D68  0E02               	movlw	2
  4684   002D6A  0101               	movlb	1	; () banked
  4685   002D6C  19E1               	xorwf	Data2LCD@pwm& (0+255),w,b
  4686   002D6E  A4D8               	btfss	status,2,c
  4687   002D70  EFBC  F016         	goto	u8781
  4688   002D74  EFBE  F016         	goto	u8780
  4689   002D78                     u8781:
  4690   002D78  EF43  F017         	goto	l7192
  4691   002D7C                     u8780:
  4692   002D7C                     
  4693                           ; BSR set to: 1
  4694                           ;main.c: 664:         SettingsLCD(0x80 + 4);
  4695   002D7C  0E84               	movlw	132
  4696   002D7E  EC36  F027         	call	_SettingsLCD
  4697   002D82                     
  4698                           ;main.c: 665:         fI = (1.0 / (t2 * 0.000001));
  4699   002D82  0E00               	movlw	0
  4700   002D84  0100               	movlb	0	; () banked
  4701   002D86  6F8B               	movwf	___fldiv@b& (0+255),b
  4702   002D88  0E00               	movlw	0
  4703   002D8A  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  4704   002D8C  0E80               	movlw	128
  4705   002D8E  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  4706   002D90  0E3F               	movlw	63
  4707   002D92  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  4708   002D94  0EBD               	movlw	189
  4709   002D96  6F76               	movwf	___flmul@a& (0+255),b
  4710   002D98  0E37               	movlw	55
  4711   002D9A  6F77               	movwf	(___flmul@a+1)& (0+255),b
  4712   002D9C  0E86               	movlw	134
  4713   002D9E  6F78               	movwf	(___flmul@a+2)& (0+255),b
  4714   002DA0  0E35               	movlw	53
  4715   002DA2  6F79               	movwf	(___flmul@a+3)& (0+255),b
  4716   002DA4  C1A9  F072         	movff	_t2,___flmul@b
  4717   002DA8  C1AA  F073         	movff	_t2+1,___flmul@b+1
  4718   002DAC  C1AB  F074         	movff	_t2+2,___flmul@b+2
  4719   002DB0  C1AC  F075         	movff	_t2+3,___flmul@b+3
  4720   002DB4  EC4C  F00D         	call	___flmul	;wreg free
  4721   002DB8  C072  F08F         	movff	?___flmul,___fldiv@a
  4722   002DBC  C073  F090         	movff	?___flmul+1,___fldiv@a+1
  4723   002DC0  C074  F091         	movff	?___flmul+2,___fldiv@a+2
  4724   002DC4  C075  F092         	movff	?___flmul+3,___fldiv@a+3
  4725   002DC8  EC77  F011         	call	___fldiv	;wreg free
  4726   002DCC  C08B  F120         	movff	?___fldiv,_fI
  4727   002DD0  C08C  F121         	movff	?___fldiv+1,_fI+1
  4728   002DD4  C08D  F122         	movff	?___fldiv+2,_fI+2
  4729   002DD8  C08E  F123         	movff	?___fldiv+3,_fI+3
  4730   002DDC                     
  4731                           ;main.c: 666:         wI = (fI * 60.0) / 20.0;
  4732   002DDC  0E00               	movlw	0
  4733   002DDE  0100               	movlb	0	; () banked
  4734   002DE0  6F76               	movwf	___flmul@a& (0+255),b
  4735   002DE2  0E00               	movlw	0
  4736   002DE4  6F77               	movwf	(___flmul@a+1)& (0+255),b
  4737   002DE6  0E70               	movlw	112
  4738   002DE8  6F78               	movwf	(___flmul@a+2)& (0+255),b
  4739   002DEA  0E42               	movlw	66
  4740   002DEC  6F79               	movwf	(___flmul@a+3)& (0+255),b
  4741   002DEE  C120  F072         	movff	_fI,___flmul@b
  4742   002DF2  C121  F073         	movff	_fI+1,___flmul@b+1
  4743   002DF6  C122  F074         	movff	_fI+2,___flmul@b+2
  4744   002DFA  C123  F075         	movff	_fI+3,___flmul@b+3
  4745   002DFE  EC4C  F00D         	call	___flmul	;wreg free
  4746   002E02  C072  F08B         	movff	?___flmul,___fldiv@b
  4747   002E06  C073  F08C         	movff	?___flmul+1,___fldiv@b+1
  4748   002E0A  C074  F08D         	movff	?___flmul+2,___fldiv@b+2
  4749   002E0E  C075  F08E         	movff	?___flmul+3,___fldiv@b+3
  4750   002E12  0E00               	movlw	0
  4751   002E14  0100               	movlb	0	; () banked
  4752   002E16  6F8F               	movwf	___fldiv@a& (0+255),b
  4753   002E18  0E00               	movlw	0
  4754   002E1A  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  4755   002E1C  0EA0               	movlw	160
  4756   002E1E  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  4757   002E20  0E41               	movlw	65
  4758   002E22  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  4759   002E24  EC77  F011         	call	___fldiv	;wreg free
  4760   002E28  C08B  F11C         	movff	?___fldiv,_wI
  4761   002E2C  C08C  F11D         	movff	?___fldiv+1,_wI+1
  4762   002E30  C08D  F11E         	movff	?___fldiv+2,_wI+2
  4763   002E34  C08E  F11F         	movff	?___fldiv+3,_wI+3
  4764                           
  4765                           ;main.c: 667:         sprintf(buffer, "%.2f%% %d RPM", DutyCycle, (int) wI);
  4766   002E38  C11C  F064         	movff	_wI,___fltol@f1
  4767   002E3C  C11D  F065         	movff	_wI+1,___fltol@f1+1
  4768   002E40  C11E  F066         	movff	_wI+2,___fltol@f1+2
  4769   002E44  C11F  F067         	movff	_wI+3,___fltol@f1+3
  4770   002E48  EC5F  F01F         	call	___fltol	;wreg free
  4771   002E4C  C064  F1E2         	movff	?___fltol,_Data2LCD$1516
  4772   002E50  C065  F1E3         	movff	?___fltol+1,_Data2LCD$1516+1
  4773   002E54                     
  4774                           ;main.c: 667:         sprintf(buffer, "%.2f%% %d RPM", DutyCycle, (int) wI);
  4775   002E54  0E96               	movlw	low _buffer
  4776   002E56  0101               	movlb	1	; () banked
  4777   002E58  6FC9               	movwf	sprintf@s& (0+255),b
  4778   002E5A  0E01               	movlw	high _buffer
  4779   002E5C  6FCA               	movwf	(sprintf@s+1)& (0+255),b
  4780   002E5E  0E01               	movlw	low STR_1
  4781   002E60  6FCB               	movwf	sprintf@fmt& (0+255),b
  4782   002E62  0E06               	movlw	high STR_1
  4783   002E64  6FCC               	movwf	(sprintf@fmt+1)& (0+255),b
  4784   002E66  C12C  F1CD         	movff	_DutyCycle,?_sprintf+4
  4785   002E6A  C12D  F1CE         	movff	_DutyCycle+1,?_sprintf+5
  4786   002E6E  C12E  F1CF         	movff	_DutyCycle+2,?_sprintf+6
  4787   002E72  C12F  F1D0         	movff	_DutyCycle+3,?_sprintf+7
  4788   002E76  C1E2  F1D1         	movff	_Data2LCD$1516,?_sprintf+8
  4789   002E7A  C1E3  F1D2         	movff	_Data2LCD$1516+1,?_sprintf+9
  4790   002E7E  ECE8  F025         	call	_sprintf	;wreg free
  4791                           
  4792                           ;main.c: 668:     } else if (pwm == 3) {
  4793   002E82  EFCF  F017         	goto	l7202
  4794   002E86                     l7192:
  4795                           
  4796                           ; BSR set to: 1
  4797   002E86  0E03               	movlw	3
  4798   002E88  19E1               	xorwf	Data2LCD@pwm& (0+255),w,b
  4799   002E8A  A4D8               	btfss	status,2,c
  4800   002E8C  EF4A  F017         	goto	u8791
  4801   002E90  EF4C  F017         	goto	u8790
  4802   002E94                     u8791:
  4803   002E94  EFCF  F017         	goto	l7202
  4804   002E98                     u8790:
  4805   002E98                     
  4806                           ; BSR set to: 1
  4807                           ;main.c: 669:         SettingsLCD(0xC0 + 4);
  4808   002E98  0EC4               	movlw	196
  4809   002E9A  EC36  F027         	call	_SettingsLCD
  4810   002E9E                     
  4811                           ;main.c: 670:         fD = (1.0 / (t4 * 0.000001));
  4812   002E9E  0E00               	movlw	0
  4813   002EA0  0100               	movlb	0	; () banked
  4814   002EA2  6F8B               	movwf	___fldiv@b& (0+255),b
  4815   002EA4  0E00               	movlw	0
  4816   002EA6  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  4817   002EA8  0E80               	movlw	128
  4818   002EAA  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  4819   002EAC  0E3F               	movlw	63
  4820   002EAE  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  4821   002EB0  0EBD               	movlw	189
  4822   002EB2  6F76               	movwf	___flmul@a& (0+255),b
  4823   002EB4  0E37               	movlw	55
  4824   002EB6  6F77               	movwf	(___flmul@a+1)& (0+255),b
  4825   002EB8  0E86               	movlw	134
  4826   002EBA  6F78               	movwf	(___flmul@a+2)& (0+255),b
  4827   002EBC  0E35               	movlw	53
  4828   002EBE  6F79               	movwf	(___flmul@a+3)& (0+255),b
  4829   002EC0  C1A5  F072         	movff	_t4,___flmul@b
  4830   002EC4  C1A6  F073         	movff	_t4+1,___flmul@b+1
  4831   002EC8  C1A7  F074         	movff	_t4+2,___flmul@b+2
  4832   002ECC  C1A8  F075         	movff	_t4+3,___flmul@b+3
  4833   002ED0  EC4C  F00D         	call	___flmul	;wreg free
  4834   002ED4  C072  F08F         	movff	?___flmul,___fldiv@a
  4835   002ED8  C073  F090         	movff	?___flmul+1,___fldiv@a+1
  4836   002EDC  C074  F091         	movff	?___flmul+2,___fldiv@a+2
  4837   002EE0  C075  F092         	movff	?___flmul+3,___fldiv@a+3
  4838   002EE4  EC77  F011         	call	___fldiv	;wreg free
  4839   002EE8  C08B  F118         	movff	?___fldiv,_fD
  4840   002EEC  C08C  F119         	movff	?___fldiv+1,_fD+1
  4841   002EF0  C08D  F11A         	movff	?___fldiv+2,_fD+2
  4842   002EF4  C08E  F11B         	movff	?___fldiv+3,_fD+3
  4843   002EF8                     
  4844                           ;main.c: 671:         wD = (fD * 60.0) / 20.0;
  4845   002EF8  0E00               	movlw	0
  4846   002EFA  0100               	movlb	0	; () banked
  4847   002EFC  6F76               	movwf	___flmul@a& (0+255),b
  4848   002EFE  0E00               	movlw	0
  4849   002F00  6F77               	movwf	(___flmul@a+1)& (0+255),b
  4850   002F02  0E70               	movlw	112
  4851   002F04  6F78               	movwf	(___flmul@a+2)& (0+255),b
  4852   002F06  0E42               	movlw	66
  4853   002F08  6F79               	movwf	(___flmul@a+3)& (0+255),b
  4854   002F0A  C118  F072         	movff	_fD,___flmul@b
  4855   002F0E  C119  F073         	movff	_fD+1,___flmul@b+1
  4856   002F12  C11A  F074         	movff	_fD+2,___flmul@b+2
  4857   002F16  C11B  F075         	movff	_fD+3,___flmul@b+3
  4858   002F1A  EC4C  F00D         	call	___flmul	;wreg free
  4859   002F1E  C072  F08B         	movff	?___flmul,___fldiv@b
  4860   002F22  C073  F08C         	movff	?___flmul+1,___fldiv@b+1
  4861   002F26  C074  F08D         	movff	?___flmul+2,___fldiv@b+2
  4862   002F2A  C075  F08E         	movff	?___flmul+3,___fldiv@b+3
  4863   002F2E  0E00               	movlw	0
  4864   002F30  0100               	movlb	0	; () banked
  4865   002F32  6F8F               	movwf	___fldiv@a& (0+255),b
  4866   002F34  0E00               	movlw	0
  4867   002F36  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  4868   002F38  0EA0               	movlw	160
  4869   002F3A  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  4870   002F3C  0E41               	movlw	65
  4871   002F3E  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  4872   002F40  EC77  F011         	call	___fldiv	;wreg free
  4873   002F44  C08B  F114         	movff	?___fldiv,_wD
  4874   002F48  C08C  F115         	movff	?___fldiv+1,_wD+1
  4875   002F4C  C08D  F116         	movff	?___fldiv+2,_wD+2
  4876   002F50  C08E  F117         	movff	?___fldiv+3,_wD+3
  4877                           
  4878                           ;main.c: 672:         sprintf(buffer, "%.2f%% %d RPM", DutyCycle, (int) wD);
  4879   002F54  C114  F064         	movff	_wD,___fltol@f1
  4880   002F58  C115  F065         	movff	_wD+1,___fltol@f1+1
  4881   002F5C  C116  F066         	movff	_wD+2,___fltol@f1+2
  4882   002F60  C117  F067         	movff	_wD+3,___fltol@f1+3
  4883   002F64  EC5F  F01F         	call	___fltol	;wreg free
  4884   002F68  C064  F1E2         	movff	?___fltol,_Data2LCD$1516
  4885   002F6C  C065  F1E3         	movff	?___fltol+1,_Data2LCD$1516+1
  4886   002F70                     
  4887                           ;main.c: 672:         sprintf(buffer, "%.2f%% %d RPM", DutyCycle, (int) wD);
  4888   002F70  0E96               	movlw	low _buffer
  4889   002F72  0101               	movlb	1	; () banked
  4890   002F74  6FC9               	movwf	sprintf@s& (0+255),b
  4891   002F76  0E01               	movlw	high _buffer
  4892   002F78  6FCA               	movwf	(sprintf@s+1)& (0+255),b
  4893   002F7A  0E01               	movlw	low STR_1
  4894   002F7C  6FCB               	movwf	sprintf@fmt& (0+255),b
  4895   002F7E  0E06               	movlw	high STR_1
  4896   002F80  6FCC               	movwf	(sprintf@fmt+1)& (0+255),b
  4897   002F82  C12C  F1CD         	movff	_DutyCycle,?_sprintf+4
  4898   002F86  C12D  F1CE         	movff	_DutyCycle+1,?_sprintf+5
  4899   002F8A  C12E  F1CF         	movff	_DutyCycle+2,?_sprintf+6
  4900   002F8E  C12F  F1D0         	movff	_DutyCycle+3,?_sprintf+7
  4901   002F92  C1E2  F1D1         	movff	_Data2LCD$1516,?_sprintf+8
  4902   002F96  C1E3  F1D2         	movff	_Data2LCD$1516+1,?_sprintf+9
  4903   002F9A  ECE8  F025         	call	_sprintf	;wreg free
  4904   002F9E                     l7202:
  4905                           
  4906                           ;main.c: 674:     for (i = 0; i <= strlen(buffer); i++) {
  4907   002F9E  0E00               	movlw	0
  4908   002FA0  0101               	movlb	1	; () banked
  4909   002FA2  6F41               	movwf	(_i+1)& (0+255),b
  4910   002FA4  0E00               	movlw	0
  4911   002FA6  6F40               	movwf	_i& (0+255),b
  4912   002FA8  EFE3  F017         	goto	l7208
  4913   002FAC                     l7204:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;main.c: 675:         WriteLCD(buffer[i]);
  4917   002FAC  0E96               	movlw	low _buffer
  4918   002FAE  0101               	movlb	1	; () banked
  4919   002FB0  2540               	addwf	_i& (0+255),w,b
  4920   002FB2  6ED9               	movwf	fsr2l,c
  4921   002FB4  0E01               	movlw	high _buffer
  4922   002FB6  2141               	addwfc	(_i+1)& (0+255),w,b
  4923   002FB8  6EDA               	movwf	fsr2h,c
  4924   002FBA  50DF               	movf	indf2,w,c
  4925   002FBC  EC28  F027         	call	_WriteLCD
  4926   002FC0                     
  4927                           ;main.c: 676:     }
  4928   002FC0  0101               	movlb	1	; () banked
  4929   002FC2  4B40               	infsnz	_i& (0+255),f,b
  4930   002FC4  2B41               	incf	(_i+1)& (0+255),f,b
  4931   002FC6                     l7208:
  4932                           
  4933                           ; BSR set to: 1
  4934   002FC6  0E96               	movlw	low _buffer
  4935   002FC8  0100               	movlb	0	; () banked
  4936   002FCA  6F64               	movwf	strlen@s& (0+255),b
  4937   002FCC  0E01               	movlw	high _buffer
  4938   002FCE  6F65               	movwf	(strlen@s+1)& (0+255),b
  4939   002FD0  EC9A  F026         	call	_strlen	;wreg free
  4940   002FD4  0101               	movlb	1	; () banked
  4941   002FD6  5140               	movf	_i& (0+255),w,b
  4942   002FD8  0100               	movlb	0	; () banked
  4943   002FDA  5D64               	subwf	?_strlen& (0+255),w,b
  4944   002FDC  0101               	movlb	1	; () banked
  4945   002FDE  5141               	movf	(_i+1)& (0+255),w,b
  4946   002FE0  0100               	movlb	0	; () banked
  4947   002FE2  5965               	subwfb	(?_strlen+1)& (0+255),w,b
  4948   002FE4  B0D8               	btfsc	status,0,c
  4949   002FE6  EFF7  F017         	goto	u8801
  4950   002FEA  EFF9  F017         	goto	u8800
  4951   002FEE                     u8801:
  4952   002FEE  EFD6  F017         	goto	l7204
  4953   002FF2                     u8800:
  4954   002FF2                     
  4955                           ; BSR set to: 0
  4956   002FF2  0012               	return		;funcret
  4957   002FF4                     __end_of_Data2LCD:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _strlen *****************
  4961 ;; Defined at:
  4962 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  4965 ;;		 -> buffer(15), text2(10), text(10), 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  a               2    6[BANK0 ] PTR const unsigned char 
  4968 ;;		 -> buffer(15), text2(10), text(10), 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  2    4[BANK0 ] unsigned int 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4978 ;;      Params:         0       2       0       0       0       0       0
  4979 ;;      Locals:         0       2       0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0
  4981 ;;      Totals:         0       4       0       0       0       0       0
  4982 ;;Total ram usage:        4 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 3
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_Data1LCD
  4989 ;;		_Data2LCD
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text20
  4994   004D34                     __ptext20:
  4995                           	callstack 0
  4996   004D34                     _strlen:
  4997                           	callstack 25
  4998   004D34  C064  F066         	movff	strlen@s,strlen@a
  4999   004D38  C065  F067         	movff	strlen@s+1,strlen@a+1
  5000   004D3C  EFA3  F026         	goto	l7164
  5001   004D40                     l7162:
  5002   004D40  0100               	movlb	0	; () banked
  5003   004D42  4B64               	infsnz	strlen@s& (0+255),f,b
  5004   004D44  2B65               	incf	(strlen@s+1)& (0+255),f,b
  5005   004D46                     l7164:
  5006   004D46  C064  FFD9         	movff	strlen@s,fsr2l
  5007   004D4A  C065  FFDA         	movff	strlen@s+1,fsr2h
  5008   004D4E  50DF               	movf	indf2,w,c
  5009   004D50  A4D8               	btfss	status,2,c
  5010   004D52  EFAD  F026         	goto	u8771
  5011   004D56  EFAF  F026         	goto	u8770
  5012   004D5A                     u8771:
  5013   004D5A  EFA0  F026         	goto	l7162
  5014   004D5E                     u8770:
  5015   004D5E  0100               	movlb	0	; () banked
  5016   004D60  5166               	movf	strlen@a& (0+255),w,b
  5017   004D62  5D64               	subwf	strlen@s& (0+255),w,b
  5018   004D64  6F64               	movwf	?_strlen& (0+255),b
  5019   004D66  5167               	movf	(strlen@a+1)& (0+255),w,b
  5020   004D68  5965               	subwfb	(strlen@s+1)& (0+255),w,b
  5021   004D6A  6F65               	movwf	(?_strlen+1)& (0+255),b
  5022   004D6C                     
  5023                           ; BSR set to: 0
  5024   004D6C  0012               	return		;funcret
  5025   004D6E                     __end_of_strlen:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _sprintf *****************
  5029 ;; Defined at:
  5030 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  s               2    8[BANK1 ] PTR unsigned char 
  5033 ;;		 -> buffer(15), 
  5034 ;;  fmt             2   10[BANK1 ] PTR const unsigned char 
  5035 ;;		 -> STR_2(14), STR_1(14), 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  f              12   20[BANK1 ] struct _IO_FILE
  5038 ;;  ap              2   18[BANK1 ] PTR void [1]
  5039 ;;		 -> ?_sprintf(2), 
  5040 ;;  ret             2    0        int 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  2    8[BANK1 ] int 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5050 ;;      Params:         0       0      10       0       0       0       0
  5051 ;;      Locals:         0       0      14       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0
  5053 ;;      Totals:         0       0      24       0       0       0       0
  5054 ;;Total ram usage:       24 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; Hardware stack levels required when called: 10
  5057 ;; This function calls:
  5058 ;;		_vfprintf
  5059 ;; This function is called by:
  5060 ;;		_Data2LCD
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text21
  5065   004BD0                     __ptext21:
  5066                           	callstack 0
  5067   004BD0                     _sprintf:
  5068                           	callstack 16
  5069   004BD0  0ECD               	movlw	low (?_sprintf+4)
  5070   004BD2  0101               	movlb	1	; () banked
  5071   004BD4  6FD3               	movwf	sprintf@ap& (0+255),b
  5072   004BD6  0E01               	movlw	high (?_sprintf+4)
  5073   004BD8  6FD4               	movwf	(sprintf@ap+1)& (0+255),b
  5074   004BDA  C1C9  F1D5         	movff	sprintf@s,sprintf@f
  5075   004BDE  C1CA  F1D6         	movff	sprintf@s+1,sprintf@f+1
  5076   004BE2                     
  5077                           ; BSR set to: 1
  5078   004BE2  0E00               	movlw	0
  5079   004BE4  6FD9               	movwf	(sprintf@f+4)& (0+255),b
  5080   004BE6  0E00               	movlw	0
  5081   004BE8  6FD8               	movwf	(sprintf@f+3)& (0+255),b
  5082   004BEA                     
  5083                           ; BSR set to: 1
  5084   004BEA  0E00               	movlw	0
  5085   004BEC  6FE0               	movwf	(sprintf@f+11)& (0+255),b
  5086   004BEE  0E00               	movlw	0
  5087   004BF0  6FDF               	movwf	(sprintf@f+10)& (0+255),b
  5088   004BF2                     
  5089                           ; BSR set to: 1
  5090   004BF2  0ED5               	movlw	low sprintf@f
  5091   004BF4  6FC1               	movwf	vfprintf@fp& (0+255),b
  5092   004BF6  0E01               	movlw	high sprintf@f
  5093   004BF8  6FC2               	movwf	(vfprintf@fp+1)& (0+255),b
  5094   004BFA  C1CB  F1C3         	movff	sprintf@fmt,vfprintf@fmt
  5095   004BFE  C1CC  F1C4         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5096   004C02  0ED3               	movlw	low sprintf@ap
  5097   004C04  6FC5               	movwf	vfprintf@ap& (0+255),b
  5098   004C06  0E01               	movlw	high sprintf@ap
  5099   004C08  6FC6               	movwf	(vfprintf@ap+1)& (0+255),b
  5100   004C0A  EC96  F025         	call	_vfprintf	;wreg free
  5101   004C0E  0101               	movlb	1	; () banked
  5102   004C10  51D8               	movf	(sprintf@f+3)& (0+255),w,b
  5103   004C12  25C9               	addwf	sprintf@s& (0+255),w,b
  5104   004C14  6ED9               	movwf	fsr2l,c
  5105   004C16  51D9               	movf	(sprintf@f+4)& (0+255),w,b
  5106   004C18  21CA               	addwfc	(sprintf@s+1)& (0+255),w,b
  5107   004C1A  6EDA               	movwf	fsr2h,c
  5108   004C1C  6ADF               	clrf	indf2,c
  5109   004C1E                     
  5110                           ; BSR set to: 1
  5111   004C1E  0012               	return		;funcret
  5112   004C20                     __end_of_sprintf:
  5113                           	callstack 0
  5114                           
  5115 ;; *************** function _vfprintf *****************
  5116 ;; Defined at:
  5117 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  5120 ;;		 -> sprintf@f(12), 
  5121 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  5122 ;;		 -> STR_2(14), STR_1(14), 
  5123 ;;  ap              2    4[BANK1 ] PTR PTR void 
  5124 ;;		 -> sprintf@ap(2), 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  5127 ;;		 -> STR_2(14), STR_1(14), 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  2    0[BANK1 ] int 
  5130 ;; Registers used:
  5131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5137 ;;      Params:         0       0       6       0       0       0       0
  5138 ;;      Locals:         0       0       2       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0
  5140 ;;      Totals:         0       0       8       0       0       0       0
  5141 ;;Total ram usage:        8 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 9
  5144 ;; This function calls:
  5145 ;;		_vfpfcnvrt
  5146 ;; This function is called by:
  5147 ;;		_sprintf
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text22
  5152   004B2C                     __ptext22:
  5153                           	callstack 0
  5154   004B2C                     _vfprintf:
  5155                           	callstack 16
  5156   004B2C                     
  5157                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  5158   004B2C  C1C3  F1C7         	movff	vfprintf@fmt,vfprintf@cfmt
  5159   004B30  C1C4  F1C8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5160                           
  5161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5162   004B34  EFAB  F025         	goto	l7146
  5163   004B38                     l7144:
  5164                           
  5165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5166   004B38  C1C1  F0ED         	movff	vfprintf@fp,vfpfcnvrt@fp
  5167   004B3C  C1C2  F0EE         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5168   004B40  0EC7               	movlw	low vfprintf@cfmt
  5169   004B42  0100               	movlb	0	; () banked
  5170   004B44  6FEF               	movwf	vfpfcnvrt@fmt& (0+255),b
  5171   004B46  0E01               	movlw	high vfprintf@cfmt
  5172   004B48  6FF0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  5173   004B4A  C1C5  F0F1         	movff	vfprintf@ap,vfpfcnvrt@ap
  5174   004B4E  C1C6  F0F2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5175   004B52  EC06  F015         	call	_vfpfcnvrt	;wreg free
  5176   004B56                     l7146:
  5177                           
  5178                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5179   004B56  C1C7  FFF6         	movff	vfprintf@cfmt,tblptrl
  5180   004B5A  C1C8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5181   004B5E                     	if	0	;tblptru may be non-zero
  5182   004B5E                     	endif
  5183   004B5E                     	if	0	;tblptru may be non-zero
  5184   004B5E                     	endif
  5185   004B5E  0008               	tblrd		*
  5186   004B60  50F5               	movf	tablat,w,c
  5187   004B62  0900               	iorlw	0
  5188   004B64  A4D8               	btfss	status,2,c
  5189   004B66  EFB7  F025         	goto	u8761
  5190   004B6A  EFB9  F025         	goto	u8760
  5191   004B6E                     u8761:
  5192   004B6E  EF9C  F025         	goto	l7144
  5193   004B72                     u8760:
  5194   004B72                     
  5195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  5196   004B72  0E00               	movlw	0
  5197   004B74  0101               	movlb	1	; () banked
  5198   004B76  6FC2               	movwf	(?_vfprintf+1)& (0+255),b
  5199   004B78  0E00               	movlw	0
  5200   004B7A  6FC1               	movwf	?_vfprintf& (0+255),b
  5201   004B7C                     
  5202                           ; BSR set to: 1
  5203   004B7C  0012               	return		;funcret
  5204   004B7E                     __end_of_vfprintf:
  5205                           	callstack 0
  5206                           
  5207 ;; *************** function _vfpfcnvrt *****************
  5208 ;; Defined at:
  5209 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  fp              2  141[BANK0 ] PTR struct _IO_FILE
  5212 ;;		 -> sprintf@f(12), 
  5213 ;;  fmt             2  143[BANK0 ] PTR PTR unsigned char 
  5214 ;;		 -> vfprintf@cfmt(2), 
  5215 ;;  ap              2  145[BANK0 ] PTR PTR void 
  5216 ;;		 -> sprintf@ap(2), 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  convarg         4  149[BANK0 ] struct .
  5219 ;;  cp              2  154[BANK0 ] PTR unsigned char 
  5220 ;;		 -> STR_2(14), STR_1(14), 
  5221 ;;  i               2    0        int 
  5222 ;;  done            2    0        int 
  5223 ;;  c               1  153[BANK0 ] unsigned char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      void 
  5226 ;; Registers used:
  5227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5233 ;;      Params:         0       6       0       0       0       0       0
  5234 ;;      Locals:         0       7       0       0       0       0       0
  5235 ;;      Temps:          0       2       0       0       0       0       0
  5236 ;;      Totals:         0      15       0       0       0       0       0
  5237 ;;Total ram usage:       15 bytes
  5238 ;; Hardware stack levels used: 1
  5239 ;; Hardware stack levels required when called: 8
  5240 ;; This function calls:
  5241 ;;		_dtoa
  5242 ;;		_efgtoa
  5243 ;;		_fputc
  5244 ;;		_read_prec_or_width
  5245 ;; This function is called by:
  5246 ;;		_vfprintf
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text23
  5251   002A0C                     __ptext23:
  5252                           	callstack 0
  5253   002A0C                     _vfpfcnvrt:
  5254                           	callstack 16
  5255   002A0C                     
  5256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  5257   002A0C  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5258   002A10  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5259   002A14  CFDE FFF6          	movff	postinc2,tblptrl
  5260   002A18  CFDD FFF7          	movff	postdec2,tblptrh
  5261   002A1C                     	if	0	;tblptru may be non-zero
  5262   002A1C                     	endif
  5263   002A1C                     	if	0	;tblptru may be non-zero
  5264   002A1C                     	endif
  5265   002A1C  0008               	tblrd		*
  5266   002A1E  50F5               	movf	tablat,w,c
  5267   002A20  0A25               	xorlw	37
  5268   002A22  A4D8               	btfss	status,2,c
  5269   002A24  EF16  F015         	goto	u8701
  5270   002A28  EF18  F015         	goto	u8700
  5271   002A2C                     u8701:
  5272   002A2C  EF9C  F016         	goto	l7094
  5273   002A30                     u8700:
  5274   002A30                     
  5275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  5276   002A30  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5277   002A34  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5278   002A38  2ADE               	incf	postinc2,f,c
  5279   002A3A  0E00               	movlw	0
  5280   002A3C  22DD               	addwfc	postdec2,f,c
  5281   002A3E                     
  5282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  5283   002A3E  0E00               	movlw	0
  5284   002A40  6E1A               	movwf	(_width+1)^0,c
  5285   002A42  0E00               	movlw	0
  5286   002A44  6E19               	movwf	_width^0,c
  5287   002A46  C019  F029         	movff	_width,_flags
  5288   002A4A                     
  5289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  5290   002A4A  681B               	setf	_prec^0,c
  5291   002A4C  681C               	setf	(_prec+1)^0,c
  5292   002A4E                     
  5293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  5294   002A4E  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5295   002A52  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5296   002A56  CFDE FFF6          	movff	postinc2,tblptrl
  5297   002A5A  CFDD FFF7          	movff	postdec2,tblptrh
  5298   002A5E                     	if	0	;tblptru may be non-zero
  5299   002A5E                     	endif
  5300   002A5E                     	if	0	;tblptru may be non-zero
  5301   002A5E                     	endif
  5302   002A5E  0008               	tblrd		*
  5303   002A60  50F5               	movf	tablat,w,c
  5304   002A62  0A2E               	xorlw	46
  5305   002A64  A4D8               	btfss	status,2,c
  5306   002A66  EF37  F015         	goto	u8711
  5307   002A6A  EF39  F015         	goto	u8710
  5308   002A6E                     u8711:
  5309   002A6E  EF4E  F015         	goto	l7036
  5310   002A72                     u8710:
  5311   002A72                     
  5312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  5313   002A72  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5314   002A76  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5315   002A7A  2ADE               	incf	postinc2,f,c
  5316   002A7C  0E00               	movlw	0
  5317   002A7E  22DD               	addwfc	postdec2,f,c
  5318   002A80                     
  5319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  5320   002A80  C0EF  F06A         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5321   002A84  C0F0  F06B         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  5322   002A88  C0F1  F06C         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5323   002A8C  C0F2  F06D         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  5324   002A90  EC36  F022         	call	_read_prec_or_width	;wreg free
  5325   002A94  C06A  F01B         	movff	?_read_prec_or_width,_prec
  5326   002A98  C06B  F01C         	movff	?_read_prec_or_width+1,_prec+1
  5327   002A9C                     l7036:
  5328                           
  5329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  5330   002A9C  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5331   002AA0  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5332   002AA4  CFDE F0FA          	movff	postinc2,vfpfcnvrt@cp
  5333   002AA8  CFDD F0FB          	movff	postdec2,vfpfcnvrt@cp+1
  5334   002AAC                     
  5335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5336   002AAC  C0FA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5337   002AB0  C0FB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5338   002AB4                     	if	0	;tblptru may be non-zero
  5339   002AB4                     	endif
  5340   002AB4                     	if	0	;tblptru may be non-zero
  5341   002AB4                     	endif
  5342   002AB4  0008               	tblrd		*
  5343   002AB6  50F5               	movf	tablat,w,c
  5344   002AB8  0A64               	xorlw	100
  5345   002ABA  B4D8               	btfsc	status,2,c
  5346   002ABC  EF62  F015         	goto	u8721
  5347   002AC0  EF64  F015         	goto	u8720
  5348   002AC4                     u8721:
  5349   002AC4  EF72  F015         	goto	l7042
  5350   002AC8                     u8720:
  5351   002AC8  C0FA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5352   002ACC  C0FB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5353   002AD0                     	if	0	;tblptru may be non-zero
  5354   002AD0                     	endif
  5355   002AD0                     	if	0	;tblptru may be non-zero
  5356   002AD0                     	endif
  5357   002AD0  0008               	tblrd		*
  5358   002AD2  50F5               	movf	tablat,w,c
  5359   002AD4  0A69               	xorlw	105
  5360   002AD6  A4D8               	btfss	status,2,c
  5361   002AD8  EF70  F015         	goto	u8731
  5362   002ADC  EF72  F015         	goto	u8730
  5363   002AE0                     u8731:
  5364   002AE0  EFA1  F015         	goto	l7048
  5365   002AE4                     u8730:
  5366   002AE4                     l7042:
  5367                           
  5368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5369   002AE4  C0F1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5370   002AE8  C0F2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5371   002AEC  CFDF F0F3          	movff	indf2,??_vfpfcnvrt
  5372   002AF0  0E02               	movlw	2
  5373   002AF2  26DE               	addwf	postinc2,f,c
  5374   002AF4  CFDF F0F4          	movff	indf2,??_vfpfcnvrt+1
  5375   002AF8  0E00               	movlw	0
  5376   002AFA  22DD               	addwfc	postdec2,f,c
  5377   002AFC  C0F3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5378   002B00  C0F4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5379   002B04  CFDE F0F5          	movff	postinc2,vfpfcnvrt@convarg
  5380   002B08  CFDD F0F6          	movff	postdec2,vfpfcnvrt@convarg+1
  5381                           
  5382                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  5383   002B0C  0E01               	movlw	1
  5384   002B0E  0100               	movlb	0	; () banked
  5385   002B10  25FA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5386   002B12  6FF3               	movwf	??_vfpfcnvrt& (0+255),b
  5387   002B14  0E00               	movlw	0
  5388   002B16  21FB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5389   002B18  6FF4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5390   002B1A  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5391   002B1E  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5392   002B22  C0F3  FFDE         	movff	??_vfpfcnvrt,postinc2
  5393   002B26  C0F4  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5394   002B2A                     
  5395                           ; BSR set to: 0
  5396                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5397   002B2A  C0ED  F07F         	movff	vfpfcnvrt@fp,dtoa@fp
  5398   002B2E  C0EE  F080         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5399   002B32  C0F5  F081         	movff	vfpfcnvrt@convarg,dtoa@d
  5400   002B36  C0F6  F082         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5401   002B3A  ECE8  F01D         	call	_dtoa	;wreg free
  5402   002B3E  EFB1  F016         	goto	l1388
  5403   002B42                     l7048:
  5404                           
  5405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  5406   002B42  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5407   002B46  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5408   002B4A  CFDE F0FA          	movff	postinc2,vfpfcnvrt@cp
  5409   002B4E  CFDD F0FB          	movff	postdec2,vfpfcnvrt@cp+1
  5410   002B52                     
  5411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  5412   002B52  C0FA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5413   002B56  C0FB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5414   002B5A                     	if	0	;tblptru may be non-zero
  5415   002B5A                     	endif
  5416   002B5A                     	if	0	;tblptru may be non-zero
  5417   002B5A                     	endif
  5418   002B5A  0008               	tblrd		*
  5419   002B5C  CFF5 F0F9          	movff	tablat,vfpfcnvrt@c
  5420                           
  5421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  5422   002B60  EFBE  F015         	goto	l7060
  5423   002B64                     l7052:
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  5427   002B64  4BFA               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  5428   002B66  2BFB               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  5429                           
  5430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  5431   002B68  EFD8  F015         	goto	l7062
  5432   002B6C                     l7054:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  5436   002B6C  0E6C               	movlw	108
  5437   002B6E  6FF9               	movwf	vfpfcnvrt@c& (0+255),b
  5438                           
  5439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  5440   002B70  EFD8  F015         	goto	l7062
  5441   002B74                     l7056:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  5445   002B74  0E00               	movlw	0
  5446   002B76  6FF9               	movwf	vfpfcnvrt@c& (0+255),b
  5447                           
  5448                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  5449   002B78  EFD8  F015         	goto	l7062
  5450   002B7C                     l7060:
  5451   002B7C  0100               	movlb	0	; () banked
  5452   002B7E  51F9               	movf	vfpfcnvrt@c& (0+255),w,b
  5453   002B80  6FF3               	movwf	??_vfpfcnvrt& (0+255),b
  5454   002B82  6BF4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5455                           
  5456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5457                           ; Switch size 1, requested type "simple"
  5458                           ; Number of cases is 1, Range of values is 0 to 0
  5459                           ; switch strategies available:
  5460                           ; Name         Instructions Cycles
  5461                           ; simple_byte            4     3 (average)
  5462                           ;	Chosen strategy is simple_byte
  5463   002B84  51F4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5464   002B86  0A00               	xorlw	0	; case 0
  5465   002B88  B4D8               	btfsc	status,2,c
  5466   002B8A  EFC9  F015         	goto	l7914
  5467   002B8E  EFBA  F015         	goto	l7056
  5468   002B92                     l7914:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ; Switch size 1, requested type "simple"
  5472                           ; Number of cases is 3, Range of values is 76 to 108
  5473                           ; switch strategies available:
  5474                           ; Name         Instructions Cycles
  5475                           ; simple_byte           10     6 (average)
  5476                           ;	Chosen strategy is simple_byte
  5477   002B92  51F3               	movf	??_vfpfcnvrt& (0+255),w,b
  5478   002B94  0A4C               	xorlw	76	; case 76
  5479   002B96  B4D8               	btfsc	status,2,c
  5480   002B98  EFB2  F015         	goto	l7052
  5481   002B9C  0A2A               	xorlw	42	; case 102
  5482   002B9E  B4D8               	btfsc	status,2,c
  5483   002BA0  EFB6  F015         	goto	l7054
  5484   002BA4  0A0A               	xorlw	10	; case 108
  5485   002BA6  B4D8               	btfsc	status,2,c
  5486   002BA8  EFB2  F015         	goto	l7052
  5487   002BAC  EFBA  F015         	goto	l7056
  5488   002BB0                     l7062:
  5489                           
  5490                           ; BSR set to: 0
  5491   002BB0  C0FA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5492   002BB4  C0FB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5493   002BB8                     	if	0	;tblptru may be non-zero
  5494   002BB8                     	endif
  5495   002BB8                     	if	0	;tblptru may be non-zero
  5496   002BB8                     	endif
  5497   002BB8  0008               	tblrd		*
  5498   002BBA  50F5               	movf	tablat,w,c
  5499   002BBC  0A66               	xorlw	102
  5500   002BBE  A4D8               	btfss	status,2,c
  5501   002BC0  EFE4  F015         	goto	u8741
  5502   002BC4  EFE6  F015         	goto	u8740
  5503   002BC8                     u8741:
  5504   002BC8  EF6E  F016         	goto	l7082
  5505   002BCC                     u8740:
  5506   002BCC  EF1C  F016         	goto	l7070
  5507   002BD0                     l7064:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5511   002BD0  C0F1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5512   002BD4  C0F2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5513   002BD8  CFDF F0F3          	movff	indf2,??_vfpfcnvrt
  5514   002BDC  0E04               	movlw	4
  5515   002BDE  26DE               	addwf	postinc2,f,c
  5516   002BE0  CFDF F0F4          	movff	indf2,??_vfpfcnvrt+1
  5517   002BE4  0E00               	movlw	0
  5518   002BE6  22DD               	addwfc	postdec2,f,c
  5519   002BE8  C0F3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5520   002BEC  C0F4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5521   002BF0  CFDE F0F5          	movff	postinc2,vfpfcnvrt@convarg
  5522   002BF4  CFDE F0F6          	movff	postinc2,vfpfcnvrt@convarg+1
  5523   002BF8  CFDE F0F7          	movff	postinc2,vfpfcnvrt@convarg+2
  5524   002BFC  CFDE F0F8          	movff	postinc2,vfpfcnvrt@convarg+3
  5525                           
  5526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  5527   002C00  EF31  F016         	goto	l7072
  5528   002C04                     l7066:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5532   002C04  C0F1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5533   002C08  C0F2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5534   002C0C  CFDF F0F3          	movff	indf2,??_vfpfcnvrt
  5535   002C10  0E04               	movlw	4
  5536   002C12  26DE               	addwf	postinc2,f,c
  5537   002C14  CFDF F0F4          	movff	indf2,??_vfpfcnvrt+1
  5538   002C18  0E00               	movlw	0
  5539   002C1A  22DD               	addwfc	postdec2,f,c
  5540   002C1C  C0F3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5541   002C20  C0F4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5542   002C24  CFDE F0F5          	movff	postinc2,vfpfcnvrt@convarg
  5543   002C28  CFDE F0F6          	movff	postinc2,vfpfcnvrt@convarg+1
  5544   002C2C  CFDE F0F7          	movff	postinc2,vfpfcnvrt@convarg+2
  5545   002C30  CFDE F0F8          	movff	postinc2,vfpfcnvrt@convarg+3
  5546                           
  5547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  5548   002C34  EF31  F016         	goto	l7072
  5549   002C38                     l7070:
  5550                           
  5551                           ; BSR set to: 0
  5552   002C38  51F9               	movf	vfpfcnvrt@c& (0+255),w,b
  5553   002C3A  6FF3               	movwf	??_vfpfcnvrt& (0+255),b
  5554   002C3C  6BF4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5555                           
  5556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5557                           ; Switch size 1, requested type "simple"
  5558                           ; Number of cases is 1, Range of values is 0 to 0
  5559                           ; switch strategies available:
  5560                           ; Name         Instructions Cycles
  5561                           ; simple_byte            4     3 (average)
  5562                           ;	Chosen strategy is simple_byte
  5563   002C3E  51F4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5564   002C40  0A00               	xorlw	0	; case 0
  5565   002C42  B4D8               	btfsc	status,2,c
  5566   002C44  EF26  F016         	goto	l7916
  5567   002C48  EF31  F016         	goto	l7072
  5568   002C4C                     l7916:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ; Switch size 1, requested type "simple"
  5572                           ; Number of cases is 2, Range of values is 76 to 108
  5573                           ; switch strategies available:
  5574                           ; Name         Instructions Cycles
  5575                           ; simple_byte            7     4 (average)
  5576                           ;	Chosen strategy is simple_byte
  5577   002C4C  51F3               	movf	??_vfpfcnvrt& (0+255),w,b
  5578   002C4E  0A4C               	xorlw	76	; case 76
  5579   002C50  B4D8               	btfsc	status,2,c
  5580   002C52  EF02  F016         	goto	l7066
  5581   002C56  0A20               	xorlw	32	; case 108
  5582   002C58  B4D8               	btfsc	status,2,c
  5583   002C5A  EFE8  F015         	goto	l7064
  5584   002C5E  EF31  F016         	goto	l7072
  5585   002C62                     l7072:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  5589   002C62  0E01               	movlw	1
  5590   002C64  25FA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5591   002C66  6FF3               	movwf	??_vfpfcnvrt& (0+255),b
  5592   002C68  0E00               	movlw	0
  5593   002C6A  21FB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5594   002C6C  6FF4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5595   002C6E  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5596   002C72  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5597   002C76  C0F3  FFDE         	movff	??_vfpfcnvrt,postinc2
  5598   002C7A  C0F4  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5599                           
  5600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  5601   002C7E  EF58  F016         	goto	l7080
  5602   002C82                     l7074:
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  5606   002C82  C0ED  F0B8         	movff	vfpfcnvrt@fp,efgtoa@fp
  5607   002C86  C0EE  F0B9         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5608   002C8A  C0F5  F0BA         	movff	vfpfcnvrt@convarg,efgtoa@f
  5609   002C8E  C0F6  F0BB         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  5610   002C92  C0F7  F0BC         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  5611   002C96  C0F8  F0BD         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  5612   002C9A  C0FA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5613   002C9E  C0FB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5614   002CA2                     	if	0	;tblptru may be non-zero
  5615   002CA2                     	endif
  5616   002CA2                     	if	0	;tblptru may be non-zero
  5617   002CA2                     	endif
  5618   002CA2  0008               	tblrd		*
  5619   002CA4  CFF5 F0BE          	movff	tablat,efgtoa@c
  5620   002CA8  EC0C  F003         	call	_efgtoa	;wreg free
  5621   002CAC  EFB1  F016         	goto	l1388
  5622   002CB0                     l7080:
  5623                           
  5624                           ; BSR set to: 0
  5625   002CB0  C0FA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5626   002CB4  C0FB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5627   002CB8                     	if	0	;tblptru may be non-zero
  5628   002CB8                     	endif
  5629   002CB8                     	if	0	;tblptru may be non-zero
  5630   002CB8                     	endif
  5631   002CB8  0008               	tblrd		*
  5632   002CBA  50F5               	movf	tablat,w,c
  5633   002CBC  6FF3               	movwf	??_vfpfcnvrt& (0+255),b
  5634   002CBE  6BF4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5635                           
  5636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5637                           ; Switch size 1, requested type "simple"
  5638                           ; Number of cases is 1, Range of values is 0 to 0
  5639                           ; switch strategies available:
  5640                           ; Name         Instructions Cycles
  5641                           ; simple_byte            4     3 (average)
  5642                           ;	Chosen strategy is simple_byte
  5643   002CC0  51F4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5644   002CC2  0A00               	xorlw	0	; case 0
  5645   002CC4  B4D8               	btfsc	status,2,c
  5646   002CC6  EF67  F016         	goto	l7918
  5647   002CCA  EF6E  F016         	goto	l7082
  5648   002CCE                     l7918:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ; Switch size 1, requested type "simple"
  5652                           ; Number of cases is 1, Range of values is 102 to 102
  5653                           ; switch strategies available:
  5654                           ; Name         Instructions Cycles
  5655                           ; simple_byte            4     3 (average)
  5656                           ;	Chosen strategy is simple_byte
  5657   002CCE  51F3               	movf	??_vfpfcnvrt& (0+255),w,b
  5658   002CD0  0A66               	xorlw	102	; case 102
  5659   002CD2  B4D8               	btfsc	status,2,c
  5660   002CD4  EF41  F016         	goto	l7074
  5661   002CD8  EF6E  F016         	goto	l7082
  5662   002CDC                     l7082:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1527:         if 
      +                          ((*fmt)[0] == '%') {
  5666   002CDC  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5667   002CE0  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5668   002CE4  CFDE FFF6          	movff	postinc2,tblptrl
  5669   002CE8  CFDD FFF7          	movff	postdec2,tblptrh
  5670   002CEC                     	if	0	;tblptru may be non-zero
  5671   002CEC                     	endif
  5672   002CEC                     	if	0	;tblptru may be non-zero
  5673   002CEC                     	endif
  5674   002CEC  0008               	tblrd		*
  5675   002CEE  50F5               	movf	tablat,w,c
  5676   002CF0  0A25               	xorlw	37
  5677   002CF2  A4D8               	btfss	status,2,c
  5678   002CF4  EF7E  F016         	goto	u8751
  5679   002CF8  EF80  F016         	goto	u8750
  5680   002CFC                     u8751:
  5681   002CFC  EF93  F016         	goto	l7090
  5682   002D00                     u8750:
  5683   002D00                     
  5684                           ; BSR set to: 0
  5685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1528:            
      +                           ++*fmt;
  5686   002D00  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5687   002D04  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5688   002D08  2ADE               	incf	postinc2,f,c
  5689   002D0A  0E00               	movlw	0
  5690   002D0C  22DD               	addwfc	postdec2,f,c
  5691   002D0E                     
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1529:            
      +                           fputc((int)'%', fp);
  5694   002D0E  0E00               	movlw	0
  5695   002D10  6F65               	movwf	(fputc@c+1)& (0+255),b
  5696   002D12  0E25               	movlw	37
  5697   002D14  6F64               	movwf	fputc@c& (0+255),b
  5698   002D16  C0ED  F066         	movff	vfpfcnvrt@fp,fputc@fp
  5699   002D1A  C0EE  F067         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5700   002D1E  ECD0  F021         	call	_fputc	;wreg free
  5701   002D22  EFB1  F016         	goto	l1388
  5702   002D26                     l7090:
  5703                           
  5704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  5705   002D26  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5706   002D2A  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5707   002D2E  2ADE               	incf	postinc2,f,c
  5708   002D30  0E00               	movlw	0
  5709   002D32  22DD               	addwfc	postdec2,f,c
  5710   002D34  EFB1  F016         	goto	l1388
  5711   002D38                     l7094:
  5712                           
  5713                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  5714   002D38  C0EF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5715   002D3C  C0F0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5716   002D40  CFDE FFF6          	movff	postinc2,tblptrl
  5717   002D44  CFDD FFF7          	movff	postdec2,tblptrh
  5718   002D48                     	if	0	;tblptru may be non-zero
  5719   002D48                     	endif
  5720   002D48                     	if	0	;tblptru may be non-zero
  5721   002D48                     	endif
  5722   002D48  0008               	tblrd		*
  5723   002D4A  50F5               	movf	tablat,w,c
  5724   002D4C  0100               	movlb	0	; () banked
  5725   002D4E  6F64               	movwf	fputc@c& (0+255),b
  5726   002D50  6B65               	clrf	(fputc@c+1)& (0+255),b
  5727   002D52  C0ED  F066         	movff	vfpfcnvrt@fp,fputc@fp
  5728   002D56  C0EE  F067         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5729   002D5A  ECD0  F021         	call	_fputc	;wreg free
  5730   002D5E  EF93  F016         	goto	l7090
  5731   002D62                     l1388:
  5732   002D62  0012               	return		;funcret
  5733   002D64                     __end_of_vfpfcnvrt:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function _read_prec_or_width *****************
  5737 ;; Defined at:
  5738 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  fmt             2   10[BANK0 ] PTR PTR const unsigned c
  5741 ;;		 -> vfprintf@cfmt(2), 
  5742 ;;  ap              2   12[BANK0 ] PTR PTR void [1]
  5743 ;;		 -> sprintf@ap(2), 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  c               1   16[BANK0 ] unsigned char 
  5746 ;;  n               2   17[BANK0 ] int 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  2   10[BANK0 ] int 
  5749 ;; Registers used:
  5750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5756 ;;      Params:         0       4       0       0       0       0       0
  5757 ;;      Locals:         0       3       0       0       0       0       0
  5758 ;;      Temps:          0       2       0       0       0       0       0
  5759 ;;      Totals:         0       9       0       0       0       0       0
  5760 ;;Total ram usage:        9 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; Hardware stack levels required when called: 4
  5763 ;; This function calls:
  5764 ;;		___wmul
  5765 ;; This function is called by:
  5766 ;;		_vfpfcnvrt
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text24
  5771   00446C                     __ptext24:
  5772                           	callstack 0
  5773   00446C                     _read_prec_or_width:
  5774                           	callstack 19
  5775   00446C                     
  5776                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  5777   00446C  0E00               	movlw	0
  5778   00446E  0100               	movlb	0	; () banked
  5779   004470  6F72               	movwf	(read_prec_or_width@n+1)& (0+255),b
  5780   004472  0E00               	movlw	0
  5781   004474  6F71               	movwf	read_prec_or_width@n& (0+255),b
  5782   004476                     
  5783                           ; BSR set to: 0
  5784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  5785   004476  C06A  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5786   00447A  C06B  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5787   00447E  CFDE FFF6          	movff	postinc2,tblptrl
  5788   004482  CFDD FFF7          	movff	postdec2,tblptrh
  5789   004486                     	if	0	;tblptru may be non-zero
  5790   004486                     	endif
  5791   004486                     	if	0	;tblptru may be non-zero
  5792   004486                     	endif
  5793   004486  0008               	tblrd		*
  5794   004488  50F5               	movf	tablat,w,c
  5795   00448A  0A2A               	xorlw	42
  5796   00448C  A4D8               	btfss	status,2,c
  5797   00448E  EF4B  F022         	goto	u8681
  5798   004492  EF4D  F022         	goto	u8680
  5799   004496                     u8681:
  5800   004496  EF82  F022         	goto	l7020
  5801   00449A                     u8680:
  5802   00449A                     
  5803                           ; BSR set to: 0
  5804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  5805   00449A  C06A  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5806   00449E  C06B  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5807   0044A2  2ADE               	incf	postinc2,f,c
  5808   0044A4  0E00               	movlw	0
  5809   0044A6  22DD               	addwfc	postdec2,f,c
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  5812   0044A8  C06C  FFD9         	movff	read_prec_or_width@ap,fsr2l
  5813   0044AC  C06D  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  5814   0044B0  CFDF F06E          	movff	indf2,??_read_prec_or_width
  5815   0044B4  0E02               	movlw	2
  5816   0044B6  26DE               	addwf	postinc2,f,c
  5817   0044B8  CFDF F06F          	movff	indf2,??_read_prec_or_width+1
  5818   0044BC  0E00               	movlw	0
  5819   0044BE  22DD               	addwfc	postdec2,f,c
  5820   0044C0  C06E  FFD9         	movff	??_read_prec_or_width,fsr2l
  5821   0044C4  C06F  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  5822   0044C8  CFDE F071          	movff	postinc2,read_prec_or_width@n
  5823   0044CC  CFDD F072          	movff	postdec2,read_prec_or_width@n+1
  5824                           
  5825                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  5826   0044D0  EF96  F022         	goto	l1376
  5827   0044D4                     l7016:
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  5831   0044D4  C071  F064         	movff	read_prec_or_width@n,___wmul@multiplier
  5832   0044D8  C072  F065         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  5833   0044DC  0E00               	movlw	0
  5834   0044DE  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5835   0044E0  0E0A               	movlw	10
  5836   0044E2  6F66               	movwf	___wmul@multiplicand& (0+255),b
  5837   0044E4  ECD4  F026         	call	___wmul	;wreg free
  5838   0044E8  0100               	movlb	0	; () banked
  5839   0044EA  5170               	movf	read_prec_or_width@c& (0+255),w,b
  5840   0044EC  2564               	addwf	?___wmul& (0+255),w,b
  5841   0044EE  6F71               	movwf	read_prec_or_width@n& (0+255),b
  5842   0044F0  0E00               	movlw	0
  5843   0044F2  2165               	addwfc	(?___wmul+1)& (0+255),w,b
  5844   0044F4  6F72               	movwf	(read_prec_or_width@n+1)& (0+255),b
  5845   0044F6                     
  5846                           ; BSR set to: 0
  5847                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  5848   0044F6  C06A  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5849   0044FA  C06B  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5850   0044FE  2ADE               	incf	postinc2,f,c
  5851   004500  0E00               	movlw	0
  5852   004502  22DD               	addwfc	postdec2,f,c
  5853   004504                     l7020:
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5857   004504  C06A  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5858   004508  C06B  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5859   00450C  CFDE FFF6          	movff	postinc2,tblptrl
  5860   004510  CFDD FFF7          	movff	postdec2,tblptrh
  5861   004514                     	if	0	;tblptru may be non-zero
  5862   004514                     	endif
  5863   004514                     	if	0	;tblptru may be non-zero
  5864   004514                     	endif
  5865   004514  0008               	tblrd		*
  5866   004516  50F5               	movf	tablat,w,c
  5867   004518  0FD0               	addlw	208
  5868   00451A  6F70               	movwf	read_prec_or_width@c& (0+255),b
  5869   00451C  0E09               	movlw	9
  5870   00451E  6570               	cpfsgt	read_prec_or_width@c& (0+255),b
  5871   004520  EF94  F022         	goto	u8691
  5872   004524  EF96  F022         	goto	u8690
  5873   004528                     u8691:
  5874   004528  EF6A  F022         	goto	l7016
  5875   00452C                     u8690:
  5876   00452C                     l1376:
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  5880   00452C  C071  F06A         	movff	read_prec_or_width@n,?_read_prec_or_width
  5881   004530  C072  F06B         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  5882   004534                     
  5883                           ; BSR set to: 0
  5884   004534  0012               	return		;funcret
  5885   004536                     __end_of_read_prec_or_width:
  5886                           	callstack 0
  5887                           
  5888 ;; *************** function ___wmul *****************
  5889 ;; Defined at:
  5890 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5893 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  product         2    8[BANK0 ] unsigned int 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  2    4[BANK0 ] unsigned int 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, prodl, prodh
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5905 ;;      Params:         0       4       0       0       0       0       0
  5906 ;;      Locals:         0       2       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0
  5908 ;;      Totals:         0       6       0       0       0       0       0
  5909 ;;Total ram usage:        6 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 3
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_read_prec_or_width
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text25
  5920   004DA8                     __ptext25:
  5921                           	callstack 0
  5922   004DA8                     ___wmul:
  5923                           	callstack 19
  5924   004DA8  0100               	movlb	0	; () banked
  5925   004DAA  5164               	movf	___wmul@multiplier& (0+255),w,b
  5926   004DAC  0366               	mulwf	___wmul@multiplicand& (0+255),b
  5927   004DAE  CFF3 F068          	movff	prodl,___wmul@product
  5928   004DB2  CFF4 F069          	movff	prodh,___wmul@product+1
  5929   004DB6  5164               	movf	___wmul@multiplier& (0+255),w,b
  5930   004DB8  0367               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5931   004DBA  50F3               	movf	243,w,c
  5932   004DBC  2769               	addwf	(___wmul@product+1)& (0+255),f,b
  5933   004DBE  5165               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5934   004DC0  0366               	mulwf	___wmul@multiplicand& (0+255),b
  5935   004DC2  50F3               	movf	243,w,c
  5936   004DC4  2769               	addwf	(___wmul@product+1)& (0+255),f,b
  5937   004DC6                     
  5938                           ; BSR set to: 0
  5939   004DC6  C068  F064         	movff	___wmul@product,?___wmul
  5940   004DCA  C069  F065         	movff	___wmul@product+1,?___wmul+1
  5941   004DCE                     
  5942                           ; BSR set to: 0
  5943   004DCE  0012               	return		;funcret
  5944   004DD0                     __end_of___wmul:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function _efgtoa *****************
  5948 ;; Defined at:
  5949 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  fp              2   88[BANK0 ] PTR struct _IO_FILE
  5952 ;;		 -> sprintf@f(12), 
  5953 ;;  f               4   90[BANK0 ] PTR struct _IO_FILE
  5954 ;;  c               1   94[BANK0 ] unsigned char 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  u               4  137[BANK0 ] struct flui
  5957 ;;  g               4  131[BANK0 ] struct flui
  5958 ;;  l               4  126[BANK0 ] struct flui
  5959 ;;  h               4  122[BANK0 ] struct flui
  5960 ;;  ou              4  116[BANK0 ] struct flui
  5961 ;;  n               2  135[BANK0 ] int 
  5962 ;;  i               2  120[BANK0 ] int 
  5963 ;;  w               2  114[BANK0 ] int 
  5964 ;;  e               2  112[BANK0 ] int 
  5965 ;;  m               2  110[BANK0 ] int 
  5966 ;;  d               2  108[BANK0 ] int 
  5967 ;;  t               2  101[BANK0 ] int 
  5968 ;;  p               2   99[BANK0 ] int 
  5969 ;;  ne              2   97[BANK0 ] int 
  5970 ;;  sign            1  130[BANK0 ] unsigned char 
  5971 ;;  nmode           1  107[BANK0 ] unsigned char 
  5972 ;;  mode            1  106[BANK0 ] unsigned char 
  5973 ;;  pp              1  105[BANK0 ] unsigned char 
  5974 ;;  esign           1    0        unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5984 ;;      Params:         0       7       0       0       0       0       0
  5985 ;;      Locals:         0      44       0       0       0       0       0
  5986 ;;      Temps:          0       2       0       0       0       0       0
  5987 ;;      Totals:         0      53       0       0       0       0       0
  5988 ;;Total ram usage:       53 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 7
  5991 ;; This function calls:
  5992 ;;		___fladd
  5993 ;;		___fldiv
  5994 ;;		___fleq
  5995 ;;		___flge
  5996 ;;		___flmul
  5997 ;;		___flneg
  5998 ;;		___flsub
  5999 ;;		___fltol
  6000 ;;		___fpclassifyf
  6001 ;;		_floorf
  6002 ;;		_labs
  6003 ;;		_memcpy
  6004 ;;		_pad
  6005 ;;		_strcpy
  6006 ;; This function is called by:
  6007 ;;		_vfpfcnvrt
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text26
  6012   000618                     __ptext26:
  6013                           	callstack 0
  6014   000618                     _efgtoa:
  6015                           	callstack 16
  6016   000618                     
  6017                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  6018   000618  0E00               	movlw	0
  6019   00061A  0100               	movlb	0	; () banked
  6020   00061C  6FE2               	movwf	efgtoa@sign& (0+255),b
  6021   00061E                     
  6022                           ; BSR set to: 0
  6023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  6024   00061E  C0BA  F0E3         	movff	efgtoa@f,efgtoa@g
  6025   000622  C0BB  F0E4         	movff	efgtoa@f+1,efgtoa@g+1
  6026   000626  C0BC  F0E5         	movff	efgtoa@f+2,efgtoa@g+2
  6027   00062A  C0BD  F0E6         	movff	efgtoa@f+3,efgtoa@g+3
  6028   00062E                     
  6029                           ; BSR set to: 0
  6030                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  6031   00062E  BFE6               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6032   000630  EF1E  F003         	goto	u8360
  6033   000634  EF1C  F003         	goto	u8361
  6034   000638                     u8361:
  6035   000638  EF32  F003         	goto	l6798
  6036   00063C                     u8360:
  6037   00063C                     
  6038                           ; BSR set to: 0
  6039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  6040   00063C  0E01               	movlw	1
  6041   00063E  6FE2               	movwf	efgtoa@sign& (0+255),b
  6042   000640                     
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  6045   000640  C0E3  F064         	movff	efgtoa@g,___flneg@f1
  6046   000644  C0E4  F065         	movff	efgtoa@g+1,___flneg@f1+1
  6047   000648  C0E5  F066         	movff	efgtoa@g+2,___flneg@f1+2
  6048   00064C  C0E6  F067         	movff	efgtoa@g+3,___flneg@f1+3
  6049   000650  ECB7  F026         	call	___flneg	;wreg free
  6050   000654  C064  F0E3         	movff	?___flneg,efgtoa@g
  6051   000658  C065  F0E4         	movff	?___flneg+1,efgtoa@g+1
  6052   00065C  C066  F0E5         	movff	?___flneg+2,efgtoa@g+2
  6053   000660  C067  F0E6         	movff	?___flneg+3,efgtoa@g+3
  6054   000664                     l6798:
  6055                           
  6056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  6057   000664  0E00               	movlw	0
  6058   000666  0100               	movlb	0	; () banked
  6059   000668  6FE8               	movwf	(efgtoa@n+1)& (0+255),b
  6060   00066A  0E00               	movlw	0
  6061   00066C  6FE7               	movwf	efgtoa@n& (0+255),b
  6062   00066E                     
  6063                           ; BSR set to: 0
  6064                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  6065   00066E  C019  F0D2         	movff	_width,efgtoa@w
  6066   000672  C01A  F0D3         	movff	_width+1,efgtoa@w+1
  6067   000676                     
  6068                           ; BSR set to: 0
  6069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  6070   000676  51E2               	movf	efgtoa@sign& (0+255),w,b
  6071   000678  B4D8               	btfsc	status,2,c
  6072   00067A  EF41  F003         	goto	u8371
  6073   00067E  EF43  F003         	goto	u8370
  6074   000682                     u8371:
  6075   000682  EF57  F003         	goto	l6812
  6076   000686                     u8370:
  6077   000686                     
  6078                           ; BSR set to: 0
  6079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  6080   000686  51E2               	movf	efgtoa@sign& (0+255),w,b
  6081   000688  A4D8               	btfss	status,2,c
  6082   00068A  EF49  F003         	goto	u8381
  6083   00068E  EF4B  F003         	goto	u8380
  6084   000692                     u8381:
  6085   000692  EF51  F003         	goto	l6808
  6086   000696                     u8380:
  6087   000696                     
  6088                           ; BSR set to: 0
  6089   000696  0E00               	movlw	0
  6090   000698  6FC8               	movwf	(_efgtoa$1195+1)& (0+255),b
  6091   00069A  0E2B               	movlw	43
  6092   00069C  6FC7               	movwf	_efgtoa$1195& (0+255),b
  6093   00069E  EF55  F003         	goto	l6810
  6094   0006A2                     l6808:
  6095                           
  6096                           ; BSR set to: 0
  6097   0006A2  0E00               	movlw	0
  6098   0006A4  6FC8               	movwf	(_efgtoa$1195+1)& (0+255),b
  6099   0006A6  0E2D               	movlw	45
  6100   0006A8  6FC7               	movwf	_efgtoa$1195& (0+255),b
  6101   0006AA                     l6810:
  6102                           
  6103                           ; BSR set to: 0
  6104   0006AA  C0C7  F0E2         	movff	_efgtoa$1195,efgtoa@sign
  6105   0006AE                     l6812:
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  6109   0006AE  C0E3  F064         	movff	efgtoa@g,___fpclassifyf@x
  6110   0006B2  C0E4  F065         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6111   0006B6  C0E5  F066         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6112   0006BA  C0E6  F067         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6113   0006BE  ECE7  F020         	call	___fpclassifyf	;wreg free
  6114   0006C2  0100               	movlb	0	; () banked
  6115   0006C4  0564               	decf	?___fpclassifyf& (0+255),w,b
  6116   0006C6  1165               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  6117   0006C8  A4D8               	btfss	status,2,c
  6118   0006CA  EF69  F003         	goto	u8391
  6119   0006CE  EF6B  F003         	goto	u8390
  6120   0006D2                     u8391:
  6121   0006D2  EF9D  F003         	goto	l6830
  6122   0006D6                     u8390:
  6123   0006D6                     
  6124                           ; BSR set to: 0
  6125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  6126   0006D6  51E2               	movf	efgtoa@sign& (0+255),w,b
  6127   0006D8  B4D8               	btfsc	status,2,c
  6128   0006DA  EF71  F003         	goto	u8401
  6129   0006DE  EF73  F003         	goto	u8400
  6130   0006E2                     u8401:
  6131   0006E2  EF7C  F003         	goto	l6822
  6132   0006E6                     u8400:
  6133   0006E6                     
  6134                           ; BSR set to: 0
  6135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  6136   0006E6  C0E2  F146         	movff	efgtoa@sign,_dbuf
  6137   0006EA                     
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  6140   0006EA  07D2               	decf	efgtoa@w& (0+255),f,b
  6141   0006EC  A0D8               	btfss	status,0,c
  6142   0006EE  07D3               	decf	(efgtoa@w+1)& (0+255),f,b
  6143   0006F0                     
  6144                           ; BSR set to: 0
  6145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  6146   0006F0  0E00               	movlw	0
  6147   0006F2  6FE8               	movwf	(efgtoa@n+1)& (0+255),b
  6148   0006F4  0E01               	movlw	1
  6149   0006F6  6FE7               	movwf	efgtoa@n& (0+255),b
  6150   0006F8                     l6822:
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  6154   0006F8  0E46               	movlw	low _dbuf
  6155   0006FA  25E7               	addwf	efgtoa@n& (0+255),w,b
  6156   0006FC  6F64               	movwf	strcpy@dest& (0+255),b
  6157   0006FE  0E01               	movlw	high _dbuf
  6158   000700  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6159   000702  6F65               	movwf	(strcpy@dest+1)& (0+255),b
  6160   000704  0E0F               	movlw	low STR_3
  6161   000706  6F66               	movwf	strcpy@src& (0+255),b
  6162   000708  0E06               	movlw	high STR_3
  6163   00070A  6F67               	movwf	(strcpy@src+1)& (0+255),b
  6164   00070C  EC58  F026         	call	_strcpy	;wreg free
  6165   000710                     l6824:
  6166                           
  6167                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  6168   000710  0100               	movlb	0	; () banked
  6169   000712  0EFD               	movlw	253
  6170   000714  27D2               	addwf	efgtoa@w& (0+255),f,b
  6171   000716  0EFF               	movlw	255
  6172   000718  23D3               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6173   00071A                     
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  6176   00071A  C0B8  F074         	movff	efgtoa@fp,pad@fp
  6177   00071E  C0B9  F075         	movff	efgtoa@fp+1,pad@fp+1
  6178   000722  0E46               	movlw	low _dbuf
  6179   000724  6F76               	movwf	pad@buf& (0+255),b
  6180   000726  0E01               	movlw	high _dbuf
  6181   000728  6F77               	movwf	(pad@buf+1)& (0+255),b
  6182   00072A  C0D2  F078         	movff	efgtoa@w,pad@p
  6183   00072E  C0D3  F079         	movff	efgtoa@w+1,pad@p+1
  6184   000732  ECFA  F024         	call	_pad	;wreg free
  6185   000736  EF0B  F008         	goto	l1331
  6186   00073A                     l6830:
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  6190   00073A  C0E3  F064         	movff	efgtoa@g,___fpclassifyf@x
  6191   00073E  C0E4  F065         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6192   000742  C0E5  F066         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6193   000746  C0E6  F067         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6194   00074A  ECE7  F020         	call	___fpclassifyf	;wreg free
  6195   00074E  0100               	movlb	0	; () banked
  6196   000750  5164               	movf	?___fpclassifyf& (0+255),w,b
  6197   000752  1165               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  6198   000754  A4D8               	btfss	status,2,c
  6199   000756  EFAF  F003         	goto	u8411
  6200   00075A  EFB1  F003         	goto	u8410
  6201   00075E                     u8411:
  6202   00075E  EFD0  F003         	goto	l6848
  6203   000762                     u8410:
  6204   000762                     
  6205                           ; BSR set to: 0
  6206                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  6207   000762  51E2               	movf	efgtoa@sign& (0+255),w,b
  6208   000764  B4D8               	btfsc	status,2,c
  6209   000766  EFB7  F003         	goto	u8421
  6210   00076A  EFB9  F003         	goto	u8420
  6211   00076E                     u8421:
  6212   00076E  EFC2  F003         	goto	l6840
  6213   000772                     u8420:
  6214   000772                     
  6215                           ; BSR set to: 0
  6216                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  6217   000772  C0E2  F146         	movff	efgtoa@sign,_dbuf
  6218   000776                     
  6219                           ; BSR set to: 0
  6220                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  6221   000776  07D2               	decf	efgtoa@w& (0+255),f,b
  6222   000778  A0D8               	btfss	status,0,c
  6223   00077A  07D3               	decf	(efgtoa@w+1)& (0+255),f,b
  6224   00077C                     
  6225                           ; BSR set to: 0
  6226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  6227   00077C  0E00               	movlw	0
  6228   00077E  6FE8               	movwf	(efgtoa@n+1)& (0+255),b
  6229   000780  0E01               	movlw	1
  6230   000782  6FE7               	movwf	efgtoa@n& (0+255),b
  6231   000784                     l6840:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  6235   000784  0E46               	movlw	low _dbuf
  6236   000786  25E7               	addwf	efgtoa@n& (0+255),w,b
  6237   000788  6F64               	movwf	strcpy@dest& (0+255),b
  6238   00078A  0E01               	movlw	high _dbuf
  6239   00078C  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6240   00078E  6F65               	movwf	(strcpy@dest+1)& (0+255),b
  6241   000790  0E13               	movlw	low STR_6
  6242   000792  6F66               	movwf	strcpy@src& (0+255),b
  6243   000794  0E06               	movlw	high STR_6
  6244   000796  6F67               	movwf	(strcpy@src+1)& (0+255),b
  6245   000798  EC58  F026         	call	_strcpy	;wreg free
  6246   00079C  EF88  F003         	goto	l6824
  6247   0007A0                     l6848:
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  6251   0007A0  0E00               	movlw	0
  6252   0007A2  6FE9               	movwf	efgtoa@u& (0+255),b
  6253   0007A4  0E00               	movlw	0
  6254   0007A6  6FEA               	movwf	(efgtoa@u+1)& (0+255),b
  6255   0007A8  0E80               	movlw	128
  6256   0007AA  6FEB               	movwf	(efgtoa@u+2)& (0+255),b
  6257   0007AC  0E3F               	movlw	63
  6258   0007AE  6FEC               	movwf	(efgtoa@u+3)& (0+255),b
  6259                           
  6260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  6261   0007B0  0E00               	movlw	0
  6262   0007B2  6FD1               	movwf	(efgtoa@e+1)& (0+255),b
  6263   0007B4  0E00               	movlw	0
  6264   0007B6  6FD0               	movwf	efgtoa@e& (0+255),b
  6265   0007B8                     
  6266                           ; BSR set to: 0
  6267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  6268   0007B8  C0E3  F064         	movff	efgtoa@g,___fleq@ff1
  6269   0007BC  C0E4  F065         	movff	efgtoa@g+1,___fleq@ff1+1
  6270   0007C0  C0E5  F066         	movff	efgtoa@g+2,___fleq@ff1+2
  6271   0007C4  C0E6  F067         	movff	efgtoa@g+3,___fleq@ff1+3
  6272   0007C8  0E00               	movlw	0
  6273   0007CA  6F68               	movwf	___fleq@ff2& (0+255),b
  6274   0007CC  0E00               	movlw	0
  6275   0007CE  6F69               	movwf	(___fleq@ff2+1)& (0+255),b
  6276   0007D0  0E00               	movlw	0
  6277   0007D2  6F6A               	movwf	(___fleq@ff2+2)& (0+255),b
  6278   0007D4  0E00               	movlw	0
  6279   0007D6  6F6B               	movwf	(___fleq@ff2+3)& (0+255),b
  6280   0007D8  EC09  F024         	call	___fleq	;wreg free
  6281   0007DC  0100               	movlb	0	; () banked
  6282   0007DE  B0D8               	btfsc	status,0,c
  6283   0007E0  EFF4  F003         	goto	u8431
  6284   0007E4  EFF6  F003         	goto	u8430
  6285   0007E8                     u8431:
  6286   0007E8  EFD8  F004         	goto	l1334
  6287   0007EC                     u8430:
  6288   0007EC  EF02  F004         	goto	l6856
  6289   0007F0                     l1336:
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  6293   0007F0  C0D4  F0E9         	movff	efgtoa@ou,efgtoa@u
  6294   0007F4  C0D5  F0EA         	movff	efgtoa@ou+1,efgtoa@u+1
  6295   0007F8  C0D6  F0EB         	movff	efgtoa@ou+2,efgtoa@u+2
  6296   0007FC  C0D7  F0EC         	movff	efgtoa@ou+3,efgtoa@u+3
  6297   000800                     
  6298                           ; BSR set to: 0
  6299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  6300   000800  4BD0               	infsnz	efgtoa@e& (0+255),f,b
  6301   000802  2BD1               	incf	(efgtoa@e+1)& (0+255),f,b
  6302   000804                     l6856:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  6306   000804  C0E9  F072         	movff	efgtoa@u,___flmul@b
  6307   000808  C0EA  F073         	movff	efgtoa@u+1,___flmul@b+1
  6308   00080C  C0EB  F074         	movff	efgtoa@u+2,___flmul@b+2
  6309   000810  C0EC  F075         	movff	efgtoa@u+3,___flmul@b+3
  6310   000814  0E00               	movlw	0
  6311   000816  6F76               	movwf	___flmul@a& (0+255),b
  6312   000818  0E00               	movlw	0
  6313   00081A  6F77               	movwf	(___flmul@a+1)& (0+255),b
  6314   00081C  0E20               	movlw	32
  6315   00081E  6F78               	movwf	(___flmul@a+2)& (0+255),b
  6316   000820  0E41               	movlw	65
  6317   000822  6F79               	movwf	(___flmul@a+3)& (0+255),b
  6318   000824  EC4C  F00D         	call	___flmul	;wreg free
  6319   000828  C072  F0D4         	movff	?___flmul,efgtoa@ou
  6320   00082C  C073  F0D5         	movff	?___flmul+1,efgtoa@ou+1
  6321   000830  C074  F0D6         	movff	?___flmul+2,efgtoa@ou+2
  6322   000834  C075  F0D7         	movff	?___flmul+3,efgtoa@ou+3
  6323   000838  0100               	movlb	0	; () banked
  6324   00083A  51D4               	movf	efgtoa@ou& (0+255),w,b
  6325   00083C  5DE3               	subwf	efgtoa@g& (0+255),w,b
  6326   00083E  6F64               	movwf	labs@a& (0+255),b
  6327   000840  51D5               	movf	(efgtoa@ou+1)& (0+255),w,b
  6328   000842  59E4               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6329   000844  6F65               	movwf	(labs@a+1)& (0+255),b
  6330   000846  51D6               	movf	(efgtoa@ou+2)& (0+255),w,b
  6331   000848  59E5               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6332   00084A  6F66               	movwf	(labs@a+2)& (0+255),b
  6333   00084C  51D7               	movf	(efgtoa@ou+3)& (0+255),w,b
  6334   00084E  59E6               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6335   000850  6F67               	movwf	(labs@a+3)& (0+255),b
  6336   000852  EC39  F025         	call	_labs	;wreg free
  6337   000856  0100               	movlb	0	; () banked
  6338   000858  BF67               	btfsc	(?_labs+3)& (0+255),7,b
  6339   00085A  EF3A  F004         	goto	u8441
  6340   00085E  5167               	movf	(?_labs+3)& (0+255),w,b
  6341   000860  1166               	iorwf	(?_labs+2)& (0+255),w,b
  6342   000862  1165               	iorwf	(?_labs+1)& (0+255),w,b
  6343   000864  E109               	bnz	u8440
  6344   000866  0E02               	movlw	2
  6345   000868  5D64               	subwf	?_labs& (0+255),w,b
  6346   00086A  A0D8               	btfss	status,0,c
  6347   00086C  EF3A  F004         	goto	u8441
  6348   000870  EF3C  F004         	goto	u8440
  6349   000874                     u8441:
  6350   000874  EFF8  F003         	goto	l1336
  6351   000878                     u8440:
  6352   000878                     
  6353                           ; BSR set to: 0
  6354   000878  C0D4  F08B         	movff	efgtoa@ou,___flge@ff1
  6355   00087C  C0D5  F08C         	movff	efgtoa@ou+1,___flge@ff1+1
  6356   000880  C0D6  F08D         	movff	efgtoa@ou+2,___flge@ff1+2
  6357   000884  C0D7  F08E         	movff	efgtoa@ou+3,___flge@ff1+3
  6358   000888  C0E3  F08F         	movff	efgtoa@g,___flge@ff2
  6359   00088C  C0E4  F090         	movff	efgtoa@g+1,___flge@ff2+1
  6360   000890  C0E5  F091         	movff	efgtoa@g+2,___flge@ff2+2
  6361   000894  C0E6  F092         	movff	efgtoa@g+3,___flge@ff2+3
  6362   000898  ECE3  F01F         	call	___flge	;wreg free
  6363   00089C  0100               	movlb	0	; () banked
  6364   00089E  A0D8               	btfss	status,0,c
  6365   0008A0  EF54  F004         	goto	u8451
  6366   0008A4  EF56  F004         	goto	u8450
  6367   0008A8                     u8451:
  6368   0008A8  EFF8  F003         	goto	l1336
  6369   0008AC                     u8450:
  6370   0008AC                     
  6371                           ; BSR set to: 0
  6372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  6373   0008AC  51E9               	movf	efgtoa@u& (0+255),w,b
  6374   0008AE  5DE3               	subwf	efgtoa@g& (0+255),w,b
  6375   0008B0  6F64               	movwf	labs@a& (0+255),b
  6376   0008B2  51EA               	movf	(efgtoa@u+1)& (0+255),w,b
  6377   0008B4  59E4               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6378   0008B6  6F65               	movwf	(labs@a+1)& (0+255),b
  6379   0008B8  51EB               	movf	(efgtoa@u+2)& (0+255),w,b
  6380   0008BA  59E5               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6381   0008BC  6F66               	movwf	(labs@a+2)& (0+255),b
  6382   0008BE  51EC               	movf	(efgtoa@u+3)& (0+255),w,b
  6383   0008C0  59E6               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6384   0008C2  6F67               	movwf	(labs@a+3)& (0+255),b
  6385   0008C4  EC39  F025         	call	_labs	;wreg free
  6386   0008C8  0100               	movlb	0	; () banked
  6387   0008CA  BF67               	btfsc	(?_labs+3)& (0+255),7,b
  6388   0008CC  EF75  F004         	goto	u8460
  6389   0008D0  5167               	movf	(?_labs+3)& (0+255),w,b
  6390   0008D2  1166               	iorwf	(?_labs+2)& (0+255),w,b
  6391   0008D4  1165               	iorwf	(?_labs+1)& (0+255),w,b
  6392   0008D6  E107               	bnz	u8461
  6393   0008D8  0E02               	movlw	2
  6394   0008DA  5D64               	subwf	?_labs& (0+255),w,b
  6395   0008DC  B0D8               	btfsc	status,0,c
  6396   0008DE  EF73  F004         	goto	u8461
  6397   0008E2  EF75  F004         	goto	u8460
  6398   0008E6                     u8461:
  6399   0008E6  EFBE  F004         	goto	l6874
  6400   0008EA                     u8460:
  6401   0008EA                     l6864:
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  6405   0008EA  C0E9  F0E3         	movff	efgtoa@u,efgtoa@g
  6406   0008EE  C0EA  F0E4         	movff	efgtoa@u+1,efgtoa@g+1
  6407   0008F2  C0EB  F0E5         	movff	efgtoa@u+2,efgtoa@g+2
  6408   0008F6  C0EC  F0E6         	movff	efgtoa@u+3,efgtoa@g+3
  6409                           
  6410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  6411   0008FA  EFD8  F004         	goto	l1334
  6412   0008FE                     l6866:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  6416   0008FE  C0E9  F08B         	movff	efgtoa@u,___fldiv@b
  6417   000902  C0EA  F08C         	movff	efgtoa@u+1,___fldiv@b+1
  6418   000906  C0EB  F08D         	movff	efgtoa@u+2,___fldiv@b+2
  6419   00090A  C0EC  F08E         	movff	efgtoa@u+3,___fldiv@b+3
  6420   00090E  0E00               	movlw	0
  6421   000910  6F8F               	movwf	___fldiv@a& (0+255),b
  6422   000912  0E00               	movlw	0
  6423   000914  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  6424   000916  0E20               	movlw	32
  6425   000918  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  6426   00091A  0E41               	movlw	65
  6427   00091C  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  6428   00091E  EC77  F011         	call	___fldiv	;wreg free
  6429   000922  C08B  F0E9         	movff	?___fldiv,efgtoa@u
  6430   000926  C08C  F0EA         	movff	?___fldiv+1,efgtoa@u+1
  6431   00092A  C08D  F0EB         	movff	?___fldiv+2,efgtoa@u+2
  6432   00092E  C08E  F0EC         	movff	?___fldiv+3,efgtoa@u+3
  6433   000932                     
  6434                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  6435   000932  0100               	movlb	0	; () banked
  6436   000934  07D0               	decf	efgtoa@e& (0+255),f,b
  6437   000936  A0D8               	btfss	status,0,c
  6438   000938  07D1               	decf	(efgtoa@e+1)& (0+255),f,b
  6439   00093A                     
  6440                           ; BSR set to: 0
  6441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  6442   00093A  51E9               	movf	efgtoa@u& (0+255),w,b
  6443   00093C  5DE3               	subwf	efgtoa@g& (0+255),w,b
  6444   00093E  6F64               	movwf	labs@a& (0+255),b
  6445   000940  51EA               	movf	(efgtoa@u+1)& (0+255),w,b
  6446   000942  59E4               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6447   000944  6F65               	movwf	(labs@a+1)& (0+255),b
  6448   000946  51EB               	movf	(efgtoa@u+2)& (0+255),w,b
  6449   000948  59E5               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6450   00094A  6F66               	movwf	(labs@a+2)& (0+255),b
  6451   00094C  51EC               	movf	(efgtoa@u+3)& (0+255),w,b
  6452   00094E  59E6               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6453   000950  6F67               	movwf	(labs@a+3)& (0+255),b
  6454   000952  EC39  F025         	call	_labs	;wreg free
  6455   000956  0100               	movlb	0	; () banked
  6456   000958  BF67               	btfsc	(?_labs+3)& (0+255),7,b
  6457   00095A  EFBC  F004         	goto	u8470
  6458   00095E  5167               	movf	(?_labs+3)& (0+255),w,b
  6459   000960  1166               	iorwf	(?_labs+2)& (0+255),w,b
  6460   000962  1165               	iorwf	(?_labs+1)& (0+255),w,b
  6461   000964  E107               	bnz	u8471
  6462   000966  0E02               	movlw	2
  6463   000968  5D64               	subwf	?_labs& (0+255),w,b
  6464   00096A  B0D8               	btfsc	status,0,c
  6465   00096C  EFBA  F004         	goto	u8471
  6466   000970  EFBC  F004         	goto	u8470
  6467   000974                     u8471:
  6468   000974  EFBE  F004         	goto	l6874
  6469   000978                     u8470:
  6470   000978  EF75  F004         	goto	l6864
  6471   00097C                     l6874:
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  6475   00097C  C0E3  F08B         	movff	efgtoa@g,___flge@ff1
  6476   000980  C0E4  F08C         	movff	efgtoa@g+1,___flge@ff1+1
  6477   000984  C0E5  F08D         	movff	efgtoa@g+2,___flge@ff1+2
  6478   000988  C0E6  F08E         	movff	efgtoa@g+3,___flge@ff1+3
  6479   00098C  C0E9  F08F         	movff	efgtoa@u,___flge@ff2
  6480   000990  C0EA  F090         	movff	efgtoa@u+1,___flge@ff2+1
  6481   000994  C0EB  F091         	movff	efgtoa@u+2,___flge@ff2+2
  6482   000998  C0EC  F092         	movff	efgtoa@u+3,___flge@ff2+3
  6483   00099C  ECE3  F01F         	call	___flge	;wreg free
  6484   0009A0  0100               	movlb	0	; () banked
  6485   0009A2  A0D8               	btfss	status,0,c
  6486   0009A4  EFD6  F004         	goto	u8481
  6487   0009A8  EFD8  F004         	goto	u8480
  6488   0009AC                     u8481:
  6489   0009AC  EF7F  F004         	goto	l6866
  6490   0009B0                     u8480:
  6491   0009B0                     l1334:
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  6495   0009B0  C0BE  F0CA         	movff	efgtoa@c,efgtoa@mode
  6496                           
  6497                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  6498   0009B4  C0CA  F0CB         	movff	efgtoa@mode,efgtoa@nmode
  6499   0009B8                     
  6500                           ; BSR set to: 0
  6501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  6502   0009B8  BE1C               	btfsc	(_prec+1)^0,7,c
  6503   0009BA  EFE1  F004         	goto	u8491
  6504   0009BE  EFE3  F004         	goto	u8490
  6505   0009C2                     u8491:
  6506   0009C2  EFE9  F004         	goto	l6880
  6507   0009C6                     u8490:
  6508   0009C6                     
  6509                           ; BSR set to: 0
  6510   0009C6  C01B  F0C3         	movff	_prec,efgtoa@p
  6511   0009CA  C01C  F0C4         	movff	_prec+1,efgtoa@p+1
  6512   0009CE  EFED  F004         	goto	l6882
  6513   0009D2                     l6880:
  6514                           
  6515                           ; BSR set to: 0
  6516   0009D2  0E00               	movlw	0
  6517   0009D4  6FC4               	movwf	(efgtoa@p+1)& (0+255),b
  6518   0009D6  0E06               	movlw	6
  6519   0009D8  6FC3               	movwf	efgtoa@p& (0+255),b
  6520   0009DA                     l6882:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  6524   0009DA  C0C3  F0CE         	movff	efgtoa@p,efgtoa@m
  6525   0009DE  C0C4  F0CF         	movff	efgtoa@p+1,efgtoa@m+1
  6526   0009E2                     
  6527                           ; BSR set to: 0
  6528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  6529   0009E2  4BCE               	infsnz	efgtoa@m& (0+255),f,b
  6530   0009E4  2BCF               	incf	(efgtoa@m+1)& (0+255),f,b
  6531   0009E6                     
  6532                           ; BSR set to: 0
  6533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  6534   0009E6  0E66               	movlw	102
  6535   0009E8  19CB               	xorwf	efgtoa@nmode& (0+255),w,b
  6536   0009EA  A4D8               	btfss	status,2,c
  6537   0009EC  EFFA  F004         	goto	u8501
  6538   0009F0  EFFC  F004         	goto	u8500
  6539   0009F4                     u8501:
  6540   0009F4  EF1C  F005         	goto	l6896
  6541   0009F8                     u8500:
  6542   0009F8                     
  6543                           ; BSR set to: 0
  6544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  6545   0009F8  BFD1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6546   0009FA  EF03  F005         	goto	u8510
  6547   0009FE  EF01  F005         	goto	u8511
  6548   000A02                     u8511:
  6549   000A02  EF0F  F005         	goto	l6892
  6550   000A06                     u8510:
  6551   000A06                     
  6552                           ; BSR set to: 0
  6553                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  6554   000A06  0E00               	movlw	0
  6555   000A08  6FE9               	movwf	efgtoa@u& (0+255),b
  6556   000A0A  0E00               	movlw	0
  6557   000A0C  6FEA               	movwf	(efgtoa@u+1)& (0+255),b
  6558   000A0E  0E80               	movlw	128
  6559   000A10  6FEB               	movwf	(efgtoa@u+2)& (0+255),b
  6560   000A12  0E3F               	movlw	63
  6561   000A14  6FEC               	movwf	(efgtoa@u+3)& (0+255),b
  6562                           
  6563                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  6564   000A16  0E00               	movlw	0
  6565   000A18  6FD1               	movwf	(efgtoa@e+1)& (0+255),b
  6566   000A1A  0E00               	movlw	0
  6567   000A1C  6FD0               	movwf	efgtoa@e& (0+255),b
  6568   000A1E                     l6892:
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  6572   000A1E  0E67               	movlw	103
  6573   000A20  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  6574   000A22  B4D8               	btfsc	status,2,c
  6575   000A24  EF16  F005         	goto	u8521
  6576   000A28  EF18  F005         	goto	u8520
  6577   000A2C                     u8521:
  6578   000A2C  EF1C  F005         	goto	l6896
  6579   000A30                     u8520:
  6580   000A30                     
  6581                           ; BSR set to: 0
  6582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  6583   000A30  51D0               	movf	efgtoa@e& (0+255),w,b
  6584   000A32  27CE               	addwf	efgtoa@m& (0+255),f,b
  6585   000A34  51D1               	movf	(efgtoa@e+1)& (0+255),w,b
  6586   000A36  23CF               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6587   000A38                     l6896:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  6591   000A38  0E00               	movlw	0
  6592   000A3A  6FD9               	movwf	(efgtoa@i+1)& (0+255),b
  6593   000A3C  0E00               	movlw	0
  6594   000A3E  6FD8               	movwf	efgtoa@i& (0+255),b
  6595   000A40                     
  6596                           ; BSR set to: 0
  6597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  6598   000A40  C0E3  F0DA         	movff	efgtoa@g,efgtoa@h
  6599   000A44  C0E4  F0DB         	movff	efgtoa@g+1,efgtoa@h+1
  6600   000A48  C0E5  F0DC         	movff	efgtoa@g+2,efgtoa@h+2
  6601   000A4C  C0E6  F0DD         	movff	efgtoa@g+3,efgtoa@h+3
  6602   000A50                     
  6603                           ; BSR set to: 0
  6604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  6605   000A50  C0E9  F0D4         	movff	efgtoa@u,efgtoa@ou
  6606   000A54  C0EA  F0D5         	movff	efgtoa@u+1,efgtoa@ou+1
  6607   000A58  C0EB  F0D6         	movff	efgtoa@u+2,efgtoa@ou+2
  6608   000A5C  C0EC  F0D7         	movff	efgtoa@u+3,efgtoa@ou+3
  6609                           
  6610                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  6611   000A60  EFAE  F005         	goto	l6910
  6612   000A64                     l6902:
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  6616   000A64  C0DA  F08B         	movff	efgtoa@h,___fldiv@b
  6617   000A68  C0DB  F08C         	movff	efgtoa@h+1,___fldiv@b+1
  6618   000A6C  C0DC  F08D         	movff	efgtoa@h+2,___fldiv@b+2
  6619   000A70  C0DD  F08E         	movff	efgtoa@h+3,___fldiv@b+3
  6620   000A74  C0E9  F08F         	movff	efgtoa@u,___fldiv@a
  6621   000A78  C0EA  F090         	movff	efgtoa@u+1,___fldiv@a+1
  6622   000A7C  C0EB  F091         	movff	efgtoa@u+2,___fldiv@a+2
  6623   000A80  C0EC  F092         	movff	efgtoa@u+3,___fldiv@a+3
  6624   000A84  EC77  F011         	call	___fldiv	;wreg free
  6625   000A88  C08B  F0A4         	movff	?___fldiv,floorf@x
  6626   000A8C  C08C  F0A5         	movff	?___fldiv+1,floorf@x+1
  6627   000A90  C08D  F0A6         	movff	?___fldiv+2,floorf@x+2
  6628   000A94  C08E  F0A7         	movff	?___fldiv+3,floorf@x+3
  6629   000A98  EC41  F019         	call	_floorf	;wreg free
  6630   000A9C  C0A4  F0DE         	movff	?_floorf,efgtoa@l
  6631   000AA0  C0A5  F0DF         	movff	?_floorf+1,efgtoa@l+1
  6632   000AA4  C0A6  F0E0         	movff	?_floorf+2,efgtoa@l+2
  6633   000AA8  C0A7  F0E1         	movff	?_floorf+3,efgtoa@l+3
  6634                           
  6635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  6636   000AAC  C0DE  F064         	movff	efgtoa@l,___fltol@f1
  6637   000AB0  C0DF  F065         	movff	efgtoa@l+1,___fltol@f1+1
  6638   000AB4  C0E0  F066         	movff	efgtoa@l+2,___fltol@f1+2
  6639   000AB8  C0E1  F067         	movff	efgtoa@l+3,___fltol@f1+3
  6640   000ABC  EC5F  F01F         	call	___fltol	;wreg free
  6641   000AC0  C064  F0CC         	movff	?___fltol,efgtoa@d
  6642   000AC4  C065  F0CD         	movff	?___fltol+1,efgtoa@d+1
  6643   000AC8                     
  6644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  6645   000AC8  C0DA  F08B         	movff	efgtoa@h,___flsub@b
  6646   000ACC  C0DB  F08C         	movff	efgtoa@h+1,___flsub@b+1
  6647   000AD0  C0DC  F08D         	movff	efgtoa@h+2,___flsub@b+2
  6648   000AD4  C0DD  F08E         	movff	efgtoa@h+3,___flsub@b+3
  6649   000AD8  C0DE  F076         	movff	efgtoa@l,___flmul@a
  6650   000ADC  C0DF  F077         	movff	efgtoa@l+1,___flmul@a+1
  6651   000AE0  C0E0  F078         	movff	efgtoa@l+2,___flmul@a+2
  6652   000AE4  C0E1  F079         	movff	efgtoa@l+3,___flmul@a+3
  6653   000AE8  C0E9  F072         	movff	efgtoa@u,___flmul@b
  6654   000AEC  C0EA  F073         	movff	efgtoa@u+1,___flmul@b+1
  6655   000AF0  C0EB  F074         	movff	efgtoa@u+2,___flmul@b+2
  6656   000AF4  C0EC  F075         	movff	efgtoa@u+3,___flmul@b+3
  6657   000AF8  EC4C  F00D         	call	___flmul	;wreg free
  6658   000AFC  C072  F08F         	movff	?___flmul,___flsub@a
  6659   000B00  C073  F090         	movff	?___flmul+1,___flsub@a+1
  6660   000B04  C074  F091         	movff	?___flmul+2,___flsub@a+2
  6661   000B08  C075  F092         	movff	?___flmul+3,___flsub@a+3
  6662   000B0C  EC10  F026         	call	___flsub	;wreg free
  6663   000B10  C08B  F0DA         	movff	?___flsub,efgtoa@h
  6664   000B14  C08C  F0DB         	movff	?___flsub+1,efgtoa@h+1
  6665   000B18  C08D  F0DC         	movff	?___flsub+2,efgtoa@h+2
  6666   000B1C  C08E  F0DD         	movff	?___flsub+3,efgtoa@h+3
  6667   000B20                     
  6668                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  6669   000B20  C0E9  F08B         	movff	efgtoa@u,___fldiv@b
  6670   000B24  C0EA  F08C         	movff	efgtoa@u+1,___fldiv@b+1
  6671   000B28  C0EB  F08D         	movff	efgtoa@u+2,___fldiv@b+2
  6672   000B2C  C0EC  F08E         	movff	efgtoa@u+3,___fldiv@b+3
  6673   000B30  0E00               	movlw	0
  6674   000B32  0100               	movlb	0	; () banked
  6675   000B34  6F8F               	movwf	___fldiv@a& (0+255),b
  6676   000B36  0E00               	movlw	0
  6677   000B38  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  6678   000B3A  0E20               	movlw	32
  6679   000B3C  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  6680   000B3E  0E41               	movlw	65
  6681   000B40  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  6682   000B42  EC77  F011         	call	___fldiv	;wreg free
  6683   000B46  C08B  F0E9         	movff	?___fldiv,efgtoa@u
  6684   000B4A  C08C  F0EA         	movff	?___fldiv+1,efgtoa@u+1
  6685   000B4E  C08D  F0EB         	movff	?___fldiv+2,efgtoa@u+2
  6686   000B52  C08E  F0EC         	movff	?___fldiv+3,efgtoa@u+3
  6687   000B56                     
  6688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  6689   000B56  0100               	movlb	0	; () banked
  6690   000B58  4BD8               	infsnz	efgtoa@i& (0+255),f,b
  6691   000B5A  2BD9               	incf	(efgtoa@i+1)& (0+255),f,b
  6692   000B5C                     l6910:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  6696   000B5C  51CE               	movf	efgtoa@m& (0+255),w,b
  6697   000B5E  5DD8               	subwf	efgtoa@i& (0+255),w,b
  6698   000B60  51D9               	movf	(efgtoa@i+1)& (0+255),w,b
  6699   000B62  0A80               	xorlw	128
  6700   000B64  6FBF               	movwf	??_efgtoa& (0+255),b
  6701   000B66  51CF               	movf	(efgtoa@m+1)& (0+255),w,b
  6702   000B68  0A80               	xorlw	128
  6703   000B6A  59BF               	subwfb	??_efgtoa& (0+255),w,b
  6704   000B6C  A0D8               	btfss	status,0,c
  6705   000B6E  EFBB  F005         	goto	u8531
  6706   000B72  EFBD  F005         	goto	u8530
  6707   000B76                     u8531:
  6708   000B76  EF32  F005         	goto	l6902
  6709   000B7A                     u8530:
  6710   000B7A                     
  6711                           ; BSR set to: 0
  6712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  6713   000B7A  C0E9  F072         	movff	efgtoa@u,___flmul@b
  6714   000B7E  C0EA  F073         	movff	efgtoa@u+1,___flmul@b+1
  6715   000B82  C0EB  F074         	movff	efgtoa@u+2,___flmul@b+2
  6716   000B86  C0EC  F075         	movff	efgtoa@u+3,___flmul@b+3
  6717   000B8A  0E00               	movlw	0
  6718   000B8C  6F76               	movwf	___flmul@a& (0+255),b
  6719   000B8E  0E00               	movlw	0
  6720   000B90  6F77               	movwf	(___flmul@a+1)& (0+255),b
  6721   000B92  0EA0               	movlw	160
  6722   000B94  6F78               	movwf	(___flmul@a+2)& (0+255),b
  6723   000B96  0E40               	movlw	64
  6724   000B98  6F79               	movwf	(___flmul@a+3)& (0+255),b
  6725   000B9A  EC4C  F00D         	call	___flmul	;wreg free
  6726   000B9E  C072  F0DE         	movff	?___flmul,efgtoa@l
  6727   000BA2  C073  F0DF         	movff	?___flmul+1,efgtoa@l+1
  6728   000BA6  C074  F0E0         	movff	?___flmul+2,efgtoa@l+2
  6729   000BAA  C075  F0E1         	movff	?___flmul+3,efgtoa@l+3
  6730   000BAE                     
  6731                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  6732   000BAE  C0DA  F08B         	movff	efgtoa@h,___flge@ff1
  6733   000BB2  C0DB  F08C         	movff	efgtoa@h+1,___flge@ff1+1
  6734   000BB6  C0DC  F08D         	movff	efgtoa@h+2,___flge@ff1+2
  6735   000BBA  C0DD  F08E         	movff	efgtoa@h+3,___flge@ff1+3
  6736   000BBE  C0DE  F08F         	movff	efgtoa@l,___flge@ff2
  6737   000BC2  C0DF  F090         	movff	efgtoa@l+1,___flge@ff2+1
  6738   000BC6  C0E0  F091         	movff	efgtoa@l+2,___flge@ff2+2
  6739   000BCA  C0E1  F092         	movff	efgtoa@l+3,___flge@ff2+3
  6740   000BCE  ECE3  F01F         	call	___flge	;wreg free
  6741   000BD2  0100               	movlb	0	; () banked
  6742   000BD4  B0D8               	btfsc	status,0,c
  6743   000BD6  EFEF  F005         	goto	u8541
  6744   000BDA  EFF1  F005         	goto	u8540
  6745   000BDE                     u8541:
  6746   000BDE  EFFB  F005         	goto	l6918
  6747   000BE2                     u8540:
  6748   000BE2                     
  6749                           ; BSR set to: 0
  6750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  6751   000BE2  0E00               	movlw	0
  6752   000BE4  6FDE               	movwf	efgtoa@l& (0+255),b
  6753   000BE6  0E00               	movlw	0
  6754   000BE8  6FDF               	movwf	(efgtoa@l+1)& (0+255),b
  6755   000BEA  0E00               	movlw	0
  6756   000BEC  6FE0               	movwf	(efgtoa@l+2)& (0+255),b
  6757   000BEE  0E00               	movlw	0
  6758   000BF0  6FE1               	movwf	(efgtoa@l+3)& (0+255),b
  6759                           
  6760                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  6761   000BF2  EF24  F006         	goto	l6924
  6762   000BF6                     l6918:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  6766   000BF6  C0DA  F064         	movff	efgtoa@h,___fleq@ff1
  6767   000BFA  C0DB  F065         	movff	efgtoa@h+1,___fleq@ff1+1
  6768   000BFE  C0DC  F066         	movff	efgtoa@h+2,___fleq@ff1+2
  6769   000C02  C0DD  F067         	movff	efgtoa@h+3,___fleq@ff1+3
  6770   000C06  C0DE  F068         	movff	efgtoa@l,___fleq@ff2
  6771   000C0A  C0DF  F069         	movff	efgtoa@l+1,___fleq@ff2+1
  6772   000C0E  C0E0  F06A         	movff	efgtoa@l+2,___fleq@ff2+2
  6773   000C12  C0E1  F06B         	movff	efgtoa@l+3,___fleq@ff2+3
  6774   000C16  EC09  F024         	call	___fleq	;wreg free
  6775   000C1A  0100               	movlb	0	; () banked
  6776   000C1C  A0D8               	btfss	status,0,c
  6777   000C1E  EF13  F006         	goto	u8551
  6778   000C22  EF15  F006         	goto	u8550
  6779   000C26                     u8551:
  6780   000C26  EF24  F006         	goto	l6924
  6781   000C2A                     u8550:
  6782   000C2A                     
  6783                           ; BSR set to: 0
  6784   000C2A  B1CC               	btfsc	efgtoa@d& (0+255),0,b
  6785   000C2C  EF1A  F006         	goto	u8561
  6786   000C30  EF1C  F006         	goto	u8560
  6787   000C34                     u8561:
  6788   000C34  EF24  F006         	goto	l6924
  6789   000C38                     u8560:
  6790   000C38                     
  6791                           ; BSR set to: 0
  6792                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  6793   000C38  0E00               	movlw	0
  6794   000C3A  6FDE               	movwf	efgtoa@l& (0+255),b
  6795   000C3C  0E00               	movlw	0
  6796   000C3E  6FDF               	movwf	(efgtoa@l+1)& (0+255),b
  6797   000C40  0E00               	movlw	0
  6798   000C42  6FE0               	movwf	(efgtoa@l+2)& (0+255),b
  6799   000C44  0E00               	movlw	0
  6800   000C46  6FE1               	movwf	(efgtoa@l+3)& (0+255),b
  6801   000C48                     l6924:
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  6805   000C48  C0E3  F064         	movff	efgtoa@g,___fladd@b
  6806   000C4C  C0E4  F065         	movff	efgtoa@g+1,___fladd@b+1
  6807   000C50  C0E5  F066         	movff	efgtoa@g+2,___fladd@b+2
  6808   000C54  C0E6  F067         	movff	efgtoa@g+3,___fladd@b+3
  6809   000C58  C0DE  F068         	movff	efgtoa@l,___fladd@a
  6810   000C5C  C0DF  F069         	movff	efgtoa@l+1,___fladd@a+1
  6811   000C60  C0E0  F06A         	movff	efgtoa@l+2,___fladd@a+2
  6812   000C64  C0E1  F06B         	movff	efgtoa@l+3,___fladd@a+3
  6813   000C68  ECEB  F00A         	call	___fladd	;wreg free
  6814   000C6C  C064  F0DA         	movff	?___fladd,efgtoa@h
  6815   000C70  C065  F0DB         	movff	?___fladd+1,efgtoa@h+1
  6816   000C74  C066  F0DC         	movff	?___fladd+2,efgtoa@h+2
  6817   000C78  C067  F0DD         	movff	?___fladd+3,efgtoa@h+3
  6818   000C7C                     
  6819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  6820   000C7C  C0DA  F08B         	movff	efgtoa@h,___flge@ff1
  6821   000C80  C0DB  F08C         	movff	efgtoa@h+1,___flge@ff1+1
  6822   000C84  C0DC  F08D         	movff	efgtoa@h+2,___flge@ff1+2
  6823   000C88  C0DD  F08E         	movff	efgtoa@h+3,___flge@ff1+3
  6824   000C8C  0E00               	movlw	0
  6825   000C8E  0100               	movlb	0	; () banked
  6826   000C90  6F76               	movwf	___flmul@a& (0+255),b
  6827   000C92  0E00               	movlw	0
  6828   000C94  6F77               	movwf	(___flmul@a+1)& (0+255),b
  6829   000C96  0E20               	movlw	32
  6830   000C98  6F78               	movwf	(___flmul@a+2)& (0+255),b
  6831   000C9A  0E41               	movlw	65
  6832   000C9C  6F79               	movwf	(___flmul@a+3)& (0+255),b
  6833   000C9E  C0D4  F072         	movff	efgtoa@ou,___flmul@b
  6834   000CA2  C0D5  F073         	movff	efgtoa@ou+1,___flmul@b+1
  6835   000CA6  C0D6  F074         	movff	efgtoa@ou+2,___flmul@b+2
  6836   000CAA  C0D7  F075         	movff	efgtoa@ou+3,___flmul@b+3
  6837   000CAE  EC4C  F00D         	call	___flmul	;wreg free
  6838   000CB2  C072  F08F         	movff	?___flmul,___flge@ff2
  6839   000CB6  C073  F090         	movff	?___flmul+1,___flge@ff2+1
  6840   000CBA  C074  F091         	movff	?___flmul+2,___flge@ff2+2
  6841   000CBE  C075  F092         	movff	?___flmul+3,___flge@ff2+3
  6842   000CC2  ECE3  F01F         	call	___flge	;wreg free
  6843   000CC6  0100               	movlb	0	; () banked
  6844   000CC8  A0D8               	btfss	status,0,c
  6845   000CCA  EF69  F006         	goto	u8571
  6846   000CCE  EF6B  F006         	goto	u8570
  6847   000CD2                     u8571:
  6848   000CD2  EF93  F006         	goto	l6936
  6849   000CD6                     u8570:
  6850   000CD6                     
  6851                           ; BSR set to: 0
  6852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  6853   000CD6  4BD0               	infsnz	efgtoa@e& (0+255),f,b
  6854   000CD8  2BD1               	incf	(efgtoa@e+1)& (0+255),f,b
  6855   000CDA                     
  6856                           ; BSR set to: 0
  6857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  6858   000CDA  C0D4  F072         	movff	efgtoa@ou,___flmul@b
  6859   000CDE  C0D5  F073         	movff	efgtoa@ou+1,___flmul@b+1
  6860   000CE2  C0D6  F074         	movff	efgtoa@ou+2,___flmul@b+2
  6861   000CE6  C0D7  F075         	movff	efgtoa@ou+3,___flmul@b+3
  6862   000CEA  0E00               	movlw	0
  6863   000CEC  6F76               	movwf	___flmul@a& (0+255),b
  6864   000CEE  0E00               	movlw	0
  6865   000CF0  6F77               	movwf	(___flmul@a+1)& (0+255),b
  6866   000CF2  0E20               	movlw	32
  6867   000CF4  6F78               	movwf	(___flmul@a+2)& (0+255),b
  6868   000CF6  0E41               	movlw	65
  6869   000CF8  6F79               	movwf	(___flmul@a+3)& (0+255),b
  6870   000CFA  EC4C  F00D         	call	___flmul	;wreg free
  6871   000CFE  C072  F0D4         	movff	?___flmul,efgtoa@ou
  6872   000D02  C073  F0D5         	movff	?___flmul+1,efgtoa@ou+1
  6873   000D06  C074  F0D6         	movff	?___flmul+2,efgtoa@ou+2
  6874   000D0A  C075  F0D7         	movff	?___flmul+3,efgtoa@ou+3
  6875   000D0E                     
  6876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  6877   000D0E  0E66               	movlw	102
  6878   000D10  0100               	movlb	0	; () banked
  6879   000D12  19CB               	xorwf	efgtoa@nmode& (0+255),w,b
  6880   000D14  A4D8               	btfss	status,2,c
  6881   000D16  EF8F  F006         	goto	u8581
  6882   000D1A  EF91  F006         	goto	u8580
  6883   000D1E                     u8581:
  6884   000D1E  EF93  F006         	goto	l6936
  6885   000D22                     u8580:
  6886   000D22                     
  6887                           ; BSR set to: 0
  6888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  6889   000D22  4BCE               	infsnz	efgtoa@m& (0+255),f,b
  6890   000D24  2BCF               	incf	(efgtoa@m+1)& (0+255),f,b
  6891   000D26                     l6936:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  6895   000D26  C0D4  F0E9         	movff	efgtoa@ou,efgtoa@u
  6896   000D2A  C0D5  F0EA         	movff	efgtoa@ou+1,efgtoa@u+1
  6897   000D2E  C0D6  F0EB         	movff	efgtoa@ou+2,efgtoa@u+2
  6898   000D32  C0D7  F0EC         	movff	efgtoa@ou+3,efgtoa@u+3
  6899   000D36                     
  6900                           ; BSR set to: 0
  6901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  6902   000D36  C0D0  F0C1         	movff	efgtoa@e,efgtoa@ne
  6903   000D3A  C0D1  F0C2         	movff	efgtoa@e+1,efgtoa@ne+1
  6904   000D3E                     
  6905                           ; BSR set to: 0
  6906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  6907   000D3E  0E00               	movlw	0
  6908   000D40  6FC9               	movwf	efgtoa@pp& (0+255),b
  6909   000D42                     
  6910                           ; BSR set to: 0
  6911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  6912   000D42  0E00               	movlw	0
  6913   000D44  6FC6               	movwf	(efgtoa@t+1)& (0+255),b
  6914   000D46  0E00               	movlw	0
  6915   000D48  6FC5               	movwf	efgtoa@t& (0+255),b
  6916   000D4A                     
  6917                           ; BSR set to: 0
  6918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  6919   000D4A  0E00               	movlw	0
  6920   000D4C  6FD9               	movwf	(efgtoa@i+1)& (0+255),b
  6921   000D4E  0E00               	movlw	0
  6922   000D50  6FD8               	movwf	efgtoa@i& (0+255),b
  6923                           
  6924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6925   000D52  EF91  F007         	goto	l6986
  6926   000D56                     l6946:
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  6930   000D56  C0DA  F08B         	movff	efgtoa@h,___fldiv@b
  6931   000D5A  C0DB  F08C         	movff	efgtoa@h+1,___fldiv@b+1
  6932   000D5E  C0DC  F08D         	movff	efgtoa@h+2,___fldiv@b+2
  6933   000D62  C0DD  F08E         	movff	efgtoa@h+3,___fldiv@b+3
  6934   000D66  C0E9  F08F         	movff	efgtoa@u,___fldiv@a
  6935   000D6A  C0EA  F090         	movff	efgtoa@u+1,___fldiv@a+1
  6936   000D6E  C0EB  F091         	movff	efgtoa@u+2,___fldiv@a+2
  6937   000D72  C0EC  F092         	movff	efgtoa@u+3,___fldiv@a+3
  6938   000D76  EC77  F011         	call	___fldiv	;wreg free
  6939   000D7A  C08B  F0A4         	movff	?___fldiv,floorf@x
  6940   000D7E  C08C  F0A5         	movff	?___fldiv+1,floorf@x+1
  6941   000D82  C08D  F0A6         	movff	?___fldiv+2,floorf@x+2
  6942   000D86  C08E  F0A7         	movff	?___fldiv+3,floorf@x+3
  6943   000D8A  EC41  F019         	call	_floorf	;wreg free
  6944   000D8E  C0A4  F0DE         	movff	?_floorf,efgtoa@l
  6945   000D92  C0A5  F0DF         	movff	?_floorf+1,efgtoa@l+1
  6946   000D96  C0A6  F0E0         	movff	?_floorf+2,efgtoa@l+2
  6947   000D9A  C0A7  F0E1         	movff	?_floorf+3,efgtoa@l+3
  6948                           
  6949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6950   000D9E  C0DE  F064         	movff	efgtoa@l,___fltol@f1
  6951   000DA2  C0DF  F065         	movff	efgtoa@l+1,___fltol@f1+1
  6952   000DA6  C0E0  F066         	movff	efgtoa@l+2,___fltol@f1+2
  6953   000DAA  C0E1  F067         	movff	efgtoa@l+3,___fltol@f1+3
  6954   000DAE  EC5F  F01F         	call	___fltol	;wreg free
  6955   000DB2  0100               	movlb	0	; () banked
  6956   000DB4  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
  6957   000DB6  EFE8  F006         	goto	u8590
  6958   000DBA  5165               	movf	(?___fltol+1)& (0+255),w,b
  6959   000DBC  E107               	bnz	u8591
  6960   000DBE  0E0A               	movlw	10
  6961   000DC0  5D64               	subwf	?___fltol& (0+255),w,b
  6962   000DC2  B0D8               	btfsc	status,0,c
  6963   000DC4  EFE6  F006         	goto	u8591
  6964   000DC8  EFE8  F006         	goto	u8590
  6965   000DCC                     u8591:
  6966   000DCC  EFF8  F006         	goto	l6950
  6967   000DD0                     u8590:
  6968   000DD0                     
  6969                           ; BSR set to: 0
  6970   000DD0  C0DE  F064         	movff	efgtoa@l,___fltol@f1
  6971   000DD4  C0DF  F065         	movff	efgtoa@l+1,___fltol@f1+1
  6972   000DD8  C0E0  F066         	movff	efgtoa@l+2,___fltol@f1+2
  6973   000DDC  C0E1  F067         	movff	efgtoa@l+3,___fltol@f1+3
  6974   000DE0  EC5F  F01F         	call	___fltol	;wreg free
  6975   000DE4  C064  F0CC         	movff	?___fltol,efgtoa@d
  6976   000DE8  C065  F0CD         	movff	?___fltol+1,efgtoa@d+1
  6977   000DEC  EFFC  F006         	goto	l1364
  6978   000DF0                     l6950:
  6979                           
  6980                           ; BSR set to: 0
  6981   000DF0  0E00               	movlw	0
  6982   000DF2  6FCD               	movwf	(efgtoa@d+1)& (0+255),b
  6983   000DF4  0E09               	movlw	9
  6984   000DF6  6FCC               	movwf	efgtoa@d& (0+255),b
  6985   000DF8                     l1364:
  6986                           
  6987                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  6988   000DF8  0100               	movlb	0	; () banked
  6989   000DFA  51C9               	movf	efgtoa@pp& (0+255),w,b
  6990   000DFC  A4D8               	btfss	status,2,c
  6991   000DFE  EF03  F007         	goto	u8601
  6992   000E02  EF05  F007         	goto	u8600
  6993   000E06                     u8601:
  6994   000E06  EF2D  F007         	goto	l6970
  6995   000E0A                     u8600:
  6996   000E0A                     
  6997                           ; BSR set to: 0
  6998   000E0A  BFC2               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6999   000E0C  EF0C  F007         	goto	u8610
  7000   000E10  EF0A  F007         	goto	u8611
  7001   000E14                     u8611:
  7002   000E14  EF2D  F007         	goto	l6970
  7003   000E18                     u8610:
  7004   000E18                     
  7005                           ; BSR set to: 0
  7006                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  7007   000E18  0E46               	movlw	low _dbuf
  7008   000E1A  25E7               	addwf	efgtoa@n& (0+255),w,b
  7009   000E1C  6ED9               	movwf	fsr2l,c
  7010   000E1E  0E01               	movlw	high _dbuf
  7011   000E20  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7012   000E22  6EDA               	movwf	fsr2h,c
  7013   000E24  0E2E               	movlw	46
  7014   000E26  6EDF               	movwf	indf2,c
  7015   000E28                     
  7016                           ; BSR set to: 0
  7017   000E28  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  7018   000E2A  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  7019   000E2C                     
  7020                           ; BSR set to: 0
  7021                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  7022   000E2C  07D2               	decf	efgtoa@w& (0+255),f,b
  7023   000E2E  A0D8               	btfss	status,0,c
  7024   000E30  07D3               	decf	(efgtoa@w+1)& (0+255),f,b
  7025   000E32                     
  7026                           ; BSR set to: 0
  7027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  7028   000E32  0E01               	movlw	1
  7029   000E34  6FC9               	movwf	efgtoa@pp& (0+255),b
  7030   000E36  EF2D  F007         	goto	l6970
  7031   000E3A                     l6962:
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  7035   000E3A  0E46               	movlw	low _dbuf
  7036   000E3C  25E7               	addwf	efgtoa@n& (0+255),w,b
  7037   000E3E  6ED9               	movwf	fsr2l,c
  7038   000E40  0E01               	movlw	high _dbuf
  7039   000E42  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7040   000E44  6EDA               	movwf	fsr2h,c
  7041   000E46  0E30               	movlw	48
  7042   000E48  6EDF               	movwf	indf2,c
  7043   000E4A                     
  7044                           ; BSR set to: 0
  7045   000E4A  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  7046   000E4C  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  7047   000E4E                     
  7048                           ; BSR set to: 0
  7049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  7050   000E4E  07D2               	decf	efgtoa@w& (0+255),f,b
  7051   000E50  A0D8               	btfss	status,0,c
  7052   000E52  07D3               	decf	(efgtoa@w+1)& (0+255),f,b
  7053   000E54                     
  7054                           ; BSR set to: 0
  7055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  7056   000E54  07C5               	decf	efgtoa@t& (0+255),f,b
  7057   000E56  A0D8               	btfss	status,0,c
  7058   000E58  07C6               	decf	(efgtoa@t+1)& (0+255),f,b
  7059   000E5A                     l6970:
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  7063   000E5A  51C5               	movf	efgtoa@t& (0+255),w,b
  7064   000E5C  11C6               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7065   000E5E  A4D8               	btfss	status,2,c
  7066   000E60  EF34  F007         	goto	u8621
  7067   000E64  EF36  F007         	goto	u8620
  7068   000E68                     u8621:
  7069   000E68  EF1D  F007         	goto	l6962
  7070   000E6C                     u8620:
  7071   000E6C                     
  7072                           ; BSR set to: 0
  7073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7074   000E6C  0E46               	movlw	low _dbuf
  7075   000E6E  25E7               	addwf	efgtoa@n& (0+255),w,b
  7076   000E70  6ED9               	movwf	fsr2l,c
  7077   000E72  0E01               	movlw	high _dbuf
  7078   000E74  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7079   000E76  6EDA               	movwf	fsr2h,c
  7080   000E78  51CC               	movf	efgtoa@d& (0+255),w,b
  7081   000E7A  0F30               	addlw	48
  7082   000E7C  6EDF               	movwf	indf2,c
  7083   000E7E                     
  7084                           ; BSR set to: 0
  7085   000E7E  4BE7               	infsnz	efgtoa@n& (0+255),f,b
  7086   000E80  2BE8               	incf	(efgtoa@n+1)& (0+255),f,b
  7087   000E82                     
  7088                           ; BSR set to: 0
  7089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  7090   000E82  07D2               	decf	efgtoa@w& (0+255),f,b
  7091   000E84  A0D8               	btfss	status,0,c
  7092   000E86  07D3               	decf	(efgtoa@w+1)& (0+255),f,b
  7093   000E88                     
  7094                           ; BSR set to: 0
  7095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  7096   000E88  C0DA  F08B         	movff	efgtoa@h,___flsub@b
  7097   000E8C  C0DB  F08C         	movff	efgtoa@h+1,___flsub@b+1
  7098   000E90  C0DC  F08D         	movff	efgtoa@h+2,___flsub@b+2
  7099   000E94  C0DD  F08E         	movff	efgtoa@h+3,___flsub@b+3
  7100   000E98  C0DE  F076         	movff	efgtoa@l,___flmul@a
  7101   000E9C  C0DF  F077         	movff	efgtoa@l+1,___flmul@a+1
  7102   000EA0  C0E0  F078         	movff	efgtoa@l+2,___flmul@a+2
  7103   000EA4  C0E1  F079         	movff	efgtoa@l+3,___flmul@a+3
  7104   000EA8  C0E9  F072         	movff	efgtoa@u,___flmul@b
  7105   000EAC  C0EA  F073         	movff	efgtoa@u+1,___flmul@b+1
  7106   000EB0  C0EB  F074         	movff	efgtoa@u+2,___flmul@b+2
  7107   000EB4  C0EC  F075         	movff	efgtoa@u+3,___flmul@b+3
  7108   000EB8  EC4C  F00D         	call	___flmul	;wreg free
  7109   000EBC  C072  F08F         	movff	?___flmul,___flsub@a
  7110   000EC0  C073  F090         	movff	?___flmul+1,___flsub@a+1
  7111   000EC4  C074  F091         	movff	?___flmul+2,___flsub@a+2
  7112   000EC8  C075  F092         	movff	?___flmul+3,___flsub@a+3
  7113   000ECC  EC10  F026         	call	___flsub	;wreg free
  7114   000ED0  C08B  F0DA         	movff	?___flsub,efgtoa@h
  7115   000ED4  C08C  F0DB         	movff	?___flsub+1,efgtoa@h+1
  7116   000ED8  C08D  F0DC         	movff	?___flsub+2,efgtoa@h+2
  7117   000EDC  C08E  F0DD         	movff	?___flsub+3,efgtoa@h+3
  7118   000EE0                     
  7119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  7120   000EE0  C0E9  F08B         	movff	efgtoa@u,___fldiv@b
  7121   000EE4  C0EA  F08C         	movff	efgtoa@u+1,___fldiv@b+1
  7122   000EE8  C0EB  F08D         	movff	efgtoa@u+2,___fldiv@b+2
  7123   000EEC  C0EC  F08E         	movff	efgtoa@u+3,___fldiv@b+3
  7124   000EF0  0E00               	movlw	0
  7125   000EF2  0100               	movlb	0	; () banked
  7126   000EF4  6F8F               	movwf	___fldiv@a& (0+255),b
  7127   000EF6  0E00               	movlw	0
  7128   000EF8  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  7129   000EFA  0E20               	movlw	32
  7130   000EFC  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  7131   000EFE  0E41               	movlw	65
  7132   000F00  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  7133   000F02  EC77  F011         	call	___fldiv	;wreg free
  7134   000F06  C08B  F0E9         	movff	?___fldiv,efgtoa@u
  7135   000F0A  C08C  F0EA         	movff	?___fldiv+1,efgtoa@u+1
  7136   000F0E  C08D  F0EB         	movff	?___fldiv+2,efgtoa@u+2
  7137   000F12  C08E  F0EC         	movff	?___fldiv+3,efgtoa@u+3
  7138   000F16                     
  7139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  7140   000F16  0100               	movlb	0	; () banked
  7141   000F18  07C1               	decf	efgtoa@ne& (0+255),f,b
  7142   000F1A  A0D8               	btfss	status,0,c
  7143   000F1C  07C2               	decf	(efgtoa@ne+1)& (0+255),f,b
  7144   000F1E                     
  7145                           ; BSR set to: 0
  7146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  7147   000F1E  4BD8               	infsnz	efgtoa@i& (0+255),f,b
  7148   000F20  2BD9               	incf	(efgtoa@i+1)& (0+255),f,b
  7149   000F22                     l6986:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7153   000F22  51CE               	movf	efgtoa@m& (0+255),w,b
  7154   000F24  5DD8               	subwf	efgtoa@i& (0+255),w,b
  7155   000F26  51D9               	movf	(efgtoa@i+1)& (0+255),w,b
  7156   000F28  0A80               	xorlw	128
  7157   000F2A  6FBF               	movwf	??_efgtoa& (0+255),b
  7158   000F2C  51CF               	movf	(efgtoa@m+1)& (0+255),w,b
  7159   000F2E  0A80               	xorlw	128
  7160   000F30  59BF               	subwfb	??_efgtoa& (0+255),w,b
  7161   000F32  B0D8               	btfsc	status,0,c
  7162   000F34  EF9E  F007         	goto	u8631
  7163   000F38  EFA0  F007         	goto	u8630
  7164   000F3C                     u8631:
  7165   000F3C  EFAE  F007         	goto	l6990
  7166   000F40                     u8630:
  7167   000F40                     
  7168                           ; BSR set to: 0
  7169   000F40  BFE8               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7170   000F42  EFAC  F007         	goto	u8641
  7171   000F46  51E8               	movf	(efgtoa@n+1)& (0+255),w,b
  7172   000F48  E109               	bnz	u8640
  7173   000F4A  0E4B               	movlw	75
  7174   000F4C  5DE7               	subwf	efgtoa@n& (0+255),w,b
  7175   000F4E  A0D8               	btfss	status,0,c
  7176   000F50  EFAC  F007         	goto	u8641
  7177   000F54  EFAE  F007         	goto	u8640
  7178   000F58                     u8641:
  7179   000F58  EFAB  F006         	goto	l6946
  7180   000F5C                     u8640:
  7181   000F5C                     l6990:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  7185   000F5C  0E00               	movlw	0
  7186   000F5E  6FD9               	movwf	(efgtoa@i+1)& (0+255),b
  7187   000F60  0E4F               	movlw	79
  7188   000F62  6FD8               	movwf	efgtoa@i& (0+255),b
  7189   000F64                     
  7190                           ; BSR set to: 0
  7191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  7192   000F64  0E46               	movlw	low _dbuf
  7193   000F66  25D8               	addwf	efgtoa@i& (0+255),w,b
  7194   000F68  6ED9               	movwf	fsr2l,c
  7195   000F6A  0E01               	movlw	high _dbuf
  7196   000F6C  21D9               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7197   000F6E  6EDA               	movwf	fsr2h,c
  7198   000F70  6ADF               	clrf	indf2,c
  7199   000F72                     
  7200                           ; BSR set to: 0
  7201                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  7202   000F72  0E46               	movlw	low _dbuf
  7203   000F74  6FBF               	movwf	??_efgtoa& (0+255),b
  7204   000F76  0E01               	movlw	high _dbuf
  7205   000F78  6FC0               	movwf	(??_efgtoa+1)& (0+255),b
  7206   000F7A  51E7               	movf	efgtoa@n& (0+255),w,b
  7207   000F7C  5FBF               	subwf	??_efgtoa& (0+255),f,b
  7208   000F7E  51E8               	movf	(efgtoa@n+1)& (0+255),w,b
  7209   000F80  5BC0               	subwfb	(??_efgtoa+1)& (0+255),f,b
  7210   000F82  51D8               	movf	efgtoa@i& (0+255),w,b
  7211   000F84  25BF               	addwf	??_efgtoa& (0+255),w,b
  7212   000F86  6F64               	movwf	memcpy@d1& (0+255),b
  7213   000F88  51D9               	movf	(efgtoa@i+1)& (0+255),w,b
  7214   000F8A  21C0               	addwfc	(??_efgtoa+1)& (0+255),w,b
  7215   000F8C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  7216   000F8E  0E46               	movlw	low _dbuf
  7217   000F90  6F66               	movwf	memcpy@s1& (0+255),b
  7218   000F92  0E01               	movlw	high _dbuf
  7219   000F94  6F67               	movwf	(memcpy@s1+1)& (0+255),b
  7220   000F96  C0E7  F068         	movff	efgtoa@n,memcpy@n
  7221   000F9A  C0E8  F069         	movff	efgtoa@n+1,memcpy@n+1
  7222   000F9E  ECBF  F025         	call	_memcpy	;wreg free
  7223   000FA2                     
  7224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  7225   000FA2  0100               	movlb	0	; () banked
  7226   000FA4  51E7               	movf	efgtoa@n& (0+255),w,b
  7227   000FA6  5DD8               	subwf	efgtoa@i& (0+255),w,b
  7228   000FA8  6FE7               	movwf	efgtoa@n& (0+255),b
  7229   000FAA  51E8               	movf	(efgtoa@n+1)& (0+255),w,b
  7230   000FAC  59D9               	subwfb	(efgtoa@i+1)& (0+255),w,b
  7231   000FAE  6FE8               	movwf	(efgtoa@n+1)& (0+255),b
  7232   000FB0                     
  7233                           ; BSR set to: 0
  7234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  7235   000FB0  51E2               	movf	efgtoa@sign& (0+255),w,b
  7236   000FB2  A4D8               	btfss	status,2,c
  7237   000FB4  EFDE  F007         	goto	u8651
  7238   000FB8  EFE1  F007         	goto	u8650
  7239   000FBC                     u8651:
  7240   000FBC  0E01               	movlw	1
  7241   000FBE  EFE2  F007         	goto	u8660
  7242   000FC2                     u8650:
  7243   000FC2  0E00               	movlw	0
  7244   000FC4                     u8660:
  7245   000FC4  6FD8               	movwf	efgtoa@i& (0+255),b
  7246   000FC6  6BD9               	clrf	(efgtoa@i+1)& (0+255),b
  7247   000FC8                     
  7248                           ; BSR set to: 0
  7249                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  7250   000FC8  51E2               	movf	efgtoa@sign& (0+255),w,b
  7251   000FCA  B4D8               	btfsc	status,2,c
  7252   000FCC  EFEA  F007         	goto	u8671
  7253   000FD0  EFEC  F007         	goto	u8670
  7254   000FD4                     u8671:
  7255   000FD4  EFF7  F007         	goto	l7004
  7256   000FD8                     u8670:
  7257   000FD8                     
  7258                           ; BSR set to: 0
  7259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  7260   000FD8  07E7               	decf	efgtoa@n& (0+255),f,b
  7261   000FDA  A0D8               	btfss	status,0,c
  7262   000FDC  07E8               	decf	(efgtoa@n+1)& (0+255),f,b
  7263   000FDE  0E46               	movlw	low _dbuf
  7264   000FE0  25E7               	addwf	efgtoa@n& (0+255),w,b
  7265   000FE2  6ED9               	movwf	fsr2l,c
  7266   000FE4  0E01               	movlw	high _dbuf
  7267   000FE6  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7268   000FE8  6EDA               	movwf	fsr2h,c
  7269   000FEA  C0E2  FFDF         	movff	efgtoa@sign,indf2
  7270   000FEE                     l7004:
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  7274   000FEE  51D8               	movf	efgtoa@i& (0+255),w,b
  7275   000FF0  5FD2               	subwf	efgtoa@w& (0+255),f,b
  7276   000FF2  51D9               	movf	(efgtoa@i+1)& (0+255),w,b
  7277   000FF4  5BD3               	subwfb	(efgtoa@w+1)& (0+255),f,b
  7278   000FF6                     
  7279                           ; BSR set to: 0
  7280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7281   000FF6  C0B8  F074         	movff	efgtoa@fp,pad@fp
  7282   000FFA  C0B9  F075         	movff	efgtoa@fp+1,pad@fp+1
  7283   000FFE  0E46               	movlw	low _dbuf
  7284   001000  25E7               	addwf	efgtoa@n& (0+255),w,b
  7285   001002  6F76               	movwf	pad@buf& (0+255),b
  7286   001004  0E01               	movlw	high _dbuf
  7287   001006  21E8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7288   001008  6F77               	movwf	(pad@buf+1)& (0+255),b
  7289   00100A  C0D2  F078         	movff	efgtoa@w,pad@p
  7290   00100E  C0D3  F079         	movff	efgtoa@w+1,pad@p+1
  7291   001012  ECFA  F024         	call	_pad	;wreg free
  7292   001016                     l1331:
  7293   001016  0012               	return		;funcret
  7294   001018                     __end_of_efgtoa:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _strcpy *****************
  7298 ;; Defined at:
  7299 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  dest            2    4[BANK0 ] PTR unsigned char 
  7302 ;;		 -> dbuf(80), 
  7303 ;;  src             2    6[BANK0 ] PTR const unsigned char 
  7304 ;;		 -> STR_6(4), STR_3(4), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  d               2   10[BANK0 ] PTR unsigned char 
  7307 ;;		 -> dbuf(80), 
  7308 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7309 ;;		 -> STR_6(4), STR_3(4), 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  2    4[BANK0 ] PTR unsigned char 
  7312 ;; Registers used:
  7313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7319 ;;      Params:         0       4       0       0       0       0       0
  7320 ;;      Locals:         0       4       0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0
  7322 ;;      Totals:         0       8       0       0       0       0       0
  7323 ;;Total ram usage:        8 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; Hardware stack levels required when called: 3
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		_efgtoa
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text27
  7334   004CB0                     __ptext27:
  7335                           	callstack 0
  7336   004CB0                     _strcpy:
  7337                           	callstack 19
  7338   004CB0  C066  F068         	movff	strcpy@src,strcpy@s
  7339   004CB4  C067  F069         	movff	strcpy@src+1,strcpy@s+1
  7340   004CB8  C064  F06A         	movff	strcpy@dest,strcpy@d
  7341   004CBC  C065  F06B         	movff	strcpy@dest+1,strcpy@d+1
  7342   004CC0                     l6692:
  7343   004CC0  C068  FFF6         	movff	strcpy@s,tblptrl
  7344   004CC4  C069  FFF7         	movff	strcpy@s+1,tblptrh
  7345   004CC8  0100               	movlb	0	; () banked
  7346   004CCA  4B68               	infsnz	strcpy@s& (0+255),f,b
  7347   004CCC  2B69               	incf	(strcpy@s+1)& (0+255),f,b
  7348   004CCE                     	if	0	;tblptru may be non-zero
  7349   004CCE                     	endif
  7350   004CCE                     	if	0	;tblptru may be non-zero
  7351   004CCE                     	endif
  7352   004CCE  C06A  FFD9         	movff	strcpy@d,fsr2l
  7353   004CD2  C06B  FFDA         	movff	strcpy@d+1,fsr2h
  7354   004CD6  4B6A               	infsnz	strcpy@d& (0+255),f,b
  7355   004CD8  2B6B               	incf	(strcpy@d+1)& (0+255),f,b
  7356   004CDA  0008               	tblrd		*
  7357   004CDC  CFF5 FFDF          	movff	tablat,indf2
  7358   004CE0  50DF               	movf	indf2,w,c
  7359   004CE2  A4D8               	btfss	status,2,c
  7360   004CE4  EF76  F026         	goto	u8131
  7361   004CE8  EF78  F026         	goto	u8130
  7362   004CEC                     u8131:
  7363   004CEC  EF60  F026         	goto	l6692
  7364   004CF0                     u8130:
  7365   004CF0                     
  7366                           ; BSR set to: 0
  7367   004CF0  0012               	return		;funcret
  7368   004CF2                     __end_of_strcpy:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function _memcpy *****************
  7372 ;; Defined at:
  7373 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  d1              2    4[BANK0 ] PTR void 
  7376 ;;		 -> dbuf(80), 
  7377 ;;  s1              2    6[BANK0 ] PTR const void 
  7378 ;;		 -> dbuf(80), 
  7379 ;;  n               2    8[BANK0 ] unsigned int 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  7382 ;;		 -> dbuf(80), 
  7383 ;;  d               2   11[BANK0 ] PTR unsigned char 
  7384 ;;		 -> dbuf(80), 
  7385 ;;  tmp             1   10[BANK0 ] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  2    4[BANK0 ] PTR void 
  7388 ;; Registers used:
  7389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7395 ;;      Params:         0       6       0       0       0       0       0
  7396 ;;      Locals:         0       5       0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0
  7398 ;;      Totals:         0      11       0       0       0       0       0
  7399 ;;Total ram usage:       11 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 3
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_efgtoa
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text28
  7410   004B7E                     __ptext28:
  7411                           	callstack 0
  7412   004B7E                     _memcpy:
  7413                           	callstack 19
  7414   004B7E  C066  F06D         	movff	memcpy@s1,memcpy@s
  7415   004B82  C067  F06E         	movff	memcpy@s1+1,memcpy@s+1
  7416   004B86  C064  F06B         	movff	memcpy@d1,memcpy@d
  7417   004B8A  C065  F06C         	movff	memcpy@d1+1,memcpy@d+1
  7418   004B8E  EFD9  F025         	goto	l6736
  7419   004B92                     l6728:
  7420                           
  7421                           ; BSR set to: 0
  7422   004B92  C06D  FFD9         	movff	memcpy@s,fsr2l
  7423   004B96  C06E  FFDA         	movff	memcpy@s+1,fsr2h
  7424   004B9A  50DF               	movf	indf2,w,c
  7425   004B9C  6F6A               	movwf	memcpy@tmp& (0+255),b
  7426   004B9E                     
  7427                           ; BSR set to: 0
  7428   004B9E  4B6D               	infsnz	memcpy@s& (0+255),f,b
  7429   004BA0  2B6E               	incf	(memcpy@s+1)& (0+255),f,b
  7430   004BA2                     
  7431                           ; BSR set to: 0
  7432   004BA2  C06B  FFD9         	movff	memcpy@d,fsr2l
  7433   004BA6  C06C  FFDA         	movff	memcpy@d+1,fsr2h
  7434   004BAA  C06A  FFDF         	movff	memcpy@tmp,indf2
  7435   004BAE                     
  7436                           ; BSR set to: 0
  7437   004BAE  4B6B               	infsnz	memcpy@d& (0+255),f,b
  7438   004BB0  2B6C               	incf	(memcpy@d+1)& (0+255),f,b
  7439   004BB2                     l6736:
  7440   004BB2  0100               	movlb	0	; () banked
  7441   004BB4  0768               	decf	memcpy@n& (0+255),f,b
  7442   004BB6  A0D8               	btfss	status,0,c
  7443   004BB8  0769               	decf	(memcpy@n+1)& (0+255),f,b
  7444   004BBA  2968               	incf	memcpy@n& (0+255),w,b
  7445   004BBC  E106               	bnz	u8251
  7446   004BBE  2969               	incf	(memcpy@n+1)& (0+255),w,b
  7447   004BC0  A4D8               	btfss	status,2,c
  7448   004BC2  EFE5  F025         	goto	u8251
  7449   004BC6  EFE7  F025         	goto	u8250
  7450   004BCA                     u8251:
  7451   004BCA  EFC9  F025         	goto	l6728
  7452   004BCE                     u8250:
  7453   004BCE                     
  7454                           ; BSR set to: 0
  7455   004BCE  0012               	return		;funcret
  7456   004BD0                     __end_of_memcpy:
  7457                           	callstack 0
  7458                           
  7459 ;; *************** function _labs *****************
  7460 ;; Defined at:
  7461 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  a               4    4[BANK0 ] long 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  4    4[BANK0 ] long 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2, status,0
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7475 ;;      Params:         0       4       0       0       0       0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0
  7477 ;;      Temps:          0       4       0       0       0       0       0
  7478 ;;      Totals:         0       8       0       0       0       0       0
  7479 ;;Total ram usage:        8 bytes
  7480 ;; Hardware stack levels used: 1
  7481 ;; Hardware stack levels required when called: 3
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_efgtoa
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text29
  7490   004A72                     __ptext29:
  7491                           	callstack 0
  7492   004A72                     _labs:
  7493                           	callstack 19
  7494   004A72  0100               	movlb	0	; () banked
  7495   004A74  BF67               	btfsc	(labs@a+3)& (0+255),7,b
  7496   004A76  EF49  F025         	goto	u8140
  7497   004A7A  5167               	movf	(labs@a+3)& (0+255),w,b
  7498   004A7C  1166               	iorwf	(labs@a+2)& (0+255),w,b
  7499   004A7E  1165               	iorwf	(labs@a+1)& (0+255),w,b
  7500   004A80  E106               	bnz	u8141
  7501   004A82  0564               	decf	labs@a& (0+255),w,b
  7502   004A84  B0D8               	btfsc	status,0,c
  7503   004A86  EF47  F025         	goto	u8141
  7504   004A8A  EF49  F025         	goto	u8140
  7505   004A8E                     u8141:
  7506   004A8E  EF64  F025         	goto	l1446
  7507   004A92                     u8140:
  7508   004A92                     
  7509                           ; BSR set to: 0
  7510   004A92  C064  F068         	movff	labs@a,??_labs
  7511   004A96  C065  F069         	movff	labs@a+1,??_labs+1
  7512   004A9A  C066  F06A         	movff	labs@a+2,??_labs+2
  7513   004A9E  C067  F06B         	movff	labs@a+3,??_labs+3
  7514   004AA2  1F68               	comf	??_labs& (0+255),f,b
  7515   004AA4  1F69               	comf	(??_labs+1)& (0+255),f,b
  7516   004AA6  1F6A               	comf	(??_labs+2)& (0+255),f,b
  7517   004AA8  1F6B               	comf	(??_labs+3)& (0+255),f,b
  7518   004AAA  2B68               	incf	??_labs& (0+255),f,b
  7519   004AAC  0E00               	movlw	0
  7520   004AAE  2369               	addwfc	(??_labs+1)& (0+255),f,b
  7521   004AB0  236A               	addwfc	(??_labs+2)& (0+255),f,b
  7522   004AB2  236B               	addwfc	(??_labs+3)& (0+255),f,b
  7523   004AB4  C068  F064         	movff	??_labs,?_labs
  7524   004AB8  C069  F065         	movff	??_labs+1,?_labs+1
  7525   004ABC  C06A  F066         	movff	??_labs+2,?_labs+2
  7526   004AC0  C06B  F067         	movff	??_labs+3,?_labs+3
  7527   004AC4  EF6C  F025         	goto	l1449
  7528   004AC8                     l1446:
  7529                           
  7530                           ; BSR set to: 0
  7531   004AC8  C064  F064         	movff	labs@a,?_labs
  7532   004ACC  C065  F065         	movff	labs@a+1,?_labs+1
  7533   004AD0  C066  F066         	movff	labs@a+2,?_labs+2
  7534   004AD4  C067  F067         	movff	labs@a+3,?_labs+3
  7535   004AD8                     l1449:
  7536                           
  7537                           ; BSR set to: 0
  7538   004AD8  0012               	return		;funcret
  7539   004ADA                     __end_of_labs:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _floorf *****************
  7543 ;; Defined at:
  7544 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  x               4   68[BANK0 ] float 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  u               4   84[BANK0 ] struct .
  7549 ;;  m               4   78[BANK0 ] unsigned long 
  7550 ;;  e               2   82[BANK0 ] int 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  4   68[BANK0 ] float 
  7553 ;; Registers used:
  7554 ;;		wreg, status,2, status,0
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7560 ;;      Params:         0       4       0       0       0       0       0
  7561 ;;      Locals:         0      10       0       0       0       0       0
  7562 ;;      Temps:          0       6       0       0       0       0       0
  7563 ;;      Totals:         0      20       0       0       0       0       0
  7564 ;;Total ram usage:       20 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 3
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_efgtoa
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text30
  7575   003282                     __ptext30:
  7576                           	callstack 0
  7577   003282                     _floorf:
  7578                           	callstack 19
  7579   003282  C001  F0B4         	movff	floorf@F526,floorf@u
  7580   003286  C002  F0B5         	movff	floorf@F526+1,floorf@u+1
  7581   00328A  C003  F0B6         	movff	floorf@F526+2,floorf@u+2
  7582   00328E  C004  F0B7         	movff	floorf@F526+3,floorf@u+3
  7583   003292  C0A4  F0B4         	movff	floorf@x,floorf@u
  7584   003296  C0A5  F0B5         	movff	floorf@x+1,floorf@u+1
  7585   00329A  C0A6  F0B6         	movff	floorf@x+2,floorf@u+2
  7586   00329E  C0A7  F0B7         	movff	floorf@x+3,floorf@u+3
  7587   0032A2  0E81               	movlw	129
  7588   0032A4  0100               	movlb	0	; () banked
  7589   0032A6  6FA8               	movwf	??_floorf& (0+255),b
  7590   0032A8  0EFF               	movlw	255
  7591   0032AA  6FA9               	movwf	(??_floorf+1)& (0+255),b
  7592   0032AC  C0B4  F0AA         	movff	floorf@u,??_floorf+2
  7593   0032B0  C0B5  F0AB         	movff	floorf@u+1,??_floorf+3
  7594   0032B4  C0B6  F0AC         	movff	floorf@u+2,??_floorf+4
  7595   0032B8  C0B7  F0AD         	movff	floorf@u+3,??_floorf+5
  7596   0032BC  0E18               	movlw	24
  7597   0032BE  EF66  F019         	goto	u8150
  7598   0032C2                     u8155:
  7599   0032C2  90D8               	bcf	status,0,c
  7600   0032C4  33AD               	rrcf	(??_floorf+5)& (0+255),f,b
  7601   0032C6  33AC               	rrcf	(??_floorf+4)& (0+255),f,b
  7602   0032C8  33AB               	rrcf	(??_floorf+3)& (0+255),f,b
  7603   0032CA  33AA               	rrcf	(??_floorf+2)& (0+255),f,b
  7604   0032CC                     u8150:
  7605   0032CC  2EE8               	decfsz	wreg,f,c
  7606   0032CE  EF61  F019         	goto	u8155
  7607   0032D2  51AA               	movf	(??_floorf+2)& (0+255),w,b
  7608   0032D4  25A8               	addwf	??_floorf& (0+255),w,b
  7609   0032D6  6FB2               	movwf	floorf@e& (0+255),b
  7610   0032D8  0E00               	movlw	0
  7611   0032DA  21A9               	addwfc	(??_floorf+1)& (0+255),w,b
  7612   0032DC  6FB3               	movwf	(floorf@e+1)& (0+255),b
  7613   0032DE  BFB3               	btfsc	(floorf@e+1)& (0+255),7,b
  7614   0032E0  EF7B  F019         	goto	u8161
  7615   0032E4  51B3               	movf	(floorf@e+1)& (0+255),w,b
  7616   0032E6  E109               	bnz	u8160
  7617   0032E8  0E17               	movlw	23
  7618   0032EA  5DB2               	subwf	floorf@e& (0+255),w,b
  7619   0032EC  A0D8               	btfss	status,0,c
  7620   0032EE  EF7B  F019         	goto	u8161
  7621   0032F2  EF7D  F019         	goto	u8160
  7622   0032F6                     u8161:
  7623   0032F6  EF87  F019         	goto	l6704
  7624   0032FA                     u8160:
  7625   0032FA                     l6702:
  7626                           
  7627                           ; BSR set to: 0
  7628   0032FA  C0A4  F0A4         	movff	floorf@x,?_floorf
  7629   0032FE  C0A5  F0A5         	movff	floorf@x+1,?_floorf+1
  7630   003302  C0A6  F0A6         	movff	floorf@x+2,?_floorf+2
  7631   003306  C0A7  F0A7         	movff	floorf@x+3,?_floorf+3
  7632   00330A  EF4B  F01A         	goto	l1435
  7633   00330E                     l6704:
  7634                           
  7635                           ; BSR set to: 0
  7636   00330E  BFB3               	btfsc	(floorf@e+1)& (0+255),7,b
  7637   003310  EF8C  F019         	goto	u8171
  7638   003314  EF8E  F019         	goto	u8170
  7639   003318                     u8171:
  7640   003318  EFFF  F019         	goto	l6714
  7641   00331C                     u8170:
  7642   00331C                     
  7643                           ; BSR set to: 0
  7644   00331C  C0B2  F0A8         	movff	floorf@e,??_floorf
  7645   003320  0EFF               	movlw	255
  7646   003322  6FA9               	movwf	(??_floorf+1)& (0+255),b
  7647   003324  0EFF               	movlw	255
  7648   003326  6FAA               	movwf	(??_floorf+2)& (0+255),b
  7649   003328  0E7F               	movlw	127
  7650   00332A  6FAB               	movwf	(??_floorf+3)& (0+255),b
  7651   00332C  0E00               	movlw	0
  7652   00332E  6FAC               	movwf	(??_floorf+4)& (0+255),b
  7653   003330                     u8185:
  7654   003330  67A8               	tstfsz	??_floorf& (0+255),b
  7655   003332  EF9D  F019         	goto	u8186
  7656   003336  EFA5  F019         	goto	u8187
  7657   00333A                     u8186:
  7658   00333A  35AC               	rlcf	(??_floorf+4)& (0+255),w,b
  7659   00333C  33AC               	rrcf	(??_floorf+4)& (0+255),f,b
  7660   00333E  33AB               	rrcf	(??_floorf+3)& (0+255),f,b
  7661   003340  33AA               	rrcf	(??_floorf+2)& (0+255),f,b
  7662   003342  33A9               	rrcf	(??_floorf+1)& (0+255),f,b
  7663   003344  2FA8               	decfsz	??_floorf& (0+255),f,b
  7664   003346  EF98  F019         	goto	u8185
  7665   00334A                     u8187:
  7666   00334A  C0A9  F0AE         	movff	??_floorf+1,floorf@m
  7667   00334E  C0AA  F0AF         	movff	??_floorf+2,floorf@m+1
  7668   003352  C0AB  F0B0         	movff	??_floorf+3,floorf@m+2
  7669   003356  C0AC  F0B1         	movff	??_floorf+4,floorf@m+3
  7670   00335A  0100               	movlb	0	; () banked
  7671   00335C  51AE               	movf	floorf@m& (0+255),w,b
  7672   00335E  15B4               	andwf	floorf@u& (0+255),w,b
  7673   003360  6FA8               	movwf	??_floorf& (0+255),b
  7674   003362  51AF               	movf	(floorf@m+1)& (0+255),w,b
  7675   003364  15B5               	andwf	(floorf@u+1)& (0+255),w,b
  7676   003366  6FA9               	movwf	(??_floorf+1)& (0+255),b
  7677   003368  51B0               	movf	(floorf@m+2)& (0+255),w,b
  7678   00336A  15B6               	andwf	(floorf@u+2)& (0+255),w,b
  7679   00336C  6FAA               	movwf	(??_floorf+2)& (0+255),b
  7680   00336E  51B1               	movf	(floorf@m+3)& (0+255),w,b
  7681   003370  15B7               	andwf	(floorf@u+3)& (0+255),w,b
  7682   003372  6FAB               	movwf	(??_floorf+3)& (0+255),b
  7683   003374  51A8               	movf	??_floorf& (0+255),w,b
  7684   003376  11A9               	iorwf	(??_floorf+1)& (0+255),w,b
  7685   003378  11AA               	iorwf	(??_floorf+2)& (0+255),w,b
  7686   00337A  11AB               	iorwf	(??_floorf+3)& (0+255),w,b
  7687   00337C  A4D8               	btfss	status,2,c
  7688   00337E  EFC3  F019         	goto	u8191
  7689   003382  EFC5  F019         	goto	u8190
  7690   003386                     u8191:
  7691   003386  EFC7  F019         	goto	l6710
  7692   00338A                     u8190:
  7693   00338A  EF7D  F019         	goto	l6702
  7694   00338E                     l6710:
  7695                           
  7696                           ; BSR set to: 0
  7697   00338E  C0B4  F0A8         	movff	floorf@u,??_floorf
  7698   003392  C0B5  F0A9         	movff	floorf@u+1,??_floorf+1
  7699   003396  C0B6  F0AA         	movff	floorf@u+2,??_floorf+2
  7700   00339A  C0B7  F0AB         	movff	floorf@u+3,??_floorf+3
  7701   00339E  0E20               	movlw	32
  7702   0033A0  EFD7  F019         	goto	u8200
  7703   0033A4                     u8205:
  7704   0033A4  90D8               	bcf	status,0,c
  7705   0033A6  33AB               	rrcf	(??_floorf+3)& (0+255),f,b
  7706   0033A8  33AA               	rrcf	(??_floorf+2)& (0+255),f,b
  7707   0033AA  33A9               	rrcf	(??_floorf+1)& (0+255),f,b
  7708   0033AC  33A8               	rrcf	??_floorf& (0+255),f,b
  7709   0033AE                     u8200:
  7710   0033AE  2EE8               	decfsz	wreg,f,c
  7711   0033B0  EFD2  F019         	goto	u8205
  7712   0033B4  51A8               	movf	??_floorf& (0+255),w,b
  7713   0033B6  11A9               	iorwf	(??_floorf+1)& (0+255),w,b
  7714   0033B8  11AA               	iorwf	(??_floorf+2)& (0+255),w,b
  7715   0033BA  11AB               	iorwf	(??_floorf+3)& (0+255),w,b
  7716   0033BC  B4D8               	btfsc	status,2,c
  7717   0033BE  EFE3  F019         	goto	u8211
  7718   0033C2  EFE5  F019         	goto	u8210
  7719   0033C6                     u8211:
  7720   0033C6  EFED  F019         	goto	l1438
  7721   0033CA                     u8210:
  7722   0033CA                     
  7723                           ; BSR set to: 0
  7724   0033CA  51AE               	movf	floorf@m& (0+255),w,b
  7725   0033CC  27B4               	addwf	floorf@u& (0+255),f,b
  7726   0033CE  51AF               	movf	(floorf@m+1)& (0+255),w,b
  7727   0033D0  23B5               	addwfc	(floorf@u+1)& (0+255),f,b
  7728   0033D2  51B0               	movf	(floorf@m+2)& (0+255),w,b
  7729   0033D4  23B6               	addwfc	(floorf@u+2)& (0+255),f,b
  7730   0033D6  51B1               	movf	(floorf@m+3)& (0+255),w,b
  7731   0033D8  23B7               	addwfc	(floorf@u+3)& (0+255),f,b
  7732   0033DA                     l1438:
  7733                           
  7734                           ; BSR set to: 0
  7735   0033DA  1DAE               	comf	floorf@m& (0+255),w,b
  7736   0033DC  6FA8               	movwf	??_floorf& (0+255),b
  7737   0033DE  1DAF               	comf	(floorf@m+1)& (0+255),w,b
  7738   0033E0  6FA9               	movwf	(??_floorf+1)& (0+255),b
  7739   0033E2  1DB0               	comf	(floorf@m+2)& (0+255),w,b
  7740   0033E4  6FAA               	movwf	(??_floorf+2)& (0+255),b
  7741   0033E6  1DB1               	comf	(floorf@m+3)& (0+255),w,b
  7742   0033E8  6FAB               	movwf	(??_floorf+3)& (0+255),b
  7743   0033EA  51A8               	movf	??_floorf& (0+255),w,b
  7744   0033EC  17B4               	andwf	floorf@u& (0+255),f,b
  7745   0033EE  51A9               	movf	(??_floorf+1)& (0+255),w,b
  7746   0033F0  17B5               	andwf	(floorf@u+1)& (0+255),f,b
  7747   0033F2  51AA               	movf	(??_floorf+2)& (0+255),w,b
  7748   0033F4  17B6               	andwf	(floorf@u+2)& (0+255),f,b
  7749   0033F6  51AB               	movf	(??_floorf+3)& (0+255),w,b
  7750   0033F8  17B7               	andwf	(floorf@u+3)& (0+255),f,b
  7751   0033FA  EF43  F01A         	goto	l6722
  7752   0033FE                     l6714:
  7753                           
  7754                           ; BSR set to: 0
  7755   0033FE  C0B4  F0A8         	movff	floorf@u,??_floorf
  7756   003402  C0B5  F0A9         	movff	floorf@u+1,??_floorf+1
  7757   003406  C0B6  F0AA         	movff	floorf@u+2,??_floorf+2
  7758   00340A  C0B7  F0AB         	movff	floorf@u+3,??_floorf+3
  7759   00340E  0E20               	movlw	32
  7760   003410  EF0F  F01A         	goto	u8220
  7761   003414                     u8225:
  7762   003414  90D8               	bcf	status,0,c
  7763   003416  33AB               	rrcf	(??_floorf+3)& (0+255),f,b
  7764   003418  33AA               	rrcf	(??_floorf+2)& (0+255),f,b
  7765   00341A  33A9               	rrcf	(??_floorf+1)& (0+255),f,b
  7766   00341C  33A8               	rrcf	??_floorf& (0+255),f,b
  7767   00341E                     u8220:
  7768   00341E  2EE8               	decfsz	wreg,f,c
  7769   003420  EF0A  F01A         	goto	u8225
  7770   003424  51A8               	movf	??_floorf& (0+255),w,b
  7771   003426  11A9               	iorwf	(??_floorf+1)& (0+255),w,b
  7772   003428  11AA               	iorwf	(??_floorf+2)& (0+255),w,b
  7773   00342A  11AB               	iorwf	(??_floorf+3)& (0+255),w,b
  7774   00342C  A4D8               	btfss	status,2,c
  7775   00342E  EF1B  F01A         	goto	u8231
  7776   003432  EF1D  F01A         	goto	u8230
  7777   003436                     u8231:
  7778   003436  EF27  F01A         	goto	l6718
  7779   00343A                     u8230:
  7780   00343A                     
  7781                           ; BSR set to: 0
  7782   00343A  0E00               	movlw	0
  7783   00343C  6FB4               	movwf	floorf@u& (0+255),b
  7784   00343E  0E00               	movlw	0
  7785   003440  6FB5               	movwf	(floorf@u+1)& (0+255),b
  7786   003442  0E00               	movlw	0
  7787   003444  6FB6               	movwf	(floorf@u+2)& (0+255),b
  7788   003446  0E00               	movlw	0
  7789   003448  6FB7               	movwf	(floorf@u+3)& (0+255),b
  7790   00344A  EF43  F01A         	goto	l6722
  7791   00344E                     l6718:
  7792                           
  7793                           ; BSR set to: 0
  7794   00344E  90D8               	bcf	status,0,c
  7795   003450  35B4               	rlcf	floorf@u& (0+255),w,b
  7796   003452  6FA8               	movwf	??_floorf& (0+255),b
  7797   003454  35B5               	rlcf	(floorf@u+1)& (0+255),w,b
  7798   003456  6FA9               	movwf	(??_floorf+1)& (0+255),b
  7799   003458  35B6               	rlcf	(floorf@u+2)& (0+255),w,b
  7800   00345A  6FAA               	movwf	(??_floorf+2)& (0+255),b
  7801   00345C  35B7               	rlcf	(floorf@u+3)& (0+255),w,b
  7802   00345E  6FAB               	movwf	(??_floorf+3)& (0+255),b
  7803   003460  51A8               	movf	??_floorf& (0+255),w,b
  7804   003462  11A9               	iorwf	(??_floorf+1)& (0+255),w,b
  7805   003464  11AA               	iorwf	(??_floorf+2)& (0+255),w,b
  7806   003466  11AB               	iorwf	(??_floorf+3)& (0+255),w,b
  7807   003468  B4D8               	btfsc	status,2,c
  7808   00346A  EF39  F01A         	goto	u8241
  7809   00346E  EF3B  F01A         	goto	u8240
  7810   003472                     u8241:
  7811   003472  EF43  F01A         	goto	l6722
  7812   003476                     u8240:
  7813   003476                     
  7814                           ; BSR set to: 0
  7815   003476  0E00               	movlw	0
  7816   003478  6FB4               	movwf	floorf@u& (0+255),b
  7817   00347A  0E00               	movlw	0
  7818   00347C  6FB5               	movwf	(floorf@u+1)& (0+255),b
  7819   00347E  0E80               	movlw	128
  7820   003480  6FB6               	movwf	(floorf@u+2)& (0+255),b
  7821   003482  0EBF               	movlw	191
  7822   003484  6FB7               	movwf	(floorf@u+3)& (0+255),b
  7823   003486                     l6722:
  7824                           
  7825                           ; BSR set to: 0
  7826   003486  C0B4  F0A4         	movff	floorf@u,?_floorf
  7827   00348A  C0B5  F0A5         	movff	floorf@u+1,?_floorf+1
  7828   00348E  C0B6  F0A6         	movff	floorf@u+2,?_floorf+2
  7829   003492  C0B7  F0A7         	movff	floorf@u+3,?_floorf+3
  7830   003496                     l1435:
  7831                           
  7832                           ; BSR set to: 0
  7833   003496  0012               	return		;funcret
  7834   003498                     __end_of_floorf:
  7835                           	callstack 0
  7836                           
  7837 ;; *************** function ___fpclassifyf *****************
  7838 ;; Defined at:
  7839 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  x               4    4[BANK0 ] float 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  u               4   14[BANK0 ] struct .
  7844 ;;  e               2   12[BANK0 ] int 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  2    4[BANK0 ] int 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2, status,0
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7854 ;;      Params:         0       4       0       0       0       0       0
  7855 ;;      Locals:         0       6       0       0       0       0       0
  7856 ;;      Temps:          0       4       0       0       0       0       0
  7857 ;;      Totals:         0      14       0       0       0       0       0
  7858 ;;Total ram usage:       14 bytes
  7859 ;; Hardware stack levels used: 1
  7860 ;; Hardware stack levels required when called: 3
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_efgtoa
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text31
  7869   0041CE                     __ptext31:
  7870                           	callstack 0
  7871   0041CE                     ___fpclassifyf:
  7872                           	callstack 19
  7873   0041CE  C005  F06E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7874   0041D2  C006  F06F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7875   0041D6  C007  F070         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7876   0041DA  C008  F071         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7877   0041DE  C064  F06E         	movff	___fpclassifyf@x,___fpclassifyf@u
  7878   0041E2  C065  F06F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7879   0041E6  C066  F070         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7880   0041EA  C067  F071         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7881   0041EE  C06E  F068         	movff	___fpclassifyf@u,??___fpclassifyf
  7882   0041F2  C06F  F069         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7883   0041F6  C070  F06A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7884   0041FA  C071  F06B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7885   0041FE  0E18               	movlw	24
  7886   004200  EF08  F021         	goto	u8060
  7887   004204                     u8065:
  7888   004204  0100               	movlb	0	; () banked
  7889   004206  90D8               	bcf	status,0,c
  7890   004208  336B               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  7891   00420A  336A               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  7892   00420C  3369               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  7893   00420E  3368               	rrcf	??___fpclassifyf& (0+255),f,b
  7894   004210                     u8060:
  7895   004210  2EE8               	decfsz	wreg,f,c
  7896   004212  EF02  F021         	goto	u8065
  7897   004216  5168               	movf	??___fpclassifyf& (0+255),w,b
  7898   004218  6F6C               	movwf	___fpclassifyf@e& (0+255),b
  7899   00421A  6B6D               	clrf	(___fpclassifyf@e+1)& (0+255),b
  7900   00421C  516C               	movf	___fpclassifyf@e& (0+255),w,b
  7901   00421E  116D               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  7902   004220  A4D8               	btfss	status,2,c
  7903   004222  EF15  F021         	goto	u8071
  7904   004226  EF17  F021         	goto	u8070
  7905   00422A                     u8071:
  7906   00422A  EF37  F021         	goto	l6680
  7907   00422E                     u8070:
  7908   00422E                     
  7909                           ; BSR set to: 0
  7910   00422E  90D8               	bcf	status,0,c
  7911   004230  356E               	rlcf	___fpclassifyf@u& (0+255),w,b
  7912   004232  6F68               	movwf	??___fpclassifyf& (0+255),b
  7913   004234  356F               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  7914   004236  6F69               	movwf	(??___fpclassifyf+1)& (0+255),b
  7915   004238  3570               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  7916   00423A  6F6A               	movwf	(??___fpclassifyf+2)& (0+255),b
  7917   00423C  3571               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  7918   00423E  6F6B               	movwf	(??___fpclassifyf+3)& (0+255),b
  7919   004240  5168               	movf	??___fpclassifyf& (0+255),w,b
  7920   004242  1169               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  7921   004244  116A               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  7922   004246  116B               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  7923   004248  A4D8               	btfss	status,2,c
  7924   00424A  EF29  F021         	goto	u8081
  7925   00424E  EF2B  F021         	goto	u8080
  7926   004252                     u8081:
  7927   004252  EF31  F021         	goto	l6676
  7928   004256                     u8080:
  7929   004256                     
  7930                           ; BSR set to: 0
  7931   004256  0E00               	movlw	0
  7932   004258  6F65               	movwf	(?___fpclassifyf+1)& (0+255),b
  7933   00425A  0E02               	movlw	2
  7934   00425C  6F64               	movwf	?___fpclassifyf& (0+255),b
  7935   00425E  EF66  F021         	goto	l1421
  7936   004262                     l6676:
  7937                           
  7938                           ; BSR set to: 0
  7939   004262  0E00               	movlw	0
  7940   004264  6F65               	movwf	(?___fpclassifyf+1)& (0+255),b
  7941   004266  0E03               	movlw	3
  7942   004268  6F64               	movwf	?___fpclassifyf& (0+255),b
  7943   00426A  EF66  F021         	goto	l1421
  7944   00426E                     l6680:
  7945                           
  7946                           ; BSR set to: 0
  7947   00426E  296C               	incf	___fpclassifyf@e& (0+255),w,b
  7948   004270  116D               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  7949   004272  A4D8               	btfss	status,2,c
  7950   004274  EF3E  F021         	goto	u8091
  7951   004278  EF40  F021         	goto	u8090
  7952   00427C                     u8091:
  7953   00427C  EF62  F021         	goto	l6686
  7954   004280                     u8090:
  7955   004280                     
  7956                           ; BSR set to: 0
  7957   004280  C06E  F068         	movff	___fpclassifyf@u,??___fpclassifyf
  7958   004284  C06F  F069         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7959   004288  C070  F06A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7960   00428C  C071  F06B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7961   004290  0E09               	movlw	9
  7962   004292                     u8105:
  7963   004292  90D8               	bcf	status,0,c
  7964   004294  3768               	rlcf	??___fpclassifyf& (0+255),f,b
  7965   004296  3769               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  7966   004298  376A               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  7967   00429A  376B               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  7968   00429C  2EE8               	decfsz	wreg,f,c
  7969   00429E  EF49  F021         	goto	u8105
  7970   0042A2  5168               	movf	??___fpclassifyf& (0+255),w,b
  7971   0042A4  1169               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  7972   0042A6  116A               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  7973   0042A8  116B               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  7974   0042AA  B4D8               	btfsc	status,2,c
  7975   0042AC  EF5A  F021         	goto	u8111
  7976   0042B0  EF5D  F021         	goto	u8110
  7977   0042B4                     u8111:
  7978   0042B4  0E01               	movlw	1
  7979   0042B6  EF5E  F021         	goto	u8120
  7980   0042BA                     u8110:
  7981   0042BA  0E00               	movlw	0
  7982   0042BC                     u8120:
  7983   0042BC  6F64               	movwf	?___fpclassifyf& (0+255),b
  7984   0042BE  6B65               	clrf	(?___fpclassifyf+1)& (0+255),b
  7985   0042C0  EF66  F021         	goto	l1421
  7986   0042C4                     l6686:
  7987                           
  7988                           ; BSR set to: 0
  7989   0042C4  0E00               	movlw	0
  7990   0042C6  6F65               	movwf	(?___fpclassifyf+1)& (0+255),b
  7991   0042C8  0E04               	movlw	4
  7992   0042CA  6F64               	movwf	?___fpclassifyf& (0+255),b
  7993   0042CC                     l1421:
  7994                           
  7995                           ; BSR set to: 0
  7996   0042CC  0012               	return		;funcret
  7997   0042CE                     __end_of___fpclassifyf:
  7998                           	callstack 0
  7999                           
  8000 ;; *************** function ___fltol *****************
  8001 ;; Defined at:
  8002 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  f1              4    4[BANK0 ] int 
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;  exp1            1   13[BANK0 ] unsigned char 
  8007 ;;  sign1           1   12[BANK0 ] unsigned char 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  4    4[BANK0 ] long 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2, status,0
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8017 ;;      Params:         0       4       0       0       0       0       0
  8018 ;;      Locals:         0       2       0       0       0       0       0
  8019 ;;      Temps:          0       4       0       0       0       0       0
  8020 ;;      Totals:         0      10       0       0       0       0       0
  8021 ;;Total ram usage:       10 bytes
  8022 ;; Hardware stack levels used: 1
  8023 ;; Hardware stack levels required when called: 3
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_PWM
  8028 ;;		_PWMI
  8029 ;;		_PWMD
  8030 ;;		_Data2LCD
  8031 ;;		_efgtoa
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text32
  8036   003EBE                     __ptext32:
  8037                           	callstack 0
  8038   003EBE                     ___fltol:
  8039                           	callstack 24
  8040   003EBE  0100               	movlb	0	; () banked
  8041   003EC0  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8042   003EC2  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8043   003EC4  6F6D               	movwf	___fltol@exp1& (0+255),b
  8044   003EC6  516D               	movf	___fltol@exp1& (0+255),w,b
  8045   003EC8  A4D8               	btfss	status,2,c
  8046   003ECA  EF69  F01F         	goto	u7961
  8047   003ECE  EF6B  F01F         	goto	u7960
  8048   003ED2                     u7961:
  8049   003ED2  EF75  F01F         	goto	l6612
  8050   003ED6                     u7960:
  8051   003ED6                     l6608:
  8052                           
  8053                           ; BSR set to: 0
  8054   003ED6  0E00               	movlw	0
  8055   003ED8  6F64               	movwf	?___fltol& (0+255),b
  8056   003EDA  0E00               	movlw	0
  8057   003EDC  6F65               	movwf	(?___fltol+1)& (0+255),b
  8058   003EDE  0E00               	movlw	0
  8059   003EE0  6F66               	movwf	(?___fltol+2)& (0+255),b
  8060   003EE2  0E00               	movlw	0
  8061   003EE4  6F67               	movwf	(?___fltol+3)& (0+255),b
  8062   003EE6  EFE2  F01F         	goto	l884
  8063   003EEA                     l6612:
  8064                           
  8065                           ; BSR set to: 0
  8066   003EEA  C064  F068         	movff	___fltol@f1,??___fltol
  8067   003EEE  C065  F069         	movff	___fltol@f1+1,??___fltol+1
  8068   003EF2  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
  8069   003EF6  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
  8070   003EFA  0E20               	movlw	32
  8071   003EFC  EF85  F01F         	goto	u7970
  8072   003F00                     u7975:
  8073   003F00  90D8               	bcf	status,0,c
  8074   003F02  336B               	rrcf	(??___fltol+3)& (0+255),f,b
  8075   003F04  336A               	rrcf	(??___fltol+2)& (0+255),f,b
  8076   003F06  3369               	rrcf	(??___fltol+1)& (0+255),f,b
  8077   003F08  3368               	rrcf	??___fltol& (0+255),f,b
  8078   003F0A                     u7970:
  8079   003F0A  2EE8               	decfsz	wreg,f,c
  8080   003F0C  EF80  F01F         	goto	u7975
  8081   003F10  5168               	movf	??___fltol& (0+255),w,b
  8082   003F12  6F6C               	movwf	___fltol@sign1& (0+255),b
  8083   003F14                     
  8084                           ; BSR set to: 0
  8085   003F14  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
  8086   003F16                     
  8087                           ; BSR set to: 0
  8088   003F16  0EFF               	movlw	255
  8089   003F18  1764               	andwf	___fltol@f1& (0+255),f,b
  8090   003F1A  0EFF               	movlw	255
  8091   003F1C  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
  8092   003F1E  0EFF               	movlw	255
  8093   003F20  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
  8094   003F22  0E00               	movlw	0
  8095   003F24  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
  8096   003F26                     
  8097                           ; BSR set to: 0
  8098   003F26  0E96               	movlw	150
  8099   003F28  5F6D               	subwf	___fltol@exp1& (0+255),f,b
  8100   003F2A                     
  8101                           ; BSR set to: 0
  8102   003F2A  BF6D               	btfsc	___fltol@exp1& (0+255),7,b
  8103   003F2C  EF9C  F01F         	goto	u7980
  8104   003F30  EF9A  F01F         	goto	u7981
  8105   003F34                     u7981:
  8106   003F34  EFB2  F01F         	goto	l6632
  8107   003F38                     u7980:
  8108   003F38                     
  8109                           ; BSR set to: 0
  8110   003F38  516D               	movf	___fltol@exp1& (0+255),w,b
  8111   003F3A  0A80               	xorlw	128
  8112   003F3C  0F97               	addlw	151
  8113   003F3E  B0D8               	btfsc	status,0,c
  8114   003F40  EFA4  F01F         	goto	u7991
  8115   003F44  EFA6  F01F         	goto	u7990
  8116   003F48                     u7991:
  8117   003F48  EFA8  F01F         	goto	l6628
  8118   003F4C                     u7990:
  8119   003F4C  EF6B  F01F         	goto	l6608
  8120   003F50                     l6628:
  8121                           
  8122                           ; BSR set to: 0
  8123   003F50  90D8               	bcf	status,0,c
  8124   003F52  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8125   003F54  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8126   003F56  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8127   003F58  3364               	rrcf	___fltol@f1& (0+255),f,b
  8128   003F5A                     
  8129                           ; BSR set to: 0
  8130   003F5A  3F6D               	incfsz	___fltol@exp1& (0+255),f,b
  8131   003F5C  EFA8  F01F         	goto	l6628
  8132   003F60  EFCA  F01F         	goto	l6642
  8133   003F64                     l6632:
  8134                           
  8135                           ; BSR set to: 0
  8136   003F64  0E1F               	movlw	31
  8137   003F66  656D               	cpfsgt	___fltol@exp1& (0+255),b
  8138   003F68  EFB8  F01F         	goto	u8001
  8139   003F6C  EFBA  F01F         	goto	u8000
  8140   003F70                     u8001:
  8141   003F70  EFC2  F01F         	goto	l6640
  8142   003F74                     u8000:
  8143   003F74  EF6B  F01F         	goto	l6608
  8144   003F78                     l6638:
  8145                           
  8146                           ; BSR set to: 0
  8147   003F78  90D8               	bcf	status,0,c
  8148   003F7A  3764               	rlcf	___fltol@f1& (0+255),f,b
  8149   003F7C  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8150   003F7E  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8151   003F80  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8152   003F82  076D               	decf	___fltol@exp1& (0+255),f,b
  8153   003F84                     l6640:
  8154                           
  8155                           ; BSR set to: 0
  8156   003F84  516D               	movf	___fltol@exp1& (0+255),w,b
  8157   003F86  A4D8               	btfss	status,2,c
  8158   003F88  EFC8  F01F         	goto	u8011
  8159   003F8C  EFCA  F01F         	goto	u8010
  8160   003F90                     u8011:
  8161   003F90  EFBC  F01F         	goto	l6638
  8162   003F94                     u8010:
  8163   003F94                     l6642:
  8164                           
  8165                           ; BSR set to: 0
  8166   003F94  516C               	movf	___fltol@sign1& (0+255),w,b
  8167   003F96  B4D8               	btfsc	status,2,c
  8168   003F98  EFD0  F01F         	goto	u8021
  8169   003F9C  EFD2  F01F         	goto	u8020
  8170   003FA0                     u8021:
  8171   003FA0  EFDA  F01F         	goto	l6646
  8172   003FA4                     u8020:
  8173   003FA4                     
  8174                           ; BSR set to: 0
  8175   003FA4  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
  8176   003FA6  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
  8177   003FA8  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
  8178   003FAA  6D64               	negf	___fltol@f1& (0+255),b
  8179   003FAC  0E00               	movlw	0
  8180   003FAE  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8181   003FB0  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8182   003FB2  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8183   003FB4                     l6646:
  8184                           
  8185                           ; BSR set to: 0
  8186   003FB4  C064  F064         	movff	___fltol@f1,?___fltol
  8187   003FB8  C065  F065         	movff	___fltol@f1+1,?___fltol+1
  8188   003FBC  C066  F066         	movff	___fltol@f1+2,?___fltol+2
  8189   003FC0  C067  F067         	movff	___fltol@f1+3,?___fltol+3
  8190   003FC4                     l884:
  8191                           
  8192                           ; BSR set to: 0
  8193   003FC4  0012               	return		;funcret
  8194   003FC6                     __end_of___fltol:
  8195                           	callstack 0
  8196                           
  8197 ;; *************** function ___flsub *****************
  8198 ;; Defined at:
  8199 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  b               4   43[BANK0 ] long 
  8202 ;;  a               4   47[BANK0 ] long 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  4   43[BANK0 ] long 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8214 ;;      Params:         0       8       0       0       0       0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0
  8217 ;;      Totals:         0       8       0       0       0       0       0
  8218 ;;Total ram usage:        8 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 4
  8221 ;; This function calls:
  8222 ;;		___fladd
  8223 ;; This function is called by:
  8224 ;;		_efgtoa
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text33
  8229   004C20                     __ptext33:
  8230                           	callstack 0
  8231   004C20                     ___flsub:
  8232                           	callstack 18
  8233   004C20  0E00               	movlw	0
  8234   004C22  0100               	movlb	0	; () banked
  8235   004C24  1B8F               	xorwf	___flsub@a& (0+255),f,b
  8236   004C26  0E00               	movlw	0
  8237   004C28  1B90               	xorwf	(___flsub@a+1)& (0+255),f,b
  8238   004C2A  0E00               	movlw	0
  8239   004C2C  1B91               	xorwf	(___flsub@a+2)& (0+255),f,b
  8240   004C2E  0E80               	movlw	128
  8241   004C30  1B92               	xorwf	(___flsub@a+3)& (0+255),f,b
  8242   004C32                     
  8243                           ; BSR set to: 0
  8244   004C32  C08B  F064         	movff	___flsub@b,___fladd@b
  8245   004C36  C08C  F065         	movff	___flsub@b+1,___fladd@b+1
  8246   004C3A  C08D  F066         	movff	___flsub@b+2,___fladd@b+2
  8247   004C3E  C08E  F067         	movff	___flsub@b+3,___fladd@b+3
  8248   004C42  C08F  F068         	movff	___flsub@a,___fladd@a
  8249   004C46  C090  F069         	movff	___flsub@a+1,___fladd@a+1
  8250   004C4A  C091  F06A         	movff	___flsub@a+2,___fladd@a+2
  8251   004C4E  C092  F06B         	movff	___flsub@a+3,___fladd@a+3
  8252   004C52  ECEB  F00A         	call	___fladd	;wreg free
  8253   004C56  C064  F08B         	movff	?___fladd,?___flsub
  8254   004C5A  C065  F08C         	movff	?___fladd+1,?___flsub+1
  8255   004C5E  C066  F08D         	movff	?___fladd+2,?___flsub+2
  8256   004C62  C067  F08E         	movff	?___fladd+3,?___flsub+3
  8257   004C66  0012               	return		;funcret
  8258   004C68                     __end_of___flsub:
  8259                           	callstack 0
  8260                           
  8261 ;; *************** function ___fladd *****************
  8262 ;; Defined at:
  8263 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  b               4    4[BANK0 ] long 
  8266 ;;  a               4    8[BANK0 ] long 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  grs             1   19[BANK0 ] unsigned char 
  8269 ;;  bexp            1   18[BANK0 ] unsigned char 
  8270 ;;  aexp            1   17[BANK0 ] unsigned char 
  8271 ;;  signs           1   16[BANK0 ] unsigned char 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  4    4[BANK0 ] unsigned char 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8281 ;;      Params:         0       8       0       0       0       0       0
  8282 ;;      Locals:         0       4       0       0       0       0       0
  8283 ;;      Temps:          0       4       0       0       0       0       0
  8284 ;;      Totals:         0      16       0       0       0       0       0
  8285 ;;Total ram usage:       16 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; Hardware stack levels required when called: 3
  8288 ;; This function calls:
  8289 ;;		Nothing
  8290 ;; This function is called by:
  8291 ;;		___flsub
  8292 ;;		_efgtoa
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text34
  8297   0015D6                     __ptext34:
  8298                           	callstack 0
  8299   0015D6                     ___fladd:
  8300                           	callstack 18
  8301   0015D6  0100               	movlb	0	; () banked
  8302   0015D8  5167               	movf	(___fladd@b+3)& (0+255),w,b
  8303   0015DA  0B80               	andlw	128
  8304   0015DC  6F70               	movwf	___fladd@signs& (0+255),b
  8305   0015DE  5167               	movf	(___fladd@b+3)& (0+255),w,b
  8306   0015E0  2567               	addwf	(___fladd@b+3)& (0+255),w,b
  8307   0015E2  6F72               	movwf	___fladd@bexp& (0+255),b
  8308   0015E4                     
  8309                           ; BSR set to: 0
  8310   0015E4  AF66               	btfss	(___fladd@b+2)& (0+255),7,b
  8311   0015E6  EFF7  F00A         	goto	u6931
  8312   0015EA  EFF9  F00A         	goto	u6930
  8313   0015EE                     u6931:
  8314   0015EE  EFFA  F00A         	goto	l5996
  8315   0015F2                     u6930:
  8316   0015F2                     
  8317                           ; BSR set to: 0
  8318   0015F2  8172               	bsf	___fladd@bexp& (0+255),0,b
  8319   0015F4                     l5996:
  8320                           
  8321                           ; BSR set to: 0
  8322   0015F4  5172               	movf	___fladd@bexp& (0+255),w,b
  8323   0015F6  B4D8               	btfsc	status,2,c
  8324   0015F8  EF00  F00B         	goto	u6941
  8325   0015FC  EF02  F00B         	goto	u6940
  8326   001600                     u6941:
  8327   001600  EF17  F00B         	goto	l6006
  8328   001604                     u6940:
  8329   001604                     
  8330                           ; BSR set to: 0
  8331   001604  2972               	incf	___fladd@bexp& (0+255),w,b
  8332   001606  A4D8               	btfss	status,2,c
  8333   001608  EF08  F00B         	goto	u6951
  8334   00160C  EF0A  F00B         	goto	u6950
  8335   001610                     u6951:
  8336   001610  EF12  F00B         	goto	l6002
  8337   001614                     u6950:
  8338   001614                     
  8339                           ; BSR set to: 0
  8340   001614  0E00               	movlw	0
  8341   001616  6F64               	movwf	___fladd@b& (0+255),b
  8342   001618  0E00               	movlw	0
  8343   00161A  6F65               	movwf	(___fladd@b+1)& (0+255),b
  8344   00161C  0E00               	movlw	0
  8345   00161E  6F66               	movwf	(___fladd@b+2)& (0+255),b
  8346   001620  0E00               	movlw	0
  8347   001622  6F67               	movwf	(___fladd@b+3)& (0+255),b
  8348   001624                     l6002:
  8349                           
  8350                           ; BSR set to: 0
  8351   001624  8F66               	bsf	(___fladd@b+2)& (0+255),7,b
  8352   001626                     
  8353                           ; BSR set to: 0
  8354   001626  0E00               	movlw	0
  8355   001628  6F67               	movwf	(___fladd@b+3)& (0+255),b
  8356   00162A  EF1F  F00B         	goto	l6008
  8357   00162E                     l6006:
  8358                           
  8359                           ; BSR set to: 0
  8360   00162E  0E00               	movlw	0
  8361   001630  6F64               	movwf	___fladd@b& (0+255),b
  8362   001632  0E00               	movlw	0
  8363   001634  6F65               	movwf	(___fladd@b+1)& (0+255),b
  8364   001636  0E00               	movlw	0
  8365   001638  6F66               	movwf	(___fladd@b+2)& (0+255),b
  8366   00163A  0E00               	movlw	0
  8367   00163C  6F67               	movwf	(___fladd@b+3)& (0+255),b
  8368   00163E                     l6008:
  8369                           
  8370                           ; BSR set to: 0
  8371   00163E  516B               	movf	(___fladd@a+3)& (0+255),w,b
  8372   001640  0B80               	andlw	128
  8373   001642  6F71               	movwf	___fladd@aexp& (0+255),b
  8374   001644                     
  8375                           ; BSR set to: 0
  8376   001644  5170               	movf	___fladd@signs& (0+255),w,b
  8377   001646  1971               	xorwf	___fladd@aexp& (0+255),w,b
  8378   001648  B4D8               	btfsc	status,2,c
  8379   00164A  EF29  F00B         	goto	u6961
  8380   00164E  EF2B  F00B         	goto	u6960
  8381   001652                     u6961:
  8382   001652  EF2C  F00B         	goto	l6014
  8383   001656                     u6960:
  8384   001656                     
  8385                           ; BSR set to: 0
  8386   001656  8D70               	bsf	___fladd@signs& (0+255),6,b
  8387   001658                     l6014:
  8388                           
  8389                           ; BSR set to: 0
  8390   001658  516B               	movf	(___fladd@a+3)& (0+255),w,b
  8391   00165A  256B               	addwf	(___fladd@a+3)& (0+255),w,b
  8392   00165C  6F71               	movwf	___fladd@aexp& (0+255),b
  8393   00165E                     
  8394                           ; BSR set to: 0
  8395   00165E  AF6A               	btfss	(___fladd@a+2)& (0+255),7,b
  8396   001660  EF34  F00B         	goto	u6971
  8397   001664  EF36  F00B         	goto	u6970
  8398   001668                     u6971:
  8399   001668  EF37  F00B         	goto	l6020
  8400   00166C                     u6970:
  8401   00166C                     
  8402                           ; BSR set to: 0
  8403   00166C  8171               	bsf	___fladd@aexp& (0+255),0,b
  8404   00166E                     l6020:
  8405                           
  8406                           ; BSR set to: 0
  8407   00166E  5171               	movf	___fladd@aexp& (0+255),w,b
  8408   001670  B4D8               	btfsc	status,2,c
  8409   001672  EF3D  F00B         	goto	u6981
  8410   001676  EF3F  F00B         	goto	u6980
  8411   00167A                     u6981:
  8412   00167A  EF54  F00B         	goto	l6030
  8413   00167E                     u6980:
  8414   00167E                     
  8415                           ; BSR set to: 0
  8416   00167E  2971               	incf	___fladd@aexp& (0+255),w,b
  8417   001680  A4D8               	btfss	status,2,c
  8418   001682  EF45  F00B         	goto	u6991
  8419   001686  EF47  F00B         	goto	u6990
  8420   00168A                     u6991:
  8421   00168A  EF4F  F00B         	goto	l6026
  8422   00168E                     u6990:
  8423   00168E                     
  8424                           ; BSR set to: 0
  8425   00168E  0E00               	movlw	0
  8426   001690  6F68               	movwf	___fladd@a& (0+255),b
  8427   001692  0E00               	movlw	0
  8428   001694  6F69               	movwf	(___fladd@a+1)& (0+255),b
  8429   001696  0E00               	movlw	0
  8430   001698  6F6A               	movwf	(___fladd@a+2)& (0+255),b
  8431   00169A  0E00               	movlw	0
  8432   00169C  6F6B               	movwf	(___fladd@a+3)& (0+255),b
  8433   00169E                     l6026:
  8434                           
  8435                           ; BSR set to: 0
  8436   00169E  8F6A               	bsf	(___fladd@a+2)& (0+255),7,b
  8437   0016A0                     
  8438                           ; BSR set to: 0
  8439   0016A0  0E00               	movlw	0
  8440   0016A2  6F6B               	movwf	(___fladd@a+3)& (0+255),b
  8441   0016A4  EF5C  F00B         	goto	l6032
  8442   0016A8                     l6030:
  8443                           
  8444                           ; BSR set to: 0
  8445   0016A8  0E00               	movlw	0
  8446   0016AA  6F68               	movwf	___fladd@a& (0+255),b
  8447   0016AC  0E00               	movlw	0
  8448   0016AE  6F69               	movwf	(___fladd@a+1)& (0+255),b
  8449   0016B0  0E00               	movlw	0
  8450   0016B2  6F6A               	movwf	(___fladd@a+2)& (0+255),b
  8451   0016B4  0E00               	movlw	0
  8452   0016B6  6F6B               	movwf	(___fladd@a+3)& (0+255),b
  8453   0016B8                     l6032:
  8454                           
  8455                           ; BSR set to: 0
  8456   0016B8  5172               	movf	___fladd@bexp& (0+255),w,b
  8457   0016BA  5D71               	subwf	___fladd@aexp& (0+255),w,b
  8458   0016BC  B0D8               	btfsc	status,0,c
  8459   0016BE  EF63  F00B         	goto	u7001
  8460   0016C2  EF65  F00B         	goto	u7000
  8461   0016C6                     u7001:
  8462   0016C6  EF8C  F00B         	goto	l6068
  8463   0016CA                     u7000:
  8464   0016CA                     
  8465                           ; BSR set to: 0
  8466   0016CA  AD70               	btfss	___fladd@signs& (0+255),6,b
  8467   0016CC  EF6A  F00B         	goto	u7011
  8468   0016D0  EF6C  F00B         	goto	u7010
  8469   0016D4                     u7011:
  8470   0016D4  EF6E  F00B         	goto	l6038
  8471   0016D8                     u7010:
  8472   0016D8                     
  8473                           ; BSR set to: 0
  8474   0016D8  0E80               	movlw	128
  8475   0016DA  1B70               	xorwf	___fladd@signs& (0+255),f,b
  8476   0016DC                     l6038:
  8477                           
  8478                           ; BSR set to: 0
  8479   0016DC  C072  F073         	movff	___fladd@bexp,___fladd@grs
  8480   0016E0                     
  8481                           ; BSR set to: 0
  8482   0016E0  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  8483   0016E4                     
  8484                           ; BSR set to: 0
  8485   0016E4  C073  F071         	movff	___fladd@grs,___fladd@aexp
  8486   0016E8                     
  8487                           ; BSR set to: 0
  8488   0016E8  C064  F073         	movff	___fladd@b,___fladd@grs
  8489   0016EC                     
  8490                           ; BSR set to: 0
  8491   0016EC  C068  F064         	movff	___fladd@a,___fladd@b
  8492   0016F0                     
  8493                           ; BSR set to: 0
  8494   0016F0  C073  F068         	movff	___fladd@grs,___fladd@a
  8495   0016F4                     
  8496                           ; BSR set to: 0
  8497   0016F4  C065  F073         	movff	___fladd@b+1,___fladd@grs
  8498   0016F8                     
  8499                           ; BSR set to: 0
  8500   0016F8  C069  F065         	movff	___fladd@a+1,___fladd@b+1
  8501   0016FC                     
  8502                           ; BSR set to: 0
  8503   0016FC  C073  F069         	movff	___fladd@grs,___fladd@a+1
  8504   001700                     
  8505                           ; BSR set to: 0
  8506   001700  C066  F073         	movff	___fladd@b+2,___fladd@grs
  8507   001704                     
  8508                           ; BSR set to: 0
  8509   001704  C06A  F066         	movff	___fladd@a+2,___fladd@b+2
  8510   001708                     
  8511                           ; BSR set to: 0
  8512   001708  C073  F06A         	movff	___fladd@grs,___fladd@a+2
  8513   00170C                     
  8514                           ; BSR set to: 0
  8515   00170C  C067  F073         	movff	___fladd@b+3,___fladd@grs
  8516   001710                     
  8517                           ; BSR set to: 0
  8518   001710  C06B  F067         	movff	___fladd@a+3,___fladd@b+3
  8519   001714                     
  8520                           ; BSR set to: 0
  8521   001714  C073  F06B         	movff	___fladd@grs,___fladd@a+3
  8522   001718                     l6068:
  8523                           
  8524                           ; BSR set to: 0
  8525   001718  0E00               	movlw	0
  8526   00171A  6F73               	movwf	___fladd@grs& (0+255),b
  8527   00171C                     
  8528                           ; BSR set to: 0
  8529   00171C  5172               	movf	___fladd@bexp& (0+255),w,b
  8530   00171E  C071  F06C         	movff	___fladd@aexp,??___fladd
  8531   001722  6B6D               	clrf	(??___fladd+1)& (0+255),b
  8532   001724  5F6C               	subwf	??___fladd& (0+255),f,b
  8533   001726  0E00               	movlw	0
  8534   001728  5B6D               	subwfb	(??___fladd+1)& (0+255),f,b
  8535   00172A  BF6D               	btfsc	(??___fladd+1)& (0+255),7,b
  8536   00172C  EFA1  F00B         	goto	u7021
  8537   001730  516D               	movf	(??___fladd+1)& (0+255),w,b
  8538   001732  E109               	bnz	u7020
  8539   001734  0E1A               	movlw	26
  8540   001736  5D6C               	subwf	??___fladd& (0+255),w,b
  8541   001738  A0D8               	btfss	status,0,c
  8542   00173A  EFA1  F00B         	goto	u7021
  8543   00173E  EFA3  F00B         	goto	u7020
  8544   001742                     u7021:
  8545   001742  EFDA  F00B         	goto	l1116
  8546   001746                     u7020:
  8547   001746                     
  8548                           ; BSR set to: 0
  8549   001746  5164               	movf	___fladd@b& (0+255),w,b
  8550   001748  1165               	iorwf	(___fladd@b+1)& (0+255),w,b
  8551   00174A  1166               	iorwf	(___fladd@b+2)& (0+255),w,b
  8552   00174C  1167               	iorwf	(___fladd@b+3)& (0+255),w,b
  8553   00174E  A4D8               	btfss	status,2,c
  8554   001750  EFAC  F00B         	goto	u7031
  8555   001754  EFAF  F00B         	goto	u7030
  8556   001758                     u7031:
  8557   001758  0E01               	movlw	1
  8558   00175A  EFB0  F00B         	goto	u7040
  8559   00175E                     u7030:
  8560   00175E  0E00               	movlw	0
  8561   001760                     u7040:
  8562   001760  6F73               	movwf	___fladd@grs& (0+255),b
  8563   001762                     
  8564                           ; BSR set to: 0
  8565   001762  0E00               	movlw	0
  8566   001764  6F64               	movwf	___fladd@b& (0+255),b
  8567   001766  0E00               	movlw	0
  8568   001768  6F65               	movwf	(___fladd@b+1)& (0+255),b
  8569   00176A  0E00               	movlw	0
  8570   00176C  6F66               	movwf	(___fladd@b+2)& (0+255),b
  8571   00176E  0E00               	movlw	0
  8572   001770  6F67               	movwf	(___fladd@b+3)& (0+255),b
  8573   001772                     
  8574                           ; BSR set to: 0
  8575   001772  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  8576   001776  EFE3  F00B         	goto	l1115
  8577   00177A                     l1117:
  8578                           
  8579                           ; BSR set to: 0
  8580   00177A  A173               	btfss	___fladd@grs& (0+255),0,b
  8581   00177C  EFC2  F00B         	goto	u7051
  8582   001780  EFC4  F00B         	goto	u7050
  8583   001784                     u7051:
  8584   001784  EFCA  F00B         	goto	l6080
  8585   001788                     u7050:
  8586   001788                     
  8587                           ; BSR set to: 0
  8588   001788  90D8               	bcf	status,0,c
  8589   00178A  3173               	rrcf	___fladd@grs& (0+255),w,b
  8590   00178C  0901               	iorlw	1
  8591   00178E  6F73               	movwf	___fladd@grs& (0+255),b
  8592   001790  EFCC  F00B         	goto	l6082
  8593   001794                     l6080:
  8594                           
  8595                           ; BSR set to: 0
  8596   001794  90D8               	bcf	status,0,c
  8597   001796  3373               	rrcf	___fladd@grs& (0+255),f,b
  8598   001798                     l6082:
  8599                           
  8600                           ; BSR set to: 0
  8601   001798  A164               	btfss	___fladd@b& (0+255),0,b
  8602   00179A  EFD1  F00B         	goto	u7061
  8603   00179E  EFD3  F00B         	goto	u7060
  8604   0017A2                     u7061:
  8605   0017A2  EFD4  F00B         	goto	l6086
  8606   0017A6                     u7060:
  8607   0017A6                     
  8608                           ; BSR set to: 0
  8609   0017A6  8F73               	bsf	___fladd@grs& (0+255),7,b
  8610   0017A8                     l6086:
  8611                           
  8612                           ; BSR set to: 0
  8613   0017A8  3567               	rlcf	(___fladd@b+3)& (0+255),w,b
  8614   0017AA  3367               	rrcf	(___fladd@b+3)& (0+255),f,b
  8615   0017AC  3366               	rrcf	(___fladd@b+2)& (0+255),f,b
  8616   0017AE  3365               	rrcf	(___fladd@b+1)& (0+255),f,b
  8617   0017B0  3364               	rrcf	___fladd@b& (0+255),f,b
  8618   0017B2                     
  8619                           ; BSR set to: 0
  8620   0017B2  2B72               	incf	___fladd@bexp& (0+255),f,b
  8621   0017B4                     l1116:
  8622                           
  8623                           ; BSR set to: 0
  8624   0017B4  5171               	movf	___fladd@aexp& (0+255),w,b
  8625   0017B6  5D72               	subwf	___fladd@bexp& (0+255),w,b
  8626   0017B8  A0D8               	btfss	status,0,c
  8627   0017BA  EFE1  F00B         	goto	u7071
  8628   0017BE  EFE3  F00B         	goto	u7070
  8629   0017C2                     u7071:
  8630   0017C2  EFBD  F00B         	goto	l1117
  8631   0017C6                     u7070:
  8632   0017C6                     l1115:
  8633                           
  8634                           ; BSR set to: 0
  8635   0017C6  BD70               	btfsc	___fladd@signs& (0+255),6,b
  8636   0017C8  EFE8  F00B         	goto	u7081
  8637   0017CC  EFEA  F00B         	goto	u7080
  8638   0017D0                     u7081:
  8639   0017D0  EF2A  F00C         	goto	l6114
  8640   0017D4                     u7080:
  8641   0017D4                     
  8642                           ; BSR set to: 0
  8643   0017D4  5172               	movf	___fladd@bexp& (0+255),w,b
  8644   0017D6  A4D8               	btfss	status,2,c
  8645   0017D8  EFF0  F00B         	goto	u7091
  8646   0017DC  EFF2  F00B         	goto	u7090
  8647   0017E0                     u7091:
  8648   0017E0  EFFC  F00B         	goto	l6096
  8649   0017E4                     u7090:
  8650   0017E4                     
  8651                           ; BSR set to: 0
  8652   0017E4  0E00               	movlw	0
  8653   0017E6  6F64               	movwf	?___fladd& (0+255),b
  8654   0017E8  0E00               	movlw	0
  8655   0017EA  6F65               	movwf	(?___fladd+1)& (0+255),b
  8656   0017EC  0E00               	movlw	0
  8657   0017EE  6F66               	movwf	(?___fladd+2)& (0+255),b
  8658   0017F0  0E00               	movlw	0
  8659   0017F2  6F67               	movwf	(?___fladd+3)& (0+255),b
  8660   0017F4  EF4B  F00D         	goto	l1124
  8661   0017F8                     l6096:
  8662                           
  8663                           ; BSR set to: 0
  8664   0017F8  5168               	movf	___fladd@a& (0+255),w,b
  8665   0017FA  2764               	addwf	___fladd@b& (0+255),f,b
  8666   0017FC  5169               	movf	(___fladd@a+1)& (0+255),w,b
  8667   0017FE  2365               	addwfc	(___fladd@b+1)& (0+255),f,b
  8668   001800  516A               	movf	(___fladd@a+2)& (0+255),w,b
  8669   001802  2366               	addwfc	(___fladd@b+2)& (0+255),f,b
  8670   001804  516B               	movf	(___fladd@a+3)& (0+255),w,b
  8671   001806  2367               	addwfc	(___fladd@b+3)& (0+255),f,b
  8672   001808                     
  8673                           ; BSR set to: 0
  8674   001808  A167               	btfss	(___fladd@b+3)& (0+255),0,b
  8675   00180A  EF09  F00C         	goto	u7101
  8676   00180E  EF0B  F00C         	goto	u7100
  8677   001812                     u7101:
  8678   001812  EFB7  F00C         	goto	l6150
  8679   001816                     u7100:
  8680   001816                     
  8681                           ; BSR set to: 0
  8682   001816  A173               	btfss	___fladd@grs& (0+255),0,b
  8683   001818  EF10  F00C         	goto	u7111
  8684   00181C  EF12  F00C         	goto	u7110
  8685   001820                     u7111:
  8686   001820  EF18  F00C         	goto	l6104
  8687   001824                     u7110:
  8688   001824                     
  8689                           ; BSR set to: 0
  8690   001824  90D8               	bcf	status,0,c
  8691   001826  3173               	rrcf	___fladd@grs& (0+255),w,b
  8692   001828  0901               	iorlw	1
  8693   00182A  6F73               	movwf	___fladd@grs& (0+255),b
  8694   00182C  EF1A  F00C         	goto	l6106
  8695   001830                     l6104:
  8696                           
  8697                           ; BSR set to: 0
  8698   001830  90D8               	bcf	status,0,c
  8699   001832  3373               	rrcf	___fladd@grs& (0+255),f,b
  8700   001834                     l6106:
  8701                           
  8702                           ; BSR set to: 0
  8703   001834  A164               	btfss	___fladd@b& (0+255),0,b
  8704   001836  EF1F  F00C         	goto	u7121
  8705   00183A  EF21  F00C         	goto	u7120
  8706   00183E                     u7121:
  8707   00183E  EF22  F00C         	goto	l6110
  8708   001842                     u7120:
  8709   001842                     
  8710                           ; BSR set to: 0
  8711   001842  8F73               	bsf	___fladd@grs& (0+255),7,b
  8712   001844                     l6110:
  8713                           
  8714                           ; BSR set to: 0
  8715   001844  3567               	rlcf	(___fladd@b+3)& (0+255),w,b
  8716   001846  3367               	rrcf	(___fladd@b+3)& (0+255),f,b
  8717   001848  3366               	rrcf	(___fladd@b+2)& (0+255),f,b
  8718   00184A  3365               	rrcf	(___fladd@b+1)& (0+255),f,b
  8719   00184C  3364               	rrcf	___fladd@b& (0+255),f,b
  8720   00184E                     
  8721                           ; BSR set to: 0
  8722   00184E  2B72               	incf	___fladd@bexp& (0+255),f,b
  8723   001850  EFB7  F00C         	goto	l6150
  8724   001854                     l6114:
  8725                           
  8726                           ; BSR set to: 0
  8727   001854  5168               	movf	___fladd@a& (0+255),w,b
  8728   001856  5D64               	subwf	___fladd@b& (0+255),w,b
  8729   001858  5169               	movf	(___fladd@a+1)& (0+255),w,b
  8730   00185A  5965               	subwfb	(___fladd@b+1)& (0+255),w,b
  8731   00185C  516A               	movf	(___fladd@a+2)& (0+255),w,b
  8732   00185E  5966               	subwfb	(___fladd@b+2)& (0+255),w,b
  8733   001860  5167               	movf	(___fladd@b+3)& (0+255),w,b
  8734   001862  0A80               	xorlw	128
  8735   001864  6F6C               	movwf	??___fladd& (0+255),b
  8736   001866  516B               	movf	(___fladd@a+3)& (0+255),w,b
  8737   001868  0A80               	xorlw	128
  8738   00186A  596C               	subwfb	??___fladd& (0+255),w,b
  8739   00186C  B0D8               	btfsc	status,0,c
  8740   00186E  EF3B  F00C         	goto	u7131
  8741   001872  EF3D  F00C         	goto	u7130
  8742   001876                     u7131:
  8743   001876  EF68  F00C         	goto	l6124
  8744   00187A                     u7130:
  8745   00187A                     
  8746                           ; BSR set to: 0
  8747   00187A  5164               	movf	___fladd@b& (0+255),w,b
  8748   00187C  5D68               	subwf	___fladd@a& (0+255),w,b
  8749   00187E  6F6C               	movwf	??___fladd& (0+255),b
  8750   001880  5165               	movf	(___fladd@b+1)& (0+255),w,b
  8751   001882  5969               	subwfb	(___fladd@a+1)& (0+255),w,b
  8752   001884  6F6D               	movwf	(??___fladd+1)& (0+255),b
  8753   001886  5166               	movf	(___fladd@b+2)& (0+255),w,b
  8754   001888  596A               	subwfb	(___fladd@a+2)& (0+255),w,b
  8755   00188A  6F6E               	movwf	(??___fladd+2)& (0+255),b
  8756   00188C  5167               	movf	(___fladd@b+3)& (0+255),w,b
  8757   00188E  596B               	subwfb	(___fladd@a+3)& (0+255),w,b
  8758   001890  6F6F               	movwf	(??___fladd+3)& (0+255),b
  8759   001892  0EFF               	movlw	255
  8760   001894  256C               	addwf	??___fladd& (0+255),w,b
  8761   001896  6F64               	movwf	___fladd@b& (0+255),b
  8762   001898  0EFF               	movlw	255
  8763   00189A  216D               	addwfc	(??___fladd+1)& (0+255),w,b
  8764   00189C  6F65               	movwf	(___fladd@b+1)& (0+255),b
  8765   00189E  0EFF               	movlw	255
  8766   0018A0  216E               	addwfc	(??___fladd+2)& (0+255),w,b
  8767   0018A2  6F66               	movwf	(___fladd@b+2)& (0+255),b
  8768   0018A4  0EFF               	movlw	255
  8769   0018A6  216F               	addwfc	(??___fladd+3)& (0+255),w,b
  8770   0018A8  6F67               	movwf	(___fladd@b+3)& (0+255),b
  8771   0018AA  0E80               	movlw	128
  8772   0018AC  1B70               	xorwf	___fladd@signs& (0+255),f,b
  8773   0018AE                     
  8774                           ; BSR set to: 0
  8775   0018AE  6D73               	negf	___fladd@grs& (0+255),b
  8776   0018B0                     
  8777                           ; BSR set to: 0
  8778   0018B0  5173               	movf	___fladd@grs& (0+255),w,b
  8779   0018B2  A4D8               	btfss	status,2,c
  8780   0018B4  EF5E  F00C         	goto	u7141
  8781   0018B8  EF60  F00C         	goto	u7140
  8782   0018BC                     u7141:
  8783   0018BC  EF70  F00C         	goto	l1132
  8784   0018C0                     u7140:
  8785   0018C0                     
  8786                           ; BSR set to: 0
  8787   0018C0  0E01               	movlw	1
  8788   0018C2  2764               	addwf	___fladd@b& (0+255),f,b
  8789   0018C4  0E00               	movlw	0
  8790   0018C6  2365               	addwfc	(___fladd@b+1)& (0+255),f,b
  8791   0018C8  2366               	addwfc	(___fladd@b+2)& (0+255),f,b
  8792   0018CA  2367               	addwfc	(___fladd@b+3)& (0+255),f,b
  8793   0018CC  EF70  F00C         	goto	l1132
  8794   0018D0                     l6124:
  8795                           
  8796                           ; BSR set to: 0
  8797   0018D0  5168               	movf	___fladd@a& (0+255),w,b
  8798   0018D2  5F64               	subwf	___fladd@b& (0+255),f,b
  8799   0018D4  5169               	movf	(___fladd@a+1)& (0+255),w,b
  8800   0018D6  5B65               	subwfb	(___fladd@b+1)& (0+255),f,b
  8801   0018D8  516A               	movf	(___fladd@a+2)& (0+255),w,b
  8802   0018DA  5B66               	subwfb	(___fladd@b+2)& (0+255),f,b
  8803   0018DC  516B               	movf	(___fladd@a+3)& (0+255),w,b
  8804   0018DE  5B67               	subwfb	(___fladd@b+3)& (0+255),f,b
  8805   0018E0                     l1132:
  8806                           
  8807                           ; BSR set to: 0
  8808   0018E0  5164               	movf	___fladd@b& (0+255),w,b
  8809   0018E2  1165               	iorwf	(___fladd@b+1)& (0+255),w,b
  8810   0018E4  1166               	iorwf	(___fladd@b+2)& (0+255),w,b
  8811   0018E6  1167               	iorwf	(___fladd@b+3)& (0+255),w,b
  8812   0018E8  A4D8               	btfss	status,2,c
  8813   0018EA  EF79  F00C         	goto	u7151
  8814   0018EE  EF7B  F00C         	goto	u7150
  8815   0018F2                     u7151:
  8816   0018F2  EFB0  F00C         	goto	l6148
  8817   0018F6                     u7150:
  8818   0018F6                     
  8819                           ; BSR set to: 0
  8820   0018F6  5173               	movf	___fladd@grs& (0+255),w,b
  8821   0018F8  A4D8               	btfss	status,2,c
  8822   0018FA  EF81  F00C         	goto	u7161
  8823   0018FE  EF83  F00C         	goto	u7160
  8824   001902                     u7161:
  8825   001902  EFB0  F00C         	goto	l6148
  8826   001906                     u7160:
  8827   001906                     
  8828                           ; BSR set to: 0
  8829   001906  0E00               	movlw	0
  8830   001908  6F64               	movwf	?___fladd& (0+255),b
  8831   00190A  0E00               	movlw	0
  8832   00190C  6F65               	movwf	(?___fladd+1)& (0+255),b
  8833   00190E  0E00               	movlw	0
  8834   001910  6F66               	movwf	(?___fladd+2)& (0+255),b
  8835   001912  0E00               	movlw	0
  8836   001914  6F67               	movwf	(?___fladd+3)& (0+255),b
  8837   001916  EF4B  F00D         	goto	l1124
  8838   00191A                     l6132:
  8839                           
  8840                           ; BSR set to: 0
  8841   00191A  90D8               	bcf	status,0,c
  8842   00191C  3764               	rlcf	___fladd@b& (0+255),f,b
  8843   00191E  3765               	rlcf	(___fladd@b+1)& (0+255),f,b
  8844   001920  3766               	rlcf	(___fladd@b+2)& (0+255),f,b
  8845   001922  3767               	rlcf	(___fladd@b+3)& (0+255),f,b
  8846   001924                     
  8847                           ; BSR set to: 0
  8848   001924  AF73               	btfss	___fladd@grs& (0+255),7,b
  8849   001926  EF97  F00C         	goto	u7171
  8850   00192A  EF99  F00C         	goto	u7170
  8851   00192E                     u7171:
  8852   00192E  EF9A  F00C         	goto	l6138
  8853   001932                     u7170:
  8854   001932                     
  8855                           ; BSR set to: 0
  8856   001932  8164               	bsf	___fladd@b& (0+255),0,b
  8857   001934                     l6138:
  8858                           
  8859                           ; BSR set to: 0
  8860   001934  A173               	btfss	___fladd@grs& (0+255),0,b
  8861   001936  EF9F  F00C         	goto	u7181
  8862   00193A  EFA1  F00C         	goto	u7180
  8863   00193E                     u7181:
  8864   00193E  EFA5  F00C         	goto	l6142
  8865   001942                     u7180:
  8866   001942                     
  8867                           ; BSR set to: 0
  8868   001942  80D8               	bsf	status,0,c
  8869   001944  3773               	rlcf	___fladd@grs& (0+255),f,b
  8870   001946  EFA7  F00C         	goto	l6144
  8871   00194A                     l6142:
  8872                           
  8873                           ; BSR set to: 0
  8874   00194A  90D8               	bcf	status,0,c
  8875   00194C  3773               	rlcf	___fladd@grs& (0+255),f,b
  8876   00194E                     l6144:
  8877                           
  8878                           ; BSR set to: 0
  8879   00194E  5172               	movf	___fladd@bexp& (0+255),w,b
  8880   001950  B4D8               	btfsc	status,2,c
  8881   001952  EFAD  F00C         	goto	u7191
  8882   001956  EFAF  F00C         	goto	u7190
  8883   00195A                     u7191:
  8884   00195A  EFB0  F00C         	goto	l6148
  8885   00195E                     u7190:
  8886   00195E                     
  8887                           ; BSR set to: 0
  8888   00195E  0772               	decf	___fladd@bexp& (0+255),f,b
  8889   001960                     l6148:
  8890                           
  8891                           ; BSR set to: 0
  8892   001960  AF66               	btfss	(___fladd@b+2)& (0+255),7,b
  8893   001962  EFB5  F00C         	goto	u7201
  8894   001966  EFB7  F00C         	goto	u7200
  8895   00196A                     u7201:
  8896   00196A  EF8D  F00C         	goto	l6132
  8897   00196E                     u7200:
  8898   00196E                     l6150:
  8899                           
  8900                           ; BSR set to: 0
  8901   00196E  0E00               	movlw	0
  8902   001970  6F71               	movwf	___fladd@aexp& (0+255),b
  8903   001972                     
  8904                           ; BSR set to: 0
  8905   001972  AF73               	btfss	___fladd@grs& (0+255),7,b
  8906   001974  EFBE  F00C         	goto	u7211
  8907   001978  EFC0  F00C         	goto	u7210
  8908   00197C                     u7211:
  8909   00197C  EFD8  F00C         	goto	l1141
  8910   001980                     u7210:
  8911   001980                     
  8912                           ; BSR set to: 0
  8913   001980  C073  F06C         	movff	___fladd@grs,??___fladd
  8914   001984  0E7F               	movlw	127
  8915   001986  176C               	andwf	??___fladd& (0+255),f,b
  8916   001988  B4D8               	btfsc	status,2,c
  8917   00198A  EFC9  F00C         	goto	u7221
  8918   00198E  EFCB  F00C         	goto	u7220
  8919   001992                     u7221:
  8920   001992  EFCF  F00C         	goto	l1142
  8921   001996                     u7220:
  8922   001996                     l6156:
  8923                           
  8924                           ; BSR set to: 0
  8925   001996  0E01               	movlw	1
  8926   001998  6F71               	movwf	___fladd@aexp& (0+255),b
  8927   00199A  EFD8  F00C         	goto	l1141
  8928   00199E                     l1142:
  8929                           
  8930                           ; BSR set to: 0
  8931   00199E  A164               	btfss	___fladd@b& (0+255),0,b
  8932   0019A0  EFD4  F00C         	goto	u7231
  8933   0019A4  EFD6  F00C         	goto	u7230
  8934   0019A8                     u7231:
  8935   0019A8  EFD8  F00C         	goto	l1141
  8936   0019AC                     u7230:
  8937   0019AC  EFCB  F00C         	goto	l6156
  8938   0019B0                     l1141:
  8939                           
  8940                           ; BSR set to: 0
  8941   0019B0  5171               	movf	___fladd@aexp& (0+255),w,b
  8942   0019B2  B4D8               	btfsc	status,2,c
  8943   0019B4  EFDE  F00C         	goto	u7241
  8944   0019B8  EFE0  F00C         	goto	u7240
  8945   0019BC                     u7241:
  8946   0019BC  EF0B  F00D         	goto	l6168
  8947   0019C0                     u7240:
  8948   0019C0                     
  8949                           ; BSR set to: 0
  8950   0019C0  0E01               	movlw	1
  8951   0019C2  2764               	addwf	___fladd@b& (0+255),f,b
  8952   0019C4  0E00               	movlw	0
  8953   0019C6  2365               	addwfc	(___fladd@b+1)& (0+255),f,b
  8954   0019C8  2366               	addwfc	(___fladd@b+2)& (0+255),f,b
  8955   0019CA  2367               	addwfc	(___fladd@b+3)& (0+255),f,b
  8956   0019CC                     
  8957                           ; BSR set to: 0
  8958   0019CC  A167               	btfss	(___fladd@b+3)& (0+255),0,b
  8959   0019CE  EFEB  F00C         	goto	u7251
  8960   0019D2  EFED  F00C         	goto	u7250
  8961   0019D6                     u7251:
  8962   0019D6  EF0B  F00D         	goto	l6168
  8963   0019DA                     u7250:
  8964   0019DA                     
  8965                           ; BSR set to: 0
  8966   0019DA  C064  F06C         	movff	___fladd@b,??___fladd
  8967   0019DE  C065  F06D         	movff	___fladd@b+1,??___fladd+1
  8968   0019E2  C066  F06E         	movff	___fladd@b+2,??___fladd+2
  8969   0019E6  C067  F06F         	movff	___fladd@b+3,??___fladd+3
  8970   0019EA  356F               	rlcf	(??___fladd+3)& (0+255),w,b
  8971   0019EC  336F               	rrcf	(??___fladd+3)& (0+255),f,b
  8972   0019EE  336E               	rrcf	(??___fladd+2)& (0+255),f,b
  8973   0019F0  336D               	rrcf	(??___fladd+1)& (0+255),f,b
  8974   0019F2  336C               	rrcf	??___fladd& (0+255),f,b
  8975   0019F4  C06C  F064         	movff	??___fladd,___fladd@b
  8976   0019F8  C06D  F065         	movff	??___fladd+1,___fladd@b+1
  8977   0019FC  C06E  F066         	movff	??___fladd+2,___fladd@b+2
  8978   001A00  C06F  F067         	movff	??___fladd+3,___fladd@b+3
  8979   001A04  2972               	incf	___fladd@bexp& (0+255),w,b
  8980   001A06  B4D8               	btfsc	status,2,c
  8981   001A08  EF08  F00D         	goto	u7261
  8982   001A0C  EF0A  F00D         	goto	u7260
  8983   001A10                     u7261:
  8984   001A10  EF0B  F00D         	goto	l6168
  8985   001A14                     u7260:
  8986   001A14                     
  8987                           ; BSR set to: 0
  8988   001A14  2B72               	incf	___fladd@bexp& (0+255),f,b
  8989   001A16                     l6168:
  8990                           
  8991                           ; BSR set to: 0
  8992   001A16  2972               	incf	___fladd@bexp& (0+255),w,b
  8993   001A18  B4D8               	btfsc	status,2,c
  8994   001A1A  EF11  F00D         	goto	u7271
  8995   001A1E  EF13  F00D         	goto	u7270
  8996   001A22                     u7271:
  8997   001A22  EF1B  F00D         	goto	l6172
  8998   001A26                     u7270:
  8999   001A26                     
  9000                           ; BSR set to: 0
  9001   001A26  5172               	movf	___fladd@bexp& (0+255),w,b
  9002   001A28  A4D8               	btfss	status,2,c
  9003   001A2A  EF19  F00D         	goto	u7281
  9004   001A2E  EF1B  F00D         	goto	u7280
  9005   001A32                     u7281:
  9006   001A32  EF2D  F00D         	goto	l6176
  9007   001A36                     u7280:
  9008   001A36                     l6172:
  9009                           
  9010                           ; BSR set to: 0
  9011   001A36  0E00               	movlw	0
  9012   001A38  6F64               	movwf	___fladd@b& (0+255),b
  9013   001A3A  0E00               	movlw	0
  9014   001A3C  6F65               	movwf	(___fladd@b+1)& (0+255),b
  9015   001A3E  0E00               	movlw	0
  9016   001A40  6F66               	movwf	(___fladd@b+2)& (0+255),b
  9017   001A42  0E00               	movlw	0
  9018   001A44  6F67               	movwf	(___fladd@b+3)& (0+255),b
  9019   001A46  5172               	movf	___fladd@bexp& (0+255),w,b
  9020   001A48  A4D8               	btfss	status,2,c
  9021   001A4A  EF29  F00D         	goto	u7291
  9022   001A4E  EF2B  F00D         	goto	u7290
  9023   001A52                     u7291:
  9024   001A52  EF2D  F00D         	goto	l6176
  9025   001A56                     u7290:
  9026   001A56                     
  9027                           ; BSR set to: 0
  9028   001A56  0E00               	movlw	0
  9029   001A58  6F70               	movwf	___fladd@signs& (0+255),b
  9030   001A5A                     l6176:
  9031                           
  9032                           ; BSR set to: 0
  9033   001A5A  A172               	btfss	___fladd@bexp& (0+255),0,b
  9034   001A5C  EF32  F00D         	goto	u7301
  9035   001A60  EF34  F00D         	goto	u7300
  9036   001A64                     u7301:
  9037   001A64  EF37  F00D         	goto	l6180
  9038   001A68                     u7300:
  9039   001A68                     
  9040                           ; BSR set to: 0
  9041   001A68  8F66               	bsf	(___fladd@b+2)& (0+255),7,b
  9042   001A6A  EF38  F00D         	goto	l6182
  9043   001A6E                     l6180:
  9044                           
  9045                           ; BSR set to: 0
  9046   001A6E  9F66               	bcf	(___fladd@b+2)& (0+255),7,b
  9047   001A70                     l6182:
  9048                           
  9049                           ; BSR set to: 0
  9050   001A70  90D8               	bcf	status,0,c
  9051   001A72  3172               	rrcf	___fladd@bexp& (0+255),w,b
  9052   001A74  6F67               	movwf	(___fladd@b+3)& (0+255),b
  9053   001A76                     
  9054                           ; BSR set to: 0
  9055   001A76  AF70               	btfss	___fladd@signs& (0+255),7,b
  9056   001A78  EF40  F00D         	goto	u7311
  9057   001A7C  EF42  F00D         	goto	u7310
  9058   001A80                     u7311:
  9059   001A80  EF43  F00D         	goto	l6188
  9060   001A84                     u7310:
  9061   001A84                     
  9062                           ; BSR set to: 0
  9063   001A84  8F67               	bsf	(___fladd@b+3)& (0+255),7,b
  9064   001A86                     l6188:
  9065                           
  9066                           ; BSR set to: 0
  9067   001A86  C064  F064         	movff	___fladd@b,?___fladd
  9068   001A8A  C065  F065         	movff	___fladd@b+1,?___fladd+1
  9069   001A8E  C066  F066         	movff	___fladd@b+2,?___fladd+2
  9070   001A92  C067  F067         	movff	___fladd@b+3,?___fladd+3
  9071   001A96                     l1124:
  9072                           
  9073                           ; BSR set to: 0
  9074   001A96  0012               	return		;funcret
  9075   001A98                     __end_of___fladd:
  9076                           	callstack 0
  9077                           
  9078 ;; *************** function ___flneg *****************
  9079 ;; Defined at:
  9080 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  f1              4    4[BANK0 ] unsigned char 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  4    4[BANK0 ] unsigned char 
  9087 ;; Registers used:
  9088 ;;		wreg, status,2, status,0
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9094 ;;      Params:         0       4       0       0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0
  9097 ;;      Totals:         0       4       0       0       0       0       0
  9098 ;;Total ram usage:        4 bytes
  9099 ;; Hardware stack levels used: 1
  9100 ;; Hardware stack levels required when called: 3
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_efgtoa
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text35
  9109   004D6E                     __ptext35:
  9110                           	callstack 0
  9111   004D6E                     ___flneg:
  9112                           	callstack 19
  9113   004D6E  0100               	movlb	0	; () banked
  9114   004D70  5164               	movf	___flneg@f1& (0+255),w,b
  9115   004D72  1165               	iorwf	(___flneg@f1+1)& (0+255),w,b
  9116   004D74  1166               	iorwf	(___flneg@f1+2)& (0+255),w,b
  9117   004D76  1167               	iorwf	(___flneg@f1+3)& (0+255),w,b
  9118   004D78  B4D8               	btfsc	status,2,c
  9119   004D7A  EFC1  F026         	goto	u7951
  9120   004D7E  EFC3  F026         	goto	u7950
  9121   004D82                     u7951:
  9122   004D82  EFCB  F026         	goto	l6602
  9123   004D86                     u7950:
  9124   004D86                     
  9125                           ; BSR set to: 0
  9126   004D86  0E00               	movlw	0
  9127   004D88  1B64               	xorwf	___flneg@f1& (0+255),f,b
  9128   004D8A  0E00               	movlw	0
  9129   004D8C  1B65               	xorwf	(___flneg@f1+1)& (0+255),f,b
  9130   004D8E  0E00               	movlw	0
  9131   004D90  1B66               	xorwf	(___flneg@f1+2)& (0+255),f,b
  9132   004D92  0E80               	movlw	128
  9133   004D94  1B67               	xorwf	(___flneg@f1+3)& (0+255),f,b
  9134   004D96                     l6602:
  9135                           
  9136                           ; BSR set to: 0
  9137   004D96  C064  F064         	movff	___flneg@f1,?___flneg
  9138   004D9A  C065  F065         	movff	___flneg@f1+1,?___flneg+1
  9139   004D9E  C066  F066         	movff	___flneg@f1+2,?___flneg+2
  9140   004DA2  C067  F067         	movff	___flneg@f1+3,?___flneg+3
  9141   004DA6                     
  9142                           ; BSR set to: 0
  9143   004DA6  0012               	return		;funcret
  9144   004DA8                     __end_of___flneg:
  9145                           	callstack 0
  9146                           
  9147 ;; *************** function ___flmul *****************
  9148 ;; Defined at:
  9149 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  b               4   18[BANK0 ] unsigned char 
  9152 ;;  a               4   22[BANK0 ] unsigned char 
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  prod            4   37[BANK0 ] struct .
  9155 ;;  grs             4   32[BANK0 ] unsigned long 
  9156 ;;  temp            2   41[BANK0 ] struct .
  9157 ;;  bexp            1   36[BANK0 ] unsigned char 
  9158 ;;  aexp            1   31[BANK0 ] unsigned char 
  9159 ;;  sign            1   30[BANK0 ] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  4   18[BANK0 ] unsigned char 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0, prodl, prodh
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9169 ;;      Params:         0       8       0       0       0       0       0
  9170 ;;      Locals:         0      13       0       0       0       0       0
  9171 ;;      Temps:          0       4       0       0       0       0       0
  9172 ;;      Totals:         0      25       0       0       0       0       0
  9173 ;;Total ram usage:       25 bytes
  9174 ;; Hardware stack levels used: 1
  9175 ;; Hardware stack levels required when called: 3
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_start
  9180 ;;		_PWM
  9181 ;;		_PWMI
  9182 ;;		_PWMD
  9183 ;;		_Data2LCD
  9184 ;;		_efgtoa
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text36
  9189   001A98                     __ptext36:
  9190                           	callstack 0
  9191   001A98                     ___flmul:
  9192                           	callstack 25
  9193   001A98  0100               	movlb	0	; () banked
  9194   001A9A  5175               	movf	(___flmul@b+3)& (0+255),w,b
  9195   001A9C  0B80               	andlw	128
  9196   001A9E  6F7E               	movwf	___flmul@sign& (0+255),b
  9197   001AA0  5175               	movf	(___flmul@b+3)& (0+255),w,b
  9198   001AA2  2575               	addwf	(___flmul@b+3)& (0+255),w,b
  9199   001AA4  6F84               	movwf	___flmul@bexp& (0+255),b
  9200   001AA6                     
  9201                           ; BSR set to: 0
  9202   001AA6  AF74               	btfss	(___flmul@b+2)& (0+255),7,b
  9203   001AA8  EF58  F00D         	goto	u7561
  9204   001AAC  EF5A  F00D         	goto	u7560
  9205   001AB0                     u7561:
  9206   001AB0  EF5B  F00D         	goto	l6350
  9207   001AB4                     u7560:
  9208   001AB4                     
  9209                           ; BSR set to: 0
  9210   001AB4  8184               	bsf	___flmul@bexp& (0+255),0,b
  9211   001AB6                     l6350:
  9212                           
  9213                           ; BSR set to: 0
  9214   001AB6  5184               	movf	___flmul@bexp& (0+255),w,b
  9215   001AB8  B4D8               	btfsc	status,2,c
  9216   001ABA  EF61  F00D         	goto	u7571
  9217   001ABE  EF63  F00D         	goto	u7570
  9218   001AC2                     u7571:
  9219   001AC2  EF76  F00D         	goto	l6358
  9220   001AC6                     u7570:
  9221   001AC6                     
  9222                           ; BSR set to: 0
  9223   001AC6  2984               	incf	___flmul@bexp& (0+255),w,b
  9224   001AC8  A4D8               	btfss	status,2,c
  9225   001ACA  EF69  F00D         	goto	u7581
  9226   001ACE  EF6B  F00D         	goto	u7580
  9227   001AD2                     u7581:
  9228   001AD2  EF73  F00D         	goto	l6356
  9229   001AD6                     u7580:
  9230   001AD6                     
  9231                           ; BSR set to: 0
  9232   001AD6  0E00               	movlw	0
  9233   001AD8  6F72               	movwf	___flmul@b& (0+255),b
  9234   001ADA  0E00               	movlw	0
  9235   001ADC  6F73               	movwf	(___flmul@b+1)& (0+255),b
  9236   001ADE  0E00               	movlw	0
  9237   001AE0  6F74               	movwf	(___flmul@b+2)& (0+255),b
  9238   001AE2  0E00               	movlw	0
  9239   001AE4  6F75               	movwf	(___flmul@b+3)& (0+255),b
  9240   001AE6                     l6356:
  9241                           
  9242                           ; BSR set to: 0
  9243   001AE6  8F74               	bsf	(___flmul@b+2)& (0+255),7,b
  9244   001AE8  EF7E  F00D         	goto	l6360
  9245   001AEC                     l6358:
  9246                           
  9247                           ; BSR set to: 0
  9248   001AEC  0E00               	movlw	0
  9249   001AEE  6F72               	movwf	___flmul@b& (0+255),b
  9250   001AF0  0E00               	movlw	0
  9251   001AF2  6F73               	movwf	(___flmul@b+1)& (0+255),b
  9252   001AF4  0E00               	movlw	0
  9253   001AF6  6F74               	movwf	(___flmul@b+2)& (0+255),b
  9254   001AF8  0E00               	movlw	0
  9255   001AFA  6F75               	movwf	(___flmul@b+3)& (0+255),b
  9256   001AFC                     l6360:
  9257                           
  9258                           ; BSR set to: 0
  9259   001AFC  5179               	movf	(___flmul@a+3)& (0+255),w,b
  9260   001AFE  0B80               	andlw	128
  9261   001B00  1B7E               	xorwf	___flmul@sign& (0+255),f,b
  9262   001B02                     
  9263                           ; BSR set to: 0
  9264   001B02  5179               	movf	(___flmul@a+3)& (0+255),w,b
  9265   001B04  2579               	addwf	(___flmul@a+3)& (0+255),w,b
  9266   001B06  6F7F               	movwf	___flmul@aexp& (0+255),b
  9267   001B08                     
  9268                           ; BSR set to: 0
  9269   001B08  AF78               	btfss	(___flmul@a+2)& (0+255),7,b
  9270   001B0A  EF89  F00D         	goto	u7591
  9271   001B0E  EF8B  F00D         	goto	u7590
  9272   001B12                     u7591:
  9273   001B12  EF8C  F00D         	goto	l6368
  9274   001B16                     u7590:
  9275   001B16                     
  9276                           ; BSR set to: 0
  9277   001B16  817F               	bsf	___flmul@aexp& (0+255),0,b
  9278   001B18                     l6368:
  9279                           
  9280                           ; BSR set to: 0
  9281   001B18  517F               	movf	___flmul@aexp& (0+255),w,b
  9282   001B1A  B4D8               	btfsc	status,2,c
  9283   001B1C  EF92  F00D         	goto	u7601
  9284   001B20  EF94  F00D         	goto	u7600
  9285   001B24                     u7601:
  9286   001B24  EFA7  F00D         	goto	l6376
  9287   001B28                     u7600:
  9288   001B28                     
  9289                           ; BSR set to: 0
  9290   001B28  297F               	incf	___flmul@aexp& (0+255),w,b
  9291   001B2A  A4D8               	btfss	status,2,c
  9292   001B2C  EF9A  F00D         	goto	u7611
  9293   001B30  EF9C  F00D         	goto	u7610
  9294   001B34                     u7611:
  9295   001B34  EFA4  F00D         	goto	l6374
  9296   001B38                     u7610:
  9297   001B38                     
  9298                           ; BSR set to: 0
  9299   001B38  0E00               	movlw	0
  9300   001B3A  6F76               	movwf	___flmul@a& (0+255),b
  9301   001B3C  0E00               	movlw	0
  9302   001B3E  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9303   001B40  0E00               	movlw	0
  9304   001B42  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9305   001B44  0E00               	movlw	0
  9306   001B46  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9307   001B48                     l6374:
  9308                           
  9309                           ; BSR set to: 0
  9310   001B48  8F78               	bsf	(___flmul@a+2)& (0+255),7,b
  9311   001B4A  EFAF  F00D         	goto	l1201
  9312   001B4E                     l6376:
  9313                           
  9314                           ; BSR set to: 0
  9315   001B4E  0E00               	movlw	0
  9316   001B50  6F76               	movwf	___flmul@a& (0+255),b
  9317   001B52  0E00               	movlw	0
  9318   001B54  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9319   001B56  0E00               	movlw	0
  9320   001B58  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9321   001B5A  0E00               	movlw	0
  9322   001B5C  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9323   001B5E                     l1201:
  9324                           
  9325                           ; BSR set to: 0
  9326   001B5E  517F               	movf	___flmul@aexp& (0+255),w,b
  9327   001B60  B4D8               	btfsc	status,2,c
  9328   001B62  EFB5  F00D         	goto	u7621
  9329   001B66  EFB7  F00D         	goto	u7620
  9330   001B6A                     u7621:
  9331   001B6A  EFBF  F00D         	goto	l6380
  9332   001B6E                     u7620:
  9333   001B6E                     
  9334                           ; BSR set to: 0
  9335   001B6E  5184               	movf	___flmul@bexp& (0+255),w,b
  9336   001B70  A4D8               	btfss	status,2,c
  9337   001B72  EFBD  F00D         	goto	u7631
  9338   001B76  EFBF  F00D         	goto	u7630
  9339   001B7A                     u7631:
  9340   001B7A  EFC9  F00D         	goto	l6384
  9341   001B7E                     u7630:
  9342   001B7E                     l6380:
  9343                           
  9344                           ; BSR set to: 0
  9345   001B7E  0E00               	movlw	0
  9346   001B80  6F72               	movwf	?___flmul& (0+255),b
  9347   001B82  0E00               	movlw	0
  9348   001B84  6F73               	movwf	(?___flmul+1)& (0+255),b
  9349   001B86  0E00               	movlw	0
  9350   001B88  6F74               	movwf	(?___flmul+2)& (0+255),b
  9351   001B8A  0E00               	movlw	0
  9352   001B8C  6F75               	movwf	(?___flmul+3)& (0+255),b
  9353   001B8E  EF61  F00F         	goto	l1205
  9354   001B92                     l6384:
  9355                           
  9356                           ; BSR set to: 0
  9357   001B92  5178               	movf	(___flmul@a+2)& (0+255),w,b
  9358   001B94  0372               	mulwf	___flmul@b& (0+255),b
  9359   001B96  CFF3 F089          	movff	prodl,___flmul@temp
  9360   001B9A  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9361   001B9E                     
  9362                           ; BSR set to: 0
  9363   001B9E  5189               	movf	___flmul@temp& (0+255),w,b
  9364   001BA0  6F80               	movwf	___flmul@grs& (0+255),b
  9365   001BA2  6B81               	clrf	(___flmul@grs+1)& (0+255),b
  9366   001BA4  6B82               	clrf	(___flmul@grs+2)& (0+255),b
  9367   001BA6  6B83               	clrf	(___flmul@grs+3)& (0+255),b
  9368   001BA8                     
  9369                           ; BSR set to: 0
  9370   001BA8  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9371   001BAA  6F85               	movwf	___flmul@prod& (0+255),b
  9372   001BAC  6B86               	clrf	(___flmul@prod+1)& (0+255),b
  9373   001BAE  6B87               	clrf	(___flmul@prod+2)& (0+255),b
  9374   001BB0  6B88               	clrf	(___flmul@prod+3)& (0+255),b
  9375   001BB2  5177               	movf	(___flmul@a+1)& (0+255),w,b
  9376   001BB4  0373               	mulwf	(___flmul@b+1)& (0+255),b
  9377   001BB6  CFF3 F089          	movff	prodl,___flmul@temp
  9378   001BBA  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9379   001BBE                     
  9380                           ; BSR set to: 0
  9381   001BBE  5189               	movf	___flmul@temp& (0+255),w,b
  9382   001BC0  2780               	addwf	___flmul@grs& (0+255),f,b
  9383   001BC2  0E00               	movlw	0
  9384   001BC4  2381               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9385   001BC6  2382               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9386   001BC8  2383               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9387   001BCA                     
  9388                           ; BSR set to: 0
  9389   001BCA  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9390   001BCC  2785               	addwf	___flmul@prod& (0+255),f,b
  9391   001BCE  0E00               	movlw	0
  9392   001BD0  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9393   001BD2  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9394   001BD4  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9395   001BD6  5176               	movf	___flmul@a& (0+255),w,b
  9396   001BD8  0374               	mulwf	(___flmul@b+2)& (0+255),b
  9397   001BDA  CFF3 F089          	movff	prodl,___flmul@temp
  9398   001BDE  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9399   001BE2                     
  9400                           ; BSR set to: 0
  9401   001BE2  5189               	movf	___flmul@temp& (0+255),w,b
  9402   001BE4  2780               	addwf	___flmul@grs& (0+255),f,b
  9403   001BE6  0E00               	movlw	0
  9404   001BE8  2381               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9405   001BEA  2382               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9406   001BEC  2383               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9407   001BEE                     
  9408                           ; BSR set to: 0
  9409   001BEE  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9410   001BF0  2785               	addwf	___flmul@prod& (0+255),f,b
  9411   001BF2  0E00               	movlw	0
  9412   001BF4  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9413   001BF6  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9414   001BF8  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9415   001BFA                     
  9416                           ; BSR set to: 0
  9417   001BFA  C082  F083         	movff	___flmul@grs+2,___flmul@grs+3
  9418   001BFE  C081  F082         	movff	___flmul@grs+1,___flmul@grs+2
  9419   001C02  C080  F081         	movff	___flmul@grs,___flmul@grs+1
  9420   001C06  6B80               	clrf	___flmul@grs& (0+255),b
  9421   001C08                     
  9422                           ; BSR set to: 0
  9423   001C08  5176               	movf	___flmul@a& (0+255),w,b
  9424   001C0A  0373               	mulwf	(___flmul@b+1)& (0+255),b
  9425   001C0C  CFF3 F089          	movff	prodl,___flmul@temp
  9426   001C10  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9427   001C14                     
  9428                           ; BSR set to: 0
  9429   001C14  5189               	movf	___flmul@temp& (0+255),w,b
  9430   001C16  2780               	addwf	___flmul@grs& (0+255),f,b
  9431   001C18  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9432   001C1A  2381               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9433   001C1C  0E00               	movlw	0
  9434   001C1E  2382               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9435   001C20  0E00               	movlw	0
  9436   001C22  2383               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9437   001C24                     
  9438                           ; BSR set to: 0
  9439   001C24  5177               	movf	(___flmul@a+1)& (0+255),w,b
  9440   001C26  0372               	mulwf	___flmul@b& (0+255),b
  9441   001C28  CFF3 F089          	movff	prodl,___flmul@temp
  9442   001C2C  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9443   001C30                     
  9444                           ; BSR set to: 0
  9445   001C30  5189               	movf	___flmul@temp& (0+255),w,b
  9446   001C32  2780               	addwf	___flmul@grs& (0+255),f,b
  9447   001C34  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9448   001C36  2381               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9449   001C38  0E00               	movlw	0
  9450   001C3A  2382               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9451   001C3C  0E00               	movlw	0
  9452   001C3E  2383               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9453   001C40                     
  9454                           ; BSR set to: 0
  9455   001C40  C082  F083         	movff	___flmul@grs+2,___flmul@grs+3
  9456   001C44  C081  F082         	movff	___flmul@grs+1,___flmul@grs+2
  9457   001C48  C080  F081         	movff	___flmul@grs,___flmul@grs+1
  9458   001C4C  6B80               	clrf	___flmul@grs& (0+255),b
  9459   001C4E  5176               	movf	___flmul@a& (0+255),w,b
  9460   001C50  0372               	mulwf	___flmul@b& (0+255),b
  9461   001C52  CFF3 F089          	movff	prodl,___flmul@temp
  9462   001C56  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9463   001C5A                     
  9464                           ; BSR set to: 0
  9465   001C5A  5189               	movf	___flmul@temp& (0+255),w,b
  9466   001C5C  2780               	addwf	___flmul@grs& (0+255),f,b
  9467   001C5E  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9468   001C60  2381               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9469   001C62  0E00               	movlw	0
  9470   001C64  2382               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9471   001C66  0E00               	movlw	0
  9472   001C68  2383               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9473   001C6A                     
  9474                           ; BSR set to: 0
  9475   001C6A  5178               	movf	(___flmul@a+2)& (0+255),w,b
  9476   001C6C  0373               	mulwf	(___flmul@b+1)& (0+255),b
  9477   001C6E  CFF3 F089          	movff	prodl,___flmul@temp
  9478   001C72  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9479   001C76  5189               	movf	___flmul@temp& (0+255),w,b
  9480   001C78  2785               	addwf	___flmul@prod& (0+255),f,b
  9481   001C7A  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9482   001C7C  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9483   001C7E  0E00               	movlw	0
  9484   001C80  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9485   001C82  0E00               	movlw	0
  9486   001C84  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9487   001C86                     
  9488                           ; BSR set to: 0
  9489   001C86  5177               	movf	(___flmul@a+1)& (0+255),w,b
  9490   001C88  0374               	mulwf	(___flmul@b+2)& (0+255),b
  9491   001C8A  CFF3 F089          	movff	prodl,___flmul@temp
  9492   001C8E  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9493   001C92                     
  9494                           ; BSR set to: 0
  9495   001C92  5189               	movf	___flmul@temp& (0+255),w,b
  9496   001C94  2785               	addwf	___flmul@prod& (0+255),f,b
  9497   001C96  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9498   001C98  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9499   001C9A  0E00               	movlw	0
  9500   001C9C  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9501   001C9E  0E00               	movlw	0
  9502   001CA0  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9503   001CA2  5178               	movf	(___flmul@a+2)& (0+255),w,b
  9504   001CA4  0374               	mulwf	(___flmul@b+2)& (0+255),b
  9505   001CA6  CFF3 F089          	movff	prodl,___flmul@temp
  9506   001CAA  CFF4 F08A          	movff	prodh,___flmul@temp+1
  9507   001CAE                     
  9508                           ; BSR set to: 0
  9509   001CAE  5189               	movf	___flmul@temp& (0+255),w,b
  9510   001CB0  6F7A               	movwf	??___flmul& (0+255),b
  9511   001CB2  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9512   001CB4  6F7B               	movwf	(??___flmul+1)& (0+255),b
  9513   001CB6  6B7C               	clrf	(??___flmul+2)& (0+255),b
  9514   001CB8  6B7D               	clrf	(??___flmul+3)& (0+255),b
  9515   001CBA  C07C  F07D         	movff	??___flmul+2,??___flmul+3
  9516   001CBE  C07B  F07C         	movff	??___flmul+1,??___flmul+2
  9517   001CC2  C07A  F07B         	movff	??___flmul,??___flmul+1
  9518   001CC6  6B7A               	clrf	??___flmul& (0+255),b
  9519   001CC8  517A               	movf	??___flmul& (0+255),w,b
  9520   001CCA  2785               	addwf	___flmul@prod& (0+255),f,b
  9521   001CCC  517B               	movf	(??___flmul+1)& (0+255),w,b
  9522   001CCE  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9523   001CD0  517C               	movf	(??___flmul+2)& (0+255),w,b
  9524   001CD2  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9525   001CD4  517D               	movf	(??___flmul+3)& (0+255),w,b
  9526   001CD6  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9527   001CD8                     
  9528                           ; BSR set to: 0
  9529   001CD8  C080  F07A         	movff	___flmul@grs,??___flmul
  9530   001CDC  C081  F07B         	movff	___flmul@grs+1,??___flmul+1
  9531   001CE0  C082  F07C         	movff	___flmul@grs+2,??___flmul+2
  9532   001CE4  C083  F07D         	movff	___flmul@grs+3,??___flmul+3
  9533   001CE8  0E19               	movlw	25
  9534   001CEA  EF7C  F00E         	goto	u7640
  9535   001CEE                     u7645:
  9536   001CEE  90D8               	bcf	status,0,c
  9537   001CF0  337D               	rrcf	(??___flmul+3)& (0+255),f,b
  9538   001CF2  337C               	rrcf	(??___flmul+2)& (0+255),f,b
  9539   001CF4  337B               	rrcf	(??___flmul+1)& (0+255),f,b
  9540   001CF6  337A               	rrcf	??___flmul& (0+255),f,b
  9541   001CF8                     u7640:
  9542   001CF8  2EE8               	decfsz	wreg,f,c
  9543   001CFA  EF77  F00E         	goto	u7645
  9544   001CFE  517A               	movf	??___flmul& (0+255),w,b
  9545   001D00  2785               	addwf	___flmul@prod& (0+255),f,b
  9546   001D02  517B               	movf	(??___flmul+1)& (0+255),w,b
  9547   001D04  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9548   001D06  517C               	movf	(??___flmul+2)& (0+255),w,b
  9549   001D08  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9550   001D0A  517D               	movf	(??___flmul+3)& (0+255),w,b
  9551   001D0C  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9552   001D0E                     
  9553                           ; BSR set to: 0
  9554   001D0E  C082  F083         	movff	___flmul@grs+2,___flmul@grs+3
  9555   001D12  C081  F082         	movff	___flmul@grs+1,___flmul@grs+2
  9556   001D16  C080  F081         	movff	___flmul@grs,___flmul@grs+1
  9557   001D1A  6B80               	clrf	___flmul@grs& (0+255),b
  9558   001D1C                     
  9559                           ; BSR set to: 0
  9560   001D1C  517F               	movf	___flmul@aexp& (0+255),w,b
  9561   001D1E  C084  F07A         	movff	___flmul@bexp,??___flmul
  9562   001D22  6B7B               	clrf	(??___flmul+1)& (0+255),b
  9563   001D24  277A               	addwf	??___flmul& (0+255),f,b
  9564   001D26  0E00               	movlw	0
  9565   001D28  237B               	addwfc	(??___flmul+1)& (0+255),f,b
  9566   001D2A  0E82               	movlw	130
  9567   001D2C  257A               	addwf	??___flmul& (0+255),w,b
  9568   001D2E  6F89               	movwf	___flmul@temp& (0+255),b
  9569   001D30  0EFF               	movlw	255
  9570   001D32  217B               	addwfc	(??___flmul+1)& (0+255),w,b
  9571   001D34  6F8A               	movwf	(___flmul@temp+1)& (0+255),b
  9572   001D36  EFB2  F00E         	goto	l6432
  9573   001D3A                     l6426:
  9574                           
  9575                           ; BSR set to: 0
  9576   001D3A  90D8               	bcf	status,0,c
  9577   001D3C  3785               	rlcf	___flmul@prod& (0+255),f,b
  9578   001D3E  3786               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9579   001D40  3787               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9580   001D42  3788               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9581   001D44                     
  9582                           ; BSR set to: 0
  9583   001D44  AF83               	btfss	(___flmul@grs+3)& (0+255),7,b
  9584   001D46  EFA7  F00E         	goto	u7651
  9585   001D4A  EFA9  F00E         	goto	u7650
  9586   001D4E                     u7651:
  9587   001D4E  EFAA  F00E         	goto	l1208
  9588   001D52                     u7650:
  9589   001D52                     
  9590                           ; BSR set to: 0
  9591   001D52  8185               	bsf	___flmul@prod& (0+255),0,b
  9592   001D54                     l1208:
  9593                           
  9594                           ; BSR set to: 0
  9595   001D54  90D8               	bcf	status,0,c
  9596   001D56  3780               	rlcf	___flmul@grs& (0+255),f,b
  9597   001D58  3781               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9598   001D5A  3782               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9599   001D5C  3783               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9600   001D5E  0789               	decf	___flmul@temp& (0+255),f,b
  9601   001D60  A0D8               	btfss	status,0,c
  9602   001D62  078A               	decf	(___flmul@temp+1)& (0+255),f,b
  9603   001D64                     l6432:
  9604                           
  9605                           ; BSR set to: 0
  9606   001D64  AF87               	btfss	(___flmul@prod+2)& (0+255),7,b
  9607   001D66  EFB7  F00E         	goto	u7661
  9608   001D6A  EFB9  F00E         	goto	u7660
  9609   001D6E                     u7661:
  9610   001D6E  EF9D  F00E         	goto	l6426
  9611   001D72                     u7660:
  9612   001D72                     
  9613                           ; BSR set to: 0
  9614   001D72  0E00               	movlw	0
  9615   001D74  6F7F               	movwf	___flmul@aexp& (0+255),b
  9616   001D76                     
  9617                           ; BSR set to: 0
  9618   001D76  AF83               	btfss	(___flmul@grs+3)& (0+255),7,b
  9619   001D78  EFC0  F00E         	goto	u7671
  9620   001D7C  EFC2  F00E         	goto	u7670
  9621   001D80                     u7671:
  9622   001D80  EFE6  F00E         	goto	l1210
  9623   001D84                     u7670:
  9624   001D84                     
  9625                           ; BSR set to: 0
  9626   001D84  0EFF               	movlw	255
  9627   001D86  1580               	andwf	___flmul@grs& (0+255),w,b
  9628   001D88  6F7A               	movwf	??___flmul& (0+255),b
  9629   001D8A  0EFF               	movlw	255
  9630   001D8C  1581               	andwf	(___flmul@grs+1)& (0+255),w,b
  9631   001D8E  6F7B               	movwf	(??___flmul+1)& (0+255),b
  9632   001D90  0EFF               	movlw	255
  9633   001D92  1582               	andwf	(___flmul@grs+2)& (0+255),w,b
  9634   001D94  6F7C               	movwf	(??___flmul+2)& (0+255),b
  9635   001D96  0E7F               	movlw	127
  9636   001D98  1583               	andwf	(___flmul@grs+3)& (0+255),w,b
  9637   001D9A  6F7D               	movwf	(??___flmul+3)& (0+255),b
  9638   001D9C  517A               	movf	??___flmul& (0+255),w,b
  9639   001D9E  117B               	iorwf	(??___flmul+1)& (0+255),w,b
  9640   001DA0  117C               	iorwf	(??___flmul+2)& (0+255),w,b
  9641   001DA2  117D               	iorwf	(??___flmul+3)& (0+255),w,b
  9642   001DA4  B4D8               	btfsc	status,2,c
  9643   001DA6  EFD7  F00E         	goto	u7681
  9644   001DAA  EFD9  F00E         	goto	u7680
  9645   001DAE                     u7681:
  9646   001DAE  EFDD  F00E         	goto	l1211
  9647   001DB2                     u7680:
  9648   001DB2                     l6440:
  9649                           
  9650                           ; BSR set to: 0
  9651   001DB2  0E01               	movlw	1
  9652   001DB4  6F7F               	movwf	___flmul@aexp& (0+255),b
  9653   001DB6  EFE6  F00E         	goto	l1210
  9654   001DBA                     l1211:
  9655                           
  9656                           ; BSR set to: 0
  9657   001DBA  A185               	btfss	___flmul@prod& (0+255),0,b
  9658   001DBC  EFE2  F00E         	goto	u7691
  9659   001DC0  EFE4  F00E         	goto	u7690
  9660   001DC4                     u7691:
  9661   001DC4  EFE6  F00E         	goto	l1210
  9662   001DC8                     u7690:
  9663   001DC8  EFD9  F00E         	goto	l6440
  9664   001DCC                     l1210:
  9665                           
  9666                           ; BSR set to: 0
  9667   001DCC  517F               	movf	___flmul@aexp& (0+255),w,b
  9668   001DCE  B4D8               	btfsc	status,2,c
  9669   001DD0  EFEC  F00E         	goto	u7701
  9670   001DD4  EFEE  F00E         	goto	u7700
  9671   001DD8                     u7701:
  9672   001DD8  EF12  F00F         	goto	l6452
  9673   001DDC                     u7700:
  9674   001DDC                     
  9675                           ; BSR set to: 0
  9676   001DDC  0E01               	movlw	1
  9677   001DDE  2785               	addwf	___flmul@prod& (0+255),f,b
  9678   001DE0  0E00               	movlw	0
  9679   001DE2  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9680   001DE4  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9681   001DE6  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9682   001DE8                     
  9683                           ; BSR set to: 0
  9684   001DE8  A188               	btfss	(___flmul@prod+3)& (0+255),0,b
  9685   001DEA  EFF9  F00E         	goto	u7711
  9686   001DEE  EFFB  F00E         	goto	u7710
  9687   001DF2                     u7711:
  9688   001DF2  EF12  F00F         	goto	l6452
  9689   001DF6                     u7710:
  9690   001DF6                     
  9691                           ; BSR set to: 0
  9692   001DF6  C085  F07A         	movff	___flmul@prod,??___flmul
  9693   001DFA  C086  F07B         	movff	___flmul@prod+1,??___flmul+1
  9694   001DFE  C087  F07C         	movff	___flmul@prod+2,??___flmul+2
  9695   001E02  C088  F07D         	movff	___flmul@prod+3,??___flmul+3
  9696   001E06  357D               	rlcf	(??___flmul+3)& (0+255),w,b
  9697   001E08  337D               	rrcf	(??___flmul+3)& (0+255),f,b
  9698   001E0A  337C               	rrcf	(??___flmul+2)& (0+255),f,b
  9699   001E0C  337B               	rrcf	(??___flmul+1)& (0+255),f,b
  9700   001E0E  337A               	rrcf	??___flmul& (0+255),f,b
  9701   001E10  C07A  F085         	movff	??___flmul,___flmul@prod
  9702   001E14  C07B  F086         	movff	??___flmul+1,___flmul@prod+1
  9703   001E18  C07C  F087         	movff	??___flmul+2,___flmul@prod+2
  9704   001E1C  C07D  F088         	movff	??___flmul+3,___flmul@prod+3
  9705   001E20                     
  9706                           ; BSR set to: 0
  9707   001E20  4B89               	infsnz	___flmul@temp& (0+255),f,b
  9708   001E22  2B8A               	incf	(___flmul@temp+1)& (0+255),f,b
  9709   001E24                     l6452:
  9710                           
  9711                           ; BSR set to: 0
  9712   001E24  BF8A               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9713   001E26  EF1D  F00F         	goto	u7721
  9714   001E2A  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9715   001E2C  E108               	bnz	u7720
  9716   001E2E  2989               	incf	___flmul@temp& (0+255),w,b
  9717   001E30  A0D8               	btfss	status,0,c
  9718   001E32  EF1D  F00F         	goto	u7721
  9719   001E36  EF1F  F00F         	goto	u7720
  9720   001E3A                     u7721:
  9721   001E3A  EF29  F00F         	goto	l6456
  9722   001E3E                     u7720:
  9723   001E3E                     
  9724                           ; BSR set to: 0
  9725   001E3E  0E00               	movlw	0
  9726   001E40  6F85               	movwf	___flmul@prod& (0+255),b
  9727   001E42  0E00               	movlw	0
  9728   001E44  6F86               	movwf	(___flmul@prod+1)& (0+255),b
  9729   001E46  0E80               	movlw	128
  9730   001E48  6F87               	movwf	(___flmul@prod+2)& (0+255),b
  9731   001E4A  0E7F               	movlw	127
  9732   001E4C  6F88               	movwf	(___flmul@prod+3)& (0+255),b
  9733   001E4E  EF57  F00F         	goto	l6468
  9734   001E52                     l6456:
  9735                           
  9736                           ; BSR set to: 0
  9737   001E52  BF8A               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9738   001E54  EF36  F00F         	goto	u7730
  9739   001E58  518A               	movf	(___flmul@temp+1)& (0+255),w,b
  9740   001E5A  E106               	bnz	u7731
  9741   001E5C  0589               	decf	___flmul@temp& (0+255),w,b
  9742   001E5E  B0D8               	btfsc	status,0,c
  9743   001E60  EF34  F00F         	goto	u7731
  9744   001E64  EF36  F00F         	goto	u7730
  9745   001E68                     u7731:
  9746   001E68  EF42  F00F         	goto	l1218
  9747   001E6C                     u7730:
  9748   001E6C                     
  9749                           ; BSR set to: 0
  9750   001E6C  0E00               	movlw	0
  9751   001E6E  6F85               	movwf	___flmul@prod& (0+255),b
  9752   001E70  0E00               	movlw	0
  9753   001E72  6F86               	movwf	(___flmul@prod+1)& (0+255),b
  9754   001E74  0E00               	movlw	0
  9755   001E76  6F87               	movwf	(___flmul@prod+2)& (0+255),b
  9756   001E78  0E00               	movlw	0
  9757   001E7A  6F88               	movwf	(___flmul@prod+3)& (0+255),b
  9758   001E7C  0E00               	movlw	0
  9759   001E7E  6F7E               	movwf	___flmul@sign& (0+255),b
  9760   001E80  EF57  F00F         	goto	l6468
  9761   001E84                     l1218:
  9762                           
  9763                           ; BSR set to: 0
  9764   001E84  C089  F084         	movff	___flmul@temp,___flmul@bexp
  9765   001E88                     
  9766                           ; BSR set to: 0
  9767   001E88  0EFF               	movlw	255
  9768   001E8A  1785               	andwf	___flmul@prod& (0+255),f,b
  9769   001E8C  0EFF               	movlw	255
  9770   001E8E  1786               	andwf	(___flmul@prod+1)& (0+255),f,b
  9771   001E90  0E7F               	movlw	127
  9772   001E92  1787               	andwf	(___flmul@prod+2)& (0+255),f,b
  9773   001E94  0E00               	movlw	0
  9774   001E96  1788               	andwf	(___flmul@prod+3)& (0+255),f,b
  9775   001E98                     
  9776                           ; BSR set to: 0
  9777   001E98  A184               	btfss	___flmul@bexp& (0+255),0,b
  9778   001E9A  EF51  F00F         	goto	u7741
  9779   001E9E  EF53  F00F         	goto	u7740
  9780   001EA2                     u7741:
  9781   001EA2  EF54  F00F         	goto	l6466
  9782   001EA6                     u7740:
  9783   001EA6                     
  9784                           ; BSR set to: 0
  9785   001EA6  8F87               	bsf	(___flmul@prod+2)& (0+255),7,b
  9786   001EA8                     l6466:
  9787                           
  9788                           ; BSR set to: 0
  9789   001EA8  90D8               	bcf	status,0,c
  9790   001EAA  3184               	rrcf	___flmul@bexp& (0+255),w,b
  9791   001EAC  6F88               	movwf	(___flmul@prod+3)& (0+255),b
  9792   001EAE                     l6468:
  9793                           
  9794                           ; BSR set to: 0
  9795   001EAE  517E               	movf	___flmul@sign& (0+255),w,b
  9796   001EB0  1388               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9797   001EB2                     
  9798                           ; BSR set to: 0
  9799   001EB2  C085  F072         	movff	___flmul@prod,?___flmul
  9800   001EB6  C086  F073         	movff	___flmul@prod+1,?___flmul+1
  9801   001EBA  C087  F074         	movff	___flmul@prod+2,?___flmul+2
  9802   001EBE  C088  F075         	movff	___flmul@prod+3,?___flmul+3
  9803   001EC2                     l1205:
  9804                           
  9805                           ; BSR set to: 0
  9806   001EC2  0012               	return		;funcret
  9807   001EC4                     __end_of___flmul:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function ___flge *****************
  9811 ;; Defined at:
  9812 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  ff1             4   43[BANK0 ] unsigned char 
  9815 ;;  ff2             4   47[BANK0 ] unsigned char 
  9816 ;; Auto vars:     Size  Location     Type
  9817 ;;		None
  9818 ;; Return value:  Size  Location     Type
  9819 ;;		None               void
  9820 ;; Registers used:
  9821 ;;		wreg, status,2, status,0
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9827 ;;      Params:         0       8       0       0       0       0       0
  9828 ;;      Locals:         0       0       0       0       0       0       0
  9829 ;;      Temps:          0       4       0       0       0       0       0
  9830 ;;      Totals:         0      12       0       0       0       0       0
  9831 ;;Total ram usage:       12 bytes
  9832 ;; Hardware stack levels used: 1
  9833 ;; Hardware stack levels required when called: 3
  9834 ;; This function calls:
  9835 ;;		Nothing
  9836 ;; This function is called by:
  9837 ;;		_automatic
  9838 ;;		_efgtoa
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text37
  9843   003FC6                     __ptext37:
  9844                           	callstack 0
  9845   003FC6                     ___flge:
  9846                           	callstack 19
  9847   003FC6  0E00               	movlw	0
  9848   003FC8  0100               	movlb	0	; () banked
  9849   003FCA  158B               	andwf	___flge@ff1& (0+255),w,b
  9850   003FCC  6F93               	movwf	??___flge& (0+255),b
  9851   003FCE  0E00               	movlw	0
  9852   003FD0  158C               	andwf	(___flge@ff1+1)& (0+255),w,b
  9853   003FD2  6F94               	movwf	(??___flge+1)& (0+255),b
  9854   003FD4  0E80               	movlw	128
  9855   003FD6  158D               	andwf	(___flge@ff1+2)& (0+255),w,b
  9856   003FD8  6F95               	movwf	(??___flge+2)& (0+255),b
  9857   003FDA  0E7F               	movlw	127
  9858   003FDC  158E               	andwf	(___flge@ff1+3)& (0+255),w,b
  9859   003FDE  6F96               	movwf	(??___flge+3)& (0+255),b
  9860   003FE0  5193               	movf	??___flge& (0+255),w,b
  9861   003FE2  1194               	iorwf	(??___flge+1)& (0+255),w,b
  9862   003FE4  1195               	iorwf	(??___flge+2)& (0+255),w,b
  9863   003FE6  1196               	iorwf	(??___flge+3)& (0+255),w,b
  9864   003FE8  A4D8               	btfss	status,2,c
  9865   003FEA  EFF9  F01F         	goto	u7901
  9866   003FEE  EFFB  F01F         	goto	u7900
  9867   003FF2                     u7901:
  9868   003FF2  EF03  F020         	goto	l6580
  9869   003FF6                     u7900:
  9870   003FF6                     
  9871                           ; BSR set to: 0
  9872   003FF6  0E00               	movlw	0
  9873   003FF8  6F8B               	movwf	___flge@ff1& (0+255),b
  9874   003FFA  0E00               	movlw	0
  9875   003FFC  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
  9876   003FFE  0E00               	movlw	0
  9877   004000  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
  9878   004002  0E00               	movlw	0
  9879   004004  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
  9880   004006                     l6580:
  9881                           
  9882                           ; BSR set to: 0
  9883   004006  0E00               	movlw	0
  9884   004008  158F               	andwf	___flge@ff2& (0+255),w,b
  9885   00400A  6F93               	movwf	??___flge& (0+255),b
  9886   00400C  0E00               	movlw	0
  9887   00400E  1590               	andwf	(___flge@ff2+1)& (0+255),w,b
  9888   004010  6F94               	movwf	(??___flge+1)& (0+255),b
  9889   004012  0E80               	movlw	128
  9890   004014  1591               	andwf	(___flge@ff2+2)& (0+255),w,b
  9891   004016  6F95               	movwf	(??___flge+2)& (0+255),b
  9892   004018  0E7F               	movlw	127
  9893   00401A  1592               	andwf	(___flge@ff2+3)& (0+255),w,b
  9894   00401C  6F96               	movwf	(??___flge+3)& (0+255),b
  9895   00401E  5193               	movf	??___flge& (0+255),w,b
  9896   004020  1194               	iorwf	(??___flge+1)& (0+255),w,b
  9897   004022  1195               	iorwf	(??___flge+2)& (0+255),w,b
  9898   004024  1196               	iorwf	(??___flge+3)& (0+255),w,b
  9899   004026  A4D8               	btfss	status,2,c
  9900   004028  EF18  F020         	goto	u7911
  9901   00402C  EF1A  F020         	goto	u7910
  9902   004030                     u7911:
  9903   004030  EF22  F020         	goto	l6584
  9904   004034                     u7910:
  9905   004034                     
  9906                           ; BSR set to: 0
  9907   004034  0E00               	movlw	0
  9908   004036  6F8F               	movwf	___flge@ff2& (0+255),b
  9909   004038  0E00               	movlw	0
  9910   00403A  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  9911   00403C  0E00               	movlw	0
  9912   00403E  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  9913   004040  0E00               	movlw	0
  9914   004042  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  9915   004044                     l6584:
  9916                           
  9917                           ; BSR set to: 0
  9918   004044  AF8E               	btfss	(___flge@ff1+3)& (0+255),7,b
  9919   004046  EF27  F020         	goto	u7921
  9920   00404A  EF29  F020         	goto	u7920
  9921   00404E                     u7921:
  9922   00404E  EF32  F020         	goto	l6588
  9923   004052                     u7920:
  9924   004052                     
  9925                           ; BSR set to: 0
  9926   004052  6D8B               	negf	___flge@ff1& (0+255),b
  9927   004054  1F8C               	comf	(___flge@ff1+1)& (0+255),f,b
  9928   004056  B0D8               	btfsc	status,0,c
  9929   004058  2B8C               	incf	(___flge@ff1+1)& (0+255),f,b
  9930   00405A  1F8D               	comf	(___flge@ff1+2)& (0+255),f,b
  9931   00405C  B0D8               	btfsc	status,0,c
  9932   00405E  2B8D               	incf	(___flge@ff1+2)& (0+255),f,b
  9933   004060  0E80               	movlw	128
  9934   004062  578E               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9935   004064                     l6588:
  9936                           
  9937                           ; BSR set to: 0
  9938   004064  AF92               	btfss	(___flge@ff2+3)& (0+255),7,b
  9939   004066  EF37  F020         	goto	u7931
  9940   00406A  EF39  F020         	goto	u7930
  9941   00406E                     u7931:
  9942   00406E  EF42  F020         	goto	l852
  9943   004072                     u7930:
  9944   004072                     
  9945                           ; BSR set to: 0
  9946   004072  6D8F               	negf	___flge@ff2& (0+255),b
  9947   004074  1F90               	comf	(___flge@ff2+1)& (0+255),f,b
  9948   004076  B0D8               	btfsc	status,0,c
  9949   004078  2B90               	incf	(___flge@ff2+1)& (0+255),f,b
  9950   00407A  1F91               	comf	(___flge@ff2+2)& (0+255),f,b
  9951   00407C  B0D8               	btfsc	status,0,c
  9952   00407E  2B91               	incf	(___flge@ff2+2)& (0+255),f,b
  9953   004080  0E80               	movlw	128
  9954   004082  5792               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9955   004084                     l852:
  9956                           
  9957                           ; BSR set to: 0
  9958   004084  0E00               	movlw	0
  9959   004086  1B8B               	xorwf	___flge@ff1& (0+255),f,b
  9960   004088  0E00               	movlw	0
  9961   00408A  1B8C               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9962   00408C  0E00               	movlw	0
  9963   00408E  1B8D               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9964   004090  0E80               	movlw	128
  9965   004092  1B8E               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9966   004094  0E00               	movlw	0
  9967   004096  1B8F               	xorwf	___flge@ff2& (0+255),f,b
  9968   004098  0E00               	movlw	0
  9969   00409A  1B90               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9970   00409C  0E00               	movlw	0
  9971   00409E  1B91               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9972   0040A0  0E80               	movlw	128
  9973   0040A2  1B92               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9974   0040A4  518F               	movf	___flge@ff2& (0+255),w,b
  9975   0040A6  5D8B               	subwf	___flge@ff1& (0+255),w,b
  9976   0040A8  5190               	movf	(___flge@ff2+1)& (0+255),w,b
  9977   0040AA  598C               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9978   0040AC  5191               	movf	(___flge@ff2+2)& (0+255),w,b
  9979   0040AE  598D               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9980   0040B0  5192               	movf	(___flge@ff2+3)& (0+255),w,b
  9981   0040B2  598E               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9982   0040B4  B0D8               	btfsc	status,0,c
  9983   0040B6  EF5F  F020         	goto	u7941
  9984   0040BA  EF61  F020         	goto	u7940
  9985   0040BE                     u7941:
  9986   0040BE  EF64  F020         	goto	l6594
  9987   0040C2                     u7940:
  9988   0040C2                     
  9989                           ; BSR set to: 0
  9990   0040C2  90D8               	bcf	status,0,c
  9991   0040C4  EF65  F020         	goto	l857
  9992   0040C8                     l6594:
  9993                           
  9994                           ; BSR set to: 0
  9995   0040C8  80D8               	bsf	status,0,c
  9996   0040CA                     l857:
  9997                           
  9998                           ; BSR set to: 0
  9999   0040CA  0012               	return		;funcret
 10000   0040CC                     __end_of___flge:
 10001                           	callstack 0
 10002                           
 10003 ;; *************** function ___fleq *****************
 10004 ;; Defined at:
 10005 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  ff1             4    4[BANK0 ] unsigned char 
 10008 ;;  ff2             4    8[BANK0 ] unsigned char 
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;		None               void
 10013 ;; Registers used:
 10014 ;;		wreg, status,2, status,0
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10020 ;;      Params:         0       8       0       0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0
 10022 ;;      Temps:          0       4       0       0       0       0       0
 10023 ;;      Totals:         0      12       0       0       0       0       0
 10024 ;;Total ram usage:       12 bytes
 10025 ;; Hardware stack levels used: 1
 10026 ;; Hardware stack levels required when called: 3
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_efgtoa
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text38
 10035   004812                     __ptext38:
 10036                           	callstack 0
 10037   004812                     ___fleq:
 10038                           	callstack 19
 10039   004812  0E00               	movlw	0
 10040   004814  0100               	movlb	0	; () banked
 10041   004816  1564               	andwf	___fleq@ff1& (0+255),w,b
 10042   004818  6F6C               	movwf	??___fleq& (0+255),b
 10043   00481A  0E00               	movlw	0
 10044   00481C  1565               	andwf	(___fleq@ff1+1)& (0+255),w,b
 10045   00481E  6F6D               	movwf	(??___fleq+1)& (0+255),b
 10046   004820  0E80               	movlw	128
 10047   004822  1566               	andwf	(___fleq@ff1+2)& (0+255),w,b
 10048   004824  6F6E               	movwf	(??___fleq+2)& (0+255),b
 10049   004826  0E7F               	movlw	127
 10050   004828  1567               	andwf	(___fleq@ff1+3)& (0+255),w,b
 10051   00482A  6F6F               	movwf	(??___fleq+3)& (0+255),b
 10052   00482C  516C               	movf	??___fleq& (0+255),w,b
 10053   00482E  116D               	iorwf	(??___fleq+1)& (0+255),w,b
 10054   004830  116E               	iorwf	(??___fleq+2)& (0+255),w,b
 10055   004832  116F               	iorwf	(??___fleq+3)& (0+255),w,b
 10056   004834  A4D8               	btfss	status,2,c
 10057   004836  EF1F  F024         	goto	u7871
 10058   00483A  EF21  F024         	goto	u7870
 10059   00483E                     u7871:
 10060   00483E  EF29  F024         	goto	l6564
 10061   004842                     u7870:
 10062   004842                     
 10063                           ; BSR set to: 0
 10064   004842  0E00               	movlw	0
 10065   004844  6F64               	movwf	___fleq@ff1& (0+255),b
 10066   004846  0E00               	movlw	0
 10067   004848  6F65               	movwf	(___fleq@ff1+1)& (0+255),b
 10068   00484A  0E00               	movlw	0
 10069   00484C  6F66               	movwf	(___fleq@ff1+2)& (0+255),b
 10070   00484E  0E00               	movlw	0
 10071   004850  6F67               	movwf	(___fleq@ff1+3)& (0+255),b
 10072   004852                     l6564:
 10073                           
 10074                           ; BSR set to: 0
 10075   004852  0E00               	movlw	0
 10076   004854  1568               	andwf	___fleq@ff2& (0+255),w,b
 10077   004856  6F6C               	movwf	??___fleq& (0+255),b
 10078   004858  0E00               	movlw	0
 10079   00485A  1569               	andwf	(___fleq@ff2+1)& (0+255),w,b
 10080   00485C  6F6D               	movwf	(??___fleq+1)& (0+255),b
 10081   00485E  0E80               	movlw	128
 10082   004860  156A               	andwf	(___fleq@ff2+2)& (0+255),w,b
 10083   004862  6F6E               	movwf	(??___fleq+2)& (0+255),b
 10084   004864  0E7F               	movlw	127
 10085   004866  156B               	andwf	(___fleq@ff2+3)& (0+255),w,b
 10086   004868  6F6F               	movwf	(??___fleq+3)& (0+255),b
 10087   00486A  516C               	movf	??___fleq& (0+255),w,b
 10088   00486C  116D               	iorwf	(??___fleq+1)& (0+255),w,b
 10089   00486E  116E               	iorwf	(??___fleq+2)& (0+255),w,b
 10090   004870  116F               	iorwf	(??___fleq+3)& (0+255),w,b
 10091   004872  A4D8               	btfss	status,2,c
 10092   004874  EF3E  F024         	goto	u7881
 10093   004878  EF40  F024         	goto	u7880
 10094   00487C                     u7881:
 10095   00487C  EF48  F024         	goto	l6568
 10096   004880                     u7880:
 10097   004880                     
 10098                           ; BSR set to: 0
 10099   004880  0E00               	movlw	0
 10100   004882  6F68               	movwf	___fleq@ff2& (0+255),b
 10101   004884  0E00               	movlw	0
 10102   004886  6F69               	movwf	(___fleq@ff2+1)& (0+255),b
 10103   004888  0E00               	movlw	0
 10104   00488A  6F6A               	movwf	(___fleq@ff2+2)& (0+255),b
 10105   00488C  0E00               	movlw	0
 10106   00488E  6F6B               	movwf	(___fleq@ff2+3)& (0+255),b
 10107   004890                     l6568:
 10108                           
 10109                           ; BSR set to: 0
 10110   004890  5168               	movf	___fleq@ff2& (0+255),w,b
 10111   004892  1964               	xorwf	___fleq@ff1& (0+255),w,b
 10112   004894  E10F               	bnz	u7890
 10113   004896  5169               	movf	(___fleq@ff2+1)& (0+255),w,b
 10114   004898  1965               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 10115   00489A  E10C               	bnz	u7890
 10116   00489C  516A               	movf	(___fleq@ff2+2)& (0+255),w,b
 10117   00489E  1966               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 10118   0048A0  E109               	bnz	u7890
 10119   0048A2  516B               	movf	(___fleq@ff2+3)& (0+255),w,b
 10120   0048A4  1967               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 10121   0048A6  B4D8               	btfsc	status,2,c
 10122   0048A8  EF58  F024         	goto	u7891
 10123   0048AC  EF5A  F024         	goto	u7890
 10124   0048B0                     u7891:
 10125   0048B0  EF5D  F024         	goto	l6572
 10126   0048B4                     u7890:
 10127   0048B4                     
 10128                           ; BSR set to: 0
 10129   0048B4  90D8               	bcf	status,0,c
 10130   0048B6  EF5E  F024         	goto	l846
 10131   0048BA                     l6572:
 10132                           
 10133                           ; BSR set to: 0
 10134   0048BA  80D8               	bsf	status,0,c
 10135   0048BC                     l846:
 10136                           
 10137                           ; BSR set to: 0
 10138   0048BC  0012               	return		;funcret
 10139   0048BE                     __end_of___fleq:
 10140                           	callstack 0
 10141                           
 10142 ;; *************** function ___fldiv *****************
 10143 ;; Defined at:
 10144 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  b               4   43[BANK0 ] unsigned char 
 10147 ;;  a               4   47[BANK0 ] unsigned char 
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;  grs             4   62[BANK0 ] unsigned long 
 10150 ;;  rem             4   55[BANK0 ] unsigned long 
 10151 ;;  new_exp         2   60[BANK0 ] short 
 10152 ;;  aexp            1   67[BANK0 ] unsigned char 
 10153 ;;  bexp            1   66[BANK0 ] unsigned char 
 10154 ;;  sign            1   59[BANK0 ] unsigned char 
 10155 ;; Return value:  Size  Location     Type
 10156 ;;                  4   43[BANK0 ] unsigned char 
 10157 ;; Registers used:
 10158 ;;		wreg, status,2, status,0
 10159 ;; Tracked objects:
 10160 ;;		On entry : 0/0
 10161 ;;		On exit  : 0/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10164 ;;      Params:         0       8       0       0       0       0       0
 10165 ;;      Locals:         0      13       0       0       0       0       0
 10166 ;;      Temps:          0       4       0       0       0       0       0
 10167 ;;      Totals:         0      25       0       0       0       0       0
 10168 ;;Total ram usage:       25 bytes
 10169 ;; Hardware stack levels used: 1
 10170 ;; Hardware stack levels required when called: 3
 10171 ;; This function calls:
 10172 ;;		Nothing
 10173 ;; This function is called by:
 10174 ;;		_Data2LCD
 10175 ;;		_efgtoa
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           	psect	text39
 10180   0022EE                     __ptext39:
 10181                           	callstack 0
 10182   0022EE                     ___fldiv:
 10183                           	callstack 19
 10184   0022EE  0100               	movlb	0	; () banked
 10185   0022F0  518E               	movf	(___fldiv@b+3)& (0+255),w,b
 10186   0022F2  0B80               	andlw	128
 10187   0022F4  6F9B               	movwf	___fldiv@sign& (0+255),b
 10188   0022F6  518E               	movf	(___fldiv@b+3)& (0+255),w,b
 10189   0022F8  258E               	addwf	(___fldiv@b+3)& (0+255),w,b
 10190   0022FA  6FA2               	movwf	___fldiv@bexp& (0+255),b
 10191   0022FC                     
 10192                           ; BSR set to: 0
 10193   0022FC  AF8D               	btfss	(___fldiv@b+2)& (0+255),7,b
 10194   0022FE  EF83  F011         	goto	u7331
 10195   002302  EF85  F011         	goto	u7330
 10196   002306                     u7331:
 10197   002306  EF86  F011         	goto	l6212
 10198   00230A                     u7330:
 10199   00230A                     
 10200                           ; BSR set to: 0
 10201   00230A  81A2               	bsf	___fldiv@bexp& (0+255),0,b
 10202   00230C                     l6212:
 10203                           
 10204                           ; BSR set to: 0
 10205   00230C  51A2               	movf	___fldiv@bexp& (0+255),w,b
 10206   00230E  B4D8               	btfsc	status,2,c
 10207   002310  EF8C  F011         	goto	u7341
 10208   002314  EF8E  F011         	goto	u7340
 10209   002318                     u7341:
 10210   002318  EFA3  F011         	goto	l6222
 10211   00231C                     u7340:
 10212   00231C                     
 10213                           ; BSR set to: 0
 10214   00231C  29A2               	incf	___fldiv@bexp& (0+255),w,b
 10215   00231E  A4D8               	btfss	status,2,c
 10216   002320  EF94  F011         	goto	u7351
 10217   002324  EF96  F011         	goto	u7350
 10218   002328                     u7351:
 10219   002328  EF9E  F011         	goto	l6218
 10220   00232C                     u7350:
 10221   00232C                     
 10222                           ; BSR set to: 0
 10223   00232C  0E00               	movlw	0
 10224   00232E  6F8B               	movwf	___fldiv@b& (0+255),b
 10225   002330  0E00               	movlw	0
 10226   002332  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
 10227   002334  0E00               	movlw	0
 10228   002336  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
 10229   002338  0E00               	movlw	0
 10230   00233A  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10231   00233C                     l6218:
 10232                           
 10233                           ; BSR set to: 0
 10234   00233C  8F8D               	bsf	(___fldiv@b+2)& (0+255),7,b
 10235   00233E                     
 10236                           ; BSR set to: 0
 10237   00233E  0E00               	movlw	0
 10238   002340  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10239   002342  EFAB  F011         	goto	l6224
 10240   002346                     l6222:
 10241                           
 10242                           ; BSR set to: 0
 10243   002346  0E00               	movlw	0
 10244   002348  6F8B               	movwf	___fldiv@b& (0+255),b
 10245   00234A  0E00               	movlw	0
 10246   00234C  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
 10247   00234E  0E00               	movlw	0
 10248   002350  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
 10249   002352  0E00               	movlw	0
 10250   002354  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10251   002356                     l6224:
 10252                           
 10253                           ; BSR set to: 0
 10254   002356  5192               	movf	(___fldiv@a+3)& (0+255),w,b
 10255   002358  0B80               	andlw	128
 10256   00235A  1B9B               	xorwf	___fldiv@sign& (0+255),f,b
 10257   00235C                     
 10258                           ; BSR set to: 0
 10259   00235C  5192               	movf	(___fldiv@a+3)& (0+255),w,b
 10260   00235E  2592               	addwf	(___fldiv@a+3)& (0+255),w,b
 10261   002360  6FA3               	movwf	___fldiv@aexp& (0+255),b
 10262   002362                     
 10263                           ; BSR set to: 0
 10264   002362  AF91               	btfss	(___fldiv@a+2)& (0+255),7,b
 10265   002364  EFB6  F011         	goto	u7361
 10266   002368  EFB8  F011         	goto	u7360
 10267   00236C                     u7361:
 10268   00236C  EFB9  F011         	goto	l6232
 10269   002370                     u7360:
 10270   002370                     
 10271                           ; BSR set to: 0
 10272   002370  81A3               	bsf	___fldiv@aexp& (0+255),0,b
 10273   002372                     l6232:
 10274                           
 10275                           ; BSR set to: 0
 10276   002372  51A3               	movf	___fldiv@aexp& (0+255),w,b
 10277   002374  B4D8               	btfsc	status,2,c
 10278   002376  EFBF  F011         	goto	u7371
 10279   00237A  EFC1  F011         	goto	u7370
 10280   00237E                     u7371:
 10281   00237E  EFD6  F011         	goto	l6242
 10282   002382                     u7370:
 10283   002382                     
 10284                           ; BSR set to: 0
 10285   002382  29A3               	incf	___fldiv@aexp& (0+255),w,b
 10286   002384  A4D8               	btfss	status,2,c
 10287   002386  EFC7  F011         	goto	u7381
 10288   00238A  EFC9  F011         	goto	u7380
 10289   00238E                     u7381:
 10290   00238E  EFD1  F011         	goto	l6238
 10291   002392                     u7380:
 10292   002392                     
 10293                           ; BSR set to: 0
 10294   002392  0E00               	movlw	0
 10295   002394  6F8F               	movwf	___fldiv@a& (0+255),b
 10296   002396  0E00               	movlw	0
 10297   002398  6F90               	movwf	(___fldiv@a+1)& (0+255),b
 10298   00239A  0E00               	movlw	0
 10299   00239C  6F91               	movwf	(___fldiv@a+2)& (0+255),b
 10300   00239E  0E00               	movlw	0
 10301   0023A0  6F92               	movwf	(___fldiv@a+3)& (0+255),b
 10302   0023A2                     l6238:
 10303                           
 10304                           ; BSR set to: 0
 10305   0023A2  8F91               	bsf	(___fldiv@a+2)& (0+255),7,b
 10306   0023A4                     
 10307                           ; BSR set to: 0
 10308   0023A4  0E00               	movlw	0
 10309   0023A6  6F92               	movwf	(___fldiv@a+3)& (0+255),b
 10310   0023A8  EFDE  F011         	goto	l6244
 10311   0023AC                     l6242:
 10312                           
 10313                           ; BSR set to: 0
 10314   0023AC  0E00               	movlw	0
 10315   0023AE  6F8F               	movwf	___fldiv@a& (0+255),b
 10316   0023B0  0E00               	movlw	0
 10317   0023B2  6F90               	movwf	(___fldiv@a+1)& (0+255),b
 10318   0023B4  0E00               	movlw	0
 10319   0023B6  6F91               	movwf	(___fldiv@a+2)& (0+255),b
 10320   0023B8  0E00               	movlw	0
 10321   0023BA  6F92               	movwf	(___fldiv@a+3)& (0+255),b
 10322   0023BC                     l6244:
 10323                           
 10324                           ; BSR set to: 0
 10325   0023BC  518F               	movf	___fldiv@a& (0+255),w,b
 10326   0023BE  1190               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10327   0023C0  1191               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10328   0023C2  1192               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10329   0023C4  A4D8               	btfss	status,2,c
 10330   0023C6  EFE7  F011         	goto	u7391
 10331   0023CA  EFE9  F011         	goto	u7390
 10332   0023CE                     u7391:
 10333   0023CE  EF01  F012         	goto	l6256
 10334   0023D2                     u7390:
 10335   0023D2                     
 10336                           ; BSR set to: 0
 10337   0023D2  0E00               	movlw	0
 10338   0023D4  6F8B               	movwf	___fldiv@b& (0+255),b
 10339   0023D6  0E00               	movlw	0
 10340   0023D8  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
 10341   0023DA  0E00               	movlw	0
 10342   0023DC  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
 10343   0023DE  0E00               	movlw	0
 10344   0023E0  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10345   0023E2                     
 10346                           ; BSR set to: 0
 10347   0023E2  0E80               	movlw	128
 10348   0023E4  138D               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10349   0023E6  0E7F               	movlw	127
 10350   0023E8  138E               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10351   0023EA                     l6250:
 10352                           
 10353                           ; BSR set to: 0
 10354   0023EA  519B               	movf	___fldiv@sign& (0+255),w,b
 10355   0023EC  138E               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10356   0023EE                     
 10357                           ; BSR set to: 0
 10358   0023EE  C08B  F08B         	movff	___fldiv@b,?___fldiv
 10359   0023F2  C08C  F08C         	movff	___fldiv@b+1,?___fldiv+1
 10360   0023F6  C08D  F08D         	movff	___fldiv@b+2,?___fldiv+2
 10361   0023FA  C08E  F08E         	movff	___fldiv@b+3,?___fldiv+3
 10362   0023FE  EF44  F013         	goto	l1169
 10363   002402                     l6256:
 10364                           
 10365                           ; BSR set to: 0
 10366   002402  51A2               	movf	___fldiv@bexp& (0+255),w,b
 10367   002404  A4D8               	btfss	status,2,c
 10368   002406  EF07  F012         	goto	u7401
 10369   00240A  EF09  F012         	goto	u7400
 10370   00240E                     u7401:
 10371   00240E  EF13  F012         	goto	l6264
 10372   002412                     u7400:
 10373   002412                     
 10374                           ; BSR set to: 0
 10375   002412  0E00               	movlw	0
 10376   002414  6F8B               	movwf	?___fldiv& (0+255),b
 10377   002416  0E00               	movlw	0
 10378   002418  6F8C               	movwf	(?___fldiv+1)& (0+255),b
 10379   00241A  0E00               	movlw	0
 10380   00241C  6F8D               	movwf	(?___fldiv+2)& (0+255),b
 10381   00241E  0E00               	movlw	0
 10382   002420  6F8E               	movwf	(?___fldiv+3)& (0+255),b
 10383   002422  EF44  F013         	goto	l1169
 10384   002426                     l6264:
 10385                           
 10386                           ; BSR set to: 0
 10387   002426  51A3               	movf	___fldiv@aexp& (0+255),w,b
 10388   002428  C0A2  F093         	movff	___fldiv@bexp,??___fldiv
 10389   00242C  6B94               	clrf	(??___fldiv+1)& (0+255),b
 10390   00242E  5F93               	subwf	??___fldiv& (0+255),f,b
 10391   002430  0E00               	movlw	0
 10392   002432  5B94               	subwfb	(??___fldiv+1)& (0+255),f,b
 10393   002434  0E7F               	movlw	127
 10394   002436  2593               	addwf	??___fldiv& (0+255),w,b
 10395   002438  6F9C               	movwf	___fldiv@new_exp& (0+255),b
 10396   00243A  0E00               	movlw	0
 10397   00243C  2194               	addwfc	(??___fldiv+1)& (0+255),w,b
 10398   00243E  6F9D               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10399   002440                     
 10400                           ; BSR set to: 0
 10401   002440  C08B  F097         	movff	___fldiv@b,___fldiv@rem
 10402   002444  C08C  F098         	movff	___fldiv@b+1,___fldiv@rem+1
 10403   002448  C08D  F099         	movff	___fldiv@b+2,___fldiv@rem+2
 10404   00244C  C08E  F09A         	movff	___fldiv@b+3,___fldiv@rem+3
 10405   002450                     
 10406                           ; BSR set to: 0
 10407   002450  0E00               	movlw	0
 10408   002452  6F8B               	movwf	___fldiv@b& (0+255),b
 10409   002454  0E00               	movlw	0
 10410   002456  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
 10411   002458  0E00               	movlw	0
 10412   00245A  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
 10413   00245C  0E00               	movlw	0
 10414   00245E  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10415   002460                     
 10416                           ; BSR set to: 0
 10417   002460  0E00               	movlw	0
 10418   002462  6F9E               	movwf	___fldiv@grs& (0+255),b
 10419   002464  0E00               	movlw	0
 10420   002466  6F9F               	movwf	(___fldiv@grs+1)& (0+255),b
 10421   002468  0E00               	movlw	0
 10422   00246A  6FA0               	movwf	(___fldiv@grs+2)& (0+255),b
 10423   00246C  0E00               	movlw	0
 10424   00246E  6FA1               	movwf	(___fldiv@grs+3)& (0+255),b
 10425   002470                     
 10426                           ; BSR set to: 0
 10427   002470  0E00               	movlw	0
 10428   002472  6FA3               	movwf	___fldiv@aexp& (0+255),b
 10429   002474  EF74  F012         	goto	l1171
 10430   002478                     l6274:
 10431                           
 10432                           ; BSR set to: 0
 10433   002478  51A3               	movf	___fldiv@aexp& (0+255),w,b
 10434   00247A  B4D8               	btfsc	status,2,c
 10435   00247C  EF42  F012         	goto	u7411
 10436   002480  EF44  F012         	goto	u7410
 10437   002484                     u7411:
 10438   002484  EF5B  F012         	goto	l6282
 10439   002488                     u7410:
 10440   002488                     
 10441                           ; BSR set to: 0
 10442   002488  90D8               	bcf	status,0,c
 10443   00248A  3797               	rlcf	___fldiv@rem& (0+255),f,b
 10444   00248C  3798               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10445   00248E  3799               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10446   002490  379A               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10447   002492  90D8               	bcf	status,0,c
 10448   002494  378B               	rlcf	___fldiv@b& (0+255),f,b
 10449   002496  378C               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10450   002498  378D               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10451   00249A  378E               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10452   00249C                     
 10453                           ; BSR set to: 0
 10454   00249C  AFA1               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10455   00249E  EF53  F012         	goto	u7421
 10456   0024A2  EF55  F012         	goto	u7420
 10457   0024A6                     u7421:
 10458   0024A6  EF56  F012         	goto	l1174
 10459   0024AA                     u7420:
 10460   0024AA                     
 10461                           ; BSR set to: 0
 10462   0024AA  818B               	bsf	___fldiv@b& (0+255),0,b
 10463   0024AC                     l1174:
 10464                           
 10465                           ; BSR set to: 0
 10466   0024AC  90D8               	bcf	status,0,c
 10467   0024AE  379E               	rlcf	___fldiv@grs& (0+255),f,b
 10468   0024B0  379F               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10469   0024B2  37A0               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10470   0024B4  37A1               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10471   0024B6                     l6282:
 10472                           
 10473                           ; BSR set to: 0
 10474   0024B6  518F               	movf	___fldiv@a& (0+255),w,b
 10475   0024B8  5D97               	subwf	___fldiv@rem& (0+255),w,b
 10476   0024BA  5190               	movf	(___fldiv@a+1)& (0+255),w,b
 10477   0024BC  5998               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10478   0024BE  5191               	movf	(___fldiv@a+2)& (0+255),w,b
 10479   0024C0  5999               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10480   0024C2  5192               	movf	(___fldiv@a+3)& (0+255),w,b
 10481   0024C4  599A               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10482   0024C6  A0D8               	btfss	status,0,c
 10483   0024C8  EF68  F012         	goto	u7431
 10484   0024CC  EF6A  F012         	goto	u7430
 10485   0024D0                     u7431:
 10486   0024D0  EF73  F012         	goto	l6288
 10487   0024D4                     u7430:
 10488   0024D4                     
 10489                           ; BSR set to: 0
 10490   0024D4  8DA1               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10491   0024D6                     
 10492                           ; BSR set to: 0
 10493   0024D6  518F               	movf	___fldiv@a& (0+255),w,b
 10494   0024D8  5F97               	subwf	___fldiv@rem& (0+255),f,b
 10495   0024DA  5190               	movf	(___fldiv@a+1)& (0+255),w,b
 10496   0024DC  5B98               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10497   0024DE  5191               	movf	(___fldiv@a+2)& (0+255),w,b
 10498   0024E0  5B99               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10499   0024E2  5192               	movf	(___fldiv@a+3)& (0+255),w,b
 10500   0024E4  5B9A               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10501   0024E6                     l6288:
 10502                           
 10503                           ; BSR set to: 0
 10504   0024E6  2BA3               	incf	___fldiv@aexp& (0+255),f,b
 10505   0024E8                     l1171:
 10506                           
 10507                           ; BSR set to: 0
 10508   0024E8  0E19               	movlw	25
 10509   0024EA  65A3               	cpfsgt	___fldiv@aexp& (0+255),b
 10510   0024EC  EF7A  F012         	goto	u7441
 10511   0024F0  EF7C  F012         	goto	u7440
 10512   0024F4                     u7441:
 10513   0024F4  EF3C  F012         	goto	l6274
 10514   0024F8                     u7440:
 10515   0024F8                     
 10516                           ; BSR set to: 0
 10517   0024F8  5197               	movf	___fldiv@rem& (0+255),w,b
 10518   0024FA  1198               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10519   0024FC  1199               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10520   0024FE  119A               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10521   002500  B4D8               	btfsc	status,2,c
 10522   002502  EF85  F012         	goto	u7451
 10523   002506  EF87  F012         	goto	u7450
 10524   00250A                     u7451:
 10525   00250A  EF9F  F012         	goto	l6300
 10526   00250E                     u7450:
 10527   00250E                     
 10528                           ; BSR set to: 0
 10529   00250E  819E               	bsf	___fldiv@grs& (0+255),0,b
 10530   002510  EF9F  F012         	goto	l6300
 10531   002514                     l6294:
 10532                           
 10533                           ; BSR set to: 0
 10534   002514  90D8               	bcf	status,0,c
 10535   002516  378B               	rlcf	___fldiv@b& (0+255),f,b
 10536   002518  378C               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10537   00251A  378D               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10538   00251C  378E               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10539   00251E                     
 10540                           ; BSR set to: 0
 10541   00251E  AFA1               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10542   002520  EF94  F012         	goto	u7461
 10543   002524  EF96  F012         	goto	u7460
 10544   002528                     u7461:
 10545   002528  EF97  F012         	goto	l1180
 10546   00252C                     u7460:
 10547   00252C                     
 10548                           ; BSR set to: 0
 10549   00252C  818B               	bsf	___fldiv@b& (0+255),0,b
 10550   00252E                     l1180:
 10551                           
 10552                           ; BSR set to: 0
 10553   00252E  90D8               	bcf	status,0,c
 10554   002530  379E               	rlcf	___fldiv@grs& (0+255),f,b
 10555   002532  379F               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10556   002534  37A0               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10557   002536  37A1               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10558   002538  079C               	decf	___fldiv@new_exp& (0+255),f,b
 10559   00253A  A0D8               	btfss	status,0,c
 10560   00253C  079D               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10561   00253E                     l6300:
 10562                           
 10563                           ; BSR set to: 0
 10564   00253E  AF8D               	btfss	(___fldiv@b+2)& (0+255),7,b
 10565   002540  EFA4  F012         	goto	u7471
 10566   002544  EFA6  F012         	goto	u7470
 10567   002548                     u7471:
 10568   002548  EF8A  F012         	goto	l6294
 10569   00254C                     u7470:
 10570   00254C                     
 10571                           ; BSR set to: 0
 10572   00254C  0E00               	movlw	0
 10573   00254E  6FA3               	movwf	___fldiv@aexp& (0+255),b
 10574   002550                     
 10575                           ; BSR set to: 0
 10576   002550  AFA1               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10577   002552  EFAD  F012         	goto	u7481
 10578   002556  EFAF  F012         	goto	u7480
 10579   00255A                     u7481:
 10580   00255A  EFD3  F012         	goto	l1182
 10581   00255E                     u7480:
 10582   00255E                     
 10583                           ; BSR set to: 0
 10584   00255E  0EFF               	movlw	255
 10585   002560  159E               	andwf	___fldiv@grs& (0+255),w,b
 10586   002562  6F93               	movwf	??___fldiv& (0+255),b
 10587   002564  0EFF               	movlw	255
 10588   002566  159F               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10589   002568  6F94               	movwf	(??___fldiv+1)& (0+255),b
 10590   00256A  0EFF               	movlw	255
 10591   00256C  15A0               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10592   00256E  6F95               	movwf	(??___fldiv+2)& (0+255),b
 10593   002570  0E7F               	movlw	127
 10594   002572  15A1               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10595   002574  6F96               	movwf	(??___fldiv+3)& (0+255),b
 10596   002576  5193               	movf	??___fldiv& (0+255),w,b
 10597   002578  1194               	iorwf	(??___fldiv+1)& (0+255),w,b
 10598   00257A  1195               	iorwf	(??___fldiv+2)& (0+255),w,b
 10599   00257C  1196               	iorwf	(??___fldiv+3)& (0+255),w,b
 10600   00257E  B4D8               	btfsc	status,2,c
 10601   002580  EFC4  F012         	goto	u7491
 10602   002584  EFC6  F012         	goto	u7490
 10603   002588                     u7491:
 10604   002588  EFCA  F012         	goto	l1183
 10605   00258C                     u7490:
 10606   00258C                     l6308:
 10607                           
 10608                           ; BSR set to: 0
 10609   00258C  0E01               	movlw	1
 10610   00258E  6FA3               	movwf	___fldiv@aexp& (0+255),b
 10611   002590  EFD3  F012         	goto	l1182
 10612   002594                     l1183:
 10613                           
 10614                           ; BSR set to: 0
 10615   002594  A18B               	btfss	___fldiv@b& (0+255),0,b
 10616   002596  EFCF  F012         	goto	u7501
 10617   00259A  EFD1  F012         	goto	u7500
 10618   00259E                     u7501:
 10619   00259E  EFD3  F012         	goto	l1182
 10620   0025A2                     u7500:
 10621   0025A2  EFC6  F012         	goto	l6308
 10622   0025A6                     l1182:
 10623                           
 10624                           ; BSR set to: 0
 10625   0025A6  51A3               	movf	___fldiv@aexp& (0+255),w,b
 10626   0025A8  B4D8               	btfsc	status,2,c
 10627   0025AA  EFD9  F012         	goto	u7511
 10628   0025AE  EFDB  F012         	goto	u7510
 10629   0025B2                     u7511:
 10630   0025B2  EFFF  F012         	goto	l6320
 10631   0025B6                     u7510:
 10632   0025B6                     
 10633                           ; BSR set to: 0
 10634   0025B6  0E01               	movlw	1
 10635   0025B8  278B               	addwf	___fldiv@b& (0+255),f,b
 10636   0025BA  0E00               	movlw	0
 10637   0025BC  238C               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10638   0025BE  238D               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10639   0025C0  238E               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10640   0025C2                     
 10641                           ; BSR set to: 0
 10642   0025C2  A18E               	btfss	(___fldiv@b+3)& (0+255),0,b
 10643   0025C4  EFE6  F012         	goto	u7521
 10644   0025C8  EFE8  F012         	goto	u7520
 10645   0025CC                     u7521:
 10646   0025CC  EFFF  F012         	goto	l6320
 10647   0025D0                     u7520:
 10648   0025D0                     
 10649                           ; BSR set to: 0
 10650   0025D0  C08B  F093         	movff	___fldiv@b,??___fldiv
 10651   0025D4  C08C  F094         	movff	___fldiv@b+1,??___fldiv+1
 10652   0025D8  C08D  F095         	movff	___fldiv@b+2,??___fldiv+2
 10653   0025DC  C08E  F096         	movff	___fldiv@b+3,??___fldiv+3
 10654   0025E0  3596               	rlcf	(??___fldiv+3)& (0+255),w,b
 10655   0025E2  3396               	rrcf	(??___fldiv+3)& (0+255),f,b
 10656   0025E4  3395               	rrcf	(??___fldiv+2)& (0+255),f,b
 10657   0025E6  3394               	rrcf	(??___fldiv+1)& (0+255),f,b
 10658   0025E8  3393               	rrcf	??___fldiv& (0+255),f,b
 10659   0025EA  C093  F08B         	movff	??___fldiv,___fldiv@b
 10660   0025EE  C094  F08C         	movff	??___fldiv+1,___fldiv@b+1
 10661   0025F2  C095  F08D         	movff	??___fldiv+2,___fldiv@b+2
 10662   0025F6  C096  F08E         	movff	??___fldiv+3,___fldiv@b+3
 10663   0025FA                     
 10664                           ; BSR set to: 0
 10665   0025FA  4B9C               	infsnz	___fldiv@new_exp& (0+255),f,b
 10666   0025FC  2B9D               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10667   0025FE                     l6320:
 10668                           
 10669                           ; BSR set to: 0
 10670   0025FE  BF9D               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10671   002600  EF0A  F013         	goto	u7531
 10672   002604  519D               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10673   002606  E108               	bnz	u7530
 10674   002608  299C               	incf	___fldiv@new_exp& (0+255),w,b
 10675   00260A  A0D8               	btfss	status,0,c
 10676   00260C  EF0A  F013         	goto	u7531
 10677   002610  EF0C  F013         	goto	u7530
 10678   002614                     u7531:
 10679   002614  EF17  F013         	goto	l6324
 10680   002618                     u7530:
 10681   002618                     
 10682                           ; BSR set to: 0
 10683   002618  0E00               	movlw	0
 10684   00261A  6F9D               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10685   00261C  699C               	setf	___fldiv@new_exp& (0+255),b
 10686   00261E  0E00               	movlw	0
 10687   002620  6F8B               	movwf	___fldiv@b& (0+255),b
 10688   002622  0E00               	movlw	0
 10689   002624  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
 10690   002626  0E00               	movlw	0
 10691   002628  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
 10692   00262A  0E00               	movlw	0
 10693   00262C  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10694   00262E                     l6324:
 10695                           
 10696                           ; BSR set to: 0
 10697   00262E  BF9D               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10698   002630  EF24  F013         	goto	u7540
 10699   002634  519D               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10700   002636  E106               	bnz	u7541
 10701   002638  059C               	decf	___fldiv@new_exp& (0+255),w,b
 10702   00263A  B0D8               	btfsc	status,0,c
 10703   00263C  EF22  F013         	goto	u7541
 10704   002640  EF24  F013         	goto	u7540
 10705   002644                     u7541:
 10706   002644  EF32  F013         	goto	l6328
 10707   002648                     u7540:
 10708   002648                     
 10709                           ; BSR set to: 0
 10710   002648  0E00               	movlw	0
 10711   00264A  6F9D               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10712   00264C  0E00               	movlw	0
 10713   00264E  6F9C               	movwf	___fldiv@new_exp& (0+255),b
 10714   002650  0E00               	movlw	0
 10715   002652  6F8B               	movwf	___fldiv@b& (0+255),b
 10716   002654  0E00               	movlw	0
 10717   002656  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
 10718   002658  0E00               	movlw	0
 10719   00265A  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
 10720   00265C  0E00               	movlw	0
 10721   00265E  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10722   002660  0E00               	movlw	0
 10723   002662  6F9B               	movwf	___fldiv@sign& (0+255),b
 10724   002664                     l6328:
 10725                           
 10726                           ; BSR set to: 0
 10727   002664  C09C  F0A2         	movff	___fldiv@new_exp,___fldiv@bexp
 10728   002668                     
 10729                           ; BSR set to: 0
 10730   002668  A1A2               	btfss	___fldiv@bexp& (0+255),0,b
 10731   00266A  EF39  F013         	goto	u7551
 10732   00266E  EF3B  F013         	goto	u7550
 10733   002672                     u7551:
 10734   002672  EF3E  F013         	goto	l6334
 10735   002676                     u7550:
 10736   002676                     
 10737                           ; BSR set to: 0
 10738   002676  8F8D               	bsf	(___fldiv@b+2)& (0+255),7,b
 10739   002678  EF3F  F013         	goto	l6336
 10740   00267C                     l6334:
 10741                           
 10742                           ; BSR set to: 0
 10743   00267C  9F8D               	bcf	(___fldiv@b+2)& (0+255),7,b
 10744   00267E                     l6336:
 10745                           
 10746                           ; BSR set to: 0
 10747   00267E  90D8               	bcf	status,0,c
 10748   002680  31A2               	rrcf	___fldiv@bexp& (0+255),w,b
 10749   002682  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
 10750   002684  EFF5  F011         	goto	l6250
 10751   002688                     l1169:
 10752                           
 10753                           ; BSR set to: 0
 10754   002688  0012               	return		;funcret
 10755   00268A                     __end_of___fldiv:
 10756                           	callstack 0
 10757                           
 10758 ;; *************** function _dtoa *****************
 10759 ;; Defined at:
 10760 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 10763 ;;		 -> sprintf@f(12), 
 10764 ;;  d               2   33[BANK0 ] int 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  i               2   42[BANK0 ] int 
 10767 ;;  w               2   39[BANK0 ] int 
 10768 ;;  p               2   37[BANK0 ] int 
 10769 ;;  s               1   41[BANK0 ] unsigned char 
 10770 ;; Return value:  Size  Location     Type
 10771 ;;                  1    wreg      void 
 10772 ;; Registers used:
 10773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10774 ;; Tracked objects:
 10775 ;;		On entry : 0/0
 10776 ;;		On exit  : 0/0
 10777 ;;		Unchanged: 0/0
 10778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10779 ;;      Params:         0       4       0       0       0       0       0
 10780 ;;      Locals:         0       9       0       0       0       0       0
 10781 ;;      Temps:          0       0       0       0       0       0       0
 10782 ;;      Totals:         0      13       0       0       0       0       0
 10783 ;;Total ram usage:       13 bytes
 10784 ;; Hardware stack levels used: 1
 10785 ;; Hardware stack levels required when called: 7
 10786 ;; This function calls:
 10787 ;;		___awdiv
 10788 ;;		___awmod
 10789 ;;		_abs
 10790 ;;		_pad
 10791 ;; This function is called by:
 10792 ;;		_vfpfcnvrt
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           	psect	text40
 10797   003BD0                     __ptext40:
 10798                           	callstack 0
 10799   003BD0                     _dtoa:
 10800                           	callstack 16
 10801   003BD0                     
 10802                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
 10803   003BD0  0100               	movlb	0	; () banked
 10804   003BD2  BF82               	btfsc	(dtoa@d+1)& (0+255),7,b
 10805   003BD4  EFEE  F01D         	goto	u8261
 10806   003BD8  EFF1  F01D         	goto	u8260
 10807   003BDC                     u8261:
 10808   003BDC  0E01               	movlw	1
 10809   003BDE  EFF2  F01D         	goto	u8270
 10810   003BE2                     u8260:
 10811   003BE2  0E00               	movlw	0
 10812   003BE4                     u8270:
 10813   003BE4  6F89               	movwf	dtoa@s& (0+255),b
 10814   003BE6                     
 10815                           ; BSR set to: 0
 10816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
 10817   003BE6  5189               	movf	dtoa@s& (0+255),w,b
 10818   003BE8  B4D8               	btfsc	status,2,c
 10819   003BEA  EFF9  F01D         	goto	u8281
 10820   003BEE  EFFB  F01D         	goto	u8280
 10821   003BF2                     u8281:
 10822   003BF2  EFFF  F01D         	goto	l6744
 10823   003BF6                     u8280:
 10824   003BF6                     
 10825                           ; BSR set to: 0
 10826                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
 10827   003BF6  6D81               	negf	dtoa@d& (0+255),b
 10828   003BF8  1F82               	comf	(dtoa@d+1)& (0+255),f,b
 10829   003BFA  B0D8               	btfsc	status,0,c
 10830   003BFC  2B82               	incf	(dtoa@d+1)& (0+255),f,b
 10831   003BFE                     l6744:
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
 10835   003BFE  BE1C               	btfsc	(_prec+1)^0,7,c
 10836   003C00  EF06  F01E         	goto	u8290
 10837   003C04  EF04  F01E         	goto	u8291
 10838   003C08                     u8291:
 10839   003C08  EF0C  F01E         	goto	l1306
 10840   003C0C                     u8290:
 10841   003C0C                     
 10842                           ; BSR set to: 0
 10843   003C0C  0E00               	movlw	0
 10844   003C0E  6F86               	movwf	(dtoa@p+1)& (0+255),b
 10845   003C10  0E01               	movlw	1
 10846   003C12  6F85               	movwf	dtoa@p& (0+255),b
 10847   003C14  EF10  F01E         	goto	l1308
 10848   003C18                     l1306:
 10849                           
 10850                           ; BSR set to: 0
 10851   003C18  C01B  F085         	movff	_prec,dtoa@p
 10852   003C1C  C01C  F086         	movff	_prec+1,dtoa@p+1
 10853   003C20                     l1308:
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
 10857   003C20  C019  F087         	movff	_width,dtoa@w
 10858   003C24  C01A  F088         	movff	_width+1,dtoa@w+1
 10859   003C28                     
 10860                           ; BSR set to: 0
 10861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
 10862   003C28  5189               	movf	dtoa@s& (0+255),w,b
 10863   003C2A  B4D8               	btfsc	status,2,c
 10864   003C2C  EF1A  F01E         	goto	u8301
 10865   003C30  EF1C  F01E         	goto	u8300
 10866   003C34                     u8301:
 10867   003C34  EF33  F01E         	goto	l1309
 10868   003C38                     u8300:
 10869   003C38                     
 10870                           ; BSR set to: 0
 10871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
 10872   003C38  0787               	decf	dtoa@w& (0+255),f,b
 10873   003C3A  A0D8               	btfss	status,0,c
 10874   003C3C  0788               	decf	(dtoa@w+1)& (0+255),f,b
 10875   003C3E                     
 10876                           ; BSR set to: 0
 10877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
 10878   003C3E  5189               	movf	dtoa@s& (0+255),w,b
 10879   003C40  A4D8               	btfss	status,2,c
 10880   003C42  EF25  F01E         	goto	u8311
 10881   003C46  EF27  F01E         	goto	u8310
 10882   003C4A                     u8311:
 10883   003C4A  EF2D  F01E         	goto	l6756
 10884   003C4E                     u8310:
 10885   003C4E                     
 10886                           ; BSR set to: 0
 10887   003C4E  0E00               	movlw	0
 10888   003C50  6F84               	movwf	(_dtoa$1164+1)& (0+255),b
 10889   003C52  0E2B               	movlw	43
 10890   003C54  6F83               	movwf	_dtoa$1164& (0+255),b
 10891   003C56  EF31  F01E         	goto	l6758
 10892   003C5A                     l6756:
 10893                           
 10894                           ; BSR set to: 0
 10895   003C5A  0E00               	movlw	0
 10896   003C5C  6F84               	movwf	(_dtoa$1164+1)& (0+255),b
 10897   003C5E  0E2D               	movlw	45
 10898   003C60  6F83               	movwf	_dtoa$1164& (0+255),b
 10899   003C62                     l6758:
 10900                           
 10901                           ; BSR set to: 0
 10902   003C62  C083  F089         	movff	_dtoa$1164,dtoa@s
 10903   003C66                     l1309:
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
 10907   003C66  0E00               	movlw	0
 10908   003C68  6F8B               	movwf	(dtoa@i+1)& (0+255),b
 10909   003C6A  0E4F               	movlw	79
 10910   003C6C  6F8A               	movwf	dtoa@i& (0+255),b
 10911   003C6E                     
 10912                           ; BSR set to: 0
 10913                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
 10914   003C6E  0E00               	movlw	0
 10915   003C70  0101               	movlb	1	; () banked
 10916   003C72  6F95               	movwf	(_dbuf+79)& (0+255),b
 10917                           
 10918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
 10919   003C74  EF6D  F01E         	goto	l6772
 10920   003C78                     l6762:
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
 10924   003C78  078A               	decf	dtoa@i& (0+255),f,b
 10925   003C7A  A0D8               	btfss	status,0,c
 10926   003C7C  078B               	decf	(dtoa@i+1)& (0+255),f,b
 10927   003C7E                     
 10928                           ; BSR set to: 0
 10929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 10930   003C7E  0E46               	movlw	low _dbuf
 10931   003C80  258A               	addwf	dtoa@i& (0+255),w,b
 10932   003C82  6ED9               	movwf	fsr2l,c
 10933   003C84  0E01               	movlw	high _dbuf
 10934   003C86  218B               	addwfc	(dtoa@i+1)& (0+255),w,b
 10935   003C88  6EDA               	movwf	fsr2h,c
 10936   003C8A  C081  F064         	movff	dtoa@d,___awmod@dividend
 10937   003C8E  C082  F065         	movff	dtoa@d+1,___awmod@dividend+1
 10938   003C92  0E00               	movlw	0
 10939   003C94  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 10940   003C96  0E0A               	movlw	10
 10941   003C98  6F66               	movwf	___awmod@divisor& (0+255),b
 10942   003C9A  EC59  F023         	call	___awmod	;wreg free
 10943   003C9E  C064  F06A         	movff	?___awmod,abs@a
 10944   003CA2  C065  F06B         	movff	?___awmod+1,abs@a+1
 10945   003CA6  EC79  F026         	call	_abs	;wreg free
 10946   003CAA  0100               	movlb	0	; () banked
 10947   003CAC  516A               	movf	?_abs& (0+255),w,b
 10948   003CAE  0F30               	addlw	48
 10949   003CB0  6EDF               	movwf	indf2,c
 10950   003CB2                     
 10951                           ; BSR set to: 0
 10952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
 10953   003CB2  0785               	decf	dtoa@p& (0+255),f,b
 10954   003CB4  A0D8               	btfss	status,0,c
 10955   003CB6  0786               	decf	(dtoa@p+1)& (0+255),f,b
 10956   003CB8                     
 10957                           ; BSR set to: 0
 10958                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
 10959   003CB8  0787               	decf	dtoa@w& (0+255),f,b
 10960   003CBA  A0D8               	btfss	status,0,c
 10961   003CBC  0788               	decf	(dtoa@w+1)& (0+255),f,b
 10962   003CBE                     
 10963                           ; BSR set to: 0
 10964                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
 10965   003CBE  C081  F064         	movff	dtoa@d,___awdiv@dividend
 10966   003CC2  C082  F065         	movff	dtoa@d+1,___awdiv@dividend+1
 10967   003CC6  0E00               	movlw	0
 10968   003CC8  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
 10969   003CCA  0E0A               	movlw	10
 10970   003CCC  6F66               	movwf	___awdiv@divisor& (0+255),b
 10971   003CCE  EC9B  F022         	call	___awdiv	;wreg free
 10972   003CD2  C064  F081         	movff	?___awdiv,dtoa@d
 10973   003CD6  C065  F082         	movff	?___awdiv+1,dtoa@d+1
 10974   003CDA                     l6772:
 10975                           
 10976                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
 10977   003CDA  0100               	movlb	0	; () banked
 10978   003CDC  BF8B               	btfsc	(dtoa@i+1)& (0+255),7,b
 10979   003CDE  EF79  F01E         	goto	u8321
 10980   003CE2  518B               	movf	(dtoa@i+1)& (0+255),w,b
 10981   003CE4  E108               	bnz	u8320
 10982   003CE6  058A               	decf	dtoa@i& (0+255),w,b
 10983   003CE8  A0D8               	btfss	status,0,c
 10984   003CEA  EF79  F01E         	goto	u8321
 10985   003CEE  EF7B  F01E         	goto	u8320
 10986   003CF2                     u8321:
 10987   003CF2  EF91  F01E         	goto	l6778
 10988   003CF6                     u8320:
 10989   003CF6                     
 10990                           ; BSR set to: 0
 10991   003CF6  5181               	movf	dtoa@d& (0+255),w,b
 10992   003CF8  1182               	iorwf	(dtoa@d+1)& (0+255),w,b
 10993   003CFA  A4D8               	btfss	status,2,c
 10994   003CFC  EF82  F01E         	goto	u8331
 10995   003D00  EF84  F01E         	goto	u8330
 10996   003D04                     u8331:
 10997   003D04  EF3C  F01E         	goto	l6762
 10998   003D08                     u8330:
 10999   003D08                     
 11000                           ; BSR set to: 0
 11001   003D08  BF86               	btfsc	(dtoa@p+1)& (0+255),7,b
 11002   003D0A  EF91  F01E         	goto	u8340
 11003   003D0E  5186               	movf	(dtoa@p+1)& (0+255),w,b
 11004   003D10  E106               	bnz	u8341
 11005   003D12  0585               	decf	dtoa@p& (0+255),w,b
 11006   003D14  B0D8               	btfsc	status,0,c
 11007   003D16  EF8F  F01E         	goto	u8341
 11008   003D1A  EF91  F01E         	goto	u8340
 11009   003D1E                     u8341:
 11010   003D1E  EF3C  F01E         	goto	l6762
 11011   003D22                     u8340:
 11012   003D22                     l6778:
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
 11016   003D22  5189               	movf	dtoa@s& (0+255),w,b
 11017   003D24  B4D8               	btfsc	status,2,c
 11018   003D26  EF97  F01E         	goto	u8351
 11019   003D2A  EF99  F01E         	goto	u8350
 11020   003D2E                     u8351:
 11021   003D2E  EFA4  F01E         	goto	l6784
 11022   003D32                     u8350:
 11023   003D32                     
 11024                           ; BSR set to: 0
 11025                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
 11026   003D32  078A               	decf	dtoa@i& (0+255),f,b
 11027   003D34  A0D8               	btfss	status,0,c
 11028   003D36  078B               	decf	(dtoa@i+1)& (0+255),f,b
 11029   003D38                     
 11030                           ; BSR set to: 0
 11031                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
 11032   003D38  0E46               	movlw	low _dbuf
 11033   003D3A  258A               	addwf	dtoa@i& (0+255),w,b
 11034   003D3C  6ED9               	movwf	fsr2l,c
 11035   003D3E  0E01               	movlw	high _dbuf
 11036   003D40  218B               	addwfc	(dtoa@i+1)& (0+255),w,b
 11037   003D42  6EDA               	movwf	fsr2h,c
 11038   003D44  C089  FFDF         	movff	dtoa@s,indf2
 11039   003D48                     l6784:
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11043   003D48  C07F  F074         	movff	dtoa@fp,pad@fp
 11044   003D4C  C080  F075         	movff	dtoa@fp+1,pad@fp+1
 11045   003D50  0E46               	movlw	low _dbuf
 11046   003D52  258A               	addwf	dtoa@i& (0+255),w,b
 11047   003D54  6F76               	movwf	pad@buf& (0+255),b
 11048   003D56  0E01               	movlw	high _dbuf
 11049   003D58  218B               	addwfc	(dtoa@i+1)& (0+255),w,b
 11050   003D5A  6F77               	movwf	(pad@buf+1)& (0+255),b
 11051   003D5C  C087  F078         	movff	dtoa@w,pad@p
 11052   003D60  C088  F079         	movff	dtoa@w+1,pad@p+1
 11053   003D64  ECFA  F024         	call	_pad	;wreg free
 11054   003D68  0012               	return		;funcret
 11055   003D6A                     __end_of_dtoa:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function _pad *****************
 11059 ;; Defined at:
 11060 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 11063 ;;		 -> sprintf@f(12), 
 11064 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 11065 ;;		 -> dbuf(80), 
 11066 ;;  p               2   24[BANK0 ] int 
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;  w               2   29[BANK0 ] int 
 11069 ;;  i               2   27[BANK0 ] int 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  1    wreg      void 
 11072 ;; Registers used:
 11073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11079 ;;      Params:         0       6       0       0       0       0       0
 11080 ;;      Locals:         0       4       0       0       0       0       0
 11081 ;;      Temps:          0       1       0       0       0       0       0
 11082 ;;      Totals:         0      11       0       0       0       0       0
 11083 ;;Total ram usage:       11 bytes
 11084 ;; Hardware stack levels used: 1
 11085 ;; Hardware stack levels required when called: 6
 11086 ;; This function calls:
 11087 ;;		_fputc
 11088 ;;		_fputs
 11089 ;; This function is called by:
 11090 ;;		_dtoa
 11091 ;;		_efgtoa
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text41
 11096   0049F4                     __ptext41:
 11097                           	callstack 0
 11098   0049F4                     _pad:
 11099                           	callstack 16
 11100   0049F4                     
 11101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
 11102   0049F4  0100               	movlb	0	; () banked
 11103   0049F6  BF79               	btfsc	(pad@p+1)& (0+255),7,b
 11104   0049F8  EF00  F025         	goto	u8031
 11105   0049FC  EF02  F025         	goto	u8030
 11106   004A00                     u8031:
 11107   004A00  EF08  F025         	goto	l6654
 11108   004A04                     u8030:
 11109   004A04                     
 11110                           ; BSR set to: 0
 11111   004A04  C078  F07D         	movff	pad@p,pad@w
 11112   004A08  C079  F07E         	movff	pad@p+1,pad@w+1
 11113   004A0C  EF0C  F025         	goto	l1297
 11114   004A10                     l6654:
 11115                           
 11116                           ; BSR set to: 0
 11117   004A10  0E00               	movlw	0
 11118   004A12  6F7E               	movwf	(pad@w+1)& (0+255),b
 11119   004A14  0E00               	movlw	0
 11120   004A16  6F7D               	movwf	pad@w& (0+255),b
 11121   004A18                     l1297:
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
 11125   004A18  0E00               	movlw	0
 11126   004A1A  6F7C               	movwf	(pad@i+1)& (0+255),b
 11127   004A1C  0E00               	movlw	0
 11128   004A1E  6F7B               	movwf	pad@i& (0+255),b
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 11131   004A20  EF1F  F025         	goto	l6660
 11132   004A24                     l6656:
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
 11136   004A24  0E00               	movlw	0
 11137   004A26  6F65               	movwf	(fputc@c+1)& (0+255),b
 11138   004A28  0E20               	movlw	32
 11139   004A2A  6F64               	movwf	fputc@c& (0+255),b
 11140   004A2C  C074  F066         	movff	pad@fp,fputc@fp
 11141   004A30  C075  F067         	movff	pad@fp+1,fputc@fp+1
 11142   004A34  ECD0  F021         	call	_fputc	;wreg free
 11143   004A38                     
 11144                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
 11145   004A38  0100               	movlb	0	; () banked
 11146   004A3A  4B7B               	infsnz	pad@i& (0+255),f,b
 11147   004A3C  2B7C               	incf	(pad@i+1)& (0+255),f,b
 11148   004A3E                     l6660:
 11149                           
 11150                           ; BSR set to: 0
 11151                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 11152   004A3E  517D               	movf	pad@w& (0+255),w,b
 11153   004A40  5D7B               	subwf	pad@i& (0+255),w,b
 11154   004A42  517C               	movf	(pad@i+1)& (0+255),w,b
 11155   004A44  0A80               	xorlw	128
 11156   004A46  6F7A               	movwf	??_pad& (0+255),b
 11157   004A48  517E               	movf	(pad@w+1)& (0+255),w,b
 11158   004A4A  0A80               	xorlw	128
 11159   004A4C  597A               	subwfb	??_pad& (0+255),w,b
 11160   004A4E  A0D8               	btfss	status,0,c
 11161   004A50  EF2C  F025         	goto	u8041
 11162   004A54  EF2E  F025         	goto	u8040
 11163   004A58                     u8041:
 11164   004A58  EF12  F025         	goto	l6656
 11165   004A5C                     u8040:
 11166   004A5C                     
 11167                           ; BSR set to: 0
 11168                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
 11169   004A5C  C076  F06D         	movff	pad@buf,fputs@s
 11170   004A60  C077  F06E         	movff	pad@buf+1,fputs@s+1
 11171   004A64  C074  F06F         	movff	pad@fp,fputs@fp
 11172   004A68  C075  F070         	movff	pad@fp+1,fputs@fp+1
 11173   004A6C  EC34  F026         	call	_fputs	;wreg free
 11174   004A70  0012               	return		;funcret
 11175   004A72                     __end_of_pad:
 11176                           	callstack 0
 11177                           
 11178 ;; *************** function _fputs *****************
 11179 ;; Defined at:
 11180 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 11183 ;;		 -> dbuf(80), 
 11184 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 11185 ;;		 -> sprintf@f(12), 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;  i               2   18[BANK0 ] int 
 11188 ;;  c               1   17[BANK0 ] unsigned char 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  2   13[BANK0 ] int 
 11191 ;; Registers used:
 11192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11198 ;;      Params:         0       4       0       0       0       0       0
 11199 ;;      Locals:         0       3       0       0       0       0       0
 11200 ;;      Temps:          0       0       0       0       0       0       0
 11201 ;;      Totals:         0       7       0       0       0       0       0
 11202 ;;Total ram usage:        7 bytes
 11203 ;; Hardware stack levels used: 1
 11204 ;; Hardware stack levels required when called: 5
 11205 ;; This function calls:
 11206 ;;		_fputc
 11207 ;; This function is called by:
 11208 ;;		_pad
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text42
 11213   004C68                     __ptext42:
 11214                           	callstack 0
 11215   004C68                     _fputs:
 11216                           	callstack 16
 11217   004C68  0E00               	movlw	0
 11218   004C6A  0100               	movlb	0	; () banked
 11219   004C6C  6F73               	movwf	(fputs@i+1)& (0+255),b
 11220   004C6E  0E00               	movlw	0
 11221   004C70  6F72               	movwf	fputs@i& (0+255),b
 11222   004C72  EF47  F026         	goto	l6198
 11223   004C76                     l6194:
 11224                           
 11225                           ; BSR set to: 0
 11226   004C76  C071  F064         	movff	fputs@c,fputc@c
 11227   004C7A  6B65               	clrf	(fputc@c+1)& (0+255),b
 11228   004C7C  C06F  F066         	movff	fputs@fp,fputc@fp
 11229   004C80  C070  F067         	movff	fputs@fp+1,fputc@fp+1
 11230   004C84  ECD0  F021         	call	_fputc	;wreg free
 11231   004C88  0100               	movlb	0	; () banked
 11232   004C8A  4B72               	infsnz	fputs@i& (0+255),f,b
 11233   004C8C  2B73               	incf	(fputs@i+1)& (0+255),f,b
 11234   004C8E                     l6198:
 11235                           
 11236                           ; BSR set to: 0
 11237   004C8E  5172               	movf	fputs@i& (0+255),w,b
 11238   004C90  256D               	addwf	fputs@s& (0+255),w,b
 11239   004C92  6ED9               	movwf	fsr2l,c
 11240   004C94  5173               	movf	(fputs@i+1)& (0+255),w,b
 11241   004C96  216E               	addwfc	(fputs@s+1)& (0+255),w,b
 11242   004C98  6EDA               	movwf	fsr2h,c
 11243   004C9A  50DF               	movf	indf2,w,c
 11244   004C9C  6F71               	movwf	fputs@c& (0+255),b
 11245   004C9E  5171               	movf	fputs@c& (0+255),w,b
 11246   004CA0  A4D8               	btfss	status,2,c
 11247   004CA2  EF55  F026         	goto	u7321
 11248   004CA6  EF57  F026         	goto	u7320
 11249   004CAA                     u7321:
 11250   004CAA  EF3B  F026         	goto	l6194
 11251   004CAE                     u7320:
 11252   004CAE                     
 11253                           ; BSR set to: 0
 11254   004CAE  0012               	return		;funcret
 11255   004CB0                     __end_of_fputs:
 11256                           	callstack 0
 11257                           
 11258 ;; *************** function _fputc *****************
 11259 ;; Defined at:
 11260 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  c               2    4[BANK0 ] int 
 11263 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 11264 ;;		 -> sprintf@f(12), 
 11265 ;; Auto vars:     Size  Location     Type
 11266 ;;		None
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  2    4[BANK0 ] int 
 11269 ;; Registers used:
 11270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/0
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11276 ;;      Params:         0       4       0       0       0       0       0
 11277 ;;      Locals:         0       0       0       0       0       0       0
 11278 ;;      Temps:          0       5       0       0       0       0       0
 11279 ;;      Totals:         0       9       0       0       0       0       0
 11280 ;;Total ram usage:        9 bytes
 11281 ;; Hardware stack levels used: 1
 11282 ;; Hardware stack levels required when called: 4
 11283 ;; This function calls:
 11284 ;;		_putch
 11285 ;; This function is called by:
 11286 ;;		_pad
 11287 ;;		_vfpfcnvrt
 11288 ;;		_fputs
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text43
 11293   0043A0                     __ptext43:
 11294                           	callstack 0
 11295   0043A0                     _fputc:
 11296                           	callstack 19
 11297   0043A0  0100               	movlb	0	; () banked
 11298   0043A2  5166               	movf	fputc@fp& (0+255),w,b
 11299   0043A4  1167               	iorwf	(fputc@fp+1)& (0+255),w,b
 11300   0043A6  B4D8               	btfsc	status,2,c
 11301   0043A8  EFD8  F021         	goto	u6891
 11302   0043AC  EFDA  F021         	goto	u6890
 11303   0043B0                     u6891:
 11304   0043B0  EFE3  F021         	goto	l5980
 11305   0043B4                     u6890:
 11306   0043B4                     
 11307                           ; BSR set to: 0
 11308   0043B4  5166               	movf	fputc@fp& (0+255),w,b
 11309   0043B6  1167               	iorwf	(fputc@fp+1)& (0+255),w,b
 11310   0043B8  A4D8               	btfss	status,2,c
 11311   0043BA  EFE1  F021         	goto	u6901
 11312   0043BE  EFE3  F021         	goto	u6900
 11313   0043C2                     u6901:
 11314   0043C2  EFE8  F021         	goto	l5982
 11315   0043C6                     u6900:
 11316   0043C6                     l5980:
 11317                           
 11318                           ; BSR set to: 0
 11319   0043C6  5164               	movf	fputc@c& (0+255),w,b
 11320   0043C8  EC63  F027         	call	_putch
 11321   0043CC  EF35  F022         	goto	l1467
 11322   0043D0                     l5982:
 11323                           
 11324                           ; BSR set to: 0
 11325   0043D0  EE20 F00A          	lfsr	2,10
 11326   0043D4  5166               	movf	fputc@fp& (0+255),w,b
 11327   0043D6  26D9               	addwf	fsr2l,f,c
 11328   0043D8  5167               	movf	(fputc@fp+1)& (0+255),w,b
 11329   0043DA  22DA               	addwfc	fsr2h,f,c
 11330   0043DC  50DE               	movf	postinc2,w,c
 11331   0043DE  10DE               	iorwf	postinc2,w,c
 11332   0043E0  B4D8               	btfsc	status,2,c
 11333   0043E2  EFF5  F021         	goto	u6911
 11334   0043E6  EFF7  F021         	goto	u6910
 11335   0043EA                     u6911:
 11336   0043EA  EF12  F022         	goto	l5986
 11337   0043EE                     u6910:
 11338   0043EE                     
 11339                           ; BSR set to: 0
 11340   0043EE  EE20 F00A          	lfsr	2,10
 11341   0043F2  5166               	movf	fputc@fp& (0+255),w,b
 11342   0043F4  26D9               	addwf	fsr2l,f,c
 11343   0043F6  5167               	movf	(fputc@fp+1)& (0+255),w,b
 11344   0043F8  22DA               	addwfc	fsr2h,f,c
 11345   0043FA  EE10 F003          	lfsr	1,3
 11346   0043FE  5166               	movf	fputc@fp& (0+255),w,b
 11347   004400  26E1               	addwf	fsr1l,f,c
 11348   004402  5167               	movf	(fputc@fp+1)& (0+255),w,b
 11349   004404  22E2               	addwfc	fsr1h,f,c
 11350   004406  50DE               	movf	postinc2,w,c
 11351   004408  5CE6               	subwf	postinc1,w,c
 11352   00440A  50E6               	movf	postinc1,w,c
 11353   00440C  0A80               	xorlw	128
 11354   00440E  6F6C               	movwf	(??_fputc+4)& (0+255),b
 11355   004410  50DE               	movf	postinc2,w,c
 11356   004412  0A80               	xorlw	128
 11357   004414  596C               	subwfb	(??_fputc+4)& (0+255),w,b
 11358   004416  B0D8               	btfsc	status,0,c
 11359   004418  EF10  F022         	goto	u6921
 11360   00441C  EF12  F022         	goto	u6920
 11361   004420                     u6921:
 11362   004420  EF35  F022         	goto	l1467
 11363   004424                     u6920:
 11364   004424                     l5986:
 11365                           
 11366                           ; BSR set to: 0
 11367   004424  EE20 F003          	lfsr	2,3
 11368   004428  5166               	movf	fputc@fp& (0+255),w,b
 11369   00442A  26D9               	addwf	fsr2l,f,c
 11370   00442C  5167               	movf	(fputc@fp+1)& (0+255),w,b
 11371   00442E  22DA               	addwfc	fsr2h,f,c
 11372   004430  CFDE F068          	movff	postinc2,??_fputc
 11373   004434  CFDD F069          	movff	postdec2,??_fputc+1
 11374   004438  C066  FFD9         	movff	fputc@fp,fsr2l
 11375   00443C  C067  FFDA         	movff	fputc@fp+1,fsr2h
 11376   004440  CFDE F06A          	movff	postinc2,??_fputc+2
 11377   004444  CFDD F06B          	movff	postdec2,??_fputc+3
 11378   004448  5168               	movf	??_fputc& (0+255),w,b
 11379   00444A  256A               	addwf	(??_fputc+2)& (0+255),w,b
 11380   00444C  6ED9               	movwf	fsr2l,c
 11381   00444E  5169               	movf	(??_fputc+1)& (0+255),w,b
 11382   004450  216B               	addwfc	(??_fputc+3)& (0+255),w,b
 11383   004452  6EDA               	movwf	fsr2h,c
 11384   004454  C064  FFDF         	movff	fputc@c,indf2
 11385   004458  EE20 F003          	lfsr	2,3
 11386   00445C  5166               	movf	fputc@fp& (0+255),w,b
 11387   00445E  26D9               	addwf	fsr2l,f,c
 11388   004460  5167               	movf	(fputc@fp+1)& (0+255),w,b
 11389   004462  22DA               	addwfc	fsr2h,f,c
 11390   004464  2ADE               	incf	postinc2,f,c
 11391   004466  0E00               	movlw	0
 11392   004468  22DD               	addwfc	postdec2,f,c
 11393   00446A                     l1467:
 11394   00446A  0012               	return		;funcret
 11395   00446C                     __end_of_fputc:
 11396                           	callstack 0
 11397                           
 11398 ;; *************** function _putch *****************
 11399 ;; Defined at:
 11400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  c               1    wreg     unsigned char 
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;  c               1    0[COMRAM] unsigned char 
 11405 ;; Return value:  Size  Location     Type
 11406 ;;                  1    wreg      void 
 11407 ;; Registers used:
 11408 ;;		wreg
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11414 ;;      Params:         0       0       0       0       0       0       0
 11415 ;;      Locals:         0       0       0       0       0       0       0
 11416 ;;      Temps:          0       0       0       0       0       0       0
 11417 ;;      Totals:         0       0       0       0       0       0       0
 11418 ;;Total ram usage:        0 bytes
 11419 ;; Hardware stack levels used: 1
 11420 ;; Hardware stack levels required when called: 3
 11421 ;; This function calls:
 11422 ;;		Nothing
 11423 ;; This function is called by:
 11424 ;;		_fputc
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           
 11428                           	psect	text44
 11429   004EC6                     __ptext44:
 11430                           	callstack 0
 11431   004EC6                     _putch:
 11432                           	callstack 19
 11433   004EC6  0012               	return		;funcret
 11434   004EC8                     __end_of_putch:
 11435                           	callstack 0
 11436                           
 11437 ;; *************** function _abs *****************
 11438 ;; Defined at:
 11439 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
 11440 ;; Parameters:    Size  Location     Type
 11441 ;;  a               2   10[BANK0 ] int 
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;		None
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  2   10[BANK0 ] int 
 11446 ;; Registers used:
 11447 ;;		wreg, status,2, status,0
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11453 ;;      Params:         0       2       0       0       0       0       0
 11454 ;;      Locals:         0       0       0       0       0       0       0
 11455 ;;      Temps:          0       2       0       0       0       0       0
 11456 ;;      Totals:         0       4       0       0       0       0       0
 11457 ;;Total ram usage:        4 bytes
 11458 ;; Hardware stack levels used: 1
 11459 ;; Hardware stack levels required when called: 3
 11460 ;; This function calls:
 11461 ;;		Nothing
 11462 ;; This function is called by:
 11463 ;;		_dtoa
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text45
 11468   004CF2                     __ptext45:
 11469                           	callstack 0
 11470   004CF2                     _abs:
 11471                           	callstack 19
 11472   004CF2  0100               	movlb	0	; () banked
 11473   004CF4  BF6B               	btfsc	(abs@a+1)& (0+255),7,b
 11474   004CF6  EF87  F026         	goto	u8050
 11475   004CFA  516B               	movf	(abs@a+1)& (0+255),w,b
 11476   004CFC  E106               	bnz	u8051
 11477   004CFE  056A               	decf	abs@a& (0+255),w,b
 11478   004D00  B0D8               	btfsc	status,0,c
 11479   004D02  EF85  F026         	goto	u8051
 11480   004D06  EF87  F026         	goto	u8050
 11481   004D0A                     u8051:
 11482   004D0A  EF95  F026         	goto	l1426
 11483   004D0E                     u8050:
 11484   004D0E                     
 11485                           ; BSR set to: 0
 11486   004D0E  C06A  F06C         	movff	abs@a,??_abs
 11487   004D12  C06B  F06D         	movff	abs@a+1,??_abs+1
 11488   004D16  1F6C               	comf	??_abs& (0+255),f,b
 11489   004D18  1F6D               	comf	(??_abs+1)& (0+255),f,b
 11490   004D1A  4B6C               	infsnz	??_abs& (0+255),f,b
 11491   004D1C  2B6D               	incf	(??_abs+1)& (0+255),f,b
 11492   004D1E  C06C  F06A         	movff	??_abs,?_abs
 11493   004D22  C06D  F06B         	movff	??_abs+1,?_abs+1
 11494   004D26  EF99  F026         	goto	l1429
 11495   004D2A                     l1426:
 11496                           
 11497                           ; BSR set to: 0
 11498   004D2A  C06A  F06A         	movff	abs@a,?_abs
 11499   004D2E  C06B  F06B         	movff	abs@a+1,?_abs+1
 11500   004D32                     l1429:
 11501                           
 11502                           ; BSR set to: 0
 11503   004D32  0012               	return		;funcret
 11504   004D34                     __end_of_abs:
 11505                           	callstack 0
 11506                           
 11507 ;; *************** function ___awmod *****************
 11508 ;; Defined at:
 11509 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  dividend        2    4[BANK0 ] int 
 11512 ;;  divisor         2    6[BANK0 ] int 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  sign            1    9[BANK0 ] unsigned char 
 11515 ;;  counter         1    8[BANK0 ] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  2    4[BANK0 ] int 
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11525 ;;      Params:         0       4       0       0       0       0       0
 11526 ;;      Locals:         0       2       0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0
 11528 ;;      Totals:         0       6       0       0       0       0       0
 11529 ;;Total ram usage:        6 bytes
 11530 ;; Hardware stack levels used: 1
 11531 ;; Hardware stack levels required when called: 3
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_dtoa
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text46
 11540   0046B2                     __ptext46:
 11541                           	callstack 0
 11542   0046B2                     ___awmod:
 11543                           	callstack 19
 11544   0046B2  0E00               	movlw	0
 11545   0046B4  0100               	movlb	0	; () banked
 11546   0046B6  6F69               	movwf	___awmod@sign& (0+255),b
 11547   0046B8                     
 11548                           ; BSR set to: 0
 11549   0046B8  BF65               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 11550   0046BA  EF63  F023         	goto	u7810
 11551   0046BE  EF61  F023         	goto	u7811
 11552   0046C2                     u7811:
 11553   0046C2  EF69  F023         	goto	l6532
 11554   0046C6                     u7810:
 11555   0046C6                     
 11556                           ; BSR set to: 0
 11557   0046C6  6D64               	negf	___awmod@dividend& (0+255),b
 11558   0046C8  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
 11559   0046CA  B0D8               	btfsc	status,0,c
 11560   0046CC  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
 11561   0046CE                     
 11562                           ; BSR set to: 0
 11563   0046CE  0E01               	movlw	1
 11564   0046D0  6F69               	movwf	___awmod@sign& (0+255),b
 11565   0046D2                     l6532:
 11566                           
 11567                           ; BSR set to: 0
 11568   0046D2  BF67               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 11569   0046D4  EF70  F023         	goto	u7820
 11570   0046D8  EF6E  F023         	goto	u7821
 11571   0046DC                     u7821:
 11572   0046DC  EF74  F023         	goto	l6536
 11573   0046E0                     u7820:
 11574   0046E0                     
 11575                           ; BSR set to: 0
 11576   0046E0  6D66               	negf	___awmod@divisor& (0+255),b
 11577   0046E2  1F67               	comf	(___awmod@divisor+1)& (0+255),f,b
 11578   0046E4  B0D8               	btfsc	status,0,c
 11579   0046E6  2B67               	incf	(___awmod@divisor+1)& (0+255),f,b
 11580   0046E8                     l6536:
 11581                           
 11582                           ; BSR set to: 0
 11583   0046E8  5166               	movf	___awmod@divisor& (0+255),w,b
 11584   0046EA  1167               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11585   0046EC  B4D8               	btfsc	status,2,c
 11586   0046EE  EF7B  F023         	goto	u7831
 11587   0046F2  EF7D  F023         	goto	u7830
 11588   0046F6                     u7831:
 11589   0046F6  EFA1  F023         	goto	l6552
 11590   0046FA                     u7830:
 11591   0046FA                     
 11592                           ; BSR set to: 0
 11593   0046FA  0E01               	movlw	1
 11594   0046FC  6F68               	movwf	___awmod@counter& (0+255),b
 11595   0046FE  EF85  F023         	goto	l6542
 11596   004702                     l6540:
 11597                           
 11598                           ; BSR set to: 0
 11599   004702  90D8               	bcf	status,0,c
 11600   004704  3766               	rlcf	___awmod@divisor& (0+255),f,b
 11601   004706  3767               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11602   004708  2B68               	incf	___awmod@counter& (0+255),f,b
 11603   00470A                     l6542:
 11604                           
 11605                           ; BSR set to: 0
 11606   00470A  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11607   00470C  EF8A  F023         	goto	u7841
 11608   004710  EF8C  F023         	goto	u7840
 11609   004714                     u7841:
 11610   004714  EF81  F023         	goto	l6540
 11611   004718                     u7840:
 11612   004718                     l6544:
 11613                           
 11614                           ; BSR set to: 0
 11615   004718  5166               	movf	___awmod@divisor& (0+255),w,b
 11616   00471A  5D64               	subwf	___awmod@dividend& (0+255),w,b
 11617   00471C  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
 11618   00471E  5965               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11619   004720  A0D8               	btfss	status,0,c
 11620   004722  EF95  F023         	goto	u7851
 11621   004726  EF97  F023         	goto	u7850
 11622   00472A                     u7851:
 11623   00472A  EF9B  F023         	goto	l6548
 11624   00472E                     u7850:
 11625   00472E                     
 11626                           ; BSR set to: 0
 11627   00472E  5166               	movf	___awmod@divisor& (0+255),w,b
 11628   004730  5F64               	subwf	___awmod@dividend& (0+255),f,b
 11629   004732  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
 11630   004734  5B65               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11631   004736                     l6548:
 11632                           
 11633                           ; BSR set to: 0
 11634   004736  90D8               	bcf	status,0,c
 11635   004738  3367               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11636   00473A  3366               	rrcf	___awmod@divisor& (0+255),f,b
 11637   00473C                     
 11638                           ; BSR set to: 0
 11639   00473C  2F68               	decfsz	___awmod@counter& (0+255),f,b
 11640   00473E  EF8C  F023         	goto	l6544
 11641   004742                     l6552:
 11642                           
 11643                           ; BSR set to: 0
 11644   004742  5169               	movf	___awmod@sign& (0+255),w,b
 11645   004744  B4D8               	btfsc	status,2,c
 11646   004746  EFA7  F023         	goto	u7861
 11647   00474A  EFA9  F023         	goto	u7860
 11648   00474E                     u7861:
 11649   00474E  EFAD  F023         	goto	l6556
 11650   004752                     u7860:
 11651   004752                     
 11652                           ; BSR set to: 0
 11653   004752  6D64               	negf	___awmod@dividend& (0+255),b
 11654   004754  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
 11655   004756  B0D8               	btfsc	status,0,c
 11656   004758  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
 11657   00475A                     l6556:
 11658                           
 11659                           ; BSR set to: 0
 11660   00475A  C064  F064         	movff	___awmod@dividend,?___awmod
 11661   00475E  C065  F065         	movff	___awmod@dividend+1,?___awmod+1
 11662   004762                     
 11663                           ; BSR set to: 0
 11664   004762  0012               	return		;funcret
 11665   004764                     __end_of___awmod:
 11666                           	callstack 0
 11667                           
 11668 ;; *************** function ___awdiv *****************
 11669 ;; Defined at:
 11670 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;  dividend        2    4[BANK0 ] int 
 11673 ;;  divisor         2    6[BANK0 ] int 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;  quotient        2   10[BANK0 ] int 
 11676 ;;  sign            1    9[BANK0 ] unsigned char 
 11677 ;;  counter         1    8[BANK0 ] unsigned char 
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  2    4[BANK0 ] int 
 11680 ;; Registers used:
 11681 ;;		wreg, status,2, status,0
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11687 ;;      Params:         0       4       0       0       0       0       0
 11688 ;;      Locals:         0       4       0       0       0       0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0
 11690 ;;      Totals:         0       8       0       0       0       0       0
 11691 ;;Total ram usage:        8 bytes
 11692 ;; Hardware stack levels used: 1
 11693 ;; Hardware stack levels required when called: 3
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		_dtoa
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           	psect	text47
 11702   004536                     __ptext47:
 11703                           	callstack 0
 11704   004536                     ___awdiv:
 11705                           	callstack 19
 11706   004536  0E00               	movlw	0
 11707   004538  0100               	movlb	0	; () banked
 11708   00453A  6F69               	movwf	___awdiv@sign& (0+255),b
 11709   00453C                     
 11710                           ; BSR set to: 0
 11711   00453C  BF67               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 11712   00453E  EFA5  F022         	goto	u7750
 11713   004542  EFA3  F022         	goto	u7751
 11714   004546                     u7751:
 11715   004546  EFAB  F022         	goto	l6488
 11716   00454A                     u7750:
 11717   00454A                     
 11718                           ; BSR set to: 0
 11719   00454A  6D66               	negf	___awdiv@divisor& (0+255),b
 11720   00454C  1F67               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11721   00454E  B0D8               	btfsc	status,0,c
 11722   004550  2B67               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11723   004552                     
 11724                           ; BSR set to: 0
 11725   004552  0E01               	movlw	1
 11726   004554  6F69               	movwf	___awdiv@sign& (0+255),b
 11727   004556                     l6488:
 11728                           
 11729                           ; BSR set to: 0
 11730   004556  BF65               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
 11731   004558  EFB2  F022         	goto	u7760
 11732   00455C  EFB0  F022         	goto	u7761
 11733   004560                     u7761:
 11734   004560  EFB8  F022         	goto	l6494
 11735   004564                     u7760:
 11736   004564                     
 11737                           ; BSR set to: 0
 11738   004564  6D64               	negf	___awdiv@dividend& (0+255),b
 11739   004566  1F65               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11740   004568  B0D8               	btfsc	status,0,c
 11741   00456A  2B65               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11742   00456C                     
 11743                           ; BSR set to: 0
 11744   00456C  0E01               	movlw	1
 11745   00456E  1B69               	xorwf	___awdiv@sign& (0+255),f,b
 11746   004570                     l6494:
 11747                           
 11748                           ; BSR set to: 0
 11749   004570  0E00               	movlw	0
 11750   004572  6F6B               	movwf	(___awdiv@quotient+1)& (0+255),b
 11751   004574  0E00               	movlw	0
 11752   004576  6F6A               	movwf	___awdiv@quotient& (0+255),b
 11753   004578                     
 11754                           ; BSR set to: 0
 11755   004578  5166               	movf	___awdiv@divisor& (0+255),w,b
 11756   00457A  1167               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11757   00457C  B4D8               	btfsc	status,2,c
 11758   00457E  EFC3  F022         	goto	u7771
 11759   004582  EFC5  F022         	goto	u7770
 11760   004586                     u7771:
 11761   004586  EFED  F022         	goto	l6516
 11762   00458A                     u7770:
 11763   00458A                     
 11764                           ; BSR set to: 0
 11765   00458A  0E01               	movlw	1
 11766   00458C  6F68               	movwf	___awdiv@counter& (0+255),b
 11767   00458E  EFCD  F022         	goto	l6502
 11768   004592                     l6500:
 11769                           
 11770                           ; BSR set to: 0
 11771   004592  90D8               	bcf	status,0,c
 11772   004594  3766               	rlcf	___awdiv@divisor& (0+255),f,b
 11773   004596  3767               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11774   004598  2B68               	incf	___awdiv@counter& (0+255),f,b
 11775   00459A                     l6502:
 11776                           
 11777                           ; BSR set to: 0
 11778   00459A  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11779   00459C  EFD2  F022         	goto	u7781
 11780   0045A0  EFD4  F022         	goto	u7780
 11781   0045A4                     u7781:
 11782   0045A4  EFC9  F022         	goto	l6500
 11783   0045A8                     u7780:
 11784   0045A8                     l6504:
 11785                           
 11786                           ; BSR set to: 0
 11787   0045A8  90D8               	bcf	status,0,c
 11788   0045AA  376A               	rlcf	___awdiv@quotient& (0+255),f,b
 11789   0045AC  376B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11790   0045AE                     
 11791                           ; BSR set to: 0
 11792   0045AE  5166               	movf	___awdiv@divisor& (0+255),w,b
 11793   0045B0  5D64               	subwf	___awdiv@dividend& (0+255),w,b
 11794   0045B2  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11795   0045B4  5965               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11796   0045B6  A0D8               	btfss	status,0,c
 11797   0045B8  EFE0  F022         	goto	u7791
 11798   0045BC  EFE2  F022         	goto	u7790
 11799   0045C0                     u7791:
 11800   0045C0  EFE7  F022         	goto	l6512
 11801   0045C4                     u7790:
 11802   0045C4                     
 11803                           ; BSR set to: 0
 11804   0045C4  5166               	movf	___awdiv@divisor& (0+255),w,b
 11805   0045C6  5F64               	subwf	___awdiv@dividend& (0+255),f,b
 11806   0045C8  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11807   0045CA  5B65               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11808   0045CC                     
 11809                           ; BSR set to: 0
 11810   0045CC  816A               	bsf	___awdiv@quotient& (0+255),0,b
 11811   0045CE                     l6512:
 11812                           
 11813                           ; BSR set to: 0
 11814   0045CE  90D8               	bcf	status,0,c
 11815   0045D0  3367               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11816   0045D2  3366               	rrcf	___awdiv@divisor& (0+255),f,b
 11817   0045D4                     
 11818                           ; BSR set to: 0
 11819   0045D4  2F68               	decfsz	___awdiv@counter& (0+255),f,b
 11820   0045D6  EFD4  F022         	goto	l6504
 11821   0045DA                     l6516:
 11822                           
 11823                           ; BSR set to: 0
 11824   0045DA  5169               	movf	___awdiv@sign& (0+255),w,b
 11825   0045DC  B4D8               	btfsc	status,2,c
 11826   0045DE  EFF3  F022         	goto	u7801
 11827   0045E2  EFF5  F022         	goto	u7800
 11828   0045E6                     u7801:
 11829   0045E6  EFF9  F022         	goto	l6520
 11830   0045EA                     u7800:
 11831   0045EA                     
 11832                           ; BSR set to: 0
 11833   0045EA  6D6A               	negf	___awdiv@quotient& (0+255),b
 11834   0045EC  1F6B               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11835   0045EE  B0D8               	btfsc	status,0,c
 11836   0045F0  2B6B               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11837   0045F2                     l6520:
 11838                           
 11839                           ; BSR set to: 0
 11840   0045F2  C06A  F064         	movff	___awdiv@quotient,?___awdiv
 11841   0045F6  C06B  F065         	movff	___awdiv@quotient+1,?___awdiv+1
 11842   0045FA                     
 11843                           ; BSR set to: 0
 11844   0045FA  0012               	return		;funcret
 11845   0045FC                     __end_of___awdiv:
 11846                           	callstack 0
 11847                           
 11848 ;; *************** function _WriteLCD *****************
 11849 ;; Defined at:
 11850 ;;		line 197 in file "main.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  word            1    wreg     unsigned char 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;  word            1    6[BANK0 ] unsigned char 
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  1    wreg      void 
 11857 ;; Registers used:
 11858 ;;		wreg, status,2, status,0, cstack
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11864 ;;      Params:         0       0       0       0       0       0       0
 11865 ;;      Locals:         0       1       0       0       0       0       0
 11866 ;;      Temps:          0       0       0       0       0       0       0
 11867 ;;      Totals:         0       1       0       0       0       0       0
 11868 ;;Total ram usage:        1 bytes
 11869 ;; Hardware stack levels used: 1
 11870 ;; Hardware stack levels required when called: 4
 11871 ;; This function calls:
 11872 ;;		_LCD
 11873 ;; This function is called by:
 11874 ;;		_Data1LCD
 11875 ;;		_Data2LCD
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           	psect	text48
 11880   004E50                     __ptext48:
 11881                           	callstack 0
 11882   004E50                     _WriteLCD:
 11883                           	callstack 24
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;incstack = 0
 11887                           ;WriteLCD@word stored from wreg
 11888   004E50  0100               	movlb	0	; () banked
 11889   004E52  6F66               	movwf	WriteLCD@word& (0+255),b
 11890   004E54                     
 11891                           ;main.c: 198:     LATB0 = 1;
 11892   004E54  808A               	bsf	3978,0,c	;volatile
 11893   004E56                     
 11894                           ;main.c: 199:     LCD(word >> 4);
 11895   004E56  0100               	movlb	0	; () banked
 11896   004E58  3966               	swapf	WriteLCD@word& (0+255),w,b
 11897   004E5A  0B0F               	andlw	15
 11898   004E5C  ECB2  F023         	call	_LCD
 11899                           
 11900                           ;main.c: 200:     LCD(word & 0x0F);
 11901   004E60  0100               	movlb	0	; () banked
 11902   004E62  5166               	movf	WriteLCD@word& (0+255),w,b
 11903   004E64  0B0F               	andlw	15
 11904   004E66  ECB2  F023         	call	_LCD
 11905   004E6A  0012               	return		;funcret
 11906   004E6C                     __end_of_WriteLCD:
 11907                           	callstack 0
 11908                           
 11909 ;; *************** function _SettingsLCD *****************
 11910 ;; Defined at:
 11911 ;;		line 191 in file "main.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;  word            1    wreg     unsigned char 
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;  word            1    6[BANK0 ] unsigned char 
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  1    wreg      void 
 11918 ;; Registers used:
 11919 ;;		wreg, status,2, status,0, cstack
 11920 ;; Tracked objects:
 11921 ;;		On entry : 0/0
 11922 ;;		On exit  : 0/0
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11925 ;;      Params:         0       0       0       0       0       0       0
 11926 ;;      Locals:         0       1       0       0       0       0       0
 11927 ;;      Temps:          0       0       0       0       0       0       0
 11928 ;;      Totals:         0       1       0       0       0       0       0
 11929 ;;Total ram usage:        1 bytes
 11930 ;; Hardware stack levels used: 1
 11931 ;; Hardware stack levels required when called: 4
 11932 ;; This function calls:
 11933 ;;		_LCD
 11934 ;; This function is called by:
 11935 ;;		_settings
 11936 ;;		_Data1LCD
 11937 ;;		_Data2LCD
 11938 ;; This function uses a non-reentrant model
 11939 ;;
 11940                           
 11941                           	psect	text49
 11942   004E6C                     __ptext49:
 11943                           	callstack 0
 11944   004E6C                     _SettingsLCD:
 11945                           	callstack 25
 11946                           
 11947                           ;incstack = 0
 11948                           ;SettingsLCD@word stored from wreg
 11949   004E6C  0100               	movlb	0	; () banked
 11950   004E6E  6F66               	movwf	SettingsLCD@word& (0+255),b
 11951   004E70                     
 11952                           ;main.c: 192:     LATB0 = 0;
 11953   004E70  908A               	bcf	3978,0,c	;volatile
 11954   004E72                     
 11955                           ;main.c: 193:     LCD(word >> 4);
 11956   004E72  0100               	movlb	0	; () banked
 11957   004E74  3966               	swapf	SettingsLCD@word& (0+255),w,b
 11958   004E76  0B0F               	andlw	15
 11959   004E78  ECB2  F023         	call	_LCD
 11960                           
 11961                           ;main.c: 194:     LCD(word & 0x0F);
 11962   004E7C  0100               	movlb	0	; () banked
 11963   004E7E  5166               	movf	SettingsLCD@word& (0+255),w,b
 11964   004E80  0B0F               	andlw	15
 11965   004E82  ECB2  F023         	call	_LCD
 11966   004E86  0012               	return		;funcret
 11967   004E88                     __end_of_SettingsLCD:
 11968                           	callstack 0
 11969                           
 11970 ;; *************** function _LCD *****************
 11971 ;; Defined at:
 11972 ;;		line 203 in file "main.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  data            1    wreg     unsigned char 
 11975 ;; Auto vars:     Size  Location     Type
 11976 ;;  data            1    5[BANK0 ] unsigned char 
 11977 ;; Return value:  Size  Location     Type
 11978 ;;                  1    wreg      void 
 11979 ;; Registers used:
 11980 ;;		wreg, status,2, status,0, cstack
 11981 ;; Tracked objects:
 11982 ;;		On entry : 0/0
 11983 ;;		On exit  : 0/0
 11984 ;;		Unchanged: 0/0
 11985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11986 ;;      Params:         0       0       0       0       0       0       0
 11987 ;;      Locals:         0       1       0       0       0       0       0
 11988 ;;      Temps:          0       1       0       0       0       0       0
 11989 ;;      Totals:         0       2       0       0       0       0       0
 11990 ;;Total ram usage:        2 bytes
 11991 ;; Hardware stack levels used: 1
 11992 ;; Hardware stack levels required when called: 3
 11993 ;; This function calls:
 11994 ;;		Nothing
 11995 ;; This function is called by:
 11996 ;;		_SettingsLCD
 11997 ;;		_WriteLCD
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text50
 12002   004764                     __ptext50:
 12003                           	callstack 0
 12004   004764                     _LCD:
 12005                           	callstack 25
 12006                           
 12007                           ;incstack = 0
 12008                           ;LCD@data stored from wreg
 12009   004764  0100               	movlb	0	; () banked
 12010   004766  6F65               	movwf	LCD@data& (0+255),b
 12011   004768                     
 12012                           ;main.c: 204:     LATB1 = 1;
 12013   004768  828A               	bsf	3978,1,c	;volatile
 12014   00476A                     
 12015                           ;main.c: 205:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 12016   00476A  0E21               	movlw	33
 12017   00476C                     u9797:
 12018   00476C  2EE8               	decfsz	wreg,f,c
 12019   00476E  D7FE               	bra	u9797
 12020   004770  F000               	nop	
 12021   004772                     
 12022                           ;main.c: 206:     LATDbits.LATD0 = (data & 0x01);
 12023   004772  C065  F064         	movff	LCD@data,??_LCD
 12024   004776  0E01               	movlw	1
 12025   004778  0100               	movlb	0	; () banked
 12026   00477A  1764               	andwf	??_LCD& (0+255),f,b
 12027   00477C  508C               	movf	140,w,c	;volatile
 12028   00477E  1964               	xorwf	??_LCD& (0+255),w,b
 12029   004780  0BFE               	andlw	-2
 12030   004782  1964               	xorwf	??_LCD& (0+255),w,b
 12031   004784  6E8C               	movwf	140,c	;volatile
 12032   004786                     
 12033                           ; BSR set to: 0
 12034                           ;main.c: 207:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 12035   004786  0E21               	movlw	33
 12036   004788                     u9807:
 12037   004788  2EE8               	decfsz	wreg,f,c
 12038   00478A  D7FE               	bra	u9807
 12039   00478C  F000               	nop	
 12040   00478E                     
 12041                           ;main.c: 208:     LATDbits.LATD1 = (data & 0x02) >> 1;
 12042   00478E  C065  F064         	movff	LCD@data,??_LCD
 12043   004792  0100               	movlb	0	; () banked
 12044   004794  90D8               	bcf	status,0,c
 12045   004796  3364               	rrcf	??_LCD& (0+255),f,b
 12046   004798  0E01               	movlw	1
 12047   00479A  1764               	andwf	??_LCD& (0+255),f,b
 12048   00479C  4764               	rlncf	??_LCD& (0+255),f,b
 12049   00479E  508C               	movf	140,w,c	;volatile
 12050   0047A0  1964               	xorwf	??_LCD& (0+255),w,b
 12051   0047A2  0BFD               	andlw	-3
 12052   0047A4  1964               	xorwf	??_LCD& (0+255),w,b
 12053   0047A6  6E8C               	movwf	140,c	;volatile
 12054   0047A8                     
 12055                           ; BSR set to: 0
 12056                           ;main.c: 209:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 12057   0047A8  0E21               	movlw	33
 12058   0047AA                     u9817:
 12059   0047AA  2EE8               	decfsz	wreg,f,c
 12060   0047AC  D7FE               	bra	u9817
 12061   0047AE  F000               	nop	
 12062   0047B0                     
 12063                           ;main.c: 210:     LATDbits.LATD2 = (data & 0x04) >> 2;
 12064   0047B0  C065  F064         	movff	LCD@data,??_LCD
 12065   0047B4  0100               	movlb	0	; () banked
 12066   0047B6  90D8               	bcf	status,0,c
 12067   0047B8  3364               	rrcf	??_LCD& (0+255),f,b
 12068   0047BA  90D8               	bcf	status,0,c
 12069   0047BC  3364               	rrcf	??_LCD& (0+255),f,b
 12070   0047BE  0E01               	movlw	1
 12071   0047C0  1764               	andwf	??_LCD& (0+255),f,b
 12072   0047C2  4764               	rlncf	??_LCD& (0+255),f,b
 12073   0047C4  4764               	rlncf	??_LCD& (0+255),f,b
 12074   0047C6  508C               	movf	140,w,c	;volatile
 12075   0047C8  1964               	xorwf	??_LCD& (0+255),w,b
 12076   0047CA  0BFB               	andlw	-5
 12077   0047CC  1964               	xorwf	??_LCD& (0+255),w,b
 12078   0047CE  6E8C               	movwf	140,c	;volatile
 12079   0047D0                     
 12080                           ; BSR set to: 0
 12081                           ;main.c: 211:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 12082   0047D0  0E21               	movlw	33
 12083   0047D2                     u9827:
 12084   0047D2  2EE8               	decfsz	wreg,f,c
 12085   0047D4  D7FE               	bra	u9827
 12086   0047D6  F000               	nop	
 12087   0047D8                     
 12088                           ;main.c: 212:     LATDbits.LATD3 = (data & 0x08) >> 3;
 12089   0047D8  C065  F064         	movff	LCD@data,??_LCD
 12090   0047DC  0100               	movlb	0	; () banked
 12091   0047DE  90D8               	bcf	status,0,c
 12092   0047E0  3364               	rrcf	??_LCD& (0+255),f,b
 12093   0047E2  90D8               	bcf	status,0,c
 12094   0047E4  3364               	rrcf	??_LCD& (0+255),f,b
 12095   0047E6  90D8               	bcf	status,0,c
 12096   0047E8  3364               	rrcf	??_LCD& (0+255),f,b
 12097   0047EA  0E01               	movlw	1
 12098   0047EC  1764               	andwf	??_LCD& (0+255),f,b
 12099   0047EE  4764               	rlncf	??_LCD& (0+255),f,b
 12100   0047F0  4764               	rlncf	??_LCD& (0+255),f,b
 12101   0047F2  4764               	rlncf	??_LCD& (0+255),f,b
 12102   0047F4  508C               	movf	140,w,c	;volatile
 12103   0047F6  1964               	xorwf	??_LCD& (0+255),w,b
 12104   0047F8  0BF7               	andlw	-9
 12105   0047FA  1964               	xorwf	??_LCD& (0+255),w,b
 12106   0047FC  6E8C               	movwf	140,c	;volatile
 12107   0047FE                     
 12108                           ; BSR set to: 0
 12109                           ;main.c: 213:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 12110   0047FE  0E21               	movlw	33
 12111   004800                     u9837:
 12112   004800  2EE8               	decfsz	wreg,f,c
 12113   004802  D7FE               	bra	u9837
 12114   004804  F000               	nop	
 12115   004806                     
 12116                           ;main.c: 214:     LATB1 = 0;
 12117   004806  928A               	bcf	3978,1,c	;volatile
 12118   004808                     
 12119                           ;main.c: 215:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 12120   004808  0E21               	movlw	33
 12121   00480A                     u9847:
 12122   00480A  2EE8               	decfsz	wreg,f,c
 12123   00480C  D7FE               	bra	u9847
 12124   00480E  F000               	nop	
 12125   004810  0012               	return		;funcret
 12126   004812                     __end_of_LCD:
 12127                           	callstack 0
 12128                           
 12129 ;; *************** function _PWM_increase *****************
 12130 ;; Defined at:
 12131 ;;		line 575 in file "main.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;		None
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      void 
 12138 ;; Registers used:
 12139 ;;		wreg, status,2, status,0
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12145 ;;      Params:         0       0       0       0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0
 12147 ;;      Temps:          0       1       0       0       0       0       0
 12148 ;;      Totals:         0       1       0       0       0       0       0
 12149 ;;Total ram usage:        1 bytes
 12150 ;; Hardware stack levels used: 1
 12151 ;; Hardware stack levels required when called: 3
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_Manual
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text51
 12160   00268A                     __ptext51:
 12161                           	callstack 0
 12162   00268A                     _PWM_increase:
 12163                           	callstack 26
 12164   00268A                     
 12165                           ;main.c: 576:     if (n == 1) {
 12166   00268A  042A               	decf	_n^0,w,c
 12167   00268C  A4D8               	btfss	status,2,c
 12168   00268E  EF4B  F013         	goto	u8881
 12169   002692  EF4D  F013         	goto	u8880
 12170   002696                     u8881:
 12171   002696  EFBC  F013         	goto	l7384
 12172   00269A                     u8880:
 12173   00269A                     
 12174                           ;main.c: 577:         n = 0;
 12175   00269A  0E00               	movlw	0
 12176   00269C  6E2A               	movwf	_n^0,c
 12177   00269E                     
 12178                           ;main.c: 578:         if (m == 1 || m == 2) {
 12179   00269E  0101               	movlb	1	; () banked
 12180   0026A0  0542               	decf	_m& (0+255),w,b
 12181   0026A2  B4D8               	btfsc	status,2,c
 12182   0026A4  EF56  F013         	goto	u8891
 12183   0026A8  EF58  F013         	goto	u8890
 12184   0026AC                     u8891:
 12185   0026AC  EF61  F013         	goto	l7368
 12186   0026B0                     u8890:
 12187   0026B0                     
 12188                           ; BSR set to: 1
 12189   0026B0  0E02               	movlw	2
 12190   0026B2  1942               	xorwf	_m& (0+255),w,b
 12191   0026B4  A4D8               	btfss	status,2,c
 12192   0026B6  EF5F  F013         	goto	u8901
 12193   0026BA  EF61  F013         	goto	u8900
 12194   0026BE                     u8901:
 12195   0026BE  EF78  F013         	goto	l7372
 12196   0026C2                     u8900:
 12197   0026C2                     l7368:
 12198                           
 12199                           ; BSR set to: 1
 12200                           ;main.c: 579:             digital += 100;
 12201   0026C2  0E64               	movlw	100
 12202   0026C4  273E               	addwf	_digital& (0+255),f,b
 12203   0026C6  0E00               	movlw	0
 12204   0026C8  233F               	addwfc	(_digital+1)& (0+255),f,b
 12205                           
 12206                           ;main.c: 580:             if (digital > 1023) {
 12207   0026CA  BF3F               	btfsc	(_digital+1)& (0+255),7,b
 12208   0026CC  EF6F  F013         	goto	u8911
 12209   0026D0  0E04               	movlw	4
 12210   0026D2  5D3F               	subwf	(_digital+1)& (0+255),w,b
 12211   0026D4  A0D8               	btfss	status,0,c
 12212   0026D6  EF6F  F013         	goto	u8911
 12213   0026DA  EF71  F013         	goto	u8910
 12214   0026DE                     u8911:
 12215   0026DE  EF05  F015         	goto	l545
 12216   0026E2                     u8910:
 12217   0026E2                     l7370:
 12218                           
 12219                           ; BSR set to: 1
 12220                           ;main.c: 581:                 digital = 1023;
 12221   0026E2  0E03               	movlw	3
 12222   0026E4  6F3F               	movwf	(_digital+1)& (0+255),b
 12223   0026E6  693E               	setf	_digital& (0+255),b
 12224   0026E8  EF05  F015         	goto	l545
 12225   0026EC                     l502:
 12226                           
 12227                           ; BSR set to: 1
 12228                           ;main.c: 583:         } else if (m == 3) {
 12229   0026EC  EF05  F015         	goto	l545
 12230   0026F0                     l7372:
 12231                           
 12232                           ; BSR set to: 1
 12233   0026F0  0E03               	movlw	3
 12234   0026F2  1942               	xorwf	_m& (0+255),w,b
 12235   0026F4  A4D8               	btfss	status,2,c
 12236   0026F6  EF7F  F013         	goto	u8921
 12237   0026FA  EF81  F013         	goto	u8920
 12238   0026FE                     u8921:
 12239   0026FE  EF9E  F013         	goto	l7378
 12240   002702                     u8920:
 12241   002702                     
 12242                           ; BSR set to: 1
 12243                           ;main.c: 584:             digital1 += 100;
 12244   002702  0E64               	movlw	100
 12245   002704  273C               	addwf	_digital1& (0+255),f,b
 12246   002706  0E00               	movlw	0
 12247   002708  233D               	addwfc	(_digital1+1)& (0+255),f,b
 12248                           
 12249                           ;main.c: 585:             if (digital1 >= digital2) {
 12250   00270A  513A               	movf	_digital2& (0+255),w,b
 12251   00270C  5D3C               	subwf	_digital1& (0+255),w,b
 12252   00270E  513D               	movf	(_digital1+1)& (0+255),w,b
 12253   002710  0A80               	xorlw	128
 12254   002712  0100               	movlb	0	; () banked
 12255   002714  6F64               	movwf	??_PWM_increase& (0+255),b
 12256   002716  0101               	movlb	1	; () banked
 12257   002718  513B               	movf	(_digital2+1)& (0+255),w,b
 12258   00271A  0A80               	xorlw	128
 12259   00271C  0100               	movlb	0	; () banked
 12260   00271E  5964               	subwfb	??_PWM_increase& (0+255),w,b
 12261   002720  A0D8               	btfss	status,0,c
 12262   002722  EF95  F013         	goto	u8931
 12263   002726  EF97  F013         	goto	u8930
 12264   00272A                     u8931:
 12265   00272A  EF05  F015         	goto	l545
 12266   00272E                     u8930:
 12267   00272E                     
 12268                           ; BSR set to: 0
 12269                           ;main.c: 586:                 digital1 -= 100;
 12270   00272E  0101               	movlb	1	; () banked
 12271   002730  0E9C               	movlw	156
 12272   002732  273C               	addwf	_digital1& (0+255),f,b
 12273   002734  0EFF               	movlw	255
 12274   002736  233D               	addwfc	(_digital1+1)& (0+255),f,b
 12275   002738  EF05  F015         	goto	l545
 12276   00273C                     l7378:
 12277                           
 12278                           ; BSR set to: 1
 12279   00273C  0E04               	movlw	4
 12280   00273E  1942               	xorwf	_m& (0+255),w,b
 12281   002740  A4D8               	btfss	status,2,c
 12282   002742  EFA5  F013         	goto	u8941
 12283   002746  EFA7  F013         	goto	u8940
 12284   00274A                     u8941:
 12285   00274A  EF76  F013         	goto	l502
 12286   00274E                     u8940:
 12287   00274E                     
 12288                           ; BSR set to: 1
 12289                           ;main.c: 589:             digital1 += 100;
 12290   00274E  0E64               	movlw	100
 12291   002750  273C               	addwf	_digital1& (0+255),f,b
 12292   002752  0E00               	movlw	0
 12293   002754  233D               	addwfc	(_digital1+1)& (0+255),f,b
 12294                           
 12295                           ;main.c: 590:             if (digital1 > 1023) {
 12296   002756  BF3D               	btfsc	(_digital1+1)& (0+255),7,b
 12297   002758  EFB5  F013         	goto	u8951
 12298   00275C  0E04               	movlw	4
 12299   00275E  5D3D               	subwf	(_digital1+1)& (0+255),w,b
 12300   002760  A0D8               	btfss	status,0,c
 12301   002762  EFB5  F013         	goto	u8951
 12302   002766  EFB7  F013         	goto	u8950
 12303   00276A                     u8951:
 12304   00276A  EF05  F015         	goto	l545
 12305   00276E                     u8950:
 12306   00276E                     
 12307                           ; BSR set to: 1
 12308                           ;main.c: 591:                 digital1 = 1023;
 12309   00276E  0E03               	movlw	3
 12310   002770  6F3D               	movwf	(_digital1+1)& (0+255),b
 12311   002772  693C               	setf	_digital1& (0+255),b
 12312   002774  EF05  F015         	goto	l545
 12313   002778                     l7384:
 12314   002778  0E02               	movlw	2
 12315   00277A  182A               	xorwf	_n^0,w,c
 12316   00277C  A4D8               	btfss	status,2,c
 12317   00277E  EFC3  F013         	goto	u8961
 12318   002782  EFC5  F013         	goto	u8960
 12319   002786                     u8961:
 12320   002786  EF2A  F014         	goto	l7408
 12321   00278A                     u8960:
 12322   00278A                     
 12323                           ;main.c: 595:         n = 0;
 12324   00278A  0E00               	movlw	0
 12325   00278C  6E2A               	movwf	_n^0,c
 12326   00278E                     
 12327                           ;main.c: 596:         if (m == 1 || m == 2) {
 12328   00278E  0101               	movlb	1	; () banked
 12329   002790  0542               	decf	_m& (0+255),w,b
 12330   002792  B4D8               	btfsc	status,2,c
 12331   002794  EFCE  F013         	goto	u8971
 12332   002798  EFD0  F013         	goto	u8970
 12333   00279C                     u8971:
 12334   00279C  EFD9  F013         	goto	l7392
 12335   0027A0                     u8970:
 12336   0027A0                     
 12337                           ; BSR set to: 1
 12338   0027A0  0E02               	movlw	2
 12339   0027A2  1942               	xorwf	_m& (0+255),w,b
 12340   0027A4  A4D8               	btfss	status,2,c
 12341   0027A6  EFD7  F013         	goto	u8981
 12342   0027AA  EFD9  F013         	goto	u8980
 12343   0027AE                     u8981:
 12344   0027AE  EFEA  F013         	goto	l7396
 12345   0027B2                     u8980:
 12346   0027B2                     l7392:
 12347                           
 12348                           ; BSR set to: 1
 12349                           ;main.c: 597:             digital -= 100;
 12350   0027B2  0E9C               	movlw	156
 12351   0027B4  273E               	addwf	_digital& (0+255),f,b
 12352   0027B6  0EFF               	movlw	255
 12353   0027B8  233F               	addwfc	(_digital+1)& (0+255),f,b
 12354                           
 12355                           ;main.c: 598:             if (digital < 0) {
 12356   0027BA  BF3F               	btfsc	(_digital+1)& (0+255),7,b
 12357   0027BC  EFE4  F013         	goto	u8990
 12358   0027C0  EFE2  F013         	goto	u8991
 12359   0027C4                     u8991:
 12360   0027C4  EF05  F015         	goto	l545
 12361   0027C8                     u8990:
 12362   0027C8                     l7394:
 12363                           
 12364                           ; BSR set to: 1
 12365                           ;main.c: 599:                 digital = 0;
 12366   0027C8  0E00               	movlw	0
 12367   0027CA  6F3F               	movwf	(_digital+1)& (0+255),b
 12368   0027CC  0E00               	movlw	0
 12369   0027CE  6F3E               	movwf	_digital& (0+255),b
 12370   0027D0  EF05  F015         	goto	l545
 12371   0027D4                     l7396:
 12372                           
 12373                           ; BSR set to: 1
 12374   0027D4  0E03               	movlw	3
 12375   0027D6  1942               	xorwf	_m& (0+255),w,b
 12376   0027D8  A4D8               	btfss	status,2,c
 12377   0027DA  EFF1  F013         	goto	u9001
 12378   0027DE  EFF3  F013         	goto	u9000
 12379   0027E2                     u9001:
 12380   0027E2  EF04  F014         	goto	l7402
 12381   0027E6                     u9000:
 12382   0027E6                     
 12383                           ; BSR set to: 1
 12384                           ;main.c: 602:             digital1 -= 100;
 12385   0027E6  0E9C               	movlw	156
 12386   0027E8  273C               	addwf	_digital1& (0+255),f,b
 12387   0027EA  0EFF               	movlw	255
 12388   0027EC  233D               	addwfc	(_digital1+1)& (0+255),f,b
 12389                           
 12390                           ;main.c: 603:             if (digital1 < 0) {
 12391   0027EE  BF3D               	btfsc	(_digital1+1)& (0+255),7,b
 12392   0027F0  EFFE  F013         	goto	u9010
 12393   0027F4  EFFC  F013         	goto	u9011
 12394   0027F8                     u9011:
 12395   0027F8  EF05  F015         	goto	l545
 12396   0027FC                     u9010:
 12397   0027FC                     
 12398                           ; BSR set to: 1
 12399                           ;main.c: 604:                 digital1 = 0;
 12400   0027FC  0E00               	movlw	0
 12401   0027FE  6F3D               	movwf	(_digital1+1)& (0+255),b
 12402   002800  0E00               	movlw	0
 12403   002802  6F3C               	movwf	_digital1& (0+255),b
 12404   002804  EF05  F015         	goto	l545
 12405   002808                     l7402:
 12406                           
 12407                           ; BSR set to: 1
 12408   002808  0E04               	movlw	4
 12409   00280A  1942               	xorwf	_m& (0+255),w,b
 12410   00280C  A4D8               	btfss	status,2,c
 12411   00280E  EF0B  F014         	goto	u9021
 12412   002812  EF0D  F014         	goto	u9020
 12413   002816                     u9021:
 12414   002816  EF76  F013         	goto	l502
 12415   00281A                     u9020:
 12416   00281A                     
 12417                           ; BSR set to: 1
 12418                           ;main.c: 607:             digital1 -= 100;
 12419   00281A  0E9C               	movlw	156
 12420   00281C  273C               	addwf	_digital1& (0+255),f,b
 12421   00281E  0EFF               	movlw	255
 12422   002820  233D               	addwfc	(_digital1+1)& (0+255),f,b
 12423                           
 12424                           ;main.c: 608:             if (digital1 <= digital2) {
 12425   002822  513C               	movf	_digital1& (0+255),w,b
 12426   002824  5D3A               	subwf	_digital2& (0+255),w,b
 12427   002826  513B               	movf	(_digital2+1)& (0+255),w,b
 12428   002828  0A80               	xorlw	128
 12429   00282A  0100               	movlb	0	; () banked
 12430   00282C  6F64               	movwf	??_PWM_increase& (0+255),b
 12431   00282E  0101               	movlb	1	; () banked
 12432   002830  513D               	movf	(_digital1+1)& (0+255),w,b
 12433   002832  0A80               	xorlw	128
 12434   002834  0100               	movlb	0	; () banked
 12435   002836  5964               	subwfb	??_PWM_increase& (0+255),w,b
 12436   002838  A0D8               	btfss	status,0,c
 12437   00283A  EF21  F014         	goto	u9031
 12438   00283E  EF23  F014         	goto	u9030
 12439   002842                     u9031:
 12440   002842  EF05  F015         	goto	l545
 12441   002846                     u9030:
 12442   002846                     
 12443                           ; BSR set to: 0
 12444                           ;main.c: 609:                 digital1 += 100;
 12445   002846  0E64               	movlw	100
 12446   002848  0101               	movlb	1	; () banked
 12447   00284A  273C               	addwf	_digital1& (0+255),f,b
 12448   00284C  0E00               	movlw	0
 12449   00284E  233D               	addwfc	(_digital1+1)& (0+255),f,b
 12450   002850  EF05  F015         	goto	l545
 12451   002854                     l7408:
 12452   002854  0E03               	movlw	3
 12453   002856  182A               	xorwf	_n^0,w,c
 12454   002858  A4D8               	btfss	status,2,c
 12455   00285A  EF31  F014         	goto	u9041
 12456   00285E  EF33  F014         	goto	u9040
 12457   002862                     u9041:
 12458   002862  EF9D  F014         	goto	l7432
 12459   002866                     u9040:
 12460   002866                     
 12461                           ;main.c: 613:         n = 0;
 12462   002866  0E00               	movlw	0
 12463   002868  6E2A               	movwf	_n^0,c
 12464   00286A                     
 12465                           ;main.c: 614:         if (m == 1 || m == 2) {
 12466   00286A  0101               	movlb	1	; () banked
 12467   00286C  0542               	decf	_m& (0+255),w,b
 12468   00286E  B4D8               	btfsc	status,2,c
 12469   002870  EF3C  F014         	goto	u9051
 12470   002874  EF3E  F014         	goto	u9050
 12471   002878                     u9051:
 12472   002878  EF47  F014         	goto	l7416
 12473   00287C                     u9050:
 12474   00287C                     
 12475                           ; BSR set to: 1
 12476   00287C  0E02               	movlw	2
 12477   00287E  1942               	xorwf	_m& (0+255),w,b
 12478   002880  A4D8               	btfss	status,2,c
 12479   002882  EF45  F014         	goto	u9061
 12480   002886  EF47  F014         	goto	u9060
 12481   00288A                     u9061:
 12482   00288A  EF59  F014         	goto	l7420
 12483   00288E                     u9060:
 12484   00288E                     l7416:
 12485                           
 12486                           ; BSR set to: 1
 12487                           ;main.c: 615:             digital += 100;
 12488   00288E  0E64               	movlw	100
 12489   002890  273E               	addwf	_digital& (0+255),f,b
 12490   002892  0E00               	movlw	0
 12491   002894  233F               	addwfc	(_digital+1)& (0+255),f,b
 12492                           
 12493                           ;main.c: 616:             if (digital > 1023) {
 12494   002896  BF3F               	btfsc	(_digital+1)& (0+255),7,b
 12495   002898  EF55  F014         	goto	u9071
 12496   00289C  0E04               	movlw	4
 12497   00289E  5D3F               	subwf	(_digital+1)& (0+255),w,b
 12498   0028A0  A0D8               	btfss	status,0,c
 12499   0028A2  EF55  F014         	goto	u9071
 12500   0028A6  EF57  F014         	goto	u9070
 12501   0028AA                     u9071:
 12502   0028AA  EF05  F015         	goto	l545
 12503   0028AE                     u9070:
 12504   0028AE  EF71  F013         	goto	l7370
 12505   0028B2                     l7420:
 12506                           
 12507                           ; BSR set to: 1
 12508   0028B2  0E03               	movlw	3
 12509   0028B4  1942               	xorwf	_m& (0+255),w,b
 12510   0028B6  A4D8               	btfss	status,2,c
 12511   0028B8  EF60  F014         	goto	u9081
 12512   0028BC  EF62  F014         	goto	u9080
 12513   0028C0                     u9081:
 12514   0028C0  EF77  F014         	goto	l7426
 12515   0028C4                     u9080:
 12516   0028C4                     
 12517                           ; BSR set to: 1
 12518                           ;main.c: 620:             digital2 += 100;
 12519   0028C4  0E64               	movlw	100
 12520   0028C6  273A               	addwf	_digital2& (0+255),f,b
 12521   0028C8  0E00               	movlw	0
 12522   0028CA  233B               	addwfc	(_digital2+1)& (0+255),f,b
 12523                           
 12524                           ;main.c: 621:             if (digital2 > 1023) {
 12525   0028CC  BF3B               	btfsc	(_digital2+1)& (0+255),7,b
 12526   0028CE  EF70  F014         	goto	u9091
 12527   0028D2  0E04               	movlw	4
 12528   0028D4  5D3B               	subwf	(_digital2+1)& (0+255),w,b
 12529   0028D6  A0D8               	btfss	status,0,c
 12530   0028D8  EF70  F014         	goto	u9091
 12531   0028DC  EF72  F014         	goto	u9090
 12532   0028E0                     u9091:
 12533   0028E0  EF05  F015         	goto	l545
 12534   0028E4                     u9090:
 12535   0028E4                     
 12536                           ; BSR set to: 1
 12537                           ;main.c: 622:                 digital2 = 1023;
 12538   0028E4  0E03               	movlw	3
 12539   0028E6  6F3B               	movwf	(_digital2+1)& (0+255),b
 12540   0028E8  693A               	setf	_digital2& (0+255),b
 12541   0028EA  EF05  F015         	goto	l545
 12542   0028EE                     l7426:
 12543                           
 12544                           ; BSR set to: 1
 12545   0028EE  0E04               	movlw	4
 12546   0028F0  1942               	xorwf	_m& (0+255),w,b
 12547   0028F2  A4D8               	btfss	status,2,c
 12548   0028F4  EF7E  F014         	goto	u9101
 12549   0028F8  EF80  F014         	goto	u9100
 12550   0028FC                     u9101:
 12551   0028FC  EF76  F013         	goto	l502
 12552   002900                     u9100:
 12553   002900                     
 12554                           ; BSR set to: 1
 12555                           ;main.c: 625:             digital2 += 100;
 12556   002900  0E64               	movlw	100
 12557   002902  273A               	addwf	_digital2& (0+255),f,b
 12558   002904  0E00               	movlw	0
 12559   002906  233B               	addwfc	(_digital2+1)& (0+255),f,b
 12560                           
 12561                           ;main.c: 626:             if (digital2 >= digital1) {
 12562   002908  513C               	movf	_digital1& (0+255),w,b
 12563   00290A  5D3A               	subwf	_digital2& (0+255),w,b
 12564   00290C  513B               	movf	(_digital2+1)& (0+255),w,b
 12565   00290E  0A80               	xorlw	128
 12566   002910  0100               	movlb	0	; () banked
 12567   002912  6F64               	movwf	??_PWM_increase& (0+255),b
 12568   002914  0101               	movlb	1	; () banked
 12569   002916  513D               	movf	(_digital1+1)& (0+255),w,b
 12570   002918  0A80               	xorlw	128
 12571   00291A  0100               	movlb	0	; () banked
 12572   00291C  5964               	subwfb	??_PWM_increase& (0+255),w,b
 12573   00291E  A0D8               	btfss	status,0,c
 12574   002920  EF94  F014         	goto	u9111
 12575   002924  EF96  F014         	goto	u9110
 12576   002928                     u9111:
 12577   002928  EF05  F015         	goto	l545
 12578   00292C                     u9110:
 12579   00292C                     
 12580                           ; BSR set to: 0
 12581                           ;main.c: 627:                 digital2 -= 100;
 12582   00292C  0101               	movlb	1	; () banked
 12583   00292E  0E9C               	movlw	156
 12584   002930  273A               	addwf	_digital2& (0+255),f,b
 12585   002932  0EFF               	movlw	255
 12586   002934  233B               	addwfc	(_digital2+1)& (0+255),f,b
 12587   002936  EF05  F015         	goto	l545
 12588   00293A                     l7432:
 12589   00293A  0E04               	movlw	4
 12590   00293C  182A               	xorwf	_n^0,w,c
 12591   00293E  A4D8               	btfss	status,2,c
 12592   002940  EFA4  F014         	goto	u9121
 12593   002944  EFA6  F014         	goto	u9120
 12594   002948                     u9121:
 12595   002948  EF05  F015         	goto	l545
 12596   00294C                     u9120:
 12597   00294C                     
 12598                           ;main.c: 631:         n = 0;
 12599   00294C  0E00               	movlw	0
 12600   00294E  6E2A               	movwf	_n^0,c
 12601   002950                     
 12602                           ;main.c: 632:         if (m == 1 || m == 2) {
 12603   002950  0101               	movlb	1	; () banked
 12604   002952  0542               	decf	_m& (0+255),w,b
 12605   002954  B4D8               	btfsc	status,2,c
 12606   002956  EFAF  F014         	goto	u9131
 12607   00295A  EFB1  F014         	goto	u9130
 12608   00295E                     u9131:
 12609   00295E  EFBA  F014         	goto	l7440
 12610   002962                     u9130:
 12611   002962                     
 12612                           ; BSR set to: 1
 12613   002962  0E02               	movlw	2
 12614   002964  1942               	xorwf	_m& (0+255),w,b
 12615   002966  A4D8               	btfss	status,2,c
 12616   002968  EFB8  F014         	goto	u9141
 12617   00296C  EFBA  F014         	goto	u9140
 12618   002970                     u9141:
 12619   002970  EFC7  F014         	goto	l7444
 12620   002974                     u9140:
 12621   002974                     l7440:
 12622                           
 12623                           ; BSR set to: 1
 12624                           ;main.c: 633:             digital -= 100;
 12625   002974  0E9C               	movlw	156
 12626   002976  273E               	addwf	_digital& (0+255),f,b
 12627   002978  0EFF               	movlw	255
 12628   00297A  233F               	addwfc	(_digital+1)& (0+255),f,b
 12629                           
 12630                           ;main.c: 634:             if (digital < 0) {
 12631   00297C  BF3F               	btfsc	(_digital+1)& (0+255),7,b
 12632   00297E  EFC5  F014         	goto	u9150
 12633   002982  EFC3  F014         	goto	u9151
 12634   002986                     u9151:
 12635   002986  EF05  F015         	goto	l545
 12636   00298A                     u9150:
 12637   00298A  EFE4  F013         	goto	l7394
 12638   00298E                     l7444:
 12639                           
 12640                           ; BSR set to: 1
 12641   00298E  0E03               	movlw	3
 12642   002990  1942               	xorwf	_m& (0+255),w,b
 12643   002992  A4D8               	btfss	status,2,c
 12644   002994  EFCE  F014         	goto	u9161
 12645   002998  EFD0  F014         	goto	u9160
 12646   00299C                     u9161:
 12647   00299C  EFED  F014         	goto	l7450
 12648   0029A0                     u9160:
 12649   0029A0                     
 12650                           ; BSR set to: 1
 12651                           ;main.c: 638:             digital2 -= 100;
 12652   0029A0  0E9C               	movlw	156
 12653   0029A2  273A               	addwf	_digital2& (0+255),f,b
 12654   0029A4  0EFF               	movlw	255
 12655   0029A6  233B               	addwfc	(_digital2+1)& (0+255),f,b
 12656                           
 12657                           ;main.c: 639:             if (digital2 <= digital1) {
 12658   0029A8  513A               	movf	_digital2& (0+255),w,b
 12659   0029AA  5D3C               	subwf	_digital1& (0+255),w,b
 12660   0029AC  513D               	movf	(_digital1+1)& (0+255),w,b
 12661   0029AE  0A80               	xorlw	128
 12662   0029B0  0100               	movlb	0	; () banked
 12663   0029B2  6F64               	movwf	??_PWM_increase& (0+255),b
 12664   0029B4  0101               	movlb	1	; () banked
 12665   0029B6  513B               	movf	(_digital2+1)& (0+255),w,b
 12666   0029B8  0A80               	xorlw	128
 12667   0029BA  0100               	movlb	0	; () banked
 12668   0029BC  5964               	subwfb	??_PWM_increase& (0+255),w,b
 12669   0029BE  A0D8               	btfss	status,0,c
 12670   0029C0  EFE4  F014         	goto	u9171
 12671   0029C4  EFE6  F014         	goto	u9170
 12672   0029C8                     u9171:
 12673   0029C8  EF05  F015         	goto	l545
 12674   0029CC                     u9170:
 12675   0029CC                     
 12676                           ; BSR set to: 0
 12677                           ;main.c: 640:                 digital2 += 100;
 12678   0029CC  0E64               	movlw	100
 12679   0029CE  0101               	movlb	1	; () banked
 12680   0029D0  273A               	addwf	_digital2& (0+255),f,b
 12681   0029D2  0E00               	movlw	0
 12682   0029D4  233B               	addwfc	(_digital2+1)& (0+255),f,b
 12683   0029D6  EF05  F015         	goto	l545
 12684   0029DA                     l7450:
 12685                           
 12686                           ; BSR set to: 1
 12687   0029DA  0E04               	movlw	4
 12688   0029DC  1942               	xorwf	_m& (0+255),w,b
 12689   0029DE  A4D8               	btfss	status,2,c
 12690   0029E0  EFF4  F014         	goto	u9181
 12691   0029E4  EFF6  F014         	goto	u9180
 12692   0029E8                     u9181:
 12693   0029E8  EF76  F013         	goto	l502
 12694   0029EC                     u9180:
 12695   0029EC                     
 12696                           ; BSR set to: 1
 12697                           ;main.c: 643:             digital2 -= 100;
 12698   0029EC  0E9C               	movlw	156
 12699   0029EE  273A               	addwf	_digital2& (0+255),f,b
 12700   0029F0  0EFF               	movlw	255
 12701   0029F2  233B               	addwfc	(_digital2+1)& (0+255),f,b
 12702                           
 12703                           ;main.c: 644:             if (digital2 < 0) {
 12704   0029F4  BF3B               	btfsc	(_digital2+1)& (0+255),7,b
 12705   0029F6  EF01  F015         	goto	u9190
 12706   0029FA  EFFF  F014         	goto	u9191
 12707   0029FE                     u9191:
 12708   0029FE  EF05  F015         	goto	l545
 12709   002A02                     u9190:
 12710   002A02                     
 12711                           ; BSR set to: 1
 12712                           ;main.c: 645:                 digital2 = 0;
 12713   002A02  0E00               	movlw	0
 12714   002A04  6F3B               	movwf	(_digital2+1)& (0+255),b
 12715   002A06  0E00               	movlw	0
 12716   002A08  6F3A               	movwf	_digital2& (0+255),b
 12717   002A0A                     l545:
 12718   002A0A  0012               	return		;funcret
 12719   002A0C                     __end_of_PWM_increase:
 12720                           	callstack 0
 12721                           
 12722 ;; *************** function _sensor *****************
 12723 ;; Defined at:
 12724 ;;		line 264 in file "main.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;		None
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;		None
 12729 ;; Return value:  Size  Location     Type
 12730 ;;                  1    wreg      void 
 12731 ;; Registers used:
 12732 ;;		wreg, status,2, status,0
 12733 ;; Tracked objects:
 12734 ;;		On entry : 0/0
 12735 ;;		On exit  : 0/0
 12736 ;;		Unchanged: 0/0
 12737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12738 ;;      Params:         0       0       0       0       0       0       0
 12739 ;;      Locals:         0       0       0       0       0       0       0
 12740 ;;      Temps:          0       4       0       0       0       0       0
 12741 ;;      Totals:         0       4       0       0       0       0       0
 12742 ;;Total ram usage:        4 bytes
 12743 ;; Hardware stack levels used: 1
 12744 ;; Hardware stack levels required when called: 2
 12745 ;; This function calls:
 12746 ;;		Nothing
 12747 ;; This function is called by:
 12748 ;;		Interrupt level 1
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           	psect	intcodelo
 12753   000018                     __pintcodelo:
 12754                           	callstack 0
 12755   000018                     _sensor:
 12756                           	callstack 16
 12757                           
 12758                           ;incstack = 0
 12759   000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 12760   00001A  CFD8 F061          	movff	status,??_sensor+1
 12761   00001E  CFE8 F062          	movff	wreg,??_sensor+2
 12762   000022  CFE0 F063          	movff	bsr,??_sensor+3
 12763   000026                     
 12764                           ;main.c: 265:     if (RBIF) {
 12765   000026  A0F2               	btfss	4082,0,c	;volatile
 12766   000028  EF18  F000         	goto	i1u971_21
 12767   00002C  EF1A  F000         	goto	i1u971_20
 12768   000030                     i1u971_21:
 12769   000030  EF3D  F000         	goto	i1l7814
 12770   000034                     i1u971_20:
 12771   000034                     
 12772                           ;main.c: 266:         RBIF = 0;
 12773   000034  90F2               	bcf	4082,0,c	;volatile
 12774   000036                     
 12775                           ;main.c: 267:         if ((PORTB & 0xF0) != 0x00) {
 12776   000036  CF81 F060          	movff	3969,??_sensor	;volatile
 12777   00003A  0EF0               	movlw	240
 12778   00003C  0100               	movlb	0	; () banked
 12779   00003E  1760               	andwf	??_sensor& (0+255),f,b
 12780   000040  B4D8               	btfsc	status,2,c
 12781   000042  EF25  F000         	goto	i1u972_21
 12782   000046  EF27  F000         	goto	i1u972_20
 12783   00004A                     i1u972_21:
 12784   00004A  EF2E  F000         	goto	i1l7810
 12785   00004E                     i1u972_20:
 12786   00004E                     
 12787                           ; BSR set to: 0
 12788                           ;main.c: 268:             s = 0;
 12789   00004E  0E00               	movlw	0
 12790   000050  0101               	movlb	1	; () banked
 12791   000052  6F37               	movwf	(_s+1)& (0+255),b
 12792   000054  0E00               	movlw	0
 12793   000056  6F36               	movwf	_s& (0+255),b
 12794                           
 12795                           ;main.c: 269:         } else if ((PORTB & 0xF0) != 0xF0) {
 12796   000058  EF3D  F000         	goto	i1l7814
 12797   00005C                     i1l7810:
 12798                           
 12799                           ; BSR set to: 0
 12800   00005C  5081               	movf	129,w,c	;volatile
 12801   00005E  0BF0               	andlw	240
 12802   000060  0AF0               	xorlw	240
 12803   000062  B4D8               	btfsc	status,2,c
 12804   000064  EF36  F000         	goto	i1u973_21
 12805   000068  EF38  F000         	goto	i1u973_20
 12806   00006C                     i1u973_21:
 12807   00006C  EF3D  F000         	goto	i1l7814
 12808   000070                     i1u973_20:
 12809   000070                     
 12810                           ; BSR set to: 0
 12811                           ;main.c: 270:             s = 1;
 12812   000070  0E00               	movlw	0
 12813   000072  0101               	movlb	1	; () banked
 12814   000074  6F37               	movwf	(_s+1)& (0+255),b
 12815   000076  0E01               	movlw	1
 12816   000078  6F36               	movwf	_s& (0+255),b
 12817   00007A                     i1l7814:
 12818                           
 12819                           ;main.c: 274:     if (TMR3IF) {
 12820   00007A  A2A1               	btfss	4001,1,c	;volatile
 12821   00007C  EF42  F000         	goto	i1u974_21
 12822   000080  EF44  F000         	goto	i1u974_20
 12823   000084                     i1u974_21:
 12824   000084  EF5E  F000         	goto	i1l352
 12825   000088                     i1u974_20:
 12826   000088                     
 12827                           ;main.c: 276:         TMR3 = 0X3CAF;
 12828   000088  0E3C               	movlw	60
 12829   00008A  6EB3               	movwf	179,c	;volatile
 12830   00008C  0EAF               	movlw	175
 12831   00008E  6EB2               	movwf	178,c	;volatile
 12832   000090                     
 12833                           ;main.c: 277:         t++;
 12834   000090  0101               	movlb	1	; () banked
 12835   000092  4B34               	infsnz	_t& (0+255),f,b
 12836   000094  2B35               	incf	(_t+1)& (0+255),f,b
 12837   000096                     
 12838                           ; BSR set to: 1
 12839                           ;main.c: 278:         LATAbits.LA1 = ~LATAbits.LA1;
 12840   000096  B289               	btfsc	137,1,c	;volatile
 12841   000098  EF50  F000         	goto	i1u975_21
 12842   00009C  EF53  F000         	goto	i1u975_20
 12843   0000A0                     i1u975_21:
 12844   0000A0  0E01               	movlw	1
 12845   0000A2  EF54  F000         	goto	i1u975_26
 12846   0000A6                     i1u975_20:
 12847   0000A6  0E00               	movlw	0
 12848   0000A8                     i1u975_26:
 12849   0000A8  0AFF               	xorlw	255
 12850   0000AA  0100               	movlb	0	; () banked
 12851   0000AC  6F60               	movwf	??_sensor& (0+255),b
 12852   0000AE  4760               	rlncf	??_sensor& (0+255),f,b
 12853   0000B0  5089               	movf	137,w,c	;volatile
 12854   0000B2  1960               	xorwf	??_sensor& (0+255),w,b
 12855   0000B4  0BFD               	andlw	-3
 12856   0000B6  1960               	xorwf	??_sensor& (0+255),w,b
 12857   0000B8  6E89               	movwf	137,c	;volatile
 12858   0000BA                     
 12859                           ; BSR set to: 0
 12860                           ;main.c: 279:         TMR3IF = 0;
 12861   0000BA  92A1               	bcf	4001,1,c	;volatile
 12862   0000BC                     i1l352:
 12863   0000BC  C063  FFE0         	movff	??_sensor+3,bsr
 12864   0000C0  C062  FFE8         	movff	??_sensor+2,wreg
 12865   0000C4  C061  FFD8         	movff	??_sensor+1,status
 12866   0000C8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 12867   0000CA  0010               	retfie	
 12868   0000CC                     __end_of_sensor:
 12869                           	callstack 0
 12870                           
 12871 ;; *************** function _UART_Rx *****************
 12872 ;; Defined at:
 12873 ;;		line 218 in file "main.c"
 12874 ;; Parameters:    Size  Location     Type
 12875 ;;		None
 12876 ;; Auto vars:     Size  Location     Type
 12877 ;;  a               1   41[COMRAM] unsigned char 
 12878 ;; Return value:  Size  Location     Type
 12879 ;;                  1    wreg      void 
 12880 ;; Registers used:
 12881 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12882 ;; Tracked objects:
 12883 ;;		On entry : 0/0
 12884 ;;		On exit  : 0/0
 12885 ;;		Unchanged: 0/0
 12886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12887 ;;      Params:         0       0       0       0       0       0       0
 12888 ;;      Locals:         1       0       0       0       0       0       0
 12889 ;;      Temps:          2       0       0       0       0       0       0
 12890 ;;      Totals:         3       0       0       0       0       0       0
 12891 ;;Total ram usage:        3 bytes
 12892 ;; Hardware stack levels used: 1
 12893 ;; Hardware stack levels required when called: 1
 12894 ;; This function calls:
 12895 ;;		i2___flmul
 12896 ;;		i2___xxtofl
 12897 ;; This function is called by:
 12898 ;;		Interrupt level 2
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	intcode
 12903   000008                     __pintcode:
 12904                           	callstack 0
 12905   000008                     _UART_Rx:
 12906                           	callstack 16
 12907                           
 12908                           ;incstack = 0
 12909   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12910   00000A  EFFA  F017         	goto	int_func
 12911                           
 12912                           	psect	intcode_body
 12913   002FF4                     __pintcode_body:
 12914                           	callstack 16
 12915   002FF4                     int_func:
 12916                           	callstack 16
 12917   002FF4  CFF3 F053          	movff	prodl,??_UART_Rx
 12918   002FF8  CFF4 F054          	movff	prodh,??_UART_Rx+1
 12919   002FFC                     
 12920                           ;main.c: 219:     unsigned char a;;main.c: 220:     if (RC1IF == 1) {
 12921   002FFC  AA9E               	btfss	3998,5,c	;volatile
 12922   002FFE  EF03  F018         	goto	i2u666_41
 12923   003002  EF05  F018         	goto	i2u666_40
 12924   003006                     i2u666_41:
 12925   003006  EFCC  F018         	goto	i2l5840
 12926   00300A                     i2u666_40:
 12927   00300A                     
 12928                           ;main.c: 221:         a = RCREG1;
 12929   00300A  CFAE F055          	movff	4014,UART_Rx@a	;volatile
 12930   00300E                     
 12931                           ;main.c: 222:         if (a == 'm' || a == 'M') {
 12932   00300E  0E6D               	movlw	109
 12933   003010  1855               	xorwf	UART_Rx@a^0,w,c
 12934   003012  B4D8               	btfsc	status,2,c
 12935   003014  EF0E  F018         	goto	i2u667_41
 12936   003018  EF10  F018         	goto	i2u667_40
 12937   00301C                     i2u667_41:
 12938   00301C  EF19  F018         	goto	i2l5790
 12939   003020                     i2u667_40:
 12940   003020  0E4D               	movlw	77
 12941   003022  1855               	xorwf	UART_Rx@a^0,w,c
 12942   003024  A4D8               	btfss	status,2,c
 12943   003026  EF17  F018         	goto	i2u668_41
 12944   00302A  EF19  F018         	goto	i2u668_40
 12945   00302E                     i2u668_41:
 12946   00302E  EF20  F018         	goto	i2l5792
 12947   003032                     i2u668_40:
 12948   003032                     i2l5790:
 12949                           
 12950                           ;main.c: 223:             mood = 1;
 12951   003032  0E00               	movlw	0
 12952   003034  0101               	movlb	1	; () banked
 12953   003036  6F39               	movwf	(_mood+1)& (0+255),b
 12954   003038  0E01               	movlw	1
 12955   00303A  6F38               	movwf	_mood& (0+255),b
 12956                           
 12957                           ;main.c: 224:         } else if (a == 'a' || a == 'A') {
 12958   00303C  EFCC  F018         	goto	i2l5840
 12959   003040                     i2l5792:
 12960   003040  0E61               	movlw	97
 12961   003042  1855               	xorwf	UART_Rx@a^0,w,c
 12962   003044  B4D8               	btfsc	status,2,c
 12963   003046  EF27  F018         	goto	i2u669_41
 12964   00304A  EF29  F018         	goto	i2u669_40
 12965   00304E                     i2u669_41:
 12966   00304E  EF32  F018         	goto	i2l5796
 12967   003052                     i2u669_40:
 12968   003052  0E41               	movlw	65
 12969   003054  1855               	xorwf	UART_Rx@a^0,w,c
 12970   003056  A4D8               	btfss	status,2,c
 12971   003058  EF30  F018         	goto	i2u670_41
 12972   00305C  EF32  F018         	goto	i2u670_40
 12973   003060                     i2u670_41:
 12974   003060  EF39  F018         	goto	i2l5798
 12975   003064                     i2u670_40:
 12976   003064                     i2l5796:
 12977                           
 12978                           ;main.c: 225:             mood = 2;
 12979   003064  0E00               	movlw	0
 12980   003066  0101               	movlb	1	; () banked
 12981   003068  6F39               	movwf	(_mood+1)& (0+255),b
 12982   00306A  0E02               	movlw	2
 12983   00306C  6F38               	movwf	_mood& (0+255),b
 12984                           
 12985                           ;main.c: 226:         } else if (a == 's' || a == 'S') {
 12986   00306E  EFCC  F018         	goto	i2l5840
 12987   003072                     i2l5798:
 12988   003072  0E73               	movlw	115
 12989   003074  1855               	xorwf	UART_Rx@a^0,w,c
 12990   003076  B4D8               	btfsc	status,2,c
 12991   003078  EF40  F018         	goto	i2u671_41
 12992   00307C  EF42  F018         	goto	i2u671_40
 12993   003080                     i2u671_41:
 12994   003080  EF4B  F018         	goto	i2l5802
 12995   003084                     i2u671_40:
 12996   003084  0E53               	movlw	83
 12997   003086  1855               	xorwf	UART_Rx@a^0,w,c
 12998   003088  A4D8               	btfss	status,2,c
 12999   00308A  EF49  F018         	goto	i2u672_41
 13000   00308E  EF4B  F018         	goto	i2u672_40
 13001   003092                     i2u672_41:
 13002   003092  EF52  F018         	goto	i2l5804
 13003   003096                     i2u672_40:
 13004   003096                     i2l5802:
 13005                           
 13006                           ;main.c: 227:             mood = 3;
 13007   003096  0E00               	movlw	0
 13008   003098  0101               	movlb	1	; () banked
 13009   00309A  6F39               	movwf	(_mood+1)& (0+255),b
 13010   00309C  0E03               	movlw	3
 13011   00309E  6F38               	movwf	_mood& (0+255),b
 13012                           
 13013                           ;main.c: 228:         } else if (a == '0') {
 13014   0030A0  EFCC  F018         	goto	i2l5840
 13015   0030A4                     i2l5804:
 13016   0030A4  0E30               	movlw	48
 13017   0030A6  1855               	xorwf	UART_Rx@a^0,w,c
 13018   0030A8  A4D8               	btfss	status,2,c
 13019   0030AA  EF59  F018         	goto	i2u673_41
 13020   0030AE  EF5B  F018         	goto	i2u673_40
 13021   0030B2                     i2u673_41:
 13022   0030B2  EF60  F018         	goto	i2l5808
 13023   0030B6                     i2u673_40:
 13024   0030B6                     
 13025                           ;main.c: 229:             m = 0;
 13026   0030B6  0E00               	movlw	0
 13027   0030B8  0101               	movlb	1	; () banked
 13028   0030BA  6F42               	movwf	_m& (0+255),b
 13029                           
 13030                           ;main.c: 230:         } else if (a == '1') {
 13031   0030BC  EFCC  F018         	goto	i2l5840
 13032   0030C0                     i2l5808:
 13033   0030C0  0E31               	movlw	49
 13034   0030C2  1855               	xorwf	UART_Rx@a^0,w,c
 13035   0030C4  A4D8               	btfss	status,2,c
 13036   0030C6  EF67  F018         	goto	i2u674_41
 13037   0030CA  EF69  F018         	goto	i2u674_40
 13038   0030CE                     i2u674_41:
 13039   0030CE  EF6E  F018         	goto	i2l5812
 13040   0030D2                     i2u674_40:
 13041   0030D2                     
 13042                           ;main.c: 231:             m = 1;
 13043   0030D2  0E01               	movlw	1
 13044   0030D4  0101               	movlb	1	; () banked
 13045   0030D6  6F42               	movwf	_m& (0+255),b
 13046                           
 13047                           ;main.c: 232:         } else if (a == '2') {
 13048   0030D8  EFCC  F018         	goto	i2l5840
 13049   0030DC                     i2l5812:
 13050   0030DC  0E32               	movlw	50
 13051   0030DE  1855               	xorwf	UART_Rx@a^0,w,c
 13052   0030E0  A4D8               	btfss	status,2,c
 13053   0030E2  EF75  F018         	goto	i2u675_41
 13054   0030E6  EF77  F018         	goto	i2u675_40
 13055   0030EA                     i2u675_41:
 13056   0030EA  EF7C  F018         	goto	i2l5816
 13057   0030EE                     i2u675_40:
 13058   0030EE                     
 13059                           ;main.c: 233:             m = 2;
 13060   0030EE  0E02               	movlw	2
 13061   0030F0  0101               	movlb	1	; () banked
 13062   0030F2  6F42               	movwf	_m& (0+255),b
 13063                           
 13064                           ;main.c: 234:         } else if (a == '3') {
 13065   0030F4  EFCC  F018         	goto	i2l5840
 13066   0030F8                     i2l5816:
 13067   0030F8  0E33               	movlw	51
 13068   0030FA  1855               	xorwf	UART_Rx@a^0,w,c
 13069   0030FC  A4D8               	btfss	status,2,c
 13070   0030FE  EF83  F018         	goto	i2u676_41
 13071   003102  EF85  F018         	goto	i2u676_40
 13072   003106                     i2u676_41:
 13073   003106  EF8A  F018         	goto	i2l5820
 13074   00310A                     i2u676_40:
 13075   00310A                     
 13076                           ;main.c: 235:             m = 3;
 13077   00310A  0E03               	movlw	3
 13078   00310C  0101               	movlb	1	; () banked
 13079   00310E  6F42               	movwf	_m& (0+255),b
 13080                           
 13081                           ;main.c: 236:         } else if (a == '4') {
 13082   003110  EFCC  F018         	goto	i2l5840
 13083   003114                     i2l5820:
 13084   003114  0E34               	movlw	52
 13085   003116  1855               	xorwf	UART_Rx@a^0,w,c
 13086   003118  A4D8               	btfss	status,2,c
 13087   00311A  EF91  F018         	goto	i2u677_41
 13088   00311E  EF93  F018         	goto	i2u677_40
 13089   003122                     i2u677_41:
 13090   003122  EF98  F018         	goto	i2l5824
 13091   003126                     i2u677_40:
 13092   003126                     
 13093                           ;main.c: 237:             m = 4;
 13094   003126  0E04               	movlw	4
 13095   003128  0101               	movlb	1	; () banked
 13096   00312A  6F42               	movwf	_m& (0+255),b
 13097                           
 13098                           ;main.c: 238:         } else if (a == '5') {
 13099   00312C  EFCC  F018         	goto	i2l5840
 13100   003130                     i2l5824:
 13101   003130  0E35               	movlw	53
 13102   003132  1855               	xorwf	UART_Rx@a^0,w,c
 13103   003134  A4D8               	btfss	status,2,c
 13104   003136  EF9F  F018         	goto	i2u678_41
 13105   00313A  EFA1  F018         	goto	i2u678_40
 13106   00313E                     i2u678_41:
 13107   00313E  EFA5  F018         	goto	i2l5828
 13108   003142                     i2u678_40:
 13109   003142                     
 13110                           ;main.c: 239:             n = 1;
 13111   003142  0E01               	movlw	1
 13112   003144  6E2A               	movwf	_n^0,c
 13113                           
 13114                           ;main.c: 240:         } else if (a == '6') {
 13115   003146  EFCC  F018         	goto	i2l5840
 13116   00314A                     i2l5828:
 13117   00314A  0E36               	movlw	54
 13118   00314C  1855               	xorwf	UART_Rx@a^0,w,c
 13119   00314E  A4D8               	btfss	status,2,c
 13120   003150  EFAC  F018         	goto	i2u679_41
 13121   003154  EFAE  F018         	goto	i2u679_40
 13122   003158                     i2u679_41:
 13123   003158  EFB2  F018         	goto	i2l5832
 13124   00315C                     i2u679_40:
 13125   00315C                     
 13126                           ;main.c: 241:             n = 2;
 13127   00315C  0E02               	movlw	2
 13128   00315E  6E2A               	movwf	_n^0,c
 13129                           
 13130                           ;main.c: 242:         } else if (a == '7') {
 13131   003160  EFCC  F018         	goto	i2l5840
 13132   003164                     i2l5832:
 13133   003164  0E37               	movlw	55
 13134   003166  1855               	xorwf	UART_Rx@a^0,w,c
 13135   003168  A4D8               	btfss	status,2,c
 13136   00316A  EFB9  F018         	goto	i2u680_41
 13137   00316E  EFBB  F018         	goto	i2u680_40
 13138   003172                     i2u680_41:
 13139   003172  EFBF  F018         	goto	i2l5836
 13140   003176                     i2u680_40:
 13141   003176                     
 13142                           ;main.c: 243:             n = 3;
 13143   003176  0E03               	movlw	3
 13144   003178  6E2A               	movwf	_n^0,c
 13145                           
 13146                           ;main.c: 244:         } else if (a == '8') {
 13147   00317A  EFCC  F018         	goto	i2l5840
 13148   00317E                     i2l5836:
 13149   00317E  0E38               	movlw	56
 13150   003180  1855               	xorwf	UART_Rx@a^0,w,c
 13151   003182  A4D8               	btfss	status,2,c
 13152   003184  EFC6  F018         	goto	i2u681_41
 13153   003188  EFC8  F018         	goto	i2u681_40
 13154   00318C                     i2u681_41:
 13155   00318C  EFCC  F018         	goto	i2l334
 13156   003190                     i2u681_40:
 13157   003190                     
 13158                           ;main.c: 245:             n = 4;
 13159   003190  0E04               	movlw	4
 13160   003192  6E2A               	movwf	_n^0,c
 13161   003194  EFCC  F018         	goto	i2l5840
 13162   003198                     i2l334:
 13163   003198                     i2l5840:
 13164                           
 13165                           ;main.c: 248:     if (CCP1IF == 1) {
 13166   003198  A49E               	btfss	3998,2,c	;volatile
 13167   00319A  EFD1  F018         	goto	i2u682_41
 13168   00319E  EFD3  F018         	goto	i2u682_40
 13169   0031A2                     i2u682_41:
 13170   0031A2  EF03  F019         	goto	i2l5852
 13171   0031A6                     i2u682_40:
 13172   0031A6                     
 13173                           ;main.c: 249:         t1 = TMR1;
 13174   0031A6  CFCE F027          	movff	4046,_t1	;volatile
 13175   0031AA  CFCF F028          	movff	4047,_t1+1	;volatile
 13176   0031AE                     
 13177                           ;main.c: 250:         t2 = (float) t1 * 8.0;
 13178   0031AE  C027  F02C         	movff	_t1,i2___xxtofl@val
 13179   0031B2  C028  F02D         	movff	_t1+1,i2___xxtofl@val+1
 13180   0031B6  6A2E               	clrf	(i2___xxtofl@val+2)^0,c
 13181   0031B8  6A2F               	clrf	(i2___xxtofl@val+3)^0,c
 13182   0031BA  0E00               	movlw	0
 13183   0031BC  EC0E  F01D         	call	i2___xxtofl
 13184   0031C0  C02C  F03A         	movff	?i2___xxtofl,i2___flmul@b
 13185   0031C4  C02D  F03B         	movff	?i2___xxtofl+1,i2___flmul@b+1
 13186   0031C8  C02E  F03C         	movff	?i2___xxtofl+2,i2___flmul@b+2
 13187   0031CC  C02F  F03D         	movff	?i2___xxtofl+3,i2___flmul@b+3
 13188   0031D0  0E00               	movlw	0
 13189   0031D2  6E3E               	movwf	i2___flmul@a^0,c
 13190   0031D4  0E00               	movlw	0
 13191   0031D6  6E3F               	movwf	(i2___flmul@a+1)^0,c
 13192   0031D8  0E00               	movlw	0
 13193   0031DA  6E40               	movwf	(i2___flmul@a+2)^0,c
 13194   0031DC  0E41               	movlw	65
 13195   0031DE  6E41               	movwf	(i2___flmul@a+3)^0,c
 13196   0031E0  EC62  F00F         	call	i2___flmul	;wreg free
 13197   0031E4  C03A  F1A9         	movff	?i2___flmul,_t2
 13198   0031E8  C03B  F1AA         	movff	?i2___flmul+1,_t2+1
 13199   0031EC  C03C  F1AB         	movff	?i2___flmul+2,_t2+2
 13200   0031F0  C03D  F1AC         	movff	?i2___flmul+3,_t2+3
 13201   0031F4                     
 13202                           ;main.c: 251:         CCPR1 = 0;
 13203   0031F4  0E00               	movlw	0
 13204   0031F6  6EBF               	movwf	191,c	;volatile
 13205   0031F8  0E00               	movlw	0
 13206   0031FA  6EBE               	movwf	190,c	;volatile
 13207   0031FC                     
 13208                           ;main.c: 252:         TMR1 = 0;
 13209   0031FC  0E00               	movlw	0
 13210   0031FE  6ECF               	movwf	207,c	;volatile
 13211   003200  0E00               	movlw	0
 13212   003202  6ECE               	movwf	206,c	;volatile
 13213   003204                     
 13214                           ;main.c: 253:         CCP1IF = 0;
 13215   003204  949E               	bcf	3998,2,c	;volatile
 13216   003206                     i2l5852:
 13217                           
 13218                           ;main.c: 255:     if (CCP5IF == 1) {
 13219   003206  A47B               	btfss	3963,2,c	;volatile
 13220   003208  EF08  F019         	goto	i2u683_41
 13221   00320C  EF0A  F019         	goto	i2u683_40
 13222   003210                     i2u683_41:
 13223   003210  EF3B  F019         	goto	i2l342
 13224   003214                     i2u683_40:
 13225   003214                     
 13226                           ;main.c: 256:         t3 = TMR5;
 13227   003214  CF4F F025          	movff	3919,_t3	;volatile
 13228   003218  CF50 F026          	movff	3920,_t3+1	;volatile
 13229   00321C                     
 13230                           ;main.c: 257:         t4 = (float) t3 * 8.0;
 13231   00321C  C025  F02C         	movff	_t3,i2___xxtofl@val
 13232   003220  C026  F02D         	movff	_t3+1,i2___xxtofl@val+1
 13233   003224  6A2E               	clrf	(i2___xxtofl@val+2)^0,c
 13234   003226  6A2F               	clrf	(i2___xxtofl@val+3)^0,c
 13235   003228  0E00               	movlw	0
 13236   00322A  EC0E  F01D         	call	i2___xxtofl
 13237   00322E  C02C  F03A         	movff	?i2___xxtofl,i2___flmul@b
 13238   003232  C02D  F03B         	movff	?i2___xxtofl+1,i2___flmul@b+1
 13239   003236  C02E  F03C         	movff	?i2___xxtofl+2,i2___flmul@b+2
 13240   00323A  C02F  F03D         	movff	?i2___xxtofl+3,i2___flmul@b+3
 13241   00323E  0E00               	movlw	0
 13242   003240  6E3E               	movwf	i2___flmul@a^0,c
 13243   003242  0E00               	movlw	0
 13244   003244  6E3F               	movwf	(i2___flmul@a+1)^0,c
 13245   003246  0E00               	movlw	0
 13246   003248  6E40               	movwf	(i2___flmul@a+2)^0,c
 13247   00324A  0E41               	movlw	65
 13248   00324C  6E41               	movwf	(i2___flmul@a+3)^0,c
 13249   00324E  EC62  F00F         	call	i2___flmul	;wreg free
 13250   003252  C03A  F1A5         	movff	?i2___flmul,_t4
 13251   003256  C03B  F1A6         	movff	?i2___flmul+1,_t4+1
 13252   00325A  C03C  F1A7         	movff	?i2___flmul+2,_t4+2
 13253   00325E  C03D  F1A8         	movff	?i2___flmul+3,_t4+3
 13254   003262                     
 13255                           ;main.c: 258:         CCPR5 = 0;
 13256   003262  0E00               	movlw	0
 13257   003264  010F               	movlb	15	; () banked
 13258   003266  6F56               	movwf	86,b	;volatile
 13259   003268  0E00               	movlw	0
 13260   00326A  6F55               	movwf	85,b	;volatile
 13261   00326C                     
 13262                           ; BSR set to: 15
 13263                           ;main.c: 259:         TMR5 = 0;
 13264   00326C  0E00               	movlw	0
 13265   00326E  6F50               	movwf	80,b	;volatile
 13266   003270  0E00               	movlw	0
 13267   003272  6F4F               	movwf	79,b	;volatile
 13268   003274                     
 13269                           ; BSR set to: 15
 13270                           ;main.c: 260:         CCP5IF = 0;
 13271   003274  947B               	bcf	3963,2,c	;volatile
 13272   003276                     i2l342:
 13273   003276  C054  FFF4         	movff	??_UART_Rx+1,prodh
 13274   00327A  C053  FFF3         	movff	??_UART_Rx,prodl
 13275   00327E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13276   003280  0011               	retfie		f
 13277   003282                     __end_of_UART_Rx:
 13278                           	callstack 0
 13279                           
 13280 ;; *************** function i2___xxtofl *****************
 13281 ;; Defined at:
 13282 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  sign            1    wreg     unsigned char 
 13285 ;;  val             4    0[COMRAM] long 
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;  sign            1    8[COMRAM] unsigned char 
 13288 ;;  arg             4   10[COMRAM] unsigned long 
 13289 ;;  exp             1    9[COMRAM] unsigned char 
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  4    0[COMRAM] unsigned char 
 13292 ;; Registers used:
 13293 ;;		wreg, status,2, status,0
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13299 ;;      Params:         4       0       0       0       0       0       0
 13300 ;;      Locals:         6       0       0       0       0       0       0
 13301 ;;      Temps:          4       0       0       0       0       0       0
 13302 ;;      Totals:        14       0       0       0       0       0       0
 13303 ;;Total ram usage:       14 bytes
 13304 ;; Hardware stack levels used: 1
 13305 ;; This function calls:
 13306 ;;		Nothing
 13307 ;; This function is called by:
 13308 ;;		_UART_Rx
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           	psect	text54
 13313   003A1C                     __ptext54:
 13314                           	callstack 0
 13315   003A1C                     i2___xxtofl:
 13316                           	callstack 16
 13317                           
 13318                           ;incstack = 0
 13319                           ;i2___xxtofl@sign stored from wreg
 13320   003A1C  6E34               	movwf	i2___xxtofl@sign^0,c
 13321   003A1E  5034               	movf	i2___xxtofl@sign^0,w,c
 13322   003A20  B4D8               	btfsc	status,2,c
 13323   003A22  EF15  F01D         	goto	i2u650_41
 13324   003A26  EF17  F01D         	goto	i2u650_40
 13325   003A2A                     i2u650_41:
 13326   003A2A  EF39  F01D         	goto	i2l1242
 13327   003A2E                     i2u650_40:
 13328   003A2E  BE2F               	btfsc	(i2___xxtofl@val+3)^0,7,c
 13329   003A30  EF1E  F01D         	goto	i2u651_40
 13330   003A34  EF1C  F01D         	goto	i2u651_41
 13331   003A38                     i2u651_41:
 13332   003A38  EF39  F01D         	goto	i2l1242
 13333   003A3C                     i2u651_40:
 13334   003A3C  C02C  F030         	movff	i2___xxtofl@val,??i2___xxtofl
 13335   003A40  C02D  F031         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 13336   003A44  C02E  F032         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 13337   003A48  C02F  F033         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 13338   003A4C  1E30               	comf	??i2___xxtofl^0,f,c
 13339   003A4E  1E31               	comf	(??i2___xxtofl+1)^0,f,c
 13340   003A50  1E32               	comf	(??i2___xxtofl+2)^0,f,c
 13341   003A52  1E33               	comf	(??i2___xxtofl+3)^0,f,c
 13342   003A54  2A30               	incf	??i2___xxtofl^0,f,c
 13343   003A56  0E00               	movlw	0
 13344   003A58  2231               	addwfc	(??i2___xxtofl+1)^0,f,c
 13345   003A5A  2232               	addwfc	(??i2___xxtofl+2)^0,f,c
 13346   003A5C  2233               	addwfc	(??i2___xxtofl+3)^0,f,c
 13347   003A5E  C030  F036         	movff	??i2___xxtofl,i2___xxtofl@arg
 13348   003A62  C031  F037         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 13349   003A66  C032  F038         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 13350   003A6A  C033  F039         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 13351   003A6E  EF41  F01D         	goto	i2l5712
 13352   003A72                     i2l1242:
 13353   003A72  C02C  F036         	movff	i2___xxtofl@val,i2___xxtofl@arg
 13354   003A76  C02D  F037         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 13355   003A7A  C02E  F038         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 13356   003A7E  C02F  F039         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 13357   003A82                     i2l5712:
 13358   003A82  502C               	movf	i2___xxtofl@val^0,w,c
 13359   003A84  102D               	iorwf	(i2___xxtofl@val+1)^0,w,c
 13360   003A86  102E               	iorwf	(i2___xxtofl@val+2)^0,w,c
 13361   003A88  102F               	iorwf	(i2___xxtofl@val+3)^0,w,c
 13362   003A8A  A4D8               	btfss	status,2,c
 13363   003A8C  EF4A  F01D         	goto	i2u652_41
 13364   003A90  EF4C  F01D         	goto	i2u652_40
 13365   003A94                     i2u652_41:
 13366   003A94  EF56  F01D         	goto	i2l5718
 13367   003A98                     i2u652_40:
 13368   003A98  0E00               	movlw	0
 13369   003A9A  6E2C               	movwf	?i2___xxtofl^0,c
 13370   003A9C  0E00               	movlw	0
 13371   003A9E  6E2D               	movwf	(?i2___xxtofl+1)^0,c
 13372   003AA0  0E00               	movlw	0
 13373   003AA2  6E2E               	movwf	(?i2___xxtofl+2)^0,c
 13374   003AA4  0E00               	movlw	0
 13375   003AA6  6E2F               	movwf	(?i2___xxtofl+3)^0,c
 13376   003AA8  EFE7  F01D         	goto	i2l1245
 13377   003AAC                     i2l5718:
 13378   003AAC  0E96               	movlw	150
 13379   003AAE  6E35               	movwf	i2___xxtofl@exp^0,c
 13380   003AB0  EF60  F01D         	goto	i2l5722
 13381   003AB4                     i2l5720:
 13382   003AB4  2A35               	incf	i2___xxtofl@exp^0,f,c
 13383   003AB6  90D8               	bcf	status,0,c
 13384   003AB8  3239               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 13385   003ABA  3238               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 13386   003ABC  3237               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 13387   003ABE  3236               	rrcf	i2___xxtofl@arg^0,f,c
 13388   003AC0                     i2l5722:
 13389   003AC0  0E00               	movlw	0
 13390   003AC2  1436               	andwf	i2___xxtofl@arg^0,w,c
 13391   003AC4  6E30               	movwf	??i2___xxtofl^0,c
 13392   003AC6  0E00               	movlw	0
 13393   003AC8  1437               	andwf	(i2___xxtofl@arg+1)^0,w,c
 13394   003ACA  6E31               	movwf	(??i2___xxtofl+1)^0,c
 13395   003ACC  0E00               	movlw	0
 13396   003ACE  1438               	andwf	(i2___xxtofl@arg+2)^0,w,c
 13397   003AD0  6E32               	movwf	(??i2___xxtofl+2)^0,c
 13398   003AD2  0EFE               	movlw	254
 13399   003AD4  1439               	andwf	(i2___xxtofl@arg+3)^0,w,c
 13400   003AD6  6E33               	movwf	(??i2___xxtofl+3)^0,c
 13401   003AD8  5030               	movf	??i2___xxtofl^0,w,c
 13402   003ADA  1031               	iorwf	(??i2___xxtofl+1)^0,w,c
 13403   003ADC  1032               	iorwf	(??i2___xxtofl+2)^0,w,c
 13404   003ADE  1033               	iorwf	(??i2___xxtofl+3)^0,w,c
 13405   003AE0  A4D8               	btfss	status,2,c
 13406   003AE2  EF75  F01D         	goto	i2u653_41
 13407   003AE6  EF77  F01D         	goto	i2u653_40
 13408   003AEA                     i2u653_41:
 13409   003AEA  EF5A  F01D         	goto	i2l5720
 13410   003AEE                     i2u653_40:
 13411   003AEE  EF85  F01D         	goto	i2l1249
 13412   003AF2                     i2l5724:
 13413   003AF2  2A35               	incf	i2___xxtofl@exp^0,f,c
 13414   003AF4  0E01               	movlw	1
 13415   003AF6  2636               	addwf	i2___xxtofl@arg^0,f,c
 13416   003AF8  0E00               	movlw	0
 13417   003AFA  2237               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 13418   003AFC  2238               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 13419   003AFE  2239               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 13420   003B00  90D8               	bcf	status,0,c
 13421   003B02  3239               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 13422   003B04  3238               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 13423   003B06  3237               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 13424   003B08  3236               	rrcf	i2___xxtofl@arg^0,f,c
 13425   003B0A                     i2l1249:
 13426   003B0A  0E00               	movlw	0
 13427   003B0C  1436               	andwf	i2___xxtofl@arg^0,w,c
 13428   003B0E  6E30               	movwf	??i2___xxtofl^0,c
 13429   003B10  0E00               	movlw	0
 13430   003B12  1437               	andwf	(i2___xxtofl@arg+1)^0,w,c
 13431   003B14  6E31               	movwf	(??i2___xxtofl+1)^0,c
 13432   003B16  0E00               	movlw	0
 13433   003B18  1438               	andwf	(i2___xxtofl@arg+2)^0,w,c
 13434   003B1A  6E32               	movwf	(??i2___xxtofl+2)^0,c
 13435   003B1C  0EFF               	movlw	255
 13436   003B1E  1439               	andwf	(i2___xxtofl@arg+3)^0,w,c
 13437   003B20  6E33               	movwf	(??i2___xxtofl+3)^0,c
 13438   003B22  5030               	movf	??i2___xxtofl^0,w,c
 13439   003B24  1031               	iorwf	(??i2___xxtofl+1)^0,w,c
 13440   003B26  1032               	iorwf	(??i2___xxtofl+2)^0,w,c
 13441   003B28  1033               	iorwf	(??i2___xxtofl+3)^0,w,c
 13442   003B2A  A4D8               	btfss	status,2,c
 13443   003B2C  EF9A  F01D         	goto	i2u654_41
 13444   003B30  EF9C  F01D         	goto	i2u654_40
 13445   003B34                     i2u654_41:
 13446   003B34  EF79  F01D         	goto	i2l5724
 13447   003B38                     i2u654_40:
 13448   003B38  EFA4  F01D         	goto	i2l5732
 13449   003B3C                     i2l5730:
 13450   003B3C  0635               	decf	i2___xxtofl@exp^0,f,c
 13451   003B3E  90D8               	bcf	status,0,c
 13452   003B40  3636               	rlcf	i2___xxtofl@arg^0,f,c
 13453   003B42  3637               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 13454   003B44  3638               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 13455   003B46  3639               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 13456   003B48                     i2l5732:
 13457   003B48  BE38               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 13458   003B4A  EFA9  F01D         	goto	i2u655_41
 13459   003B4E  EFAB  F01D         	goto	i2u655_40
 13460   003B52                     i2u655_41:
 13461   003B52  EFB3  F01D         	goto	i2l1256
 13462   003B56                     i2u655_40:
 13463   003B56  0E02               	movlw	2
 13464   003B58  6035               	cpfslt	i2___xxtofl@exp^0,c
 13465   003B5A  EFB1  F01D         	goto	i2u656_41
 13466   003B5E  EFB3  F01D         	goto	i2u656_40
 13467   003B62                     i2u656_41:
 13468   003B62  EF9E  F01D         	goto	i2l5730
 13469   003B66                     i2u656_40:
 13470   003B66                     i2l1256:
 13471   003B66  B035               	btfsc	i2___xxtofl@exp^0,0,c
 13472   003B68  EFB8  F01D         	goto	i2u657_41
 13473   003B6C  EFBA  F01D         	goto	i2u657_40
 13474   003B70                     i2u657_41:
 13475   003B70  EFBB  F01D         	goto	i2l5738
 13476   003B74                     i2u657_40:
 13477   003B74  9E38               	bcf	(i2___xxtofl@arg+2)^0,7,c
 13478   003B76                     i2l5738:
 13479   003B76  90D8               	bcf	status,0,c
 13480   003B78  3235               	rrcf	i2___xxtofl@exp^0,f,c
 13481   003B7A  C035  F030         	movff	i2___xxtofl@exp,??i2___xxtofl
 13482   003B7E  6A31               	clrf	(??i2___xxtofl+1)^0,c
 13483   003B80  6A32               	clrf	(??i2___xxtofl+2)^0,c
 13484   003B82  6A33               	clrf	(??i2___xxtofl+3)^0,c
 13485   003B84  C030  F033         	movff	??i2___xxtofl,??i2___xxtofl+3
 13486   003B88  6A32               	clrf	(??i2___xxtofl+2)^0,c
 13487   003B8A  6A31               	clrf	(??i2___xxtofl+1)^0,c
 13488   003B8C  6A30               	clrf	??i2___xxtofl^0,c
 13489   003B8E  5030               	movf	??i2___xxtofl^0,w,c
 13490   003B90  1236               	iorwf	i2___xxtofl@arg^0,f,c
 13491   003B92  5031               	movf	(??i2___xxtofl+1)^0,w,c
 13492   003B94  1237               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 13493   003B96  5032               	movf	(??i2___xxtofl+2)^0,w,c
 13494   003B98  1238               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 13495   003B9A  5033               	movf	(??i2___xxtofl+3)^0,w,c
 13496   003B9C  1239               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 13497   003B9E  5034               	movf	i2___xxtofl@sign^0,w,c
 13498   003BA0  B4D8               	btfsc	status,2,c
 13499   003BA2  EFD5  F01D         	goto	i2u658_41
 13500   003BA6  EFD7  F01D         	goto	i2u658_40
 13501   003BAA                     i2u658_41:
 13502   003BAA  EFDF  F01D         	goto	i2l5748
 13503   003BAE                     i2u658_40:
 13504   003BAE  BE2F               	btfsc	(i2___xxtofl@val+3)^0,7,c
 13505   003BB0  EFDE  F01D         	goto	i2u659_40
 13506   003BB4  EFDC  F01D         	goto	i2u659_41
 13507   003BB8                     i2u659_41:
 13508   003BB8  EFDF  F01D         	goto	i2l5748
 13509   003BBC                     i2u659_40:
 13510   003BBC  8E39               	bsf	(i2___xxtofl@arg+3)^0,7,c
 13511   003BBE                     i2l5748:
 13512   003BBE  C036  F02C         	movff	i2___xxtofl@arg,?i2___xxtofl
 13513   003BC2  C037  F02D         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 13514   003BC6  C038  F02E         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 13515   003BCA  C039  F02F         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 13516   003BCE                     i2l1245:
 13517   003BCE  0012               	return		;funcret
 13518   003BD0                     __end_ofi2___xxtofl:
 13519                           	callstack 0
 13520                           
 13521 ;; *************** function i2___flmul *****************
 13522 ;; Defined at:
 13523 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;  b               4   14[COMRAM] unsigned char 
 13526 ;;  a               4   18[COMRAM] unsigned char 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;  prod            4   33[COMRAM] struct .
 13529 ;;  grs             4   27[COMRAM] unsigned long 
 13530 ;;  temp            2   37[COMRAM] struct .
 13531 ;;  bexp            1   32[COMRAM] unsigned char 
 13532 ;;  aexp            1   31[COMRAM] unsigned char 
 13533 ;;  sign            1   26[COMRAM] unsigned char 
 13534 ;; Return value:  Size  Location     Type
 13535 ;;                  4   14[COMRAM] unsigned char 
 13536 ;; Registers used:
 13537 ;;		wreg, status,2, status,0, prodl, prodh
 13538 ;; Tracked objects:
 13539 ;;		On entry : 0/0
 13540 ;;		On exit  : 0/0
 13541 ;;		Unchanged: 0/0
 13542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13543 ;;      Params:         8       0       0       0       0       0       0
 13544 ;;      Locals:        13       0       0       0       0       0       0
 13545 ;;      Temps:          4       0       0       0       0       0       0
 13546 ;;      Totals:        25       0       0       0       0       0       0
 13547 ;;Total ram usage:       25 bytes
 13548 ;; Hardware stack levels used: 1
 13549 ;; This function calls:
 13550 ;;		Nothing
 13551 ;; This function is called by:
 13552 ;;		_UART_Rx
 13553 ;; This function uses a non-reentrant model
 13554 ;;
 13555                           
 13556                           	psect	text55
 13557   001EC4                     __ptext55:
 13558                           	callstack 0
 13559   001EC4                     i2___flmul:
 13560                           	callstack 16
 13561   001EC4  503D               	movf	(i2___flmul@b+3)^0,w,c
 13562   001EC6  0B80               	andlw	128
 13563   001EC8  6E46               	movwf	i2___flmul@sign^0,c
 13564   001ECA  503D               	movf	(i2___flmul@b+3)^0,w,c
 13565   001ECC  243D               	addwf	(i2___flmul@b+3)^0,w,c
 13566   001ECE  6E4C               	movwf	i2___flmul@bexp^0,c
 13567   001ED0  AE3C               	btfss	(i2___flmul@b+2)^0,7,c
 13568   001ED2  EF6D  F00F         	goto	i2u631_41
 13569   001ED6  EF6F  F00F         	goto	i2u631_40
 13570   001EDA                     i2u631_41:
 13571   001EDA  EF70  F00F         	goto	i2l5582
 13572   001EDE                     i2u631_40:
 13573   001EDE  804C               	bsf	i2___flmul@bexp^0,0,c
 13574   001EE0                     i2l5582:
 13575   001EE0  504C               	movf	i2___flmul@bexp^0,w,c
 13576   001EE2  B4D8               	btfsc	status,2,c
 13577   001EE4  EF76  F00F         	goto	i2u632_41
 13578   001EE8  EF78  F00F         	goto	i2u632_40
 13579   001EEC                     i2u632_41:
 13580   001EEC  EF8B  F00F         	goto	i2l5590
 13581   001EF0                     i2u632_40:
 13582   001EF0  284C               	incf	i2___flmul@bexp^0,w,c
 13583   001EF2  A4D8               	btfss	status,2,c
 13584   001EF4  EF7E  F00F         	goto	i2u633_41
 13585   001EF8  EF80  F00F         	goto	i2u633_40
 13586   001EFC                     i2u633_41:
 13587   001EFC  EF88  F00F         	goto	i2l5588
 13588   001F00                     i2u633_40:
 13589   001F00  0E00               	movlw	0
 13590   001F02  6E3A               	movwf	i2___flmul@b^0,c
 13591   001F04  0E00               	movlw	0
 13592   001F06  6E3B               	movwf	(i2___flmul@b+1)^0,c
 13593   001F08  0E00               	movlw	0
 13594   001F0A  6E3C               	movwf	(i2___flmul@b+2)^0,c
 13595   001F0C  0E00               	movlw	0
 13596   001F0E  6E3D               	movwf	(i2___flmul@b+3)^0,c
 13597   001F10                     i2l5588:
 13598   001F10  8E3C               	bsf	(i2___flmul@b+2)^0,7,c
 13599   001F12  EF93  F00F         	goto	i2l5592
 13600   001F16                     i2l5590:
 13601   001F16  0E00               	movlw	0
 13602   001F18  6E3A               	movwf	i2___flmul@b^0,c
 13603   001F1A  0E00               	movlw	0
 13604   001F1C  6E3B               	movwf	(i2___flmul@b+1)^0,c
 13605   001F1E  0E00               	movlw	0
 13606   001F20  6E3C               	movwf	(i2___flmul@b+2)^0,c
 13607   001F22  0E00               	movlw	0
 13608   001F24  6E3D               	movwf	(i2___flmul@b+3)^0,c
 13609   001F26                     i2l5592:
 13610   001F26  5041               	movf	(i2___flmul@a+3)^0,w,c
 13611   001F28  0B80               	andlw	128
 13612   001F2A  1A46               	xorwf	i2___flmul@sign^0,f,c
 13613   001F2C  5041               	movf	(i2___flmul@a+3)^0,w,c
 13614   001F2E  2441               	addwf	(i2___flmul@a+3)^0,w,c
 13615   001F30  6E4B               	movwf	i2___flmul@aexp^0,c
 13616   001F32  AE40               	btfss	(i2___flmul@a+2)^0,7,c
 13617   001F34  EF9E  F00F         	goto	i2u634_41
 13618   001F38  EFA0  F00F         	goto	i2u634_40
 13619   001F3C                     i2u634_41:
 13620   001F3C  EFA1  F00F         	goto	i2l5600
 13621   001F40                     i2u634_40:
 13622   001F40  804B               	bsf	i2___flmul@aexp^0,0,c
 13623   001F42                     i2l5600:
 13624   001F42  504B               	movf	i2___flmul@aexp^0,w,c
 13625   001F44  B4D8               	btfsc	status,2,c
 13626   001F46  EFA7  F00F         	goto	i2u635_41
 13627   001F4A  EFA9  F00F         	goto	i2u635_40
 13628   001F4E                     i2u635_41:
 13629   001F4E  EFBC  F00F         	goto	i2l5608
 13630   001F52                     i2u635_40:
 13631   001F52  284B               	incf	i2___flmul@aexp^0,w,c
 13632   001F54  A4D8               	btfss	status,2,c
 13633   001F56  EFAF  F00F         	goto	i2u636_41
 13634   001F5A  EFB1  F00F         	goto	i2u636_40
 13635   001F5E                     i2u636_41:
 13636   001F5E  EFB9  F00F         	goto	i2l5606
 13637   001F62                     i2u636_40:
 13638   001F62  0E00               	movlw	0
 13639   001F64  6E3E               	movwf	i2___flmul@a^0,c
 13640   001F66  0E00               	movlw	0
 13641   001F68  6E3F               	movwf	(i2___flmul@a+1)^0,c
 13642   001F6A  0E00               	movlw	0
 13643   001F6C  6E40               	movwf	(i2___flmul@a+2)^0,c
 13644   001F6E  0E00               	movlw	0
 13645   001F70  6E41               	movwf	(i2___flmul@a+3)^0,c
 13646   001F72                     i2l5606:
 13647   001F72  8E40               	bsf	(i2___flmul@a+2)^0,7,c
 13648   001F74  EFC4  F00F         	goto	i2l1201
 13649   001F78                     i2l5608:
 13650   001F78  0E00               	movlw	0
 13651   001F7A  6E3E               	movwf	i2___flmul@a^0,c
 13652   001F7C  0E00               	movlw	0
 13653   001F7E  6E3F               	movwf	(i2___flmul@a+1)^0,c
 13654   001F80  0E00               	movlw	0
 13655   001F82  6E40               	movwf	(i2___flmul@a+2)^0,c
 13656   001F84  0E00               	movlw	0
 13657   001F86  6E41               	movwf	(i2___flmul@a+3)^0,c
 13658   001F88                     i2l1201:
 13659   001F88  504B               	movf	i2___flmul@aexp^0,w,c
 13660   001F8A  B4D8               	btfsc	status,2,c
 13661   001F8C  EFCA  F00F         	goto	i2u637_41
 13662   001F90  EFCC  F00F         	goto	i2u637_40
 13663   001F94                     i2u637_41:
 13664   001F94  EFD4  F00F         	goto	i2l5612
 13665   001F98                     i2u637_40:
 13666   001F98  504C               	movf	i2___flmul@bexp^0,w,c
 13667   001F9A  A4D8               	btfss	status,2,c
 13668   001F9C  EFD2  F00F         	goto	i2u638_41
 13669   001FA0  EFD4  F00F         	goto	i2u638_40
 13670   001FA4                     i2u638_41:
 13671   001FA4  EFDE  F00F         	goto	i2l5616
 13672   001FA8                     i2u638_40:
 13673   001FA8                     i2l5612:
 13674   001FA8  0E00               	movlw	0
 13675   001FAA  6E3A               	movwf	?i2___flmul^0,c
 13676   001FAC  0E00               	movlw	0
 13677   001FAE  6E3B               	movwf	(?i2___flmul+1)^0,c
 13678   001FB0  0E00               	movlw	0
 13679   001FB2  6E3C               	movwf	(?i2___flmul+2)^0,c
 13680   001FB4  0E00               	movlw	0
 13681   001FB6  6E3D               	movwf	(?i2___flmul+3)^0,c
 13682   001FB8  EF76  F011         	goto	i2l1205
 13683   001FBC                     i2l5616:
 13684   001FBC  5040               	movf	(i2___flmul@a+2)^0,w,c
 13685   001FBE  023A               	mulwf	i2___flmul@b^0,c
 13686   001FC0  CFF3 F051          	movff	prodl,i2___flmul@temp
 13687   001FC4  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13688   001FC8  5051               	movf	i2___flmul@temp^0,w,c
 13689   001FCA  6E47               	movwf	i2___flmul@grs^0,c
 13690   001FCC  6A48               	clrf	(i2___flmul@grs+1)^0,c
 13691   001FCE  6A49               	clrf	(i2___flmul@grs+2)^0,c
 13692   001FD0  6A4A               	clrf	(i2___flmul@grs+3)^0,c
 13693   001FD2  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13694   001FD4  6E4D               	movwf	i2___flmul@prod^0,c
 13695   001FD6  6A4E               	clrf	(i2___flmul@prod+1)^0,c
 13696   001FD8  6A4F               	clrf	(i2___flmul@prod+2)^0,c
 13697   001FDA  6A50               	clrf	(i2___flmul@prod+3)^0,c
 13698   001FDC  503F               	movf	(i2___flmul@a+1)^0,w,c
 13699   001FDE  023B               	mulwf	(i2___flmul@b+1)^0,c
 13700   001FE0  CFF3 F051          	movff	prodl,i2___flmul@temp
 13701   001FE4  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13702   001FE8  5051               	movf	i2___flmul@temp^0,w,c
 13703   001FEA  2647               	addwf	i2___flmul@grs^0,f,c
 13704   001FEC  0E00               	movlw	0
 13705   001FEE  2248               	addwfc	(i2___flmul@grs+1)^0,f,c
 13706   001FF0  2249               	addwfc	(i2___flmul@grs+2)^0,f,c
 13707   001FF2  224A               	addwfc	(i2___flmul@grs+3)^0,f,c
 13708   001FF4  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13709   001FF6  264D               	addwf	i2___flmul@prod^0,f,c
 13710   001FF8  0E00               	movlw	0
 13711   001FFA  224E               	addwfc	(i2___flmul@prod+1)^0,f,c
 13712   001FFC  224F               	addwfc	(i2___flmul@prod+2)^0,f,c
 13713   001FFE  2250               	addwfc	(i2___flmul@prod+3)^0,f,c
 13714   002000  503E               	movf	i2___flmul@a^0,w,c
 13715   002002  023C               	mulwf	(i2___flmul@b+2)^0,c
 13716   002004  CFF3 F051          	movff	prodl,i2___flmul@temp
 13717   002008  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13718   00200C  5051               	movf	i2___flmul@temp^0,w,c
 13719   00200E  2647               	addwf	i2___flmul@grs^0,f,c
 13720   002010  0E00               	movlw	0
 13721   002012  2248               	addwfc	(i2___flmul@grs+1)^0,f,c
 13722   002014  2249               	addwfc	(i2___flmul@grs+2)^0,f,c
 13723   002016  224A               	addwfc	(i2___flmul@grs+3)^0,f,c
 13724   002018  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13725   00201A  264D               	addwf	i2___flmul@prod^0,f,c
 13726   00201C  0E00               	movlw	0
 13727   00201E  224E               	addwfc	(i2___flmul@prod+1)^0,f,c
 13728   002020  224F               	addwfc	(i2___flmul@prod+2)^0,f,c
 13729   002022  2250               	addwfc	(i2___flmul@prod+3)^0,f,c
 13730   002024  C049  F04A         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 13731   002028  C048  F049         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 13732   00202C  C047  F048         	movff	i2___flmul@grs,i2___flmul@grs+1
 13733   002030  6A47               	clrf	i2___flmul@grs^0,c
 13734   002032  503E               	movf	i2___flmul@a^0,w,c
 13735   002034  023B               	mulwf	(i2___flmul@b+1)^0,c
 13736   002036  CFF3 F051          	movff	prodl,i2___flmul@temp
 13737   00203A  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13738   00203E  5051               	movf	i2___flmul@temp^0,w,c
 13739   002040  2647               	addwf	i2___flmul@grs^0,f,c
 13740   002042  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13741   002044  2248               	addwfc	(i2___flmul@grs+1)^0,f,c
 13742   002046  0E00               	movlw	0
 13743   002048  2249               	addwfc	(i2___flmul@grs+2)^0,f,c
 13744   00204A  0E00               	movlw	0
 13745   00204C  224A               	addwfc	(i2___flmul@grs+3)^0,f,c
 13746   00204E  503F               	movf	(i2___flmul@a+1)^0,w,c
 13747   002050  023A               	mulwf	i2___flmul@b^0,c
 13748   002052  CFF3 F051          	movff	prodl,i2___flmul@temp
 13749   002056  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13750   00205A  5051               	movf	i2___flmul@temp^0,w,c
 13751   00205C  2647               	addwf	i2___flmul@grs^0,f,c
 13752   00205E  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13753   002060  2248               	addwfc	(i2___flmul@grs+1)^0,f,c
 13754   002062  0E00               	movlw	0
 13755   002064  2249               	addwfc	(i2___flmul@grs+2)^0,f,c
 13756   002066  0E00               	movlw	0
 13757   002068  224A               	addwfc	(i2___flmul@grs+3)^0,f,c
 13758   00206A  C049  F04A         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 13759   00206E  C048  F049         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 13760   002072  C047  F048         	movff	i2___flmul@grs,i2___flmul@grs+1
 13761   002076  6A47               	clrf	i2___flmul@grs^0,c
 13762   002078  503E               	movf	i2___flmul@a^0,w,c
 13763   00207A  023A               	mulwf	i2___flmul@b^0,c
 13764   00207C  CFF3 F051          	movff	prodl,i2___flmul@temp
 13765   002080  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13766   002084  5051               	movf	i2___flmul@temp^0,w,c
 13767   002086  2647               	addwf	i2___flmul@grs^0,f,c
 13768   002088  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13769   00208A  2248               	addwfc	(i2___flmul@grs+1)^0,f,c
 13770   00208C  0E00               	movlw	0
 13771   00208E  2249               	addwfc	(i2___flmul@grs+2)^0,f,c
 13772   002090  0E00               	movlw	0
 13773   002092  224A               	addwfc	(i2___flmul@grs+3)^0,f,c
 13774   002094  5040               	movf	(i2___flmul@a+2)^0,w,c
 13775   002096  023B               	mulwf	(i2___flmul@b+1)^0,c
 13776   002098  CFF3 F051          	movff	prodl,i2___flmul@temp
 13777   00209C  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13778   0020A0  5051               	movf	i2___flmul@temp^0,w,c
 13779   0020A2  264D               	addwf	i2___flmul@prod^0,f,c
 13780   0020A4  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13781   0020A6  224E               	addwfc	(i2___flmul@prod+1)^0,f,c
 13782   0020A8  0E00               	movlw	0
 13783   0020AA  224F               	addwfc	(i2___flmul@prod+2)^0,f,c
 13784   0020AC  0E00               	movlw	0
 13785   0020AE  2250               	addwfc	(i2___flmul@prod+3)^0,f,c
 13786   0020B0  503F               	movf	(i2___flmul@a+1)^0,w,c
 13787   0020B2  023C               	mulwf	(i2___flmul@b+2)^0,c
 13788   0020B4  CFF3 F051          	movff	prodl,i2___flmul@temp
 13789   0020B8  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13790   0020BC  5051               	movf	i2___flmul@temp^0,w,c
 13791   0020BE  264D               	addwf	i2___flmul@prod^0,f,c
 13792   0020C0  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13793   0020C2  224E               	addwfc	(i2___flmul@prod+1)^0,f,c
 13794   0020C4  0E00               	movlw	0
 13795   0020C6  224F               	addwfc	(i2___flmul@prod+2)^0,f,c
 13796   0020C8  0E00               	movlw	0
 13797   0020CA  2250               	addwfc	(i2___flmul@prod+3)^0,f,c
 13798   0020CC  5040               	movf	(i2___flmul@a+2)^0,w,c
 13799   0020CE  023C               	mulwf	(i2___flmul@b+2)^0,c
 13800   0020D0  CFF3 F051          	movff	prodl,i2___flmul@temp
 13801   0020D4  CFF4 F052          	movff	prodh,i2___flmul@temp+1
 13802   0020D8  5051               	movf	i2___flmul@temp^0,w,c
 13803   0020DA  6E42               	movwf	??i2___flmul^0,c
 13804   0020DC  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13805   0020DE  6E43               	movwf	(??i2___flmul+1)^0,c
 13806   0020E0  6A44               	clrf	(??i2___flmul+2)^0,c
 13807   0020E2  6A45               	clrf	(??i2___flmul+3)^0,c
 13808   0020E4  C044  F045         	movff	??i2___flmul+2,??i2___flmul+3
 13809   0020E8  C043  F044         	movff	??i2___flmul+1,??i2___flmul+2
 13810   0020EC  C042  F043         	movff	??i2___flmul,??i2___flmul+1
 13811   0020F0  6A42               	clrf	??i2___flmul^0,c
 13812   0020F2  5042               	movf	??i2___flmul^0,w,c
 13813   0020F4  264D               	addwf	i2___flmul@prod^0,f,c
 13814   0020F6  5043               	movf	(??i2___flmul+1)^0,w,c
 13815   0020F8  224E               	addwfc	(i2___flmul@prod+1)^0,f,c
 13816   0020FA  5044               	movf	(??i2___flmul+2)^0,w,c
 13817   0020FC  224F               	addwfc	(i2___flmul@prod+2)^0,f,c
 13818   0020FE  5045               	movf	(??i2___flmul+3)^0,w,c
 13819   002100  2250               	addwfc	(i2___flmul@prod+3)^0,f,c
 13820   002102  C047  F042         	movff	i2___flmul@grs,??i2___flmul
 13821   002106  C048  F043         	movff	i2___flmul@grs+1,??i2___flmul+1
 13822   00210A  C049  F044         	movff	i2___flmul@grs+2,??i2___flmul+2
 13823   00210E  C04A  F045         	movff	i2___flmul@grs+3,??i2___flmul+3
 13824   002112  0E19               	movlw	25
 13825   002114  EF91  F010         	goto	i2u639_40
 13826   002118                     i2u639_45:
 13827   002118  90D8               	bcf	status,0,c
 13828   00211A  3245               	rrcf	(??i2___flmul+3)^0,f,c
 13829   00211C  3244               	rrcf	(??i2___flmul+2)^0,f,c
 13830   00211E  3243               	rrcf	(??i2___flmul+1)^0,f,c
 13831   002120  3242               	rrcf	??i2___flmul^0,f,c
 13832   002122                     i2u639_40:
 13833   002122  2EE8               	decfsz	wreg,f,c
 13834   002124  EF8C  F010         	goto	i2u639_45
 13835   002128  5042               	movf	??i2___flmul^0,w,c
 13836   00212A  264D               	addwf	i2___flmul@prod^0,f,c
 13837   00212C  5043               	movf	(??i2___flmul+1)^0,w,c
 13838   00212E  224E               	addwfc	(i2___flmul@prod+1)^0,f,c
 13839   002130  5044               	movf	(??i2___flmul+2)^0,w,c
 13840   002132  224F               	addwfc	(i2___flmul@prod+2)^0,f,c
 13841   002134  5045               	movf	(??i2___flmul+3)^0,w,c
 13842   002136  2250               	addwfc	(i2___flmul@prod+3)^0,f,c
 13843   002138  C049  F04A         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 13844   00213C  C048  F049         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 13845   002140  C047  F048         	movff	i2___flmul@grs,i2___flmul@grs+1
 13846   002144  6A47               	clrf	i2___flmul@grs^0,c
 13847   002146  504B               	movf	i2___flmul@aexp^0,w,c
 13848   002148  C04C  F042         	movff	i2___flmul@bexp,??i2___flmul
 13849   00214C  6A43               	clrf	(??i2___flmul+1)^0,c
 13850   00214E  2642               	addwf	??i2___flmul^0,f,c
 13851   002150  0E00               	movlw	0
 13852   002152  2243               	addwfc	(??i2___flmul+1)^0,f,c
 13853   002154  0E82               	movlw	130
 13854   002156  2442               	addwf	??i2___flmul^0,w,c
 13855   002158  6E51               	movwf	i2___flmul@temp^0,c
 13856   00215A  0EFF               	movlw	255
 13857   00215C  2043               	addwfc	(??i2___flmul+1)^0,w,c
 13858   00215E  6E52               	movwf	(i2___flmul@temp+1)^0,c
 13859   002160  EFC7  F010         	goto	i2l5664
 13860   002164                     i2l5658:
 13861   002164  90D8               	bcf	status,0,c
 13862   002166  364D               	rlcf	i2___flmul@prod^0,f,c
 13863   002168  364E               	rlcf	(i2___flmul@prod+1)^0,f,c
 13864   00216A  364F               	rlcf	(i2___flmul@prod+2)^0,f,c
 13865   00216C  3650               	rlcf	(i2___flmul@prod+3)^0,f,c
 13866   00216E  AE4A               	btfss	(i2___flmul@grs+3)^0,7,c
 13867   002170  EFBC  F010         	goto	i2u640_41
 13868   002174  EFBE  F010         	goto	i2u640_40
 13869   002178                     i2u640_41:
 13870   002178  EFBF  F010         	goto	i2l1208
 13871   00217C                     i2u640_40:
 13872   00217C  804D               	bsf	i2___flmul@prod^0,0,c
 13873   00217E                     i2l1208:
 13874   00217E  90D8               	bcf	status,0,c
 13875   002180  3647               	rlcf	i2___flmul@grs^0,f,c
 13876   002182  3648               	rlcf	(i2___flmul@grs+1)^0,f,c
 13877   002184  3649               	rlcf	(i2___flmul@grs+2)^0,f,c
 13878   002186  364A               	rlcf	(i2___flmul@grs+3)^0,f,c
 13879   002188  0651               	decf	i2___flmul@temp^0,f,c
 13880   00218A  A0D8               	btfss	status,0,c
 13881   00218C  0652               	decf	(i2___flmul@temp+1)^0,f,c
 13882   00218E                     i2l5664:
 13883   00218E  AE4F               	btfss	(i2___flmul@prod+2)^0,7,c
 13884   002190  EFCC  F010         	goto	i2u641_41
 13885   002194  EFCE  F010         	goto	i2u641_40
 13886   002198                     i2u641_41:
 13887   002198  EFB2  F010         	goto	i2l5658
 13888   00219C                     i2u641_40:
 13889   00219C  0E00               	movlw	0
 13890   00219E  6E4B               	movwf	i2___flmul@aexp^0,c
 13891   0021A0  AE4A               	btfss	(i2___flmul@grs+3)^0,7,c
 13892   0021A2  EFD5  F010         	goto	i2u642_41
 13893   0021A6  EFD7  F010         	goto	i2u642_40
 13894   0021AA                     i2u642_41:
 13895   0021AA  EFFB  F010         	goto	i2l1210
 13896   0021AE                     i2u642_40:
 13897   0021AE  0EFF               	movlw	255
 13898   0021B0  1447               	andwf	i2___flmul@grs^0,w,c
 13899   0021B2  6E42               	movwf	??i2___flmul^0,c
 13900   0021B4  0EFF               	movlw	255
 13901   0021B6  1448               	andwf	(i2___flmul@grs+1)^0,w,c
 13902   0021B8  6E43               	movwf	(??i2___flmul+1)^0,c
 13903   0021BA  0EFF               	movlw	255
 13904   0021BC  1449               	andwf	(i2___flmul@grs+2)^0,w,c
 13905   0021BE  6E44               	movwf	(??i2___flmul+2)^0,c
 13906   0021C0  0E7F               	movlw	127
 13907   0021C2  144A               	andwf	(i2___flmul@grs+3)^0,w,c
 13908   0021C4  6E45               	movwf	(??i2___flmul+3)^0,c
 13909   0021C6  5042               	movf	??i2___flmul^0,w,c
 13910   0021C8  1043               	iorwf	(??i2___flmul+1)^0,w,c
 13911   0021CA  1044               	iorwf	(??i2___flmul+2)^0,w,c
 13912   0021CC  1045               	iorwf	(??i2___flmul+3)^0,w,c
 13913   0021CE  B4D8               	btfsc	status,2,c
 13914   0021D0  EFEC  F010         	goto	i2u643_41
 13915   0021D4  EFEE  F010         	goto	i2u643_40
 13916   0021D8                     i2u643_41:
 13917   0021D8  EFF2  F010         	goto	i2l1211
 13918   0021DC                     i2u643_40:
 13919   0021DC                     i2l5672:
 13920   0021DC  0E01               	movlw	1
 13921   0021DE  6E4B               	movwf	i2___flmul@aexp^0,c
 13922   0021E0  EFFB  F010         	goto	i2l1210
 13923   0021E4                     i2l1211:
 13924   0021E4  A04D               	btfss	i2___flmul@prod^0,0,c
 13925   0021E6  EFF7  F010         	goto	i2u644_41
 13926   0021EA  EFF9  F010         	goto	i2u644_40
 13927   0021EE                     i2u644_41:
 13928   0021EE  EFFB  F010         	goto	i2l1210
 13929   0021F2                     i2u644_40:
 13930   0021F2  EFEE  F010         	goto	i2l5672
 13931   0021F6                     i2l1210:
 13932   0021F6  504B               	movf	i2___flmul@aexp^0,w,c
 13933   0021F8  B4D8               	btfsc	status,2,c
 13934   0021FA  EF01  F011         	goto	i2u645_41
 13935   0021FE  EF03  F011         	goto	i2u645_40
 13936   002202                     i2u645_41:
 13937   002202  EF27  F011         	goto	i2l5684
 13938   002206                     i2u645_40:
 13939   002206  0E01               	movlw	1
 13940   002208  264D               	addwf	i2___flmul@prod^0,f,c
 13941   00220A  0E00               	movlw	0
 13942   00220C  224E               	addwfc	(i2___flmul@prod+1)^0,f,c
 13943   00220E  224F               	addwfc	(i2___flmul@prod+2)^0,f,c
 13944   002210  2250               	addwfc	(i2___flmul@prod+3)^0,f,c
 13945   002212  A050               	btfss	(i2___flmul@prod+3)^0,0,c
 13946   002214  EF0E  F011         	goto	i2u646_41
 13947   002218  EF10  F011         	goto	i2u646_40
 13948   00221C                     i2u646_41:
 13949   00221C  EF27  F011         	goto	i2l5684
 13950   002220                     i2u646_40:
 13951   002220  C04D  F042         	movff	i2___flmul@prod,??i2___flmul
 13952   002224  C04E  F043         	movff	i2___flmul@prod+1,??i2___flmul+1
 13953   002228  C04F  F044         	movff	i2___flmul@prod+2,??i2___flmul+2
 13954   00222C  C050  F045         	movff	i2___flmul@prod+3,??i2___flmul+3
 13955   002230  3445               	rlcf	(??i2___flmul+3)^0,w,c
 13956   002232  3245               	rrcf	(??i2___flmul+3)^0,f,c
 13957   002234  3244               	rrcf	(??i2___flmul+2)^0,f,c
 13958   002236  3243               	rrcf	(??i2___flmul+1)^0,f,c
 13959   002238  3242               	rrcf	??i2___flmul^0,f,c
 13960   00223A  C042  F04D         	movff	??i2___flmul,i2___flmul@prod
 13961   00223E  C043  F04E         	movff	??i2___flmul+1,i2___flmul@prod+1
 13962   002242  C044  F04F         	movff	??i2___flmul+2,i2___flmul@prod+2
 13963   002246  C045  F050         	movff	??i2___flmul+3,i2___flmul@prod+3
 13964   00224A  4A51               	infsnz	i2___flmul@temp^0,f,c
 13965   00224C  2A52               	incf	(i2___flmul@temp+1)^0,f,c
 13966   00224E                     i2l5684:
 13967   00224E  BE52               	btfsc	(i2___flmul@temp+1)^0,7,c
 13968   002250  EF32  F011         	goto	i2u647_41
 13969   002254  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13970   002256  E108               	bnz	i2u647_40
 13971   002258  2851               	incf	i2___flmul@temp^0,w,c
 13972   00225A  A0D8               	btfss	status,0,c
 13973   00225C  EF32  F011         	goto	i2u647_41
 13974   002260  EF34  F011         	goto	i2u647_40
 13975   002264                     i2u647_41:
 13976   002264  EF3E  F011         	goto	i2l5688
 13977   002268                     i2u647_40:
 13978   002268  0E00               	movlw	0
 13979   00226A  6E4D               	movwf	i2___flmul@prod^0,c
 13980   00226C  0E00               	movlw	0
 13981   00226E  6E4E               	movwf	(i2___flmul@prod+1)^0,c
 13982   002270  0E80               	movlw	128
 13983   002272  6E4F               	movwf	(i2___flmul@prod+2)^0,c
 13984   002274  0E7F               	movlw	127
 13985   002276  6E50               	movwf	(i2___flmul@prod+3)^0,c
 13986   002278  EF6C  F011         	goto	i2l5700
 13987   00227C                     i2l5688:
 13988   00227C  BE52               	btfsc	(i2___flmul@temp+1)^0,7,c
 13989   00227E  EF4B  F011         	goto	i2u648_40
 13990   002282  5052               	movf	(i2___flmul@temp+1)^0,w,c
 13991   002284  E106               	bnz	i2u648_41
 13992   002286  0451               	decf	i2___flmul@temp^0,w,c
 13993   002288  B0D8               	btfsc	status,0,c
 13994   00228A  EF49  F011         	goto	i2u648_41
 13995   00228E  EF4B  F011         	goto	i2u648_40
 13996   002292                     i2u648_41:
 13997   002292  EF57  F011         	goto	i2l1218
 13998   002296                     i2u648_40:
 13999   002296  0E00               	movlw	0
 14000   002298  6E4D               	movwf	i2___flmul@prod^0,c
 14001   00229A  0E00               	movlw	0
 14002   00229C  6E4E               	movwf	(i2___flmul@prod+1)^0,c
 14003   00229E  0E00               	movlw	0
 14004   0022A0  6E4F               	movwf	(i2___flmul@prod+2)^0,c
 14005   0022A2  0E00               	movlw	0
 14006   0022A4  6E50               	movwf	(i2___flmul@prod+3)^0,c
 14007   0022A6  0E00               	movlw	0
 14008   0022A8  6E46               	movwf	i2___flmul@sign^0,c
 14009   0022AA  EF6C  F011         	goto	i2l5700
 14010   0022AE                     i2l1218:
 14011   0022AE  C051  F04C         	movff	i2___flmul@temp,i2___flmul@bexp
 14012   0022B2  0EFF               	movlw	255
 14013   0022B4  164D               	andwf	i2___flmul@prod^0,f,c
 14014   0022B6  0EFF               	movlw	255
 14015   0022B8  164E               	andwf	(i2___flmul@prod+1)^0,f,c
 14016   0022BA  0E7F               	movlw	127
 14017   0022BC  164F               	andwf	(i2___flmul@prod+2)^0,f,c
 14018   0022BE  0E00               	movlw	0
 14019   0022C0  1650               	andwf	(i2___flmul@prod+3)^0,f,c
 14020   0022C2  A04C               	btfss	i2___flmul@bexp^0,0,c
 14021   0022C4  EF66  F011         	goto	i2u649_41
 14022   0022C8  EF68  F011         	goto	i2u649_40
 14023   0022CC                     i2u649_41:
 14024   0022CC  EF69  F011         	goto	i2l5698
 14025   0022D0                     i2u649_40:
 14026   0022D0  8E4F               	bsf	(i2___flmul@prod+2)^0,7,c
 14027   0022D2                     i2l5698:
 14028   0022D2  90D8               	bcf	status,0,c
 14029   0022D4  304C               	rrcf	i2___flmul@bexp^0,w,c
 14030   0022D6  6E50               	movwf	(i2___flmul@prod+3)^0,c
 14031   0022D8                     i2l5700:
 14032   0022D8  5046               	movf	i2___flmul@sign^0,w,c
 14033   0022DA  1250               	iorwf	(i2___flmul@prod+3)^0,f,c
 14034   0022DC  C04D  F03A         	movff	i2___flmul@prod,?i2___flmul
 14035   0022E0  C04E  F03B         	movff	i2___flmul@prod+1,?i2___flmul+1
 14036   0022E4  C04F  F03C         	movff	i2___flmul@prod+2,?i2___flmul+2
 14037   0022E8  C050  F03D         	movff	i2___flmul@prod+3,?i2___flmul+3
 14038   0022EC                     i2l1205:
 14039   0022EC  0012               	return		;funcret
 14040   0022EE                     __end_ofi2___flmul:
 14041                           	callstack 0
 14042                           
 14043                           	psect	rparam
 14044   000000                     
 14045                           	psect	temp
 14046   000056                     btemp:
 14047                           	callstack 0
 14048   000056                     	ds	1
 14049   000000                     int$flags	set	btemp
 14050   000000                     wtemp8	set	btemp+1
 14051   000000                     ttemp5	set	btemp+1
 14052   000000                     ttemp6	set	btemp+4
 14053   000000                     ttemp7	set	btemp+8
 14054                           
 14055                           	psect	idloc
 14056                           
 14057                           ;Config register IDLOC0 @ 0x200000
 14058                           ;	unspecified, using default values
 14059   200000                     	org	2097152
 14060   200000  FF                 	db	255
 14061                           
 14062                           ;Config register IDLOC1 @ 0x200001
 14063                           ;	unspecified, using default values
 14064   200001                     	org	2097153
 14065   200001  FF                 	db	255
 14066                           
 14067                           ;Config register IDLOC2 @ 0x200002
 14068                           ;	unspecified, using default values
 14069   200002                     	org	2097154
 14070   200002  FF                 	db	255
 14071                           
 14072                           ;Config register IDLOC3 @ 0x200003
 14073                           ;	unspecified, using default values
 14074   200003                     	org	2097155
 14075   200003  FF                 	db	255
 14076                           
 14077                           ;Config register IDLOC4 @ 0x200004
 14078                           ;	unspecified, using default values
 14079   200004                     	org	2097156
 14080   200004  FF                 	db	255
 14081                           
 14082                           ;Config register IDLOC5 @ 0x200005
 14083                           ;	unspecified, using default values
 14084   200005                     	org	2097157
 14085   200005  FF                 	db	255
 14086                           
 14087                           ;Config register IDLOC6 @ 0x200006
 14088                           ;	unspecified, using default values
 14089   200006                     	org	2097158
 14090   200006  FF                 	db	255
 14091                           
 14092                           ;Config register IDLOC7 @ 0x200007
 14093                           ;	unspecified, using default values
 14094   200007                     	org	2097159
 14095   200007  FF                 	db	255
 14096                           
 14097                           	psect	config
 14098                           
 14099                           ; Padding undefined space
 14100   300000                     	org	3145728
 14101   300000  FF                 	db	255
 14102                           
 14103                           ;Config register CONFIG1H @ 0x300001
 14104                           ;	Oscillator Selection bits
 14105                           ;	FOSC = INTIO67, Internal oscillator block
 14106                           ;	4X PLL Enable
 14107                           ;	PLLCFG = 0x0, unprogrammed default
 14108                           ;	Primary clock enable bit
 14109                           ;	PRICLKEN = 0x1, unprogrammed default
 14110                           ;	Fail-Safe Clock Monitor Enable bit
 14111                           ;	FCMEN = 0x0, unprogrammed default
 14112                           ;	Internal/External Oscillator Switchover bit
 14113                           ;	IESO = 0x0, unprogrammed default
 14114   300001                     	org	3145729
 14115   300001  28                 	db	40
 14116                           
 14117                           ;Config register CONFIG2L @ 0x300002
 14118                           ;	unspecified, using default values
 14119                           ;	Power-up Timer Enable bit
 14120                           ;	PWRTEN = 0x1, unprogrammed default
 14121                           ;	Brown-out Reset Enable bits
 14122                           ;	BOREN = 0x3, unprogrammed default
 14123                           ;	Brown Out Reset Voltage bits
 14124                           ;	BORV = 0x3, unprogrammed default
 14125   300002                     	org	3145730
 14126   300002  1F                 	db	31
 14127                           
 14128                           ;Config register CONFIG2H @ 0x300003
 14129                           ;	Watchdog Timer Enable bits
 14130                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 14131                           ;	Watchdog Timer Postscale Select bits
 14132                           ;	WDTPS = 0xF, unprogrammed default
 14133   300003                     	org	3145731
 14134   300003  3C                 	db	60
 14135                           
 14136                           ; Padding undefined space
 14137   300004                     	org	3145732
 14138   300004  FF                 	db	255
 14139                           
 14140                           ;Config register CONFIG3H @ 0x300005
 14141                           ;	CCP2 MUX bit
 14142                           ;	CCP2MX = PORTB3, CCP2 input/output is multiplexed with RB3
 14143                           ;	PORTB A/D Enable bit
 14144                           ;	PBADEN = 0x1, unprogrammed default
 14145                           ;	P3A/CCP3 Mux bit
 14146                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
 14147                           ;	HFINTOSC Fast Start-up
 14148                           ;	HFOFST = 0x1, unprogrammed default
 14149                           ;	Timer3 Clock input mux bit
 14150                           ;	T3CMX = 0x1, unprogrammed default
 14151                           ;	ECCP2 B output mux bit
 14152                           ;	P2BMX = 0x1, unprogrammed default
 14153                           ;	MCLR Pin Enable bit
 14154                           ;	MCLRE = 0x1, unprogrammed default
 14155   300005                     	org	3145733
 14156   300005  BA                 	db	186
 14157                           
 14158                           ;Config register CONFIG4L @ 0x300006
 14159                           ;	Stack Full/Underflow Reset Enable bit
 14160                           ;	STVREN = 0x1, unprogrammed default
 14161                           ;	Single-Supply ICSP Enable bit
 14162                           ;	LVP = OFF, Single-Supply ICSP disabled
 14163                           ;	Extended Instruction Set Enable bit
 14164                           ;	XINST = 0x0, unprogrammed default
 14165                           ;	Background Debug
 14166                           ;	DEBUG = 0x1, unprogrammed default
 14167   300006                     	org	3145734
 14168   300006  81                 	db	129
 14169                           
 14170                           ; Padding undefined space
 14171   300007                     	org	3145735
 14172   300007  FF                 	db	255
 14173                           
 14174                           ;Config register CONFIG5L @ 0x300008
 14175                           ;	unspecified, using default values
 14176                           ;	Code Protection Block 0
 14177                           ;	CP0 = 0x1, unprogrammed default
 14178                           ;	Code Protection Block 1
 14179                           ;	CP1 = 0x1, unprogrammed default
 14180                           ;	Code Protection Block 2
 14181                           ;	CP2 = 0x1, unprogrammed default
 14182                           ;	Code Protection Block 3
 14183                           ;	CP3 = 0x1, unprogrammed default
 14184   300008                     	org	3145736
 14185   300008  0F                 	db	15
 14186                           
 14187                           ;Config register CONFIG5H @ 0x300009
 14188                           ;	unspecified, using default values
 14189                           ;	Boot Block Code Protection bit
 14190                           ;	CPB = 0x1, unprogrammed default
 14191                           ;	Data EEPROM Code Protection bit
 14192                           ;	CPD = 0x1, unprogrammed default
 14193   300009                     	org	3145737
 14194   300009  C0                 	db	192
 14195                           
 14196                           ;Config register CONFIG6L @ 0x30000A
 14197                           ;	unspecified, using default values
 14198                           ;	Write Protection Block 0
 14199                           ;	WRT0 = 0x1, unprogrammed default
 14200                           ;	Write Protection Block 1
 14201                           ;	WRT1 = 0x1, unprogrammed default
 14202                           ;	Write Protection Block 2
 14203                           ;	WRT2 = 0x1, unprogrammed default
 14204                           ;	Write Protection Block 3
 14205                           ;	WRT3 = 0x1, unprogrammed default
 14206   30000A                     	org	3145738
 14207   30000A  0F                 	db	15
 14208                           
 14209                           ;Config register CONFIG6H @ 0x30000B
 14210                           ;	unspecified, using default values
 14211                           ;	Configuration Register Write Protection bit
 14212                           ;	WRTC = 0x1, unprogrammed default
 14213                           ;	Boot Block Write Protection bit
 14214                           ;	WRTB = 0x1, unprogrammed default
 14215                           ;	Data EEPROM Write Protection bit
 14216                           ;	WRTD = 0x1, unprogrammed default
 14217   30000B                     	org	3145739
 14218   30000B  E0                 	db	224
 14219                           
 14220                           ;Config register CONFIG7L @ 0x30000C
 14221                           ;	unspecified, using default values
 14222                           ;	Table Read Protection Block 0
 14223                           ;	EBTR0 = 0x1, unprogrammed default
 14224                           ;	Table Read Protection Block 1
 14225                           ;	EBTR1 = 0x1, unprogrammed default
 14226                           ;	Table Read Protection Block 2
 14227                           ;	EBTR2 = 0x1, unprogrammed default
 14228                           ;	Table Read Protection Block 3
 14229                           ;	EBTR3 = 0x1, unprogrammed default
 14230   30000C                     	org	3145740
 14231   30000C  0F                 	db	15
 14232                           
 14233                           ;Config register CONFIG7H @ 0x30000D
 14234                           ;	unspecified, using default values
 14235                           ;	Boot Block Table Read Protection bit
 14236                           ;	EBTRB = 0x1, unprogrammed default
 14237   30000D                     	org	3145741
 14238   30000D  40                 	db	64
 14239                           tosu	equ	0xFFF
 14240                           tosh	equ	0xFFE
 14241                           tosl	equ	0xFFD
 14242                           stkptr	equ	0xFFC
 14243                           pclatu	equ	0xFFB
 14244                           pclath	equ	0xFFA
 14245                           pcl	equ	0xFF9
 14246                           tblptru	equ	0xFF8
 14247                           tblptrh	equ	0xFF7
 14248                           tblptrl	equ	0xFF6
 14249                           tablat	equ	0xFF5
 14250                           prodh	equ	0xFF4
 14251                           prodl	equ	0xFF3
 14252                           indf0	equ	0xFEF
 14253                           postinc0	equ	0xFEE
 14254                           postdec0	equ	0xFED
 14255                           preinc0	equ	0xFEC
 14256                           plusw0	equ	0xFEB
 14257                           fsr0h	equ	0xFEA
 14258                           fsr0l	equ	0xFE9
 14259                           wreg	equ	0xFE8
 14260                           indf1	equ	0xFE7
 14261                           postinc1	equ	0xFE6
 14262                           postdec1	equ	0xFE5
 14263                           preinc1	equ	0xFE4
 14264                           plusw1	equ	0xFE3
 14265                           fsr1h	equ	0xFE2
 14266                           fsr1l	equ	0xFE1
 14267                           bsr	equ	0xFE0
 14268                           indf2	equ	0xFDF
 14269                           postinc2	equ	0xFDE
 14270                           postdec2	equ	0xFDD
 14271                           preinc2	equ	0xFDC
 14272                           plusw2	equ	0xFDB
 14273                           fsr2h	equ	0xFDA
 14274                           fsr2l	equ	0xFD9
 14275                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    0
    Data        20
    BSS         276
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      85
    BANK0           160    156     156
    BANK1           256     36     249
    BANK2           256      0      40
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 15
		 -> buffer(BANK1[15]), text2(BANK1[10]), text(BANK1[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 15
		 -> buffer(BANK1[15]), text2(BANK1[10]), text(BANK1[10]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1142$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> buffer(BANK1[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1052$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1052$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _sensor in COMRAM

    None.

Critical Paths under _UART_Rx in COMRAM

    _UART_Rx->i2___flmul
    i2___flmul->i2___xxtofl

Critical Paths under _main in BANK0

    _Data1LCD->_strlen
    _start->___flmul
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _WriteLCD->_LCD
    _SettingsLCD->_LCD

Critical Paths under _sensor in BANK0

    None.

Critical Paths under _UART_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    _automatic->_forward
    _Manual->_back
    _Manual->_forward
    _PWMD->_Data2LCD
    _PWMI->_Data2LCD
    _PWM->_Data2LCD
    _Data2LCD->_sprintf
    _sprintf->_vfprintf

Critical Paths under _sensor in BANK1

    None.

Critical Paths under _UART_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _sensor in BANK2

    None.

Critical Paths under _UART_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _sensor in BANK3

    None.

Critical Paths under _UART_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _sensor in BANK4

    None.

Critical Paths under _UART_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _sensor in BANK5

    None.

Critical Paths under _UART_Rx in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  387293
                             _Manual
                          _automatic
                              _brake
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0     958
                           _Data1LCD
                        _SettingsLCD
 ---------------------------------------------------------------------------------
 (2) _Data1LCD                                             0     0      0     772
                        _SettingsLCD
                           _WriteLCD
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _automatic                                            0     0      0  134483
                             ___flge
                              _brake
                            _forward
                               _left
                              _start
                                _ups
 ---------------------------------------------------------------------------------
 (2) _ups                                                  0     0      0       0
                              _brake
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0    7211
                                             43 BANK0      2     2      0
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Manual                                               0     0      0  251852
                       _PWM_increase
                               _back
                              _brake
                            _forward
                               _left
                              _right
                               _ups2
 ---------------------------------------------------------------------------------
 (2) _ups2                                                 0     0      0       0
                           _Data3LCD
                           _Data4LCD
                              _brake
 ---------------------------------------------------------------------------------
 (1) _brake                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Data4LCD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Data3LCD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _right                                                0     0      0   62963
                               _PWMD
 ---------------------------------------------------------------------------------
 (3) _PWMD                                                 0     0      0   62963
                           _Data2LCD
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _left                                                 0     0      0   62963
                               _PWMI
 ---------------------------------------------------------------------------------
 (3) _PWMI                                                 0     0      0   62963
                           _Data2LCD
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _forward                                              1     1      0   62963
                                             35 BANK1      1     1      0
                                _PWM
 ---------------------------------------------------------------------------------
 (2) _back                                                 1     1      0   62963
                                             35 BANK1      1     1      0
                                _PWM
 ---------------------------------------------------------------------------------
 (3) _PWM                                                  0     0      0   62963
                           _Data2LCD
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     878
                                              4 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) _Data2LCD                                             3     3      0   53885
                                             32 BANK1      3     3      0
                        _SettingsLCD
                           _WriteLCD
                            ___fldiv
                            ___flmul
                            ___fltol
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     400
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             26    16     10   41340
                                              8 BANK1     24    14     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             8     2      6   40656
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           19    13      6   40150
                                            141 BANK0     15     9      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (8) _read_prec_or_width                                   9     5      4     852
                                             10 BANK0      9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     412
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) _efgtoa                                              54    47      7   30972
                                             88 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (9) _strcpy                                               8     4      4     497
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     478
                                              4 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (9) _labs                                                 8     4      4     363
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (9) _floorf                                              20    16      4     669
                                             68 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fpclassifyf                                       14    10      4     375
                                              4 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1867
                                              4 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    4007
                                             43 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            16     8      8    3442
                                              4 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (9) ___flneg                                              4     0      4     155
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    6333
                                             18 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8    1346
                                             43 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fleq                                              12     4      8     770
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (9) ___fldiv                                             25    17      8    3443
                                             43 BANK0     25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _dtoa                                                13     9      4    5938
                                             31 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (9) _pad                                                 11     5      6    3703
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (10) _fputs                                               7     3      4    1357
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     183
                                             10 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     613
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     625
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _WriteLCD                                             1     1      0     186
                                              6 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0     186
                                              6 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0     124
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PWM_increase                                         1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _sensor                                              4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART_Rx                                             3     3      0    2275
                                             39 COMRAM     3     3      0
                          i2___flmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     374
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (15) i2___flmul                                          25    17      8    1570
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Manual
     _PWM_increase
     _back
       _PWM
         _Data2LCD
           _SettingsLCD
             _LCD
           _WriteLCD
             _LCD
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
           ___fltol
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___awdiv
                   ___awmod
                   _abs
                     ___awmod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                 _efgtoa
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                     ___flmul (ARG)
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _labs
                   _memcpy
                   _pad
                   _strcpy
                 _fputc
                 _read_prec_or_width
                   ___wmul
           _strlen
         ___flmul
         ___fltol
         ___xxtofl
     _brake
     _forward
       _PWM
     _left
       _PWMI
         _Data2LCD
         ___flmul
         ___fltol
         ___xxtofl
     _right
       _PWMD
         _Data2LCD
         ___flmul
         ___fltol
         ___xxtofl
     _ups2
       _Data3LCD
       _Data4LCD
       _brake
   _automatic
     ___flge
     _brake
     _forward
     _left
     _start
       ___flmul
       ___xxtofl
     _ups
       _brake
   _brake
   _settings
     _Data1LCD
       _SettingsLCD
       _WriteLCD
       _strlen
     _SettingsLCD

 _sensor (ROOT)

 _UART_Rx (ROOT)
   i2___flmul
     i2___xxtofl (ARG)
   i2___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      28       8       15.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     24      F9       6       97.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     9C      9C       4       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      55       1       90.4%
BITBIGSFRhhl        1D      0       0      16        0.0%
BITBIGSFRlhl        12      0       0      28        0.0%
BITBIGSFRlllll      11      0       0      33        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRhlhhll      8      0       0      18        0.0%
BITBIGSFRhlhlll      8      0       0      22        0.0%
BITBIGSFRlhhh        7      0       0      26        0.0%
BITBIGSFRhlhllh      6      0       0      19        0.0%
BITBIGSFRlllh        6      0       0      31        0.0%
BITBIGSFRhlhlll      6      0       0      23        0.0%
BITBIGSFRlhhl        5      0       0      27        0.0%
BITBIGSFRhllh        4      0       0      24        0.0%
BITBIGSFRllllh       3      0       0      32        0.0%
BITBIGSFRllhh        3      0       0      29        0.0%
BITBIGSFRllhl        3      0       0      30        0.0%
BITBIGSFRhlhhh       2      0       0      17        0.0%
BITBIGSFRhlhlll      1      0       0      21        0.0%
BITBIGSFRhlhllh      1      0       0      20        0.0%
BITBIGSFRhlll        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     212      34        0.0%
DATA                 0      0     212      36        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 09 19:12:17 2023

              ___fldiv@aexp 00A3                ___fldiv@bexp 00A2                           _a 001D  
                         _b 0130                           _i 0140                           _m 0142  
                         _n 002A                           _s 0136                           _t 0134  
                         _x 001F                ___fldiv@sign 009B                          _GO 7E11  
                        _fD 0118                ___awdiv@sign 0069                          _fI 0120  
                        _t1 0027                          _t2 01A9                          _t3 0025  
                        _t4 01A5                          _wD 0114                          _wI 011C  
                        bsr 0FE0         ___wmul@multiplicand 0066                         l302 4E6A  
                       l305 4810                         l502 26EC                         l362 439A  
                       l355 4968                         l358 49F2                         l286 495E  
                       l392 4DF0                         l296 41CC                         l545 2A0A  
                       l385 4E4E                         l490 36A2                         l378 439E  
                       l554 46B0                         l299 4E86                         l563 2FF2  
                       l491 3862                         l483 15D4                         l572 4E10  
                       l388 4DD0                         l581 4EB6                         l494 34BC  
                       l566 4EC4                         l831 4762                         l487 3EBC  
                       l575 4E30                         l495 367C                         l584 4EC0  
                       l569 4EC2                         l818 45FA                         l578 4EA8  
                       l587 4DCE                         l852 4084                         l861 4DA6  
                       l846 48BC                         l857 40CA                         l884 3FC4  
                       _GIE 7F97                         _LCD 4764                         _PR2 0FBB  
                       _PWM 3D6A                         _abs 4CF2                         _pad 49F4  
                       _ups 4E32                ___awmod@sign 0069                  i2___xxtofl 3A1C  
                       wreg 0FE8                 i2___flmul@a 003E                 i2___flmul@b 003A  
              ___flmul@aexp 007F                ___flmul@bexp 0084                ___flmul@sign 007E  
              ___flmul@temp 0089                ___flmul@prod 0085                        ?_LCD 002C  
                      ?_PWM 002C               _Data2LCD$1516 01E2                ___fltol@exp1 006D  
                      l1201 1B5E                        l1210 1DCC                        l1211 1DBA  
                      l1115 17C6                        ?_abs 006A                        l1132 18E0  
                      l1124 1A96                        l1116 17B4                        l1301 4A70  
                      l1205 1EC2                        l1141 19B0                        l1117 177A  
                      l1142 199E                        l1320 3D68                        l1208 1D54  
                      l1306 3C18                        l1218 1E84                        l1242 38BE  
                      l1171 24E8                        l1331 1016                        l1411 4B7C  
                      l1308 3C20                        l1180 252E                        l1309 3C66  
                      l1157 4C66                        l1421 42CC                        l1245 3A1A  
                      l1182 25A6                        l1174 24AC                        l1334 09B0  
                      l1183 2594                        l1336 07F0                        l1256 39B2  
                      l1169 2688                        l1265 4C1E                        l1249 3956  
                      l1426 4D2A                        l1435 3496                        l1364 0DF8  
                      l1380 4534                        l1429 4D32                        l1438 33DA  
                      l1446 4AC8                        l1455 4BCE                        l1376 452C  
                      l5000 39C2                        l1297 4A18                        l1449 4AD8  
                      l1490 4D6C                        l5010 3A0A                        l5002 39C6  
                      l1467 446A                        l1475 4CAE                        l1484 4CF0  
                      l1388 2D62                        l5004 39EA                        l1478 4EC6  
                      l5006 39FA                        l6000 1614                        l5008 3A08  
                      l6010 1644                        l6002 1624                        l6100 1816  
                      l6020 166E                        l6012 1656                        l6004 1626  
                      l6110 1844                        l6102 1824                        l6022 167E  
                      l6030 16A8                        l6014 1658                        l6006 162E  
                      l6120 18B0                        l6112 184E                        l6104 1830  
                      l6040 16E0                        l6032 16B8                        l6024 168E  
                      l6016 165E                        l6008 163E                        l7000 0FC8  
                      l6200 4DA8                        l6210 230A                        l6122 18C0  
                      l6106 1834                        l6114 1854                        l6050 16F4  
                      l6042 16E4                        l6034 16CA                        l6026 169E  
                      l6018 166C                        l7002 0FD8                        l6202 4DC6  
                      l7010 446C                        l6300 253E                        l6220 233E  
                      l6212 230C                        l6140 1942                        l6132 191A  
                      l6116 187A                        l6124 18D0                        l6108 1842  
                      l6060 1708                        l6052 16F8                        l6044 16E8  
                      l6036 16D8                        l6028 16A0                        l7004 0FEE  
                      l7020 4504                        l7012 4476                        l6302 254C  
                      l6230 2370                        l6214 231C                        l6222 2346  
                      l6206 22EE                        l6142 194A                        l6134 1924  
                      l6126 18F6                        l6118 18AE                        l6150 196E  
                      l6070 171C                        l6062 170C                        l6054 16FC  
                      l6046 16EC                        l6038 16DC                        l7006 0FF6  
                      l7014 449A                        l7030 2A4E                        l7022 2A0C  
                      ?_pad 0074                        l7120 476A                        l6312 25B6  
                      l6320 25FE                        l6304 2550                        l6240 23A4  
                      l6232 2372                        l6224 2356                        l6216 232C  
                      l6208 22FC                        l6400 1C08                        l6160 19C0  
                      l6152 1972                        l6144 194E                        l6136 1932  
                      l6128 1906                        l6080 1794                        l6072 1746  
                      l6064 1710                        l6056 1700                        l6048 16F0  
                      l7016 44D4                        l7040 2AC8                        l7032 2A72  
                      l7024 2A30                        l7200 2F70                        l7130 47B0  
                      l7122 4772                        l6330 2668                        l6322 2618  
                      l6314 25C2                        l6306 255E                        l6250 23EA  
                      l6234 2382                        l6242 23AC                        l6226 235C  
                      l6218 233C                        l6410 1C5A                        l6402 1C14  
                      l6170 1A26                        l6162 19CC                        l6154 1980  
                      l6146 195E                        l6138 1934                        l6090 17D4  
                      l6082 1798                        l6074 1762                        l6066 1714  
                      l6058 1704                        l7018 44F6                        l7050 2B52  
                      l7042 2AE4                        l7034 2A80                        l7026 2A3E  
                      l7202 2F9E                        l7210 4EB8                        l7140 4808  
                      l7132 47D0                        l7124 4786                        l6500 4592  
                      l6332 2676                        l6324 262E                        l6316 25D0  
                      l6308 258C                        l6260 2412                        l6252 23EE  
                      l6244 23BC                        l6236 2392                        l6228 2362  
                      l6420 1CD8                        l6412 1C6A                        l6404 1C24  
                      l6180 1A6E                        l6172 1A36                        l6164 19DA  
                      l6156 1996                        l6148 1960                        l6092 17E4  
                      l6084 17A6                        l6076 1772                        l6068 1718  
                      l7052 2B64                        l7060 2B7C                        l7044 2B2A  
                      l7036 2A9C                        l7028 2A4A                        l7204 2FAC  
                      l7220 3E0C                        l7212 3D6A                        l7300 4966  
                      l7134 47D8                        l7126 478E                        l7118 4768  
                      l6510 45CC                        l6502 459A                        l6334 267C  
                      l6326 2648                        l6318 25FA                        l6270 2460  
                      l6246 23D2                        l6238 23A2                        l6430 1D52  
                      l6422 1D0E                        l6414 1C86                        l6406 1C30  
                      l6350 1AB6                        l6182 1A70                        l6174 1A56  
                      l6166 1A14                        l6086 17A8                        l6078 1788  
                      l7070 2C38                        l7054 2B6C                        l7062 2BB0  
                      l7038 2AAC                        l7142 4B2C                        l7206 2FC0  
                      l7230 3EB6                        l7222 3E32                        l7214 3D7C  
                      l7310 4DF2                        l7302 4976                        l7400 27FC  
                      l7136 47FE                        l7128 47A8                        l7152 4E70  
                      l6520 45F2                        l6512 45CE                        l6504 45A8  
                      l6192 4C68                        l6336 267E                        l6328 2664  
                      l6280 24AA                        l6272 2470                        l6264 2426  
                      l6248 23E2                        l6256 2402                        l6440 1DB2  
                      l6432 1D64                        l6424 1D1C                        l6416 1C92  
                      l6408 1C40                        l6360 1AFC                        l6352 1AC6  
                      l6344 1A98                        l6600 4D86                        l6184 1A76  
                      l6176 1A5A                        l6168 1A16                        l6096 17F8  
                      l6088 17B2                        l7080 2CB0                        l7072 2C62  
                      l7064 2BD0                        l7056 2B74                        l7048 2B42  
                      l7144 4B38                        l7160 4D34                        l7208 2FC6  
                      l7224 3E5A                        l7216 3D86                        l7320 4E0E  
                      l7312 4E04                        l7240 372C                        l7232 367E  
                      l7304 4988                        l7410 2866                        l7402 2808  
                      l7138 4806                        l7154 4E72                        l6514 45D4  
                      l6506 45AE                        l6530 46CE                        l6194 4C76  
                      l6290 24F8                        l6282 24B6                        l6274 2478  
                      l6266 2440                        l6258 2412                        l6450 1E20  
                      l6434 1D72                        l6426 1D3A                        l6418 1CAE  
                      l6370 1B28                        l6362 1B02                        l6354 1AD6  
                      l6346 1AA6                        l6602 4D96                        l6186 1A84  
                      l6178 1A68                        l6098 1808                        l7090 2D26  
                      l7074 2C82                        l7066 2C04                        l7082 2CDC  
                      l7146 4B56                        l7170 4BD0                        l7162 4D40  
                      l7226 3E60                        l7218 3DD6                        l7330 4E24  
                      l7314 4E08                        l7250 3806                        l7242 3752  
                      l7234 3690                        l7322 4DD0                        l7306 49A0  
                      l7420 28B2                        l7412 286A                        l7404 281A  
                      l7156 4E54                        l6508 45C4                        l6516 45DA  
                      l6540 4702                        l6532 46D2                        l6524 46B2  
                      l6196 4C88                        l6292 250E                        l6284 24D4  
                      l6276 2488                        l6268 2450                        l6460 1E88  
                      l6444 1DDC                        l6452 1E24                        l6436 1D76  
                      l6428 1D44                        l6380 1B7E                        l6372 1B38  
                      l6364 1B08                        l6356 1AE6                        l6348 1AB4  
                      l6188 1A86                        l6620 3F2A                        l6612 3EEA  
                      l6700 32A2                        l7084 2D00                        l7148 4B72  
                      l7172 4BE2                        l7164 4D46                        l7228 3E88  
                      l7332 4E28                        l7316 4E0A                        l7252 382E  
                      l7244 377A                        l7236 36A6                        l7340 4EAA  
                      l7260 34C0                        l7324 4DD8                        l7308 49EE  
                      l7500 416C                        l7430 292C                        l7422 28C4  
                      l7414 287C                        l7406 2846                        l7158 4E56  
                      l6518 45EA                        l6550 473C                        l6542 470A  
                      l6534 46E0                        l6526 46B8                        l6198 4C8E  
                      l6294 2514                        l6286 24D6                        l6278 249C  
                      l6470 1EB2                        l6462 1E98                        l6454 1E3E  
                      l6446 1DE8                        l6438 1D84                        l6390 1BBE  
                      l6374 1B48                        l6366 1B16                        l6358 1AEC  
                      l6630 3F5A                        l6622 3F38                        l6614 3F14  
                      l6606 3EBE                        l6710 338E                        l6702 32FA  
                      l7086 2D0E                        l7094 2D38                        l7174 4BEA  
                      l7166 4D5E                        l7190 2E54                        l7182 2D68  
                      l7334 4E2A                        l7318 4E0C                        l7254 385C  
                      l7246 3780                        l7238 36F6                        l7342 4EAE  
                      l7270 359A                        l7262 3510                        l7350 4E9C  
                      l7326 4DEC                        l7510 4178                        l7502 416E  
                      l7440 2974                        l7424 28E4                        l7416 288E  
                      l7432 293A                        l7408 2854                        l7360 268A  
                      l6480 4536                        l6544 4718                        l6552 4742  
                      l6536 46E8                        l6528 46C6                        l6296 251E  
                      l6288 24E6                        l6560 4812                        l6464 1EA6  
                      l6456 1E52                        l6448 1DF6                        l6392 1BCA  
                      l6384 1B92                        l6376 1B4E                        l6368 1B18  
                      l6640 3F84                        l6632 3F64                        l6616 3F16  
                      l6608 3ED6                        l6720 3476                        l6712 33CA  
                      l6704 330E                        l6800 066E                        l7176 4BF2  
                      l7184 2D7C                        l7192 2E86                        l7336 4E2C  
                      l7328 4E12                        l7248 37D0                        l7344 4EB0  
                      l7272 35EA                        l7264 3546                        l7256 3498  
                      l7352 4EA0                        l7600 108E                        l7280 45FC  
                      l7520 4184                        l7512 417A                        l7504 4170  
                      l7450 29DA                        l7434 294C                        l7426 28EE  
                      l7370 26E2                        l7362 269A                        l6490 4564  
                      l6482 453C                        l6554 4752                        l6546 472E  
                      l6538 46FA                        l6650 49F4                        l6298 252C  
                      l6570 48B4                        l6562 4842                        l6466 1EA8  
                      l6458 1E6C                        l6394 1BE2                        l6386 1B9E  
                      l6378 1B6E                        l6474 4C20                        l6642 3F94  
                      l6618 3F26                        l6722 3486                        l6706 331C  
                      l6714 33FE                        l6730 4B9E                        l6810 06AA  
                      l6802 0676                        l7178 4C0E                        l7194 2E98  
                      l7186 2D82                        l4970 387A                        l7338 4E2E  
                      l7346 4EB2                        l7274 3620                        l7266 356C  
                      l7258 34AA                        l7354 4EA2                        l7610 10D0  
                      l7602 1094                        l7290 4656                        l7282 4602  
                      l7530 41A6                        l7522 418C                        l7514 417C  
                      l7506 4172                        l7452 29EC                        l7444 298E  
                      l7436 2950                        l7428 2900                        l7380 274E  
                      l7372 26F0                        l7364 269E                        l6492 456C  
                      l6484 454A                        l6556 475A                        l6548 4736  
                      l6660 4A3E                        l6652 4A04                        l6740 3BE6  
                      l6572 48BA                        l6564 4852                        l6580 4006  
                      l6468 1EAE                        l6396 1BEE                        l6388 1BA8  
                      l6476 4C32                        l6644 3FA4                        l6628 3F50  
                      l6716 343A                        l6732 4BA2                        l6900 0A50  
                      l6820 06F0                        l6804 0686                        l6812 06AE  
                      l7196 2E9E                        l7188 2DDC                        l4980 38F8  
                      l4972 3888                        l7348 4EB4                        l7276 3648  
                      l7268 3594                        l7356 4EA4                        l7460 4E38  
                      l7700 13B2                        l7620 1120                        l7612 10E4  
                      l7604 10A6                        l7292 465C                        l7284 4610  
                      l7540 41B8                        l7532 41AA                        l7524 4192  
                      l7516 417E                        l7508 4176                        l7454 2A02  
                      l7446 29A0                        l7438 2962                        l7390 27A0  
                      l7382 276E                        l7374 2702                        l7366 26B0  
                      l6494 4570                        l6486 4552                        l6662 4A5C  
                      l6654 4A10                        l6750 3C38                        l6742 3BF6  
                      l6566 4880                        l6590 4072                        l6582 4034  
                      l6398 1BFA                        l6646 3FB4                        l6638 3F78  
                      l6670 41EE                        l6718 344E                        l6734 4BAE  
                      l6726 4B7E                        l6902 0A64                        l6910 0B5C  
                      l6822 06F8                        l6814 06D6                        l6830 073A  
                      l6806 0696                        l7198 2EF8                        l4990 394C  
                      l4982 3900                        l4974 38CE                        l7278 3676  
                      l7358 4EA6                        l7462 4E4C                        l7710 1402  
                      l7702 13BA                        l7630 1170                        l7622 1134  
                      l7614 10F6                        l7606 10AE                        l7294 466A  
                      l7286 4624                        l7550 41C4                        l7542 41BA  
                      l7534 41B2                        l7526 419A                        l7518 4180  
                      l7470 4136                        l7448 29CC                        l7392 27B2  
                      l7376 272E                        l7368 26C2                        l7384 2778  
                      l6496 4578                        l6488 4556                        l6664 4CF2  
                      l6656 4A24                        l6760 3C6E                        l6752 3C3E  
                      l6744 3BFE                        l6568 4890                        l6592 40C2  
                      l6584 4044                        l6576 3FC6                        l6672 422E  
                      l6680 426E                        l6728 4B92                        l6736 4BB2  
                      l6920 0C2A                        l6912 0B7A                        l6904 0AC8  
                      l6840 0784                        l6832 0762                        l6824 0710  
                      l6816 06E6                        l6808 06A2                        l4992 3988  
                      l4984 390C                        l4976 38E4                        l4968 3868  
                      l7560 430A                        l7552 42CE                        l7456 4E32  
                      l7720 1452                        l7712 140A                        l7704 13BE  
                      l7640 11C0                        l7632 1184                        l7624 1146  
                      l7616 10FE                        l7608 10B2                        l7296 467E  
                      l7288 462A                        l7544 41BC                        l7536 41B4  
                      l7528 419E                        l7480 4152                        l7472 413C  
                      l7464 40CC                        l7394 27C8                        l7386 278A  
                      l7378 273C                        l6498 458A                        l6666 4D0E  
                      l6658 4A38                        l6770 3CBE                        l6762 3C78  
                      l6754 3C4E                        l6746 3C0C                        l6738 3BD0  
                      l6594 40C8                        l6586 4052                        l6578 3FF6  
                      l6682 4280                        l6674 4256                        l6690 4CB0  
                      l6930 0CDA                        l6922 0C38                        l6914 0BAE  
                      l6906 0B20                        l6850 07B8                        l6834 0772  
                      l6826 071A                        l6818 06EA                        l4994 3994  
                      l4986 393E                        l7562 4312                        l7554 42E0  
                      l7458 4E34                        l7730 14A2                        l7722 145A  
                      l7714 140E                        l7706 13DC                        l7650 1210  
                      l7642 11D4                        l7634 1196                        l7626 114E  
                      l7618 1102                        l7298 4684                        l7546 41BE  
                      l7538 41B6                        l7490 4162                        l7482 4154  
                      l7474 4142                        l7466 40EE                        l7396 27D4  
                      l7388 278E                        l5980 43C6                        l6780 3D32  
                      l6764 3C7E                        l6772 3CDA                        l6756 3C5A  
                      l6748 3C28                        l6588 4064                        l6676 4262  
                      l6668 41CE                        l6692 4CC0                        l6940 0D3E  
                      l6932 0D0E                        l6924 0C48                        l6916 0BE2  
                      l6908 0B56                        l6860 0878                        l6836 0776  
                      l4996 39A2                        l4988 3940                        l7580 4372  
                      l7572 4346                        l7564 431A                        l7556 42E8  
                      l7740 14F2                        l7732 14AA                        l7724 145E  
                      l7716 142C                        l7708 13F0                        l7660 1260  
                      l7652 1224                        l7644 11E6                        l7636 119E  
                      l7628 1152                        l7548 41C0                        l7492 4164  
                      l7484 4156                        l7476 4148                        l7468 4130  
                      l7398 27E6                        l5982 43D0                        l6782 3D38  
                      l6774 3CF6                        l6766 3CB2                        l6758 3C62  
                      l6598 4D6E                        l5990 15D6                        l6686 42C4  
                      l6694 4A72                        l6950 0DF0                        l6942 0D42  
                      l6934 0D22                        l6926 0C7C                        l6918 0BF6  
                      l6870 093A                        l6862 08AC                        l6854 0800  
                      l6838 077C                        l6790 061E                        l4998 39C0  
                      l7582 4384                        l7574 4358                        l7566 432C  
                      l7558 42F8                        l7750 1542                        l7742 14FA  
                      l7734 14AE                        l7726 147C                        l7718 1440  
                      l7670 12C2                        l7654 1236                        l7646 11EE  
                      l7638 11A2                        l7590 1022                        l7494 4166  
                      l7486 415A                        l7478 414E                        l5984 43EE  
                      l5976 43A0                        l6784 3D48                        l6776 3D08  
                      l6768 3CB8                        l5992 15E4                        l6696 4A92  
                      l6960 0E32                        l6952 0E0A                        l6944 0D4A  
                      l6928 0CD6                        l6936 0D26                        l6880 09D2  
                      l6864 08EA                        l6856 0804                        l6848 07A0  
                      l6792 062E                        l7584 4396                        l7576 436A  
                      l7568 433E                        l7760 1592                        l7752 154A  
                      l7744 14FE                        l7736 14CC                        l7728 1490  
                      l7680 1312                        l7672 12CA                        l7664 1264  
                      l7656 123E                        l7648 11F2                        l7496 4168  
                      l7488 415E                        l5986 4424                        l5978 43B4  
                      l6778 3D22                        l5994 15F2                        l6698 3282  
                      l6962 0E3A                        l6954 0E18                        l6970 0E5A  
                      l6946 0D56                        l6938 0D36                        l6890 0A06  
                      l6882 09DA                        l6866 08FE                        l6874 097C  
                      l6858 0838                        l6794 063C                        l7914 2B92  
                      l7762 159A                        l7754 154E                        l7746 151C  
                      l7738 14E0                        l7690 1362                        l7682 131A  
                      l7674 12CE                        l7666 129A                        l7658 1242  
                      l7594 1042                        l7498 416A                        l5996 15F4  
                      l6980 0EE0                        l6972 0E6C                        l6964 0E4A  
                      l6956 0E28                        l6948 0DD0                        l6892 0A1E  
                      l6884 09E2                        l6876 09B8                        l6868 0932  
                      l6796 0640                        l6788 0618                        l7916 2C4C  
                      l7764 159E                        l7756 156C                        l7748 1530  
                      l7692 136A                        l7684 131E                        l7676 12EC  
                      l7668 12B0                        l7596 1046                        l7588 1018  
                      l7780 48EE                        l7772 48BE                        l5998 1604  
                      l6990 0F5C                        l6982 0F16                        l6974 0E7E  
                      l6966 0E4E                        l6958 0E2C                        l6894 0A30  
                      l6886 09E6                        l6878 09C6                        l6798 0664  
                      l7918 2CCE                        l7766 15BC                        l7758 1580  
                      l7694 136E                        l7686 133C                        l7678 1300  
                      l7598 107C                        l7790 4926                        l7782 48F6  
                      l7774 48C2                        l6992 0F64                        l6984 0F1E  
                      l6976 0E82                        l6968 0E54                        l6888 09F8  
                      l6896 0A38                        l7768 15CC                        l7696 138C  
                      l7688 1350                        l7792 4938                        l7784 4908  
                      l7776 48D6                        l6994 0F72                        l6978 0E88  
                      l6986 0F22                        l6898 0A40                        l7698 13A0  
                      l7794 493E                        l7786 490A                        l7778 48E8  
                      l6996 0FA2                        l6988 0F40                        l7796 4946  
                      l7788 4912                        l6998 0FB0                        l7798 4958  
                      STR_1 0601                        STR_2 0601                        STR_3 060F  
                      STR_6 0613                        ?_ups 002C                        _IOCB 0F62  
                      _LATA 0F89                        _LATB 0F8A                        _LATD 0F8C  
                      _LATE 0F8D                        u7000 16CA                        u5400 393A  
                      u7001 16C6                        u5401 3936                        u7010 16D8  
                      u5410 3984                        u7011 16D4                        u5411 3980  
                      _PEIE 7F96                        u7100 1816                        u7020 1746  
                      u5420 39A2                        u7101 1812                        u7021 1742  
                      u5421 399E                        u7110 1824                        u7030 175E  
                      u5430 39B2                        u7111 1820                        u7031 1758  
                      u5431 39AE                        _RBIE 7F93                        u7200 196E  
                      u7120 1842                        u7040 1760                        u8000 3F74  
                      u5440 39C0                        _RBIF 7F90                        u7201 196A  
                      u7121 183E                        u8001 3F70                        u5441 39BC  
                      u7210 1980                        u7130 187A                        u7050 1788  
                      u8010 3F94                        u5450 39FA                        u5370 387A  
                      u7211 197C                        u7131 1876                        u7051 1784  
                      u8011 3F90                        u5451 39F6                        u5371 3876  
                      u7300 1A68                        u7220 1996                        u7140 18C0  
                      u7060 17A6                        u8020 3FA4                        u5460 3A08  
                      u5380 3888                        u7301 1A64                        u7221 1992  
                      u7141 18BC                        u7061 17A2                        u8021 3FA0  
                      u5461 3A04                        u5381 3884                        u8030 4A04  
                      u7310 1A84                        u7230 19AC                        u7150 18F6  
                      u7070 17C6                        u8110 42BA                        u5390 38E4  
                      u8031 4A00                        u7311 1A80                        u7231 19A8  
                      u7151 18F2                        u7071 17C2                        u8111 42B4  
                      u5391 38E0                        u9000 27E6                        u7320 4CAE  
                      u8040 4A5C                        u7400 2412                        u7240 19C0  
                      u7160 1906                        u7080 17D4                        u8120 42BC  
                      u8200 33AE                        u9001 27E2                        u7321 4CAA  
                      u8041 4A58                        u7401 240E                        u7241 19BC  
                      u7161 1902                        u7081 17D0                        u8105 4292  
                      u9010 27FC                        u8050 4D0E                        u7410 2488  
                      u7330 230A                        u7250 19DA                        u7170 1932  
                      u7090 17E4                        u8210 33CA                        u8130 4CF0  
                      _RBIP 7F88                        u9011 27F8                        u8051 4D0A  
                      u7411 2484                        u7331 2306                        u7251 19D6  
                      u7171 192E                        u7091 17E0                        u8211 33C6  
                      u8131 4CEC                        u9100 2900                        u9020 281A  
                      u8300 3C38                        u7500 25A2                        u7420 24AA  
                      u7340 231C                        u7260 1A14                        u7180 1942  
                      u8060 4210                        u8220 341E                        u8140 4A92  
                      u9101 28FC                        u9021 2816                        u8301 3C34  
                      u7501 259E                        u7421 24A6                        u7341 2318  
                      u7261 1A10                        u7181 193E                        u8205 33A4  
                      u8141 4A8E                        u9110 292C                        u9030 2846  
                      u8310 3C4E                        u7510 25B6                        u7430 24D4  
                      u7350 232C                        u7270 1A26                        u7190 195E  
                      u8070 422E                        u8230 343A                        u8150 32CC  
                      u9111 2928                        u9031 2842                        u8311 3C4A  
                      u7511 25B2                        u7431 24D0                        u7351 2328  
                      u7271 1A22                        u7191 195A                        u8071 422A  
                      u8231 3436                        u9120 294C                        u9040 2866  
                      u8320 3CF6                        u7520 25D0                        u7440 24F8  
                      u7360 2370                        u7600 1B28                        u7280 1A36  
                      u8080 4256                        u8240 3476                        u8160 32FA  
                      u8400 06E6                        u9200 4E4C                        u9121 2948  
                      u9041 2862                        u8321 3CF2                        u7521 25CC  
                      u7441 24F4                        u7361 236C                        u7601 1B24  
                      u7281 1A32                        u8081 4252                        u8065 4204  
                      u8241 3472                        u8225 3414                        u8161 32F6  
                      u8401 06E2                        u9201 4E48                        u9130 2962  
                      u9050 287C                        u8330 3D08                        u7530 2618  
                      u7450 250E                        u7370 2382                        u7610 1B38  
                      u7290 1A56                        u8090 4280                        u8170 331C  
                      u8250 4BCE                        u8410 0762                        u9210 42E0  
                      u9131 295E                        u9051 2878                        u8331 3D04  
                      u7531 2614                        u7451 250A                        u7371 237E  
                      u7611 1B34                        u7291 1A52                        u8091 427C  
                      u8171 3318                        u8155 32C2                        u8251 4BCA  
                      u8411 075E                        u9211 42DC                        u9140 2974  
                      u9060 288E                        u6900 43C6                        u8340 3D22  
                      u8260 3BE2                        u7540 2648                        u7460 252C  
                      u7380 2392                        u7700 1DDC                        u7620 1B6E  
                      u8500 09F8                        u8420 0772                        u9220 42F8  
                      u9300 103E                        u9141 2970                        u9061 288A  
                      u6901 43C2                        u8341 3D1E                        u8261 3BDC  
                      u7541 2644                        u7461 2528                        u7381 238E  
                      u7701 1DD8                        u7621 1B6A                        u8501 09F4  
                      u8421 076E                        u9221 42F4                        u9301 103A  
                      u9150 298A                        u9070 28AE                        u6910 43EE  
                      u8350 3D32                        u8270 3BE4                        u7550 2676  
                      u7470 254C                        u7390 23D2                        u7710 1DF6  
                      u7630 1B7E                        u8190 338A                        u8510 0A06  
                      u8430 07EC                        u9230 430A                        u9310 107C  
                      u9151 2986                        u9071 28AA                        u6911 43EA  
                      u8351 3D2E                        u7551 2672                        u7471 2548  
                      u7391 23CE                        u7711 1DF2                        u7631 1B7A  
                      u8191 3386                        u8511 0A02                        u8431 07E8  
                      u9231 4306                        u9311 1078                        u9160 29A0  
                      u9080 28C4                        u7800 45EA                        u6920 4424  
                      u8280 3BF6                        u7480 255E                        u7720 1E3E  
                      u7640 1CF8                        u7560 1AB4                        u8600 0E0A  
                      u8520 0A30                        u8440 0878                        u8360 063C  
                      u9240 432C                        u9400 11E6                        u9320 10A6  
                      u9161 299C                        u9081 28C0                        u7801 45E6  
                      u6921 4420                        u8281 3BF2                        u7481 255A  
                      u7721 1E3A                        u7561 1AB0                        u8185 3330  
                      u8601 0E06                        u8521 0A2C                        u8441 0874  
                      u8361 0638                        u9241 4328                        u9401 11E2  
                      u9321 10A2                        u9170 29CC                        u9090 28E4  
                      u7810 46C6                        u8290 3C0C                        u7490 258C  
                      u7730 1E6C                        u7650 1D52                        u7570 1AC6  
                      u6930 15F2                        u8186 333A                        u8610 0E18  
                      u8530 0B7A                        u8450 08AC                        u8370 0686  
                      u9250 433E                        u9410 1210                        u9330 10D0  
                      u9171 29C8                        u9091 28E0                        u7811 46C2  
                      u8291 3C08                        u7491 2588                        u7731 1E68  
                      u7651 1D4E                        u7571 1AC2                        u6931 15EE  
                      u8187 334A                        u8611 0E14                        u8531 0B76  
                      u8451 08A8                        u8371 0682                        u9251 433A  
                      u9411 120C                        u9331 10CC                        u9180 29EC  
                      u7820 46E0                        u7900 3FF6                        u7740 1EA6  
                      u7660 1D72                        u7580 1AD6                        u6940 1604  
                      u8620 0E6C                        u8540 0BE2                        u8460 08EA  
                      u8380 0696                        u8700 2A30                        u9260 4358  
                      u9500 138C                        u9420 1236                        u9340 10F6  
                      u9181 29E8                        u7821 46DC                        u7901 3FF2  
                      u7741 1EA2                        u7661 1D6E                        u7645 1CEE  
                      u7581 1AD2                        u6941 1600                        u8621 0E68  
                      u8541 0BDE                        u8461 08E6                        u8381 0692  
                      u8701 2A2C                        u9261 4354                        u9501 1388  
                      u9421 1232                        u9341 10F2                        u9190 2A02  
                      u7750 454A                        u7830 46FA                        u7910 4034  
                      u7670 1D84                        u7590 1B16                        u6950 1614  
                      u8630 0F40                        u8550 0C2A                        u8470 0978  
                      u8390 06D6                        u8710 2A72                        u9270 436A  
                      u9510 13B2                        u9430 1260                        u9350 1120  
                      u9191 29FE                        u7751 4546                        u7831 46F6  
                      u7911 4030                        u7671 1D80                        u7591 1B12  
                      u6951 1610                        u8631 0F3C                        u8551 0C26  
                      u8471 0974                        u8391 06D2                        u8711 2A6E  
                      u9271 4366                        u9511 13AE                        u9431 125C  
                      u9351 111C                        u7760 4564                        u7840 4718  
                      u7920 4052                        u7680 1DB2                        u6960 1656  
                      u8640 0F5C                        u8560 0C38                        u8480 09B0  
                      u8720 2AC8                        u8800 2FF2                        u9280 4384  
                      u9600 151C                        u9520 13DC                        u9440 129A  
                      u9360 1146                        u7761 4560                        u7841 4714  
                      u7921 404E                        u7681 1DAE                        u6961 1652  
                      u8641 0F58                        u8561 0C34                        u8481 09AC  
                      u8721 2AC4                        u8801 2FEE                        u9281 4380  
                      u9601 1518                        u9521 13D8                        u9441 1296  
                      u9361 1142                        u7770 458A                        u7850 472E  
                      u6890 43B4                        u7930 4072                        u7690 1DC8  
                      u6970 166C                        u8650 0FC2                        u8570 0CD6  
                      u8490 09C6                        u8730 2AE4                        u8810 3D7C  
                      u9290 4396                        u9610 1542                        u9530 1402  
                      u9450 12C2                        u9370 1170                        u7771 4586  
                      u7851 472A                        u6891 43B0                        u7931 406E  
                      u7691 1DC4                        u6971 1668                        u8651 0FBC  
                      u8571 0CD2                        u8491 09C2                        u8731 2AE0  
                      u8811 3D78                        u9291 4392                        u9611 153E  
                      u9531 13FE                        u9451 12BE                        u9371 116C  
                      u8900 26C2                        u7780 45A8                        u7860 4752  
                      u7940 40C2                        u6980 167E                        u8660 0FC4  
                      u8580 0D22                        u8740 2BCC                        u8820 3690  
                      u9620 156C                        u9540 142C                        u9460 12EC  
                      u9380 1196                        u9700 4958                        u8901 26BE  
                      u7781 45A4                        u7861 474E                        u7941 40BE  
                      u6981 167A                        u8581 0D1E                        u8741 2BC8  
                      u8821 368C                        u9621 1568                        u9541 1428  
                      u9461 12E8                        u9381 1192                        u9701 4954  
                      u8910 26E2                        u7790 45C4                        u7870 4842  
                      u7950 4D86                        u6990 168E                        u8670 0FD8  
                      u8590 0DD0                        u8750 2D00                        u8830 34AA  
                      u9630 1592                        u9550 1452                        u9470 1312  
                      u9390 11C0                        u8911 26DE                        u7791 45C0  
                      u7871 483E                        u7951 4D82                        u6991 168A  
                      u8671 0FD4                        u8591 0DCC                        u8751 2CFC  
                      u8831 34A6                        u9631 158E                        u9551 144E  
                      u9471 130E                        u9391 11BC                        u8920 2702  
                      u7880 4880                        u7960 3ED6                        u8680 449A  
                      u8760 4B72                        u9640 15BC                        u9560 147C  
                      u9480 133C                        u8840 4656                        u8921 26FE  
                      u7881 487C                        u7961 3ED2                        u8681 4496  
                      u8761 4B6E                        u9641 15B8                        u9561 1478  
                      u9481 1338                        u8841 4652                        u8930 272E  
                      u7890 48B4                        u7970 3F0A                        u8690 452C  
                      u8770 4D5E                        u9570 14A2                        u9490 1362  
                      u8850 46B0                        u9650 48D6                        u8931 272A  
                      u7891 48B0                        u8691 4528                        u8771 4D5A  
                      u9571 149E                        u9491 135E                        u8851 46AC  
                      u9651 48D2                        u8940 274E                        u7980 3F38  
                      u8780 2D7C                        u8860 4976                        u9580 14CC  
                      u9660 48E8                        u8941 274A                        u7981 3F34  
                      u8781 2D78                        u8861 4972                        u9581 14C8  
                      u9661 48E4                        u8950 276E                        u7990 3F4C  
                      u8790 2E98                        u8870 4DEC                        u9590 14F2  
                      u9670 4908                        u8951 276A                        u9807 4788  
                      u7991 3F48                        u7975 3F00                        u8791 2E94  
                      u8871 4DE8                        u9591 14EE                        u9671 4904  
                      u8960 278A                        u8880 269A                        u9680 4926  
                      u8961 2786                        u8881 2696                        u9817 47AA  
                      u9681 4922                        u8970 27A0                        u8890 26B0  
                      u9690 4938                        u8971 279C                        u8891 26AC  
                      u9827 47D2                        u9691 4934                        u8980 27B2  
                      u8981 27AE                        u9837 4800                        u8990 27C8  
                      u8991 27C4                        u9847 480A                        u9767 497E  
                      u9777 4DFA                        _TMR1 0FCE                        _TMR2 0FBC  
                      u9787 4E1A                        _TMR3 0FB2                        u9797 476C  
                      _TMR5 0F4F                        _PWMD 3498                        _PWMI 367E  
           __end_of_UART_Rx 3282                        _back 4E12                        abs@a 006A  
                      _dbuf 0146                        _flag 0145                        _labs 4A72  
                      _cont 0021                        _main 48BE                        _dtoa 3BD0  
                      _left 4EAA                        _mood 0138                        _prec 001B  
                      _ups2 4DD0                        pad@i 007B                        pad@p 0078  
                      _text 01EF                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf2 0FDF                        fsr1l 0FE1                        pad@w 007D  
                      fsr2l 0FD9                        btemp 0056               ___fpclassifyf 41CE  
                      prodh 0FF4                        prodl 0FF3                        start 00CC  
           ___fldiv@new_exp 009C                ___param_bank 0000                       ??_LCD 0064  
                     ??_PWM 00FC                       ??_abs 006C                       ??_pad 007A  
                     ??_ups 0064                       ?_PWMD 002C                       ?_PWMI 002C  
                     ?_back 002C               ___fltol@sign1 006C                       ?_labs 0064  
           __end_of___fladd 1A98                       ?_main 002C                       ?_dtoa 007F  
                     ?_left 002C             __end_of___fldiv 268A             __end_of___awdiv 45FC  
           __end_of___flneg 4DA8                       _CCPR1 0FBE                       _CCPR5 0F55  
           __end_of___awmod 4764                       ?_ups2 002C             __end_of___flmul 1EC4  
           __end_of___flsub 4C68             __end_of___fltol 3FC6             ___awdiv@divisor 0066  
                     _T1CON 0FCD                       _T2CON 0FBA                       _LATB0 7C50  
                     _LATB1 7C51                       _LATA4 7C4C                       _LATA5 7C4D  
                     _T3CON 0FB1                       _LATA6 7C4E                       _LATA7 7C4F  
                     _RC1IE 7CED                       _RC1IF 7CF5                       _RC1IP 7CFD  
                     _T5CON 0F4E                       i1l352 00BC                       i2l342 3276  
                     i2l334 3198             ___awdiv@counter 0068                vfpfcnvrt@fmt 00EF  
                     _PORTB 0F81                       _TRISA 0F92                       _TRISB 0F93  
                     _TRISD 0F95                       _TRISE 0F96                       _canal 002B  
                     _flag1 0144                       _flag2 0143                       _delay 0124  
                     _brake 4EB8                       _flags 0029         read_prec_or_width@c 0070  
       read_prec_or_width@n 0071                       _fputc 43A0             __end_of_forward 4E12  
                     _fputs 4C68                       _right 4E9C                       _text2 01E5  
                     _text3 0214                       _text4 0200                       _text5 010A  
                     _text6 0100                       labs@a 0064                       pad@fp 0074  
                     _width 0019                       _putch 4EC6                       _start 4966  
                     dtoa@d 0081                       dtoa@i 008A                       dtoa@p 0085  
                     dtoa@s 0089                       dtoa@w 0087            __end_of_Data1LCD 46B2  
          __end_of_Data2LCD 2FF4            __end_of_Data3LCD 4EC6            __end_of_Data4LCD 4EC4  
                     tablat 0FF5                _PWM_increase 268A                       ttemp5 0057  
                     ttemp6 005A                       ttemp7 005E                       status 0FD8  
                     wtemp8 0057             __end_of_sprintf 4C20              ?___fpclassifyf 0064  
             i2___flmul@grs 0047                __end_of_PWMD 367E                __end_of_PWMI 3864  
           __initialization 4ADA                __end_of_back 4E32                __end_of_labs 4ADA  
              __end_of_main 4966                __end_of_dtoa 3D6A                __end_of_left 4EB8  
              __end_of_ups2 4DF2                  _DutyCycle1 0015                  _DutyCycle2 0011  
                    ??_PWMD 00FC                      ??_PWMI 00FC                      ??_back 01E4  
                    ??_labs 0068                      ??_main 00FC                      ??_dtoa 0083  
                    ??_left 00FC                      ??_ups2 0064               __activetblptr 0002  
               ?i2___xxtofl 002C  __end_of_read_prec_or_width 4536                   ??_UART_Rx 0053  
                    ?_brake 002C                      _ADCON0 0FC2                      _ADCON1 0FC1  
                    _ADCON2 0FC0                      _CCP1IE 7CEA                      _CCP1IF 7CF2  
                    _CCP5IE 7BD2                      _CCP5IF 7BDA                      ?_fputc 0064  
                    ?_fputs 006D                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR2L 0F67                      _CCPR3L 0F5E                      ?_right 002C  
          ___awdiv@dividend 0064                      _ANSELA 0F38                      ?_putch 002C  
                    _ANSELB 0F39                      _ANSELC 0F3A                      _ANSELD 0F3B  
                    _ANSELE 0F3C                      ?_start 002C            __end_of_WriteLCD 4E6C  
                    i2l1201 1F88                      i2l1210 21F6                      i2l1211 21E4  
                    i2l1205 22EC                      i2l1208 217E                      i2l1218 22AE  
                    i2l1242 3A72                      i2l1245 3BCE                      i2l1256 3B66  
                    i2l1249 3B0A                      i1l7810 005C                      i1l7802 0026  
                    i1l7820 0096                      i1l7812 0070                      i1l7804 0034  
                    i1l7822 00BA                      i1l7806 0036                      i1l7814 007A  
                    i2l5600 1F42                      i1l7816 0088                      i1l7808 004E  
                    i2l5610 1F98                      i2l5602 1F52                      i1l7818 0090  
                    i2l5700 22D8                      i2l5620 1FD2                      i2l5612 1FA8  
                    i2l5604 1F62                      i2l5702 22DC                      i2l5630 2024  
                    i2l5622 1FE8                      i2l5606 1F72                      i2l5710 3A3C  
                    i2l5640 206A                      i2l5632 2032                      i2l5624 1FF4  
                    i2l5616 1FBC                      i2l5608 1F78                      i2l5720 3AB4  
                    i2l5712 3A82                      i2l5800 3084                      i2l5650 20D8  
                    i2l5642 2084                      i2l5634 203E                      i2l5626 200C  
                    i2l5618 1FC8                      i2l5730 3B3C                      i2l5722 3AC0  
                    i2l5714 3A98                      i2l5706 3A1E                      i2l5810 30D2  
                    i2l5802 3096                      i2l5660 216E                      i2l5652 2102  
                    i2l5644 2094                      i2l5636 204E                      i2l5628 2018  
                    i2l5580 1EDE                      i2l5740 3B7A                      i2l5732 3B48  
                    i2l5724 3AF2                      i2l5708 3A2E                      i2l5820 3114  
                    i2l5812 30DC                      i2l5804 30A4                      i2l5670 21AE  
                    i2l5662 217C                      i2l5654 2138                      i2l5646 20B0  
                    i2l5638 205A                      i2l5590 1F16                      i2l5582 1EE0  
                    i2l5742 3B9E                      i2l5734 3B56                      i2l5726 3AF4  
                    i2l5718 3AAC                      i2l5830 315C                      i2l5822 3126  
                    i2l5814 30EE                      i2l5806 30B6                      i2l5680 2220  
                    i2l5672 21DC                      i2l5664 218E                      i2l5656 2146  
                    i2l5648 20BC                      i2l5592 1F26                      i2l5584 1EF0  
                    i2l5576 1EC4                      i2l5744 3BAE                      i2l5736 3B74  
                    i2l5728 3B00                      i2l5832 3164                      i2l5824 3130  
                    i2l5816 30F8                      i2l5808 30C0                      i2l5840 3198  
                    i2l5690 2296                      i2l5682 224A                      i2l5666 219C  
                    i2l5658 2164                      i2l5594 1F2C                      i2l5586 1F00  
                    i2l5578 1ED0                      i2l5746 3BBC                      i2l5738 3B76  
                    i2l5850 3204                      i2l5842 31A6                      i2l5834 3176  
                    i2l5826 3142                      i2l5818 310A                      i2l5692 22B2  
                    i2l5676 2206                      i2l5684 224E                      i2l5668 21A0  
                    i2l5596 1F32                      i2l5588 1F10                      i2l5748 3BBE  
                    i2l5860 326C                      i2l5844 31AE                      i2l5852 3206  
                    i2l5836 317E                      i2l5828 314A                      i2l5694 22C2  
                    i2l5686 2268                      i2l5678 2212                      i2l5598 1F40  
                    i2l5862 3274                      i2l5854 3214                      i2l5846 31F4  
                    i2l5838 3190                      i2l5790 3032                      i2l5782 2FFC  
                    i2l5696 22D0                      i2l5688 227C                      i2l5856 321C  
                    i2l5848 31FC                      i2l5792 3040                      i2l5784 300A  
                    i2l5698 22D2                      i2l5858 3262                      i2l5794 3052  
                    i2l5786 300E                      i2l5796 3064                      i2l5788 3020  
                    i2l5798 3072                      _RCREG1 0FAE                      _RCSTA1 0FAB  
                    _OSCCON 0FD3                      _SPBRG1 0FAF                      _TMR3IE 7D01  
                    _TMR3IF 7D09                      _TMR3IP 7D11                      _TMR1ON 7E68  
                    _TMR2ON 7DD2                      _TMR3ON 7D88                      _TMR5ON 7A70  
          __end_of___xxtofl 3A1C                      _TXSTA1 0FAC                      _Manual 42CE  
              vfprintf@cfmt 01C7                      ___flge 3FC6                      ___fleq 4812  
                 ??___fladd 006C                      ___wmul 4DA8                   ??___fldiv 0093  
                 ??___awdiv 0068                   ??___flneg 0068                   ??___awmod 0068  
                 ??___flmul 007A                   ??___flsub 0093                   ??___fltol 0068  
                    _efgtoa 0618                      _buffer 0196                      _floorf 3282  
                    _memcpy 4B7E        read_prec_or_width@ap 006C                      clear_0 4B00  
                    clear_1 4B0C                      clear_2 4B18            ___awdiv@quotient 006A  
           ___awmod@divisor 0066                      isa$std 0001                      _sensor 0018  
           ___awmod@counter 0068                      pad@buf 0076                      dtoa@fp 007F  
                    _strcpy 4CB0                      _strlen 4D34                      fputc@c 0064  
                    fputs@c 0071                      fputs@i 0072                      fputs@s 006D  
                 ??_forward 01E4           __end_ofi2___flmul 22EE             ___fpclassifyf@e 006C  
           ___fpclassifyf@u 006E             ___fpclassifyf@x 0064                __mediumconst 0000  
             ??_SettingsLCD 0066            __end_of_settings 41CE                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 002C  
          __end_of_vfprintf 4B7E                   ??_sprintf 00FC              i2___flmul@aexp 004B  
            i2___flmul@bexp 004C              i2___flmul@sign 0046              i2___flmul@temp 0051  
            i2___flmul@prod 004D                  ___flge@ff1 008B                  ___flge@ff2 008F  
           ??___fpclassifyf 0068                ___xxtofl@arg 006E                ___xxtofl@exp 006D  
              ___xxtofl@val 0064                  ___fleq@ff1 0064                  ___fleq@ff2 0068  
                __accesstop 0060     __end_of__initialization 4B1E                WriteLCD@word 0066  
                ___flneg@f1 0064               ___rparam_used 0001                  ___fltol@f1 0064  
            __pcstackCOMRAM 002C                __pidataBANK1 4E88               __end_of_brake 4EC2  
             __end_of_fputc 446C               __end_of_fputs 4CB0               __end_of_right 4EAA  
             __end_of_putch 4EC8               __end_of_start 49F4                   ?_Data1LCD 002C  
                 ?_Data2LCD 002C                   ?_Data3LCD 002C                   ?_Data4LCD 002C  
                   ??_brake 0064                     ??_fputc 0068                     ??_fputs 0071  
                   ??_right 00FC                     ??_putch 0064                     ??_start 008B  
                   LCD@data 0065                  __pbssBANK1 0100                  __pbssBANK2 0200  
       __end_of_SettingsLCD 4E88                     ?_Manual 002C                     ?___flge 008B  
                   ?___fleq 0064                     ?___wmul 0064                     ?_efgtoa 00B8  
                   _CCP1CON 0FBD                     _CCP2CON 0F66                     _CCP3CON 0F5D  
                   ?_floorf 00A4                     _CCP5CON 0F54                     ?_memcpy 0064  
                 ?_WriteLCD 002C                     ?_sensor 002C                  ??_Data1LCD 0068  
                ??_Data2LCD 00FC                  ??_Data3LCD 0064                  ??_Data4LCD 0064  
                   ?_strcpy 0064                     ?_strlen 0064                   ?___xxtofl 0064  
                   _UART_Rx 0008                  _conversion 01BD                     __Hparam 0000  
                   __Lparam 0000                   ?_settings 002C                     ___fladd 15D6  
                   ___fldiv 22EE                     ___awdiv 4536                     ___flneg 4D6E  
                   ___awmod 46B2                     ___flmul 1A98                     ___flsub 4C20  
                   ___fltol 3EBE                   ?_vfprintf 01C1                __psmallconst 0600  
                   __pcinit 4ADA                  ??_WriteLCD 0066                     _binario 0023  
                   __ramtop 0600                     _digital 013E                     __ptext0 48BE  
                   __ptext1 40CC                     __ptext2 45FC                     __ptext3 1018  
                   __ptext4 4E32                     __ptext5 4966                     __ptext6 42CE  
                   __ptext7 4DD0                     __ptext8 4EB8                     __ptext9 4EC2  
         __end_of_automatic 15D6                     _forward 4DF2       read_prec_or_width@fmt 006A  
              ??i2___xxtofl 0030                  ??___xxtofl 0068            ___awmod@dividend 0064  
                   efgtoa@c 00BE                     efgtoa@d 00CC                     efgtoa@e 00D0  
                   efgtoa@f 00BA                     efgtoa@g 00E3                     efgtoa@h 00DA  
                   efgtoa@i 00D8                     efgtoa@l 00DE                     efgtoa@m 00CE  
                   efgtoa@n 00E7                     efgtoa@p 00C3                     efgtoa@t 00C5  
                   efgtoa@u 00E9                     efgtoa@w 00D2                 _SettingsLCD 4E6C  
                   _sprintf 4BD0                     _voltage 000D              __pintcode_body 2FF4  
      end_of_initialization 4B1E                     floorf@e 00B2                     floorf@m 00AE  
                   floorf@u 00B4                     floorf@x 00A4                     memcpy@d 006B  
                   memcpy@n 0068                     memcpy@s 006D                     fputc@fp 0066  
             __Lmediumconst 0000                     int_func 2FF4                     fputs@fp 006F  
        _read_prec_or_width 446C              i2___xxtofl@arg 0036              i2___xxtofl@exp 0035  
            i2___xxtofl@val 002C           __end_of_vfpfcnvrt 2D64                  efgtoa@mode 00CA  
                efgtoa@sign 00E2          __end_ofi2___xxtofl 3BD0                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 006A                  ??_settings 0068  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00F5                  ??_vfprintf 00FC                     strcpy@d 006A  
                   strlen@a 0066                     strcpy@s 0068                     strlen@s 0064  
               ___fladd@grs 0073               ___xxtofl@sign 006C                   _TRISCbits 0F94  
      ??_read_prec_or_width 006E                 ___fldiv@grs 009E                 ___fldiv@rem 0097  
                 i2___flmul 1EC4                 ___flmul@grs 0080              __end_of_Manual 43A0  
            __end_of___flge 40CC              __end_of___fleq 48BE                 vfpfcnvrt@ap 00F1  
               vfpfcnvrt@cp 00FA                 vfpfcnvrt@fp 00ED              __end_of___wmul 4DD0  
            __end_of_efgtoa 1018              __end_of_floorf 3498              __end_of_memcpy 4BD0  
                floorf@F526 0001              __end_of_sensor 00CC              __end_of_strcpy 4CF2  
            __end_of_strlen 4D6E         start_initialization 4ADA                 __end_of_LCD 4812  
               __end_of_PWM 3EBE                 __end_of_abs 4D34                 __end_of_pad 4A72  
               __end_of_ups 4E50                   _DutyCycle 012C                  ?i2___flmul 003A  
     __end_of___fpclassifyf 42CE                    ??_Manual 00FC                 Data2LCD@pwm 01E1  
               vfprintf@fmt 01C3                    ??___flge 0093                    ??___fleq 006C  
                  ??___wmul 0068                    ??_efgtoa 00BF                 __pdataBANK1 01E5  
                  ??_floorf 00A8                    ??_memcpy 006A                    ??_sensor 0060  
                  ??_strcpy 0068                    ??_strlen 0066                   ___fladd@a 0068  
                 ___fladd@b 0064                   ___fldiv@a 008F                   ___fldiv@b 008B  
                 ___flmul@a 0076                   ___flmul@b 0072                 __pbssCOMRAM 0001  
                 ___flsub@a 008F                   ___flsub@b 008B               __pcstackBANK0 0060  
             __pcstackBANK1 01C1                    ?_UART_Rx 002C               ?_PWM_increase 002C  
               _efgtoa$1195 00C7                   _dtoa$1164 0083                   __pintcode 0008  
                  ?___fladd 0064                    ?___fldiv 008B                    ?___awdiv 0064  
                  ?___flneg 0064                    ?___awmod 0064                    ?___flmul 0072  
                  ?___flsub 008B                    ?___fltol 0064                    UART_Rx@a 0055  
               __pintcodelo 0018                   _distance1 0009                   _distance2 0128  
               __smallconst 0600                    ?_forward 002C                   _automatic 1018  
              ?_SettingsLCD 002C                    ?_sprintf 01C9                 ??i2___flmul 0042  
            ??_PWM_increase 0064              ___wmul@product 0068                    _LATAbits 0F89  
                  _LATBbits 0F8A                    _LATDbits 0F8C                    i2u631_40 1EDE  
                  i2u631_41 1EDA                    i2u640_40 217C                    i2u632_40 1EF0  
                  i2u640_41 2178                    i2u632_41 1EEC                    i2u641_40 219C  
                  i2u633_40 1F00                    i2u641_41 2198                    i2u633_41 1EFC  
                  i2u642_40 21AE                    i2u634_40 1F40                    i2u650_40 3A2E  
                  i2u642_41 21AA                    i2u634_41 1F3C                    i2u650_41 3A2A  
                  i1u971_20 0034                    i1u971_21 0030                    i2u643_40 21DC  
                  i2u635_40 1F52                    i2u651_40 3A3C                    i2u643_41 21D8  
                  i2u635_41 1F4E                    i2u651_41 3A38                    i1u972_20 004E  
                  i1u972_21 004A                    i2u644_40 21F2                    i2u636_40 1F62  
                  i2u652_40 3A98                    i2u644_41 21EE                    i2u636_41 1F5E  
                  i2u652_41 3A94                    i1u973_20 0070                    i1u973_21 006C  
                  i2u645_40 2206                    i2u637_40 1F98                    i2u653_40 3AEE  
                  i2u645_41 2202                    i2u637_41 1F94                    i2u653_41 3AEA  
                  i1u974_20 0088                    i1u974_21 0084                    i2u646_40 2220  
                  i2u638_40 1FA8                    i2u654_40 3B38                    i2u670_40 3064  
                  i2u646_41 221C                    i2u638_41 1FA4                    i2u654_41 3B34  
                  i2u670_41 3060                    i1u975_20 00A6                    i1u975_21 00A0  
                  i2u647_40 2268                    i2u639_40 2122                    i2u655_40 3B56  
                  i2u671_40 3084                    i2u647_41 2264                    i2u655_41 3B52  
                  i2u671_41 3080                    i1u975_26 00A8                    i2u639_45 2118  
                  i2u648_40 2296                    i2u656_40 3B66                    i2u680_40 3176  
                  i2u672_40 3096                    i2u648_41 2292                    i2u656_41 3B62  
                  i2u680_41 3172                    i2u672_41 3092                    i2u649_40 22D0  
                  i2u657_40 3B74                    i2u681_40 3190                    i2u673_40 30B6  
                  i2u649_41 22CC                    i2u657_41 3B70                    i2u681_41 318C  
                  i2u673_41 30B2                    i2u658_40 3BAE                    i2u682_40 31A6  
                  i2u674_40 30D2                    i2u666_40 300A                    i2u658_41 3BAA  
                  i2u682_41 31A2                    i2u674_41 30CE                    i2u666_41 3006  
                  i2u659_40 3BBC                    i2u683_40 3214                    i2u675_40 30EE  
                  i2u667_40 3020                    i2u659_41 3BB8                    i2u683_41 3210  
                  i2u675_41 30EA                    i2u667_41 301C                    i2u676_40 310A  
                  i2u668_40 3032                    i2u676_41 3106                    i2u668_41 302E  
                  i2u677_40 3126                    i2u669_40 3052                    i2u677_41 3122  
                  i2u669_41 304E                    i2u678_40 3142                    i2u678_41 313E  
                  i2u679_40 315C                    i2u679_41 3158                    _RCONbits 0FD0  
                 _vfpfcnvrt 2A0C                    _Data1LCD 45FC                    _Data2LCD 2D64  
                  _Data3LCD 4EC4                    _Data4LCD 4EC2                  _ADCON0bits 0FC2  
         ___wmul@multiplier 0064                  ?_automatic 002C                 _conversion1 01B9  
               _conversion2 01B5                 _conversion3 01B1                 _conversion4 01AD  
                vfpfcnvrt@c 00F9                   copy_data0 4AEE                    __Hrparam 0000  
                 memcpy@tmp 006A                  vfprintf@ap 01C5                    __Lrparam 0000  
                vfprintf@fp 01C1                  ?_vfpfcnvrt 00ED                    _WriteLCD 4E50  
        ___fpclassifyf@F465 0005                  sprintf@fmt 01CB                    ___xxtofl 3864  
                  _digital1 013C                    _digital2 013A                    __ptext10 4EC4  
                  __ptext11 4E9C                    __ptext20 4D34                    __ptext12 3498  
                  __ptext21 4BD0                    __ptext13 4EAA                    __ptext30 3282  
                  __ptext22 4B2C                    __ptext14 367E                    __ptext31 41CE  
                  __ptext23 2A0C                    __ptext15 4DF2                    __ptext40 3BD0  
                  __ptext32 3EBE                    __ptext24 446C                    __ptext16 4E12  
                  __ptext41 49F4                    __ptext33 4C20                    __ptext25 4DA8  
                  __ptext17 3D6A                    __ptext50 4764                    __ptext42 4C68  
                  __ptext34 15D6                    __ptext26 0618                    __ptext18 3864  
                  __ptext51 268A                    __ptext43 43A0                    __ptext35 4D6E  
                  __ptext27 4CB0                    __ptext19 2D64                    __ptext44 4EC6  
                  __ptext36 1A98                    __ptext28 4B7E                    __ptext45 4CF2  
                  __ptext37 3FC6                    __ptext29 4A72                    __ptext54 3A1C  
                  __ptext46 46B2                    __ptext38 4812                    __ptext55 1EC4  
                  __ptext47 4536                    __ptext39 22EE                    __ptext48 4E50  
                  __ptext49 4E6C                  strcpy@dest 0064                    efgtoa@fp 00B8  
                  efgtoa@ne 00C1                    efgtoa@pp 00C9                    efgtoa@ou 00D4  
                  isa$xinst 0000                    _settings 40CC                    int$flags 0056  
                  _vfprintf 4B2C        __end_of_PWM_increase 2A0C                    memcpy@d1 0064  
                  memcpy@s1 0066                 ??_automatic 00FC                    intlevel1 0000  
                  intlevel2 0000                   sprintf@ap 01D3             i2___xxtofl@sign 0034  
                 strcpy@src 0066                 efgtoa@nmode 00CB                 ??_vfpfcnvrt 00F3  
                  sprintf@f 01D5                    sprintf@s 01C9             SettingsLCD@word 0066  
             ___fladd@signs 0070                ___fladd@aexp 0071                ___fladd@bexp 0072  
