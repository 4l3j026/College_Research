

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 11 23:56:01 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F46K22 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _ANSELC	set	3898
    59   000000                     _OSCCON	set	4051
    60   000000                     _INTCONbits	set	4082
    61   000000                     _LATCbits	set	3979
    62   000000                     _TRISCbits	set	3988
    63   000000                     _ANSELE	set	3900
    64   000000                     _ANSELD	set	3899
    65   000000                     _PIE1bits	set	3997
    66   000000                     _RCONbits	set	4048
    67   000000                     _TRISE	set	3990
    68   000000                     _TRISD	set	3989
    69   000000                     _LATE	set	3981
    70   000000                     _LATD	set	3980
    71   000000                     _RCSTAbits	set	4011
    72   000000                     _TXSTA1bits	set	4012
    73   000000                     _SPBRG	set	4015
    74   000000                     _PIR1bits	set	3998
    75   000000                     _BAUDCON1bits	set	4024
    76   000000                     _RCREG1	set	4014
    77                           
    78                           	psect	smallconst
    79   001000                     __psmallconst:
    80                           	callstack 0
    81   001000  00                 	db	0
    82   001001                     STR_1:
    83   001001  45                 	db	69	;'E'
    84   001002  53                 	db	83	;'S'
    85   001003  50                 	db	80	;'P'
    86   001004  31                 	db	49	;'1'
    87   001005  32                 	db	50	;'2'
    88   001006  46                 	db	70	;'F'
    89   001007  20                 	db	32
    90   001008  54                 	db	84	;'T'
    91   001009  65                 	db	101	;'e'
    92   00100A  73                 	db	115	;'s'
    93   00100B  74                 	db	116	;'t'
    94   00100C  20                 	db	32
    95   00100D  44                 	db	68	;'D'
    96   00100E  61                 	db	97	;'a'
    97   00100F  74                 	db	116	;'t'
    98   001010  61                 	db	97	;'a'
    99   001011  00                 	db	0
   100   001012  00                 	db	0	; dummy byte at the end
   101   000000                     
   102                           ; #config settings
   103                           
   104                           	psect	cinit
   105   0012EC                     __pcinit:
   106                           	callstack 0
   107   0012EC                     start_initialization:
   108                           	callstack 0
   109   0012EC                     __initialization:
   110                           	callstack 0
   111                           
   112                           ; Clear objects allocated to COMRAM (1 bytes)
   113   0012EC  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   114   0012EE                     end_of_initialization:
   115                           	callstack 0
   116   0012EE                     __end_of__initialization:
   117                           	callstack 0
   118   0012EE  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119   0012F0  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120   0012F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   121   0012F4  6EF8               	movwf	tblptru,c
   122   0012F6  0100               	movlb	0
   123   0012F8  EF3E  F009         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126   00001B                     __pbssCOMRAM:
   127                           	callstack 0
   128   00001B                     _Rx_Buffer:
   129                           	callstack 0
   130   00001B                     	ds	1
   131                           
   132                           	psect	cstackCOMRAM
   133   000001                     __pcstackCOMRAM:
   134                           	callstack 0
   135   000001                     ??i2_LCD_Instruction:
   136                           
   137                           ; 1 bytes @ 0x0
   138   000001                     	ds	1
   139   000002                     i2LCD_Instruction@Instruction:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x1
   143   000002                     	ds	1
   144   000003                     i2Send_Instruction_Data@Data:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x2
   148   000003                     	ds	1
   149   000004                     i2Send_Instruction_Data@Instruction:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x3
   153   000004                     	ds	1
   154   000005                     i2Send_String@String:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x4
   158   000005                     	ds	2
   159   000007                     ??i2_Send_String:
   160                           
   161                           ; 1 bytes @ 0x6
   162   000007                     	ds	2
   163   000009                     i2Send_String@i:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x8
   167   000009                     	ds	1
   168   00000A                     ??_Reception:
   169                           
   170                           ; 1 bytes @ 0x9
   171   00000A                     	ds	8
   172   000012                     ??_LCD_Instruction:
   173                           
   174                           ; 1 bytes @ 0x11
   175   000012                     	ds	1
   176   000013                     LCD_Instruction@Instruction:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x12
   180   000013                     	ds	1
   181   000014                     Send_Instruction_Data@Data:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x13
   185   000014                     	ds	1
   186   000015                     Send_Instruction_Data@Instruction:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x14
   190   000015                     	ds	1
   191   000016                     ??_Init_LCD:
   192   000016                     Send_String@String:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x15
   196   000016                     	ds	2
   197   000018                     ??_Send_String:
   198                           
   199                           ; 1 bytes @ 0x17
   200   000018                     	ds	2
   201   00001A                     Send_String@i:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x19
   205   00001A                     	ds	1
   206   00001B                     
   207                           ; 1 bytes @ 0x1A
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 19 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels required when called: 7
   233 ;; This function calls:
   234 ;;		_Configurations
   235 ;;		_Init_LCD
   236 ;;		_Send_Instruction_Data
   237 ;;		_Send_String
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text0
   244   00127C                     __ptext0:
   245                           	callstack 0
   246   00127C                     _main:
   247                           	callstack 24
   248   00127C                     
   249                           ;main.c: 21:     Configurations();
   250   00127C  ECDB  F008         	call	_Configurations	;wreg free
   251   001280                     
   252                           ;main.c: 22:     Init_LCD();
   253   001280  EC0A  F008         	call	_Init_LCD	;wreg free
   254   001284                     
   255                           ;main.c: 23:     Send_Instruction_Data(0, 0x01);
   256   001284  0E01               	movlw	1
   257   001286  6E14               	movwf	Send_Instruction_Data@Data^0,c
   258   001288  0E00               	movlw	0
   259   00128A  EC58  F009         	call	_Send_Instruction_Data
   260   00128E                     
   261                           ;main.c: 24:     Send_Instruction_Data(0, 0X80);
   262   00128E  0E80               	movlw	128
   263   001290  6E14               	movwf	Send_Instruction_Data@Data^0,c
   264   001292  0E00               	movlw	0
   265   001294  EC58  F009         	call	_Send_Instruction_Data
   266   001298                     
   267                           ;main.c: 25:     Send_String("ESP12F Test Data");
   268   001298  0E01               	movlw	low STR_1
   269   00129A  6E16               	movwf	Send_String@String^0,c
   270   00129C  5016               	movf	Send_String@String^0,w,c
   271   00129E  A4D8               	btfss	status,2,c
   272   0012A0  0E10               	movlw	high __smallconst
   273   0012A2  6E17               	movwf	(Send_String@String+1)^0,c
   274   0012A4  EC5B  F008         	call	_Send_String	;wreg free
   275   0012A8                     l53:
   276   0012A8  EF54  F009         	goto	l53
   277   0012AC  EF4D  F000         	goto	start
   278   0012B0                     __end_of_main:
   279                           	callstack 0
   280                           
   281 ;; *************** function _Send_String *****************
   282 ;; Defined at:
   283 ;;		line 46 in file "LCD_Library.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;  String          2   21[COMRAM] PTR unsigned char 
   286 ;;		 -> RAM(4095), STR_1(17), 
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  i               1   25[COMRAM] unsigned char 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;Total ram usage:        5 bytes
   303 ;; Hardware stack levels used: 1
   304 ;; Hardware stack levels required when called: 6
   305 ;; This function calls:
   306 ;;		_Send_Instruction_Data
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text1
   313   0010B6                     __ptext1:
   314                           	callstack 0
   315   0010B6                     _Send_String:
   316                           	callstack 24
   317   0010B6                     
   318                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   319   0010B6  0E00               	movlw	0
   320   0010B8  6E1A               	movwf	Send_String@i^0,c
   321   0010BA  EF7B  F008         	goto	l957
   322   0010BE                     l953:
   323                           
   324                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
   325   0010BE  501A               	movf	Send_String@i^0,w,c
   326   0010C0  2416               	addwf	Send_String@String^0,w,c
   327   0010C2  6E18               	movwf	??_Send_String^0,c
   328   0010C4  0E00               	movlw	0
   329   0010C6  2017               	addwfc	(Send_String@String+1)^0,w,c
   330   0010C8  6E19               	movwf	(??_Send_String+1)^0,c
   331   0010CA  C018  FFF6         	movff	??_Send_String,tblptrl
   332   0010CE  C019  FFF7         	movff	??_Send_String+1,tblptrh
   333   0010D2  0E00               	movlw	low (__smallconst shr (0+16))
   334   0010D4  6EF8               	movwf	tblptru,c
   335   0010D6  0E0F               	movlw	(high __ramtop+-1)
   336   0010D8  64F7               	cpfsgt	tblptrh,c
   337   0010DA  D003               	bra	u147
   338   0010DC  0008               	tblrd		*
   339   0010DE  50F5               	movf	tablat,w,c
   340   0010E0  D005               	bra	u140
   341   0010E2                     u147:
   342   0010E2  CFF6 FFE9          	movff	tblptrl,fsr0l
   343   0010E6  CFF7 FFEA          	movff	tblptrh,fsr0h
   344   0010EA  50EF               	movf	indf0,w,c
   345   0010EC                     u140:
   346   0010EC  6E14               	movwf	Send_Instruction_Data@Data^0,c
   347   0010EE  0E01               	movlw	1
   348   0010F0  EC58  F009         	call	_Send_Instruction_Data
   349   0010F4                     
   350                           ;LCD_Library.c: 52:     }
   351   0010F4  2A1A               	incf	Send_String@i^0,f,c
   352   0010F6                     l957:
   353   0010F6  501A               	movf	Send_String@i^0,w,c
   354   0010F8  2416               	addwf	Send_String@String^0,w,c
   355   0010FA  6E18               	movwf	??_Send_String^0,c
   356   0010FC  0E00               	movlw	0
   357   0010FE  2017               	addwfc	(Send_String@String+1)^0,w,c
   358   001100  6E19               	movwf	(??_Send_String+1)^0,c
   359   001102  C018  FFF6         	movff	??_Send_String,tblptrl
   360   001106  C019  FFF7         	movff	??_Send_String+1,tblptrh
   361   00110A  0E00               	movlw	low (__smallconst shr (0+16))
   362   00110C  6EF8               	movwf	tblptru,c
   363   00110E  0E0F               	movlw	(high __ramtop+-1)
   364   001110  64F7               	cpfsgt	tblptrh,c
   365   001112  D003               	bra	u157
   366   001114  0008               	tblrd		*
   367   001116  50F5               	movf	tablat,w,c
   368   001118  D005               	bra	u150
   369   00111A                     u157:
   370   00111A  CFF6 FFE9          	movff	tblptrl,fsr0l
   371   00111E  CFF7 FFEA          	movff	tblptrh,fsr0h
   372   001122  50EF               	movf	indf0,w,c
   373   001124                     u150:
   374   001124  0900               	iorlw	0
   375   001126  A4D8               	btfss	status,2,c
   376   001128  EF98  F008         	goto	u161
   377   00112C  EF9A  F008         	goto	u160
   378   001130                     u161:
   379   001130  EF5F  F008         	goto	l953
   380   001134                     u160:
   381   001134  0012               	return		;funcret
   382   001136                     __end_of_Send_String:
   383                           	callstack 0
   384                           
   385 ;; *************** function _Init_LCD *****************
   386 ;; Defined at:
   387 ;;		line 5 in file "LCD_Library.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;Total ram usage:        2 bytes
   406 ;; Hardware stack levels used: 1
   407 ;; Hardware stack levels required when called: 6
   408 ;; This function calls:
   409 ;;		_Send_Instruction_Data
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text2
   416   001014                     __ptext2:
   417                           	callstack 0
   418   001014                     _Init_LCD:
   419                           	callstack 24
   420   001014                     
   421                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   422   001014  0E03               	movlw	3
   423   001016  6E17               	movwf	(??_Init_LCD+1)^0,c
   424   001018  0E08               	movlw	8
   425   00101A  6E16               	movwf	??_Init_LCD^0,c
   426   00101C  0E77               	movlw	119
   427   00101E                     u237:
   428   00101E  2EE8               	decfsz	wreg,f,c
   429   001020  D7FE               	bra	u237
   430   001022  2E16               	decfsz	??_Init_LCD^0,f,c
   431   001024  D7FC               	bra	u237
   432   001026  2E17               	decfsz	(??_Init_LCD+1)^0,f,c
   433   001028  D7FA               	bra	u237
   434   00102A  0000               	nop	
   435   00102C                     
   436                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   437   00102C  0E30               	movlw	48
   438   00102E  6E14               	movwf	Send_Instruction_Data@Data^0,c
   439   001030  0E00               	movlw	0
   440   001032  EC58  F009         	call	_Send_Instruction_Data
   441   001036                     
   442                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   443   001036  0E1A               	movlw	26
   444   001038  6E16               	movwf	??_Init_LCD^0,c
   445   00103A  0EF8               	movlw	248
   446   00103C                     u247:
   447   00103C  2EE8               	decfsz	wreg,f,c
   448   00103E  D7FE               	bra	u247
   449   001040  2E16               	decfsz	??_Init_LCD^0,f,c
   450   001042  D7FC               	bra	u247
   451   001044  D000               	nop2	
   452                           
   453                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   454   001046  0E30               	movlw	48
   455   001048  6E14               	movwf	Send_Instruction_Data@Data^0,c
   456   00104A  0E00               	movlw	0
   457   00104C  EC58  F009         	call	_Send_Instruction_Data
   458   001050                     
   459                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   460   001050  0E1A               	movlw	26
   461   001052  6E16               	movwf	??_Init_LCD^0,c
   462   001054  0EF8               	movlw	248
   463   001056                     u257:
   464   001056  2EE8               	decfsz	wreg,f,c
   465   001058  D7FE               	bra	u257
   466   00105A  2E16               	decfsz	??_Init_LCD^0,f,c
   467   00105C  D7FC               	bra	u257
   468   00105E  D000               	nop2	
   469   001060                     
   470                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   471   001060  0E30               	movlw	48
   472   001062  6E14               	movwf	Send_Instruction_Data@Data^0,c
   473   001064  0E00               	movlw	0
   474   001066  EC58  F009         	call	_Send_Instruction_Data
   475   00106A                     
   476                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   477   00106A  0E02               	movlw	2
   478   00106C  6E14               	movwf	Send_Instruction_Data@Data^0,c
   479   00106E  0E00               	movlw	0
   480   001070  EC58  F009         	call	_Send_Instruction_Data
   481   001074                     
   482                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   483   001074  0E06               	movlw	6
   484   001076  6E14               	movwf	Send_Instruction_Data@Data^0,c
   485   001078  0E00               	movlw	0
   486   00107A  EC58  F009         	call	_Send_Instruction_Data
   487   00107E                     
   488                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   489   00107E  0E0F               	movlw	15
   490   001080  6E14               	movwf	Send_Instruction_Data@Data^0,c
   491   001082  0E00               	movlw	0
   492   001084  EC58  F009         	call	_Send_Instruction_Data
   493   001088                     
   494                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   495   001088  0E28               	movlw	40
   496   00108A  6E14               	movwf	Send_Instruction_Data@Data^0,c
   497   00108C  0E00               	movlw	0
   498   00108E  EC58  F009         	call	_Send_Instruction_Data
   499   001092                     
   500                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   501   001092  0E01               	movlw	1
   502   001094  6E14               	movwf	Send_Instruction_Data@Data^0,c
   503   001096  0E00               	movlw	0
   504   001098  EC58  F009         	call	_Send_Instruction_Data
   505   00109C                     
   506                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   507   00109C  0E03               	movlw	3
   508   00109E  6E17               	movwf	(??_Init_LCD+1)^0,c
   509   0010A0  0E08               	movlw	8
   510   0010A2  6E16               	movwf	??_Init_LCD^0,c
   511   0010A4  0E77               	movlw	119
   512   0010A6                     u267:
   513   0010A6  2EE8               	decfsz	wreg,f,c
   514   0010A8  D7FE               	bra	u267
   515   0010AA  2E16               	decfsz	??_Init_LCD^0,f,c
   516   0010AC  D7FC               	bra	u267
   517   0010AE  2E17               	decfsz	(??_Init_LCD+1)^0,f,c
   518   0010B0  D7FA               	bra	u267
   519   0010B2  0000               	nop	
   520   0010B4  0012               	return		;funcret
   521   0010B6                     __end_of_Init_LCD:
   522                           	callstack 0
   523                           
   524 ;; *************** function _Send_Instruction_Data *****************
   525 ;; Defined at:
   526 ;;		line 24 in file "LCD_Library.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  Instruction     1    wreg     unsigned char 
   529 ;;  Data            1   19[COMRAM] unsigned char 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  Instruction     1   20[COMRAM] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;Total ram usage:        2 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 5
   548 ;; This function calls:
   549 ;;		_LCD_Instruction
   550 ;; This function is called by:
   551 ;;		_main
   552 ;;		_Init_LCD
   553 ;;		_Send_String
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text3
   558   0012B0                     __ptext3:
   559                           	callstack 0
   560   0012B0                     _Send_Instruction_Data:
   561                           	callstack 24
   562                           
   563                           ;incstack = 0
   564                           ;Send_Instruction_Data@Instruction stored from wreg
   565   0012B0  6E15               	movwf	Send_Instruction_Data@Instruction^0,c
   566   0012B2                     
   567                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   568   0012B2  B015               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   569   0012B4  D002               	bra	u125
   570   0012B6  988B               	bcf	139,4,c	;volatile
   571   0012B8  D001               	bra	u126
   572   0012BA                     u125:
   573   0012BA  888B               	bsf	139,4,c	;volatile
   574   0012BC                     u126:
   575   0012BC                     
   576                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   577   0012BC  3814               	swapf	Send_Instruction_Data@Data^0,w,c
   578   0012BE  0B0F               	andlw	15
   579   0012C0  EC02  F009         	call	_LCD_Instruction
   580   0012C4                     
   581                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
   582   0012C4  5014               	movf	Send_Instruction_Data@Data^0,w,c
   583   0012C6  0B0F               	andlw	15
   584   0012C8  EC02  F009         	call	_LCD_Instruction
   585   0012CC  0012               	return		;funcret
   586   0012CE                     __end_of_Send_Instruction_Data:
   587                           	callstack 0
   588                           
   589 ;; *************** function _LCD_Instruction *****************
   590 ;; Defined at:
   591 ;;		line 33 in file "LCD_Library.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  Instruction     1    wreg     unsigned char 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  Instruction     1   18[COMRAM] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, status,2, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:        2 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; Hardware stack levels required when called: 4
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_Send_Instruction_Data
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text4
   620   001204                     __ptext4:
   621                           	callstack 0
   622   001204                     _LCD_Instruction:
   623                           	callstack 24
   624                           
   625                           ;incstack = 0
   626                           ;LCD_Instruction@Instruction stored from wreg
   627   001204  6E13               	movwf	LCD_Instruction@Instruction^0,c
   628   001206                     
   629                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   630   001206  8A8B               	bsf	139,5,c	;volatile
   631   001208                     
   632                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   633   001208  0E4E               	movlw	78
   634   00120A  6E12               	movwf	??_LCD_Instruction^0,c
   635   00120C  0EEB               	movlw	235
   636   00120E                     u277:
   637   00120E  2EE8               	decfsz	wreg,f,c
   638   001210  D7FE               	bra	u277
   639   001212  2E12               	decfsz	??_LCD_Instruction^0,f,c
   640   001214  D7FC               	bra	u277
   641   001216  0000               	nop	
   642   001218                     
   643                           ;LCD_Library.c: 37:     LATD = Instruction;
   644   001218  C013  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   645   00121C                     
   646                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   647   00121C  0E4E               	movlw	78
   648   00121E  6E12               	movwf	??_LCD_Instruction^0,c
   649   001220  0EEB               	movlw	235
   650   001222                     u287:
   651   001222  2EE8               	decfsz	wreg,f,c
   652   001224  D7FE               	bra	u287
   653   001226  2E12               	decfsz	??_LCD_Instruction^0,f,c
   654   001228  D7FC               	bra	u287
   655   00122A  0000               	nop	
   656   00122C                     
   657                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   658   00122C  9A8B               	bcf	139,5,c	;volatile
   659   00122E                     
   660                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   661   00122E  0E4E               	movlw	78
   662   001230  6E12               	movwf	??_LCD_Instruction^0,c
   663   001232  0EEB               	movlw	235
   664   001234                     u297:
   665   001234  2EE8               	decfsz	wreg,f,c
   666   001236  D7FE               	bra	u297
   667   001238  2E12               	decfsz	??_LCD_Instruction^0,f,c
   668   00123A  D7FC               	bra	u297
   669   00123C  0000               	nop	
   670   00123E  0012               	return		;funcret
   671   001240                     __end_of_LCD_Instruction:
   672                           	callstack 0
   673                           
   674 ;; *************** function _Configurations *****************
   675 ;; Defined at:
   676 ;;		line 35 in file "main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 4
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text5
   705   0011B6                     __ptext5:
   706                           	callstack 0
   707   0011B6                     _Configurations:
   708                           	callstack 26
   709   0011B6                     
   710                           ;main.c: 37:     OSCCON = 0x72;
   711   0011B6  0E72               	movlw	114
   712   0011B8  6ED3               	movwf	211,c	;volatile
   713                           
   714                           ;main.c: 39:     ANSELC = 0;
   715   0011BA  0E00               	movlw	0
   716   0011BC  010F               	movlb	15	; () banked
   717   0011BE  6F3A               	movwf	58,b	;volatile
   718                           
   719                           ;main.c: 40:     ANSELD = 0;
   720   0011C0  0E00               	movlw	0
   721   0011C2  6F3B               	movwf	59,b	;volatile
   722                           
   723                           ;main.c: 41:     ANSELE = 0;
   724   0011C4  0E00               	movlw	0
   725   0011C6  6F3C               	movwf	60,b	;volatile
   726   0011C8                     
   727                           ; BSR set to: 15
   728                           ;main.c: 45:     TRISCbits.RC4 = 0;
   729   0011C8  9894               	bcf	148,4,c	;volatile
   730   0011CA                     
   731                           ; BSR set to: 15
   732                           ;main.c: 46:     TRISCbits.RC5 = 0;
   733   0011CA  9A94               	bcf	148,5,c	;volatile
   734                           
   735                           ;main.c: 47:     TRISD = 0;
   736   0011CC  0E00               	movlw	0
   737   0011CE  6E95               	movwf	149,c	;volatile
   738                           
   739                           ;main.c: 48:     TRISE = 0;
   740   0011D0  0E00               	movlw	0
   741   0011D2  6E96               	movwf	150,c	;volatile
   742   0011D4                     
   743                           ; BSR set to: 15
   744                           ;main.c: 51:     LATCbits.LC4 = 0;
   745   0011D4  988B               	bcf	139,4,c	;volatile
   746   0011D6                     
   747                           ; BSR set to: 15
   748                           ;main.c: 52:     LATCbits.LC5 = 0;
   749   0011D6  9A8B               	bcf	139,5,c	;volatile
   750                           
   751                           ;main.c: 53:     LATD = 0;
   752   0011D8  0E00               	movlw	0
   753   0011DA  6E8C               	movwf	140,c	;volatile
   754                           
   755                           ;main.c: 54:     LATE = 0;
   756   0011DC  0E00               	movlw	0
   757   0011DE  6E8D               	movwf	141,c	;volatile
   758   0011E0                     
   759                           ; BSR set to: 15
   760                           ;main.c: 57:     INTCONbits.GIE = 1;
   761   0011E0  8EF2               	bsf	242,7,c	;volatile
   762   0011E2                     
   763                           ; BSR set to: 15
   764                           ;main.c: 58:     INTCONbits.PEIE = 1;
   765   0011E2  8CF2               	bsf	242,6,c	;volatile
   766   0011E4                     
   767                           ; BSR set to: 15
   768                           ;main.c: 59:     RCONbits.IPEN = 1;
   769   0011E4  8ED0               	bsf	208,7,c	;volatile
   770   0011E6                     
   771                           ; BSR set to: 15
   772                           ;main.c: 61:     PIE1bits.RC1IE = 1;
   773   0011E6  8A9D               	bsf	157,5,c	;volatile
   774   0011E8                     
   775                           ; BSR set to: 15
   776                           ;main.c: 62:     PIR1bits.RC1IF = 0;
   777   0011E8  9A9E               	bcf	158,5,c	;volatile
   778                           
   779                           ;main.c: 65:     SPBRG = 103;
   780   0011EA  0E67               	movlw	103
   781   0011EC  6EAF               	movwf	175,c	;volatile
   782   0011EE                     
   783                           ; BSR set to: 15
   784                           ;main.c: 66:     TRISCbits.RC6 = 1;
   785   0011EE  8C94               	bsf	148,6,c	;volatile
   786   0011F0                     
   787                           ; BSR set to: 15
   788                           ;main.c: 67:     TRISCbits.RC7 = 1;
   789   0011F0  8E94               	bsf	148,7,c	;volatile
   790   0011F2                     
   791                           ; BSR set to: 15
   792                           ;main.c: 70:     TXSTA1bits.TX91 = 0;
   793   0011F2  9CAC               	bcf	172,6,c	;volatile
   794   0011F4                     
   795                           ; BSR set to: 15
   796                           ;main.c: 71:     TXSTA1bits.TXEN1 = 1;
   797   0011F4  8AAC               	bsf	172,5,c	;volatile
   798   0011F6                     
   799                           ; BSR set to: 15
   800                           ;main.c: 72:     TXSTA1bits.SYNC1 = 0;
   801   0011F6  98AC               	bcf	172,4,c	;volatile
   802   0011F8                     
   803                           ; BSR set to: 15
   804                           ;main.c: 73:     TXSTA1bits.BRGH1 = 1;
   805   0011F8  84AC               	bsf	172,2,c	;volatile
   806   0011FA                     
   807                           ; BSR set to: 15
   808                           ;main.c: 76:     RCSTAbits.SPEN1 = 1;
   809   0011FA  8EAB               	bsf	171,7,c	;volatile
   810   0011FC                     
   811                           ; BSR set to: 15
   812                           ;main.c: 77:     RCSTAbits.RX91 = 0;
   813   0011FC  9CAB               	bcf	171,6,c	;volatile
   814   0011FE                     
   815                           ; BSR set to: 15
   816                           ;main.c: 78:     RCSTAbits.CREN1 = 1;
   817   0011FE  88AB               	bsf	171,4,c	;volatile
   818   001200                     
   819                           ; BSR set to: 15
   820                           ;main.c: 81:     BAUDCON1bits.BRG16 = 0;
   821   001200  96B8               	bcf	184,3,c	;volatile
   822   001202                     
   823                           ; BSR set to: 15
   824   001202  0012               	return		;funcret
   825   001204                     __end_of_Configurations:
   826                           	callstack 0
   827                           
   828 ;; *************** function _Reception *****************
   829 ;; Defined at:
   830 ;;		line 94 in file "main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        8 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; Hardware stack levels required when called: 3
   851 ;; This function calls:
   852 ;;		i2_Send_Instruction_Data
   853 ;;		i2_Send_String
   854 ;; This function is called by:
   855 ;;		Interrupt level 2
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	intcode
   860   000008                     __pintcode:
   861                           	callstack 0
   862   000008                     _Reception:
   863                           	callstack 24
   864                           
   865                           ; BSR set to: 15
   866                           ;incstack = 0
   867   000008  821C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   868   00000A  CFE9 F00C          	movff	fsr0l,??_Reception+2
   869   00000E  CFEA F00D          	movff	fsr0h,??_Reception+3
   870   000012  CFF6 F00E          	movff	tblptrl,??_Reception+4
   871   000016  CFF7 F00F          	movff	tblptrh,??_Reception+5
   872   00001A  CFF8 F010          	movff	tblptru,??_Reception+6
   873   00001E  CFF5 F011          	movff	tablat,??_Reception+7
   874   000022                     
   875                           ;main.c: 96:     if (PIR1bits.RC1IF) {
   876   000022  AA9E               	btfss	158,5,c	;volatile
   877   000024  EF16  F000         	goto	i2u20_41
   878   000028  EF18  F000         	goto	i2u20_40
   879   00002C                     i2u20_41:
   880   00002C  EF3F  F000         	goto	i2l68
   881   000030                     i2u20_40:
   882   000030                     
   883                           ;main.c: 98:         Rx_Buffer = RCREG1;
   884   000030  CFAE F01B          	movff	4014,_Rx_Buffer	;volatile
   885   000034                     
   886                           ;main.c: 100:         if (Rx_Buffer == 'a' || Rx_Buffer == 'b') {
   887   000034  0E61               	movlw	97
   888   000036  181B               	xorwf	_Rx_Buffer^0,w,c
   889   000038  B4D8               	btfsc	status,2,c
   890   00003A  EF21  F000         	goto	i2u21_41
   891   00003E  EF23  F000         	goto	i2u21_40
   892   000042                     i2u21_41:
   893   000042  EF2C  F000         	goto	i2l985
   894   000046                     i2u21_40:
   895   000046  0E62               	movlw	98
   896   000048  181B               	xorwf	_Rx_Buffer^0,w,c
   897   00004A  A4D8               	btfss	status,2,c
   898   00004C  EF2A  F000         	goto	i2u22_41
   899   000050  EF2C  F000         	goto	i2u22_40
   900   000054                     i2u22_41:
   901   000054  EF3F  F000         	goto	i2l68
   902   000058                     i2u22_40:
   903   000058                     i2l985:
   904                           
   905                           ;main.c: 102:             Send_Instruction_Data(0, 0x01);
   906   000058  0E01               	movlw	1
   907   00005A  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   908   00005C  0E00               	movlw	0
   909   00005E  EC67  F009         	call	i2_Send_Instruction_Data
   910                           
   911                           ;main.c: 103:             Send_Instruction_Data(0, 0xC0);
   912   000062  0EC0               	movlw	192
   913   000064  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   914   000066  0E00               	movlw	0
   915   000068  EC67  F009         	call	i2_Send_Instruction_Data
   916   00006C                     
   917                           ;main.c: 104:             Send_String(Rx_Buffer);
   918   00006C  501B               	movf	_Rx_Buffer^0,w,c
   919   00006E  6E0A               	movwf	??_Reception^0,c
   920   000070  6A0B               	clrf	(??_Reception+1)^0,c
   921   000072  C00A  F005         	movff	??_Reception,i2Send_String@String
   922   000076  C00B  F006         	movff	??_Reception+1,i2Send_String@String+1
   923   00007A  EC9B  F008         	call	i2_Send_String	;wreg free
   924   00007E                     i2l68:
   925   00007E  C011  FFF5         	movff	??_Reception+7,tablat
   926   000082  C010  FFF8         	movff	??_Reception+6,tblptru
   927   000086  C00F  FFF7         	movff	??_Reception+5,tblptrh
   928   00008A  C00E  FFF6         	movff	??_Reception+4,tblptrl
   929   00008E  C00D  FFEA         	movff	??_Reception+3,fsr0h
   930   000092  C00C  FFE9         	movff	??_Reception+2,fsr0l
   931   000096  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   932   000098  0011               	retfie		f
   933   00009A                     __end_of_Reception:
   934                           	callstack 0
   935                           
   936 ;; *************** function i2_Send_String *****************
   937 ;; Defined at:
   938 ;;		line 46 in file "LCD_Library.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  String          2    4[COMRAM] PTR unsigned char 
   941 ;;		 -> RAM(4095), STR_1(17), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  i               1    8[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        5 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 2
   960 ;; This function calls:
   961 ;;		i2_Send_Instruction_Data
   962 ;; This function is called by:
   963 ;;		_Reception
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text7
   968   001136                     __ptext7:
   969                           	callstack 0
   970   001136                     i2_Send_String:
   971                           	callstack 24
   972   001136                     
   973                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   974   001136  0E00               	movlw	0
   975   001138  6E09               	movwf	i2Send_String@i^0,c
   976   00113A  EFBB  F008         	goto	i2l965
   977   00113E                     i2l961:
   978                           
   979                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
   980   00113E  5009               	movf	i2Send_String@i^0,w,c
   981   001140  2405               	addwf	i2Send_String@String^0,w,c
   982   001142  6E07               	movwf	??i2_Send_String^0,c
   983   001144  0E00               	movlw	0
   984   001146  2006               	addwfc	(i2Send_String@String+1)^0,w,c
   985   001148  6E08               	movwf	(??i2_Send_String+1)^0,c
   986   00114A  C007  FFF6         	movff	??i2_Send_String,tblptrl
   987   00114E  C008  FFF7         	movff	??i2_Send_String+1,tblptrh
   988   001152  0E00               	movlw	low (__smallconst shr (0+16))
   989   001154  6EF8               	movwf	tblptru,c
   990   001156  0E0F               	movlw	(high __ramtop+-1)
   991   001158  64F7               	cpfsgt	tblptrh,c
   992   00115A  D003               	bra	i2u17_47
   993   00115C  0008               	tblrd		*
   994   00115E  50F5               	movf	tablat,w,c
   995   001160  D005               	bra	i2u17_40
   996   001162                     i2u17_47:
   997   001162  CFF6 FFE9          	movff	tblptrl,fsr0l
   998   001166  CFF7 FFEA          	movff	tblptrh,fsr0h
   999   00116A  50EF               	movf	indf0,w,c
  1000   00116C                     i2u17_40:
  1001   00116C  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
  1002   00116E  0E01               	movlw	1
  1003   001170  EC67  F009         	call	i2_Send_Instruction_Data
  1004   001174                     
  1005                           ;LCD_Library.c: 52:     }
  1006   001174  2A09               	incf	i2Send_String@i^0,f,c
  1007   001176                     i2l965:
  1008   001176  5009               	movf	i2Send_String@i^0,w,c
  1009   001178  2405               	addwf	i2Send_String@String^0,w,c
  1010   00117A  6E07               	movwf	??i2_Send_String^0,c
  1011   00117C  0E00               	movlw	0
  1012   00117E  2006               	addwfc	(i2Send_String@String+1)^0,w,c
  1013   001180  6E08               	movwf	(??i2_Send_String+1)^0,c
  1014   001182  C007  FFF6         	movff	??i2_Send_String,tblptrl
  1015   001186  C008  FFF7         	movff	??i2_Send_String+1,tblptrh
  1016   00118A  0E00               	movlw	low (__smallconst shr (0+16))
  1017   00118C  6EF8               	movwf	tblptru,c
  1018   00118E  0E0F               	movlw	(high __ramtop+-1)
  1019   001190  64F7               	cpfsgt	tblptrh,c
  1020   001192  D003               	bra	i2u18_47
  1021   001194  0008               	tblrd		*
  1022   001196  50F5               	movf	tablat,w,c
  1023   001198  D005               	bra	i2u18_40
  1024   00119A                     i2u18_47:
  1025   00119A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1026   00119E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1027   0011A2  50EF               	movf	indf0,w,c
  1028   0011A4                     i2u18_40:
  1029   0011A4  0900               	iorlw	0
  1030   0011A6  A4D8               	btfss	status,2,c
  1031   0011A8  EFD8  F008         	goto	i2u19_41
  1032   0011AC  EFDA  F008         	goto	i2u19_40
  1033   0011B0                     i2u19_41:
  1034   0011B0  EF9F  F008         	goto	i2l961
  1035   0011B4                     i2u19_40:
  1036   0011B4  0012               	return		;funcret
  1037   0011B6                     __end_ofi2_Send_String:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function i2_Send_Instruction_Data *****************
  1041 ;; Defined at:
  1042 ;;		line 24 in file "LCD_Library.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  Instruction     1    wreg     unsigned char 
  1045 ;;  Data            1    2[COMRAM] unsigned char 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  Instruction     1    3[COMRAM] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1057 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;Total ram usage:        2 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 1
  1064 ;; This function calls:
  1065 ;;		i2_LCD_Instruction
  1066 ;; This function is called by:
  1067 ;;		_Reception
  1068 ;;		i2_Send_String
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text8
  1073   0012CE                     __ptext8:
  1074                           	callstack 0
  1075   0012CE                     i2_Send_Instruction_Data:
  1076                           	callstack 24
  1077                           
  1078                           ;incstack = 0
  1079                           ;i2Send_Instruction_Data@Instruction stored from wreg
  1080   0012CE  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
  1081   0012D0                     
  1082                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
  1083   0012D0  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
  1084   0012D2  D002               	bra	i2u13_45
  1085   0012D4  988B               	bcf	139,4,c	;volatile
  1086   0012D6  D001               	bra	i2u13_46
  1087   0012D8                     i2u13_45:
  1088   0012D8  888B               	bsf	139,4,c	;volatile
  1089   0012DA                     i2u13_46:
  1090   0012DA                     
  1091                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
  1092   0012DA  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
  1093   0012DC  0B0F               	andlw	15
  1094   0012DE  EC20  F009         	call	i2_LCD_Instruction
  1095   0012E2                     
  1096                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
  1097   0012E2  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
  1098   0012E4  0B0F               	andlw	15
  1099   0012E6  EC20  F009         	call	i2_LCD_Instruction
  1100   0012EA  0012               	return		;funcret
  1101   0012EC                     __end_ofi2_Send_Instruction_Data:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function i2_LCD_Instruction *****************
  1105 ;; Defined at:
  1106 ;;		line 33 in file "LCD_Library.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  Instruction     1    wreg     unsigned char 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  Instruction     1    1[COMRAM] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;Total ram usage:        2 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		i2_Send_Instruction_Data
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text9
  1134   001240                     __ptext9:
  1135                           	callstack 0
  1136   001240                     i2_LCD_Instruction:
  1137                           	callstack 24
  1138                           
  1139                           ;incstack = 0
  1140                           ;i2LCD_Instruction@Instruction stored from wreg
  1141   001240  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
  1142   001242                     
  1143                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
  1144   001242  8A8B               	bsf	139,5,c	;volatile
  1145   001244                     
  1146                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1147   001244  0E4E               	movlw	78
  1148   001246  6E01               	movwf	??i2_LCD_Instruction^0,c
  1149   001248  0EEB               	movlw	235
  1150   00124A                     i2u30_47:
  1151   00124A  2EE8               	decfsz	wreg,f,c
  1152   00124C  D7FE               	bra	i2u30_47
  1153   00124E  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1154   001250  D7FC               	bra	i2u30_47
  1155   001252  0000               	nop	
  1156   001254                     
  1157                           ;LCD_Library.c: 37:     LATD = Instruction;
  1158   001254  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  1159   001258                     
  1160                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1161   001258  0E4E               	movlw	78
  1162   00125A  6E01               	movwf	??i2_LCD_Instruction^0,c
  1163   00125C  0EEB               	movlw	235
  1164   00125E                     i2u31_47:
  1165   00125E  2EE8               	decfsz	wreg,f,c
  1166   001260  D7FE               	bra	i2u31_47
  1167   001262  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1168   001264  D7FC               	bra	i2u31_47
  1169   001266  0000               	nop	
  1170   001268                     
  1171                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  1172   001268  9A8B               	bcf	139,5,c	;volatile
  1173   00126A                     
  1174                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1175   00126A  0E4E               	movlw	78
  1176   00126C  6E01               	movwf	??i2_LCD_Instruction^0,c
  1177   00126E  0EEB               	movlw	235
  1178   001270                     i2u32_47:
  1179   001270  2EE8               	decfsz	wreg,f,c
  1180   001272  D7FE               	bra	i2u32_47
  1181   001274  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1182   001276  D7FC               	bra	i2u32_47
  1183   001278  0000               	nop	
  1184   00127A  0012               	return		;funcret
  1185   00127C                     __end_ofi2_LCD_Instruction:
  1186                           	callstack 0
  1187                           
  1188                           	psect	rparam
  1189   000000                     
  1190                           	psect	temp
  1191   00001C                     btemp:
  1192                           	callstack 0
  1193   00001C                     	ds	1
  1194   000000                     int$flags	set	btemp
  1195   000000                     wtemp8	set	btemp+1
  1196   000000                     ttemp5	set	btemp+1
  1197   000000                     ttemp6	set	btemp+4
  1198   000000                     ttemp7	set	btemp+8
  1199                           
  1200                           	psect	config
  1201                           
  1202                           ; Padding undefined space
  1203   300000                     	org	3145728
  1204   300000  FF                 	db	255
  1205                           
  1206                           ;Config register CONFIG1H @ 0x300001
  1207                           ;	Oscillator Selection bits
  1208                           ;	FOSC = INTIO67, Internal oscillator block
  1209                           ;	4X PLL Enable
  1210                           ;	PLLCFG = OFF, Oscillator used directly
  1211                           ;	Primary clock enable bit
  1212                           ;	PRICLKEN = ON, Primary clock is always enabled
  1213                           ;	Fail-Safe Clock Monitor Enable bit
  1214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1215                           ;	Internal/External Oscillator Switchover bit
  1216                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1217   300001                     	org	3145729
  1218   300001  28                 	db	40
  1219                           
  1220                           ;Config register CONFIG2L @ 0x300002
  1221                           ;	Power-up Timer Enable bit
  1222                           ;	PWRTEN = OFF, Power up timer disabled
  1223                           ;	Brown-out Reset Enable bits
  1224                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1225                           ;	Brown Out Reset Voltage bits
  1226                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1227   300002                     	org	3145730
  1228   300002  1F                 	db	31
  1229                           
  1230                           ;Config register CONFIG2H @ 0x300003
  1231                           ;	Watchdog Timer Enable bits
  1232                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1233                           ;	Watchdog Timer Postscale Select bits
  1234                           ;	WDTPS = 32768, 1:32768
  1235   300003                     	org	3145731
  1236   300003  3C                 	db	60
  1237                           
  1238                           ; Padding undefined space
  1239   300004                     	org	3145732
  1240   300004  FF                 	db	255
  1241                           
  1242                           ;Config register CONFIG3H @ 0x300005
  1243                           ;	CCP2 MUX bit
  1244                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1245                           ;	PORTB A/D Enable bit
  1246                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1247                           ;	P3A/CCP3 Mux bit
  1248                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1249                           ;	HFINTOSC Fast Start-up
  1250                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1251                           ;	Timer3 Clock input mux bit
  1252                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1253                           ;	ECCP2 B output mux bit
  1254                           ;	P2BMX = PORTD2, P2B is on RD2
  1255                           ;	MCLR Pin Enable bit
  1256                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1257   300005                     	org	3145733
  1258   300005  BB                 	db	187
  1259                           
  1260                           ;Config register CONFIG4L @ 0x300006
  1261                           ;	Stack Full/Underflow Reset Enable bit
  1262                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1263                           ;	Single-Supply ICSP Enable bit
  1264                           ;	LVP = OFF, Single-Supply ICSP disabled
  1265                           ;	Extended Instruction Set Enable bit
  1266                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1267                           ;	Background Debug
  1268                           ;	DEBUG = 0x1, unprogrammed default
  1269   300006                     	org	3145734
  1270   300006  81                 	db	129
  1271                           
  1272                           ; Padding undefined space
  1273   300007                     	org	3145735
  1274   300007  FF                 	db	255
  1275                           
  1276                           ;Config register CONFIG5L @ 0x300008
  1277                           ;	Code Protection Block 0
  1278                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1279                           ;	Code Protection Block 1
  1280                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1281                           ;	Code Protection Block 2
  1282                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1283                           ;	Code Protection Block 3
  1284                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1285   300008                     	org	3145736
  1286   300008  0F                 	db	15
  1287                           
  1288                           ;Config register CONFIG5H @ 0x300009
  1289                           ;	Boot Block Code Protection bit
  1290                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1291                           ;	Data EEPROM Code Protection bit
  1292                           ;	CPD = OFF, Data EEPROM not code-protected
  1293   300009                     	org	3145737
  1294   300009  C0                 	db	192
  1295                           
  1296                           ;Config register CONFIG6L @ 0x30000A
  1297                           ;	Write Protection Block 0
  1298                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1299                           ;	Write Protection Block 1
  1300                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1301                           ;	Write Protection Block 2
  1302                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1303                           ;	Write Protection Block 3
  1304                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1305   30000A                     	org	3145738
  1306   30000A  0F                 	db	15
  1307                           
  1308                           ;Config register CONFIG6H @ 0x30000B
  1309                           ;	Configuration Register Write Protection bit
  1310                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1311                           ;	Boot Block Write Protection bit
  1312                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1313                           ;	Data EEPROM Write Protection bit
  1314                           ;	WRTD = OFF, Data EEPROM not write-protected
  1315   30000B                     	org	3145739
  1316   30000B  E0                 	db	224
  1317                           
  1318                           ;Config register CONFIG7L @ 0x30000C
  1319                           ;	Table Read Protection Block 0
  1320                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1321                           ;	Table Read Protection Block 1
  1322                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1323                           ;	Table Read Protection Block 2
  1324                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1325                           ;	Table Read Protection Block 3
  1326                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1327   30000C                     	org	3145740
  1328   30000C  0F                 	db	15
  1329                           
  1330                           ;Config register CONFIG7H @ 0x30000D
  1331                           ;	Boot Block Table Read Protection bit
  1332                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1333   30000D                     	org	3145741
  1334   30000D  40                 	db	64
  1335                           tosu	equ	0xFFF
  1336                           tosh	equ	0xFFE
  1337                           tosl	equ	0xFFD
  1338                           stkptr	equ	0xFFC
  1339                           pclatu	equ	0xFFB
  1340                           pclath	equ	0xFFA
  1341                           pcl	equ	0xFF9
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           prodh	equ	0xFF4
  1347                           prodl	equ	0xFF3
  1348                           indf0	equ	0xFEF
  1349                           postinc0	equ	0xFEE
  1350                           postdec0	equ	0xFED
  1351                           preinc0	equ	0xFEC
  1352                           plusw0	equ	0xFEB
  1353                           fsr0h	equ	0xFEA
  1354                           fsr0l	equ	0xFE9
  1355                           wreg	equ	0xFE8
  1356                           indf1	equ	0xFE7
  1357                           postinc1	equ	0xFE6
  1358                           postdec1	equ	0xFE5
  1359                           preinc1	equ	0xFE4
  1360                           plusw1	equ	0xFE3
  1361                           fsr1h	equ	0xFE2
  1362                           fsr1l	equ	0xFE1
  1363                           bsr	equ	0xFE0
  1364                           indf2	equ	0xFDF
  1365                           postinc2	equ	0xFDE
  1366                           postdec2	equ	0xFDD
  1367                           preinc2	equ	0xFDC
  1368                           plusw2	equ	0xFDB
  1369                           fsr2h	equ	0xFDA
  1370                           fsr2l	equ	0xFD9
  1371                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Reception in COMRAM

    _Reception->i2_Send_String
    i2_Send_String->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Reception in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Reception in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Reception in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Reception in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Reception in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Reception in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Reception in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Reception in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Reception in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Reception in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Reception in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Reception in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Reception in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Reception in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Reception in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Reception in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3267
                     _Configurations
                           _Init_LCD
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          5     3      2    1233
                                             21 COMRAM     5     3      2
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0    1017
                                             21 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1    1017
                                             19 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Reception                                            8     8      0     448
                                              9 COMRAM     8     8      0
            i2_Send_Instruction_Data
                      i2_Send_String
 ---------------------------------------------------------------------------------
 (5) i2_Send_String                                        5     3      2     282
                                              4 COMRAM     5     3      2
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (6) i2_Send_Instruction_Data                              2     1      1     166
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (7) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Send_Instruction_Data
   _Send_String
     _Send_Instruction_Data

 _Reception (ROOT)
   i2_Send_Instruction_Data
     i2_LCD_Instruction
   i2_Send_String
     i2_Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      1B       1       28.7%
BITBIGSFRlhll       4E      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        6      0       0      44        0.0%
BITBIGSFRlhhll       6      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      47        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 11 23:56:01 2024

                                l53 12A8                                  l54 12A8  
                                l81 10B4                                  l59 1202  
                                l84 12CC                                  l93 1134  
                                l87 123E                   Send_String@String 0016  
                               l811 11D4                                 l821 11E6  
                               l813 11D6                                 l805 11B6  
                               l831 11F4                                 l823 11E8  
                               l815 11E0                                 l807 11C8  
                               l841 11FE                                 l833 11F6  
                               l825 11EE                                 l817 11E2  
                               l809 11CA                                 l921 12C4  
                               l843 1200                                 l835 11F8  
                               l827 11F0                                 l819 11E4  
                               l771 1208                                 l931 102C  
                               l837 11FA                                 l829 11F2  
                               l773 1218                                 l917 12B2  
                               l941 1074                                 l933 1036  
                               l839 11FC                                 l775 121C  
                               l919 12BC                                 l943 107E  
                               l935 1050                                 l951 10B6  
                               l777 122C                                 l769 1206  
                               l945 1088                                 l937 1060  
                               l929 1014                                 l953 10BE  
                               l779 122E                                 l947 1092  
                               l939 106A                                 l955 10F4  
                               l971 1284                                 l949 109C  
                               l957 10F6                                 l973 128E  
                               l975 1298                                 l967 127C  
                               l969 1280                                 u140 10EC  
                               u125 12BA                                 u126 12BC  
                               u150 1124                                 u160 1134  
                               u161 1130                                 u147 10E2  
                               u237 101E                                 u157 111A  
                               u247 103C                                 u257 1056  
                               u267 10A6                                 u277 120E  
                               u287 1222                                 u297 1234  
                    ?i2_Send_String 0005         i2Send_Instruction_Data@Data 0003  
                               wreg 0FE8                          _TXSTA1bits 0FAC  
                              STR_1 1001                                _LATD 0F8C  
                              _LATE 0F8D                                i2l84 12EA  
                              i2l68 007E                                i2l93 11B4  
                              i2l87 127A                                _main 127C  
                              fsr0h 0FEA                                indf0 0FEF  
                              fsr0l 0FE9                                btemp 001C  
                              start 009A                        ___param_bank 0000  
                   _LCD_Instruction 1204    Send_Instruction_Data@Instruction 0015  
i2Send_Instruction_Data@Instruction 0004                        _BAUDCON1bits 0FB8  
                             ?_main 0001                               i2l911 1258  
                             i2l913 1268                               i2l905 1242  
                             i2l915 126A                               i2l907 1244  
                             i2l923 12D0                               i2l909 1254  
                             i2l925 12DA                               i2l927 12E2  
                             i2l961 113E                               i2l963 1174  
                             i2l965 1176                               i2l981 0034  
                             i2l959 1136                               i2l983 0046  
                             i2l985 0058                               i2l977 0022  
                             i2l987 006C                               i2l979 0030  
                             _SPBRG 0FAF                               _TRISD 0F95  
                             _TRISE 0F96        i2LCD_Instruction@Instruction 0002  
                             tablat 0FF5                               ttemp5 001D  
                             ttemp6 0020                               ttemp7 0024  
                             status 0FD8                               wtemp8 001D  
                   __initialization 12EC                        __end_of_main 12B0  
                  __end_of_Init_LCD 10B6               _Send_Instruction_Data 12B0  
                   ??i2_Send_String 0007                              ??_main 001B  
                     ??_Send_String 0018                       __activetblptr 0002  
                            _ANSELC 0F3A                              _ANSELD 0F3B  
                            _ANSELE 0F3C                              _RCREG1 0FAE  
        LCD_Instruction@Instruction 0013                              _OSCCON 0FD3  
           __end_of_LCD_Instruction 1240                              isa$std 0001  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
               __end_of_Send_String 1136                          __accesstop 0060  
           __end_of__initialization 12EE                       ___rparam_used 0001  
                    __pcstackCOMRAM 0001              ?_Send_Instruction_Data 0014  
                 __end_of_Reception 009A                           ?_Init_LCD 0001  
                  ?_LCD_Instruction 0001             i2_Send_Instruction_Data 12CE  
                       _Send_String 10B6                             i2u20_40 0030  
                           i2u20_41 002C                             i2u21_40 0046  
                           i2u21_41 0042                             i2u13_45 12D8  
                           i2u13_46 12DA                             i2u22_40 0058  
                           i2u22_41 0054                             i2u30_47 124A  
                           i2u31_47 125E                             i2u32_47 1270  
                           i2u17_40 116C                             i2u17_47 1162  
                           i2u18_40 11A4                             i2u18_47 119A  
                           i2u19_40 11B4                             i2u19_41 11B0  
                        ??_Init_LCD 0016                             __Hparam 0000  
                           __Lparam 0000                        __psmallconst 1000  
                           __pcinit 12EC                             __ramtop 1000  
                           __ptext0 127C                             __ptext1 10B6  
                           __ptext2 1014                             __ptext3 12B0  
                           __ptext4 1204                             __ptext5 11B6  
                           __ptext7 1136                             __ptext8 12CE  
                           __ptext9 1240                end_of_initialization 12EE  
                     __Lmediumconst 0000           ??i2_Send_Instruction_Data 0004  
                         _RCSTAbits 0FAB               __end_ofi2_Send_String 11B6  
                         _TRISCbits 0F94             ??_Send_Instruction_Data 0015  
               start_initialization 12EC                        Send_String@i 001A  
         Send_Instruction_Data@Data 0014                      _Configurations 11B6  
                         _Reception 0008                           _Rx_Buffer 001B  
                      ?_Send_String 0016                         __pbssCOMRAM 001B  
            __end_of_Configurations 1204                          ?_Reception 0001  
                         __pintcode 0008                         __smallconst 1000  
                   ?_Configurations 0001                 i2Send_String@String 0005  
                          _LATCbits 0F8B                            _PIE1bits 0F9D  
                          _PIR1bits 0F9E                            _RCONbits 0FD0  
                 i2_LCD_Instruction 1240                  ?i2_LCD_Instruction 0001  
                    i2Send_String@i 0009                 ??i2_LCD_Instruction 0001  
                       ??_Reception 000A                            _Init_LCD 1014  
                          __Hrparam 0000                            __Lrparam 0000  
     __end_of_Send_Instruction_Data 12CE           __end_ofi2_LCD_Instruction 127C  
                 ??_LCD_Instruction 0012            ?i2_Send_Instruction_Data 0003  
                          isa$xinst 0000                            int$flags 001C  
                        _INTCONbits 0FF2                            intlevel2 0000  
                  ??_Configurations 0012                       i2_Send_String 1136  
   __end_ofi2_Send_Instruction_Data 12EC  
