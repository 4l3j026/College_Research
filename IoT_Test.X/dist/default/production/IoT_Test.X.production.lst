

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 12 16:36:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     _ANSELC	set	3898
    58   000000                     _OSCCON	set	4051
    59   000000                     _INTCONbits	set	4082
    60   000000                     _LATCbits	set	3979
    61   000000                     _TRISCbits	set	3988
    62   000000                     _ANSELD	set	3899
    63   000000                     _PIE1bits	set	3997
    64   000000                     _RCONbits	set	4048
    65   000000                     _TRISD	set	3989
    66   000000                     _LATD	set	3980
    67   000000                     _RCSTAbits	set	4011
    68   000000                     _TXSTA1bits	set	4012
    69   000000                     _SPBRG	set	4015
    70   000000                     _PIR1bits	set	3998
    71   000000                     _BAUDCON1bits	set	4024
    72   000000                     _RCREG1	set	4014
    73                           
    74                           	psect	smallconst
    75   001000                     __psmallconst:
    76                           	callstack 0
    77   001000  00                 	db	0
    78   001001                     STR_1:
    79   001001  45                 	db	69	;'E'
    80   001002  53                 	db	83	;'S'
    81   001003  50                 	db	80	;'P'
    82   001004  31                 	db	49	;'1'
    83   001005  32                 	db	50	;'2'
    84   001006  46                 	db	70	;'F'
    85   001007  20                 	db	32
    86   001008  54                 	db	84	;'T'
    87   001009  65                 	db	101	;'e'
    88   00100A  73                 	db	115	;'s'
    89   00100B  74                 	db	116	;'t'
    90   00100C  20                 	db	32
    91   00100D  44                 	db	68	;'D'
    92   00100E  61                 	db	97	;'a'
    93   00100F  74                 	db	116	;'t'
    94   001010  61                 	db	97	;'a'
    95   001011  00                 	db	0
    96   001012  00                 	db	0	; dummy byte at the end
    97   000000                     
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   0011DC                     __pcinit:
   102                           	callstack 0
   103   0011DC                     start_initialization:
   104                           	callstack 0
   105   0011DC                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (1 bytes)
   109   0011DC  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   110   0011DE                     end_of_initialization:
   111                           	callstack 0
   112   0011DE                     __end_of__initialization:
   113                           	callstack 0
   114   0011DE  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115   0011E0  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116   0011E2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   117   0011E4  6EF8               	movwf	tblptru,c
   118   0011E6  0E10               	movlw	high __Lsmallconst
   119   0011E8  6EF7               	movwf	tblptrh,c
   120   0011EA  0100               	movlb	0
   121   0011EC  EF9C  F008         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124   00000A                     __pbssCOMRAM:
   125                           	callstack 0
   126   00000A                     _Rx_Buffer:
   127                           	callstack 0
   128   00000A                     	ds	1
   129                           
   130                           	psect	cstackCOMRAM
   131   000001                     __pcstackCOMRAM:
   132                           	callstack 0
   133   000001                     i2LCD_Instruction@Instruction:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x0
   137   000001                     	ds	1
   138   000002                     i2Send_Instruction_Data@Data:
   139                           	callstack 0
   140                           
   141                           ; 1 bytes @ 0x1
   142   000002                     	ds	1
   143   000003                     i2Send_Instruction_Data@Instruction:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x2
   147   000003                     	ds	1
   148   000004                     LCD_Instruction@Instruction:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0x3
   152   000004                     	ds	1
   153   000005                     Send_Instruction_Data@Data:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x4
   157   000005                     	ds	1
   158   000006                     Send_Instruction_Data@Instruction:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x5
   162   000006                     	ds	1
   163   000007                     ??_Init_LCD:
   164   000007                     Send_String@String:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x6
   168   000007                     	ds	1
   169   000008                     ??_Send_String:
   170                           
   171                           ; 1 bytes @ 0x7
   172   000008                     	ds	1
   173   000009                     Send_String@i:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x8
   177   000009                     	ds	1
   178   00000A                     
   179                           ; 1 bytes @ 0x9
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 19 in file "main.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called: 6
   205 ;; This function calls:
   206 ;;		_Configurations
   207 ;;		_Init_LCD
   208 ;;		_Send_Instruction_Data
   209 ;;		_Send_String
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216   001138                     __ptext0:
   217                           	callstack 0
   218   001138                     _main:
   219                           	callstack 25
   220   001138                     
   221                           ;main.c: 21:     Configurations();
   222   001138  EC5B  F008         	call	_Configurations	;wreg free
   223   00113C                     
   224                           ;main.c: 22:     Init_LCD();
   225   00113C  EC0A  F008         	call	_Init_LCD	;wreg free
   226   001140                     
   227                           ;main.c: 23:     Send_Instruction_Data(0, 0x01);
   228   001140  0E01               	movlw	1
   229   001142  6E05               	movwf	Send_Instruction_Data@Data^0,c
   230   001144  0E00               	movlw	0
   231   001146  ECB2  F008         	call	_Send_Instruction_Data
   232   00114A                     
   233                           ;main.c: 24:     Send_Instruction_Data(0, 0X80);
   234   00114A  0E80               	movlw	128
   235   00114C  6E05               	movwf	Send_Instruction_Data@Data^0,c
   236   00114E  0E00               	movlw	0
   237   001150  ECB2  F008         	call	_Send_Instruction_Data
   238   001154                     
   239                           ;main.c: 25:     Send_String("ESP12F Test Data");
   240   001154  0E01               	movlw	low STR_1
   241   001156  6E07               	movwf	Send_String@String^0,c
   242   001158  EC7C  F008         	call	_Send_String	;wreg free
   243   00115C                     l47:
   244   00115C  EFAE  F008         	goto	l47
   245   001160  EF42  F000         	goto	start
   246   001164                     __end_of_main:
   247                           	callstack 0
   248                           
   249 ;; *************** function _Send_String *****************
   250 ;; Defined at:
   251 ;;		line 46 in file "LCD_Library.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;  String          1    6[COMRAM] PTR unsigned char 
   254 ;;		 -> STR_1(17), 
   255 ;; Auto vars:     Size  Location     Type
   256 ;;  i               1    8[COMRAM] unsigned char 
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   266 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;Total ram usage:        3 bytes
   271 ;; Hardware stack levels used: 1
   272 ;; Hardware stack levels required when called: 5
   273 ;; This function calls:
   274 ;;		_Send_Instruction_Data
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text1
   281   0010F8                     __ptext1:
   282                           	callstack 0
   283   0010F8                     _Send_String:
   284                           	callstack 25
   285   0010F8                     
   286                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   287   0010F8  0E00               	movlw	0
   288   0010FA  6E09               	movwf	Send_String@i^0,c
   289   0010FC  EF8C  F008         	goto	l937
   290   001100                     l933:
   291                           
   292                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
   293   001100  5007               	movf	Send_String@String^0,w,c
   294   001102  2409               	addwf	Send_String@i^0,w,c
   295   001104  6E08               	movwf	??_Send_String^0,c
   296   001106  C008  FFF6         	movff	??_Send_String,tblptrl
   297   00110A                     	if	0	;There is only one active tblptr byte
   298   00110A                     	endif
   299   00110A                     	if	0	;tblptru may be non-zero
   300   00110A                     	endif
   301   00110A                     	if	0	;tblptru may be non-zero
   302   00110A                     	endif
   303   00110A  0008               	tblrd		*
   304   00110C  CFF5 F005          	movff	tablat,Send_Instruction_Data@Data
   305   001110  0E01               	movlw	1
   306   001112  ECB2  F008         	call	_Send_Instruction_Data
   307   001116                     
   308                           ;LCD_Library.c: 52:     }
   309   001116  2A09               	incf	Send_String@i^0,f,c
   310   001118                     l937:
   311   001118  5007               	movf	Send_String@String^0,w,c
   312   00111A  2409               	addwf	Send_String@i^0,w,c
   313   00111C  6E08               	movwf	??_Send_String^0,c
   314   00111E  C008  FFF6         	movff	??_Send_String,tblptrl
   315   001122                     	if	0	;There is only one active tblptr byte
   316   001122                     	endif
   317   001122                     	if	0	;tblptru may be non-zero
   318   001122                     	endif
   319   001122                     	if	0	;tblptru may be non-zero
   320   001122                     	endif
   321   001122  0008               	tblrd		*
   322   001124  50F5               	movf	tablat,w,c
   323   001126  0900               	iorlw	0
   324   001128  A4D8               	btfss	status,2,c
   325   00112A  EF99  F008         	goto	u81
   326   00112E  EF9B  F008         	goto	u80
   327   001132                     u81:
   328   001132  EF80  F008         	goto	l933
   329   001136                     u80:
   330   001136  0012               	return		;funcret
   331   001138                     __end_of_Send_String:
   332                           	callstack 0
   333                           
   334 ;; *************** function _Init_LCD *****************
   335 ;; Defined at:
   336 ;;		line 5 in file "LCD_Library.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        2 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 5
   357 ;; This function calls:
   358 ;;		_Send_Instruction_Data
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text2
   365   001014                     __ptext2:
   366                           	callstack 0
   367   001014                     _Init_LCD:
   368                           	callstack 25
   369   001014                     
   370                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   371   001014  0E03               	movlw	3
   372   001016  6E08               	movwf	(??_Init_LCD+1)^0,c
   373   001018  0E08               	movlw	8
   374   00101A  6E07               	movwf	??_Init_LCD^0,c
   375   00101C  0E77               	movlw	119
   376   00101E                     u137:
   377   00101E  2EE8               	decfsz	wreg,f,c
   378   001020  D7FE               	bra	u137
   379   001022  2E07               	decfsz	??_Init_LCD^0,f,c
   380   001024  D7FC               	bra	u137
   381   001026  2E08               	decfsz	(??_Init_LCD+1)^0,f,c
   382   001028  D7FA               	bra	u137
   383   00102A  0000               	nop	
   384   00102C                     
   385                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   386   00102C  0E30               	movlw	48
   387   00102E  6E05               	movwf	Send_Instruction_Data@Data^0,c
   388   001030  0E00               	movlw	0
   389   001032  ECB2  F008         	call	_Send_Instruction_Data
   390   001036                     
   391                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   392   001036  0E1A               	movlw	26
   393   001038  6E07               	movwf	??_Init_LCD^0,c
   394   00103A  0EF8               	movlw	248
   395   00103C                     u147:
   396   00103C  2EE8               	decfsz	wreg,f,c
   397   00103E  D7FE               	bra	u147
   398   001040  2E07               	decfsz	??_Init_LCD^0,f,c
   399   001042  D7FC               	bra	u147
   400   001044  D000               	nop2	
   401                           
   402                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   403   001046  0E30               	movlw	48
   404   001048  6E05               	movwf	Send_Instruction_Data@Data^0,c
   405   00104A  0E00               	movlw	0
   406   00104C  ECB2  F008         	call	_Send_Instruction_Data
   407   001050                     
   408                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   409   001050  0E1A               	movlw	26
   410   001052  6E07               	movwf	??_Init_LCD^0,c
   411   001054  0EF8               	movlw	248
   412   001056                     u157:
   413   001056  2EE8               	decfsz	wreg,f,c
   414   001058  D7FE               	bra	u157
   415   00105A  2E07               	decfsz	??_Init_LCD^0,f,c
   416   00105C  D7FC               	bra	u157
   417   00105E  D000               	nop2	
   418   001060                     
   419                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   420   001060  0E30               	movlw	48
   421   001062  6E05               	movwf	Send_Instruction_Data@Data^0,c
   422   001064  0E00               	movlw	0
   423   001066  ECB2  F008         	call	_Send_Instruction_Data
   424   00106A                     
   425                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   426   00106A  0E02               	movlw	2
   427   00106C  6E05               	movwf	Send_Instruction_Data@Data^0,c
   428   00106E  0E00               	movlw	0
   429   001070  ECB2  F008         	call	_Send_Instruction_Data
   430   001074                     
   431                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   432   001074  0E06               	movlw	6
   433   001076  6E05               	movwf	Send_Instruction_Data@Data^0,c
   434   001078  0E00               	movlw	0
   435   00107A  ECB2  F008         	call	_Send_Instruction_Data
   436   00107E                     
   437                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   438   00107E  0E0F               	movlw	15
   439   001080  6E05               	movwf	Send_Instruction_Data@Data^0,c
   440   001082  0E00               	movlw	0
   441   001084  ECB2  F008         	call	_Send_Instruction_Data
   442   001088                     
   443                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   444   001088  0E28               	movlw	40
   445   00108A  6E05               	movwf	Send_Instruction_Data@Data^0,c
   446   00108C  0E00               	movlw	0
   447   00108E  ECB2  F008         	call	_Send_Instruction_Data
   448   001092                     
   449                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   450   001092  0E01               	movlw	1
   451   001094  6E05               	movwf	Send_Instruction_Data@Data^0,c
   452   001096  0E00               	movlw	0
   453   001098  ECB2  F008         	call	_Send_Instruction_Data
   454   00109C                     
   455                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   456   00109C  0E03               	movlw	3
   457   00109E  6E08               	movwf	(??_Init_LCD+1)^0,c
   458   0010A0  0E08               	movlw	8
   459   0010A2  6E07               	movwf	??_Init_LCD^0,c
   460   0010A4  0E77               	movlw	119
   461   0010A6                     u167:
   462   0010A6  2EE8               	decfsz	wreg,f,c
   463   0010A8  D7FE               	bra	u167
   464   0010AA  2E07               	decfsz	??_Init_LCD^0,f,c
   465   0010AC  D7FC               	bra	u167
   466   0010AE  2E08               	decfsz	(??_Init_LCD+1)^0,f,c
   467   0010B0  D7FA               	bra	u167
   468   0010B2  0000               	nop	
   469   0010B4  0012               	return		;funcret
   470   0010B6                     __end_of_Init_LCD:
   471                           	callstack 0
   472                           
   473 ;; *************** function _Send_Instruction_Data *****************
   474 ;; Defined at:
   475 ;;		line 24 in file "LCD_Library.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  Instruction     1    wreg     unsigned char 
   478 ;;  Data            1    4[COMRAM] unsigned char 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  Instruction     1    5[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; Hardware stack levels required when called: 4
   497 ;; This function calls:
   498 ;;		_LCD_Instruction
   499 ;; This function is called by:
   500 ;;		_main
   501 ;;		_Init_LCD
   502 ;;		_Send_String
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text3
   507   001164                     __ptext3:
   508                           	callstack 0
   509   001164                     _Send_Instruction_Data:
   510                           	callstack 25
   511                           
   512                           ;incstack = 0
   513                           ;Send_Instruction_Data@Instruction stored from wreg
   514   001164  6E06               	movwf	Send_Instruction_Data@Instruction^0,c
   515   001166                     
   516                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   517   001166  B006               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   518   001168  D002               	bra	u75
   519   00116A  988B               	bcf	139,4,c	;volatile
   520   00116C  D001               	bra	u76
   521   00116E                     u75:
   522   00116E  888B               	bsf	139,4,c	;volatile
   523   001170                     u76:
   524   001170                     
   525                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   526   001170  3805               	swapf	Send_Instruction_Data@Data^0,w,c
   527   001172  0B0F               	andlw	15
   528   001174  ECC1  F008         	call	_LCD_Instruction
   529   001178                     
   530                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
   531   001178  5005               	movf	Send_Instruction_Data@Data^0,w,c
   532   00117A  0B0F               	andlw	15
   533   00117C  ECC1  F008         	call	_LCD_Instruction
   534   001180  0012               	return		;funcret
   535   001182                     __end_of_Send_Instruction_Data:
   536                           	callstack 0
   537                           
   538 ;; *************** function _LCD_Instruction *****************
   539 ;; Defined at:
   540 ;;		line 33 in file "LCD_Library.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  Instruction     1    wreg     unsigned char 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  Instruction     1    3[COMRAM] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;Total ram usage:        1 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; Hardware stack levels required when called: 3
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_Send_Instruction_Data
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text4
   569   001182                     __ptext4:
   570                           	callstack 0
   571   001182                     _LCD_Instruction:
   572                           	callstack 25
   573                           
   574                           ;incstack = 0
   575                           ;LCD_Instruction@Instruction stored from wreg
   576   001182  6E04               	movwf	LCD_Instruction@Instruction^0,c
   577   001184                     
   578                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   579   001184  8A8B               	bsf	139,5,c	;volatile
   580   001186                     
   581                           ;LCD_Library.c: 36:     _delay((unsigned long)((150)*(16000000/4000000.0)));
   582   001186  0EC8               	movlw	200
   583   001188                     u177:
   584   001188  2EE8               	decfsz	wreg,f,c
   585   00118A  D7FE               	bra	u177
   586   00118C                     
   587                           ;LCD_Library.c: 37:     LATD = Instruction;
   588   00118C  C004  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   589   001190                     
   590                           ;LCD_Library.c: 38:     _delay((unsigned long)((150)*(16000000/4000000.0)));
   591   001190  0EC8               	movlw	200
   592   001192                     u187:
   593   001192  2EE8               	decfsz	wreg,f,c
   594   001194  D7FE               	bra	u187
   595   001196                     
   596                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   597   001196  9A8B               	bcf	139,5,c	;volatile
   598   001198                     
   599                           ;LCD_Library.c: 40:     _delay((unsigned long)((150)*(16000000/4000000.0)));
   600   001198  0EC8               	movlw	200
   601   00119A                     u197:
   602   00119A  2EE8               	decfsz	wreg,f,c
   603   00119C  D7FE               	bra	u197
   604   00119E  0012               	return		;funcret
   605   0011A0                     __end_of_LCD_Instruction:
   606                           	callstack 0
   607                           
   608 ;; *************** function _Configurations *****************
   609 ;; Defined at:
   610 ;;		line 35 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; Hardware stack levels required when called: 3
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text5
   639   0010B6                     __ptext5:
   640                           	callstack 0
   641   0010B6                     _Configurations:
   642                           	callstack 27
   643   0010B6                     
   644                           ;main.c: 37:     OSCCON = 0x72;
   645   0010B6  0E72               	movlw	114
   646   0010B8  6ED3               	movwf	211,c	;volatile
   647                           
   648                           ;main.c: 39:     ANSELC = 0;
   649   0010BA  0E00               	movlw	0
   650   0010BC  010F               	movlb	15	; () banked
   651   0010BE  6F3A               	movwf	58,b	;volatile
   652                           
   653                           ;main.c: 40:     ANSELD = 0;
   654   0010C0  0E00               	movlw	0
   655   0010C2  6F3B               	movwf	59,b	;volatile
   656   0010C4                     
   657                           ; BSR set to: 15
   658                           ;main.c: 44:     TRISCbits.RC4 = 0;
   659   0010C4  9894               	bcf	148,4,c	;volatile
   660   0010C6                     
   661                           ; BSR set to: 15
   662                           ;main.c: 45:     TRISCbits.RC5 = 0;
   663   0010C6  9A94               	bcf	148,5,c	;volatile
   664                           
   665                           ;main.c: 46:     TRISD = 0;
   666   0010C8  0E00               	movlw	0
   667   0010CA  6E95               	movwf	149,c	;volatile
   668   0010CC                     
   669                           ; BSR set to: 15
   670                           ;main.c: 49:     LATCbits.LC4 = 0;
   671   0010CC  988B               	bcf	139,4,c	;volatile
   672   0010CE                     
   673                           ; BSR set to: 15
   674                           ;main.c: 50:     LATCbits.LC5 = 0;
   675   0010CE  9A8B               	bcf	139,5,c	;volatile
   676                           
   677                           ;main.c: 51:     LATD = 0;
   678   0010D0  0E00               	movlw	0
   679   0010D2  6E8C               	movwf	140,c	;volatile
   680   0010D4                     
   681                           ; BSR set to: 15
   682                           ;main.c: 54:     INTCONbits.GIE = 1;
   683   0010D4  8EF2               	bsf	242,7,c	;volatile
   684   0010D6                     
   685                           ; BSR set to: 15
   686                           ;main.c: 55:     INTCONbits.PEIE = 1;
   687   0010D6  8CF2               	bsf	242,6,c	;volatile
   688   0010D8                     
   689                           ; BSR set to: 15
   690                           ;main.c: 56:     RCONbits.IPEN = 1;
   691   0010D8  8ED0               	bsf	208,7,c	;volatile
   692   0010DA                     
   693                           ; BSR set to: 15
   694                           ;main.c: 58:     PIE1bits.RC1IE = 1;
   695   0010DA  8A9D               	bsf	157,5,c	;volatile
   696   0010DC                     
   697                           ; BSR set to: 15
   698                           ;main.c: 59:     PIR1bits.RC1IF = 0;
   699   0010DC  9A9E               	bcf	158,5,c	;volatile
   700                           
   701                           ;main.c: 62:     SPBRG = 103;
   702   0010DE  0E67               	movlw	103
   703   0010E0  6EAF               	movwf	175,c	;volatile
   704   0010E2                     
   705                           ; BSR set to: 15
   706                           ;main.c: 63:     TRISCbits.RC6 = 1;
   707   0010E2  8C94               	bsf	148,6,c	;volatile
   708   0010E4                     
   709                           ; BSR set to: 15
   710                           ;main.c: 64:     TRISCbits.RC7 = 1;
   711   0010E4  8E94               	bsf	148,7,c	;volatile
   712   0010E6                     
   713                           ; BSR set to: 15
   714                           ;main.c: 67:     TXSTA1bits.TX91 = 0;
   715   0010E6  9CAC               	bcf	172,6,c	;volatile
   716   0010E8                     
   717                           ; BSR set to: 15
   718                           ;main.c: 68:     TXSTA1bits.TXEN1 = 1;
   719   0010E8  8AAC               	bsf	172,5,c	;volatile
   720   0010EA                     
   721                           ; BSR set to: 15
   722                           ;main.c: 69:     TXSTA1bits.SYNC1 = 0;
   723   0010EA  98AC               	bcf	172,4,c	;volatile
   724   0010EC                     
   725                           ; BSR set to: 15
   726                           ;main.c: 70:     TXSTA1bits.BRGH1 = 1;
   727   0010EC  84AC               	bsf	172,2,c	;volatile
   728   0010EE                     
   729                           ; BSR set to: 15
   730                           ;main.c: 73:     RCSTAbits.SPEN1 = 1;
   731   0010EE  8EAB               	bsf	171,7,c	;volatile
   732   0010F0                     
   733                           ; BSR set to: 15
   734                           ;main.c: 74:     RCSTAbits.RX91 = 0;
   735   0010F0  9CAB               	bcf	171,6,c	;volatile
   736   0010F2                     
   737                           ; BSR set to: 15
   738                           ;main.c: 75:     RCSTAbits.CREN1 = 1;
   739   0010F2  88AB               	bsf	171,4,c	;volatile
   740   0010F4                     
   741                           ; BSR set to: 15
   742                           ;main.c: 78:     BAUDCON1bits.BRG16 = 0;
   743   0010F4  96B8               	bcf	184,3,c	;volatile
   744   0010F6                     
   745                           ; BSR set to: 15
   746   0010F6  0012               	return		;funcret
   747   0010F8                     __end_of_Configurations:
   748                           	callstack 0
   749                           
   750 ;; *************** function _Reception *****************
   751 ;; Defined at:
   752 ;;		line 91 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 2
   773 ;; This function calls:
   774 ;;		i2_Send_Instruction_Data
   775 ;; This function is called by:
   776 ;;		Interrupt level 2
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	intcode
   781   000008                     __pintcode:
   782                           	callstack 0
   783   000008                     _Reception:
   784                           	callstack 25
   785                           
   786                           ; BSR set to: 15
   787                           ;incstack = 0
   788   000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   789   00000A                     
   790                           ;main.c: 93:     if (PIR1bits.RC1IF) {
   791   00000A  AA9E               	btfss	158,5,c	;volatile
   792   00000C  EF0A  F000         	goto	i2u10_41
   793   000010  EF0C  F000         	goto	i2u10_40
   794   000014                     i2u10_41:
   795   000014  EF40  F000         	goto	i2l62
   796   000018                     i2u10_40:
   797   000018                     
   798                           ;main.c: 95:         Rx_Buffer = RCREG1;
   799   000018  CFAE F00A          	movff	4014,_Rx_Buffer	;volatile
   800   00001C                     
   801                           ;main.c: 97:         if (Rx_Buffer == 'a') {
   802   00001C  0E61               	movlw	97
   803   00001E  180A               	xorwf	_Rx_Buffer^0,w,c
   804   000020  A4D8               	btfss	status,2,c
   805   000022  EF15  F000         	goto	i2u11_41
   806   000026  EF17  F000         	goto	i2u11_40
   807   00002A                     i2u11_41:
   808   00002A  EF28  F000         	goto	i2l963
   809   00002E                     i2u11_40:
   810   00002E                     
   811                           ;main.c: 99:             Send_Instruction_Data(0, 0x01);
   812   00002E  0E01               	movlw	1
   813   000030  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   814   000032  0E00               	movlw	0
   815   000034  ECD0  F008         	call	i2_Send_Instruction_Data
   816                           
   817                           ;main.c: 100:             Send_Instruction_Data(0, 0xC0);
   818   000038  0EC0               	movlw	192
   819   00003A  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   820   00003C  0E00               	movlw	0
   821   00003E  ECD0  F008         	call	i2_Send_Instruction_Data
   822                           
   823                           ;main.c: 101:             Send_Instruction_Data(1, 'a');
   824   000042  0E61               	movlw	97
   825   000044  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   826   000046  0E01               	movlw	1
   827   000048  ECD0  F008         	call	i2_Send_Instruction_Data
   828                           
   829                           ;main.c: 103:         } else if (Rx_Buffer == 'b') {
   830   00004C  EF40  F000         	goto	i2l62
   831   000050                     i2l963:
   832   000050  0E62               	movlw	98
   833   000052  180A               	xorwf	_Rx_Buffer^0,w,c
   834   000054  A4D8               	btfss	status,2,c
   835   000056  EF2F  F000         	goto	i2u12_41
   836   00005A  EF31  F000         	goto	i2u12_40
   837   00005E                     i2u12_41:
   838   00005E  EF40  F000         	goto	i2l62
   839   000062                     i2u12_40:
   840   000062                     
   841                           ;main.c: 105:             Send_Instruction_Data(0, 0x01);
   842   000062  0E01               	movlw	1
   843   000064  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   844   000066  0E00               	movlw	0
   845   000068  ECD0  F008         	call	i2_Send_Instruction_Data
   846                           
   847                           ;main.c: 106:             Send_Instruction_Data(0, 0X94);
   848   00006C  0E94               	movlw	148
   849   00006E  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   850   000070  0E00               	movlw	0
   851   000072  ECD0  F008         	call	i2_Send_Instruction_Data
   852                           
   853                           ;main.c: 107:             Send_Instruction_Data(1, 'b');
   854   000076  0E62               	movlw	98
   855   000078  6E02               	movwf	i2Send_Instruction_Data@Data^0,c
   856   00007A  0E01               	movlw	1
   857   00007C  ECD0  F008         	call	i2_Send_Instruction_Data
   858   000080                     i2l62:
   859   000080  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   860   000082  0011               	retfie		f
   861   000084                     __end_of_Reception:
   862                           	callstack 0
   863                           
   864 ;; *************** function i2_Send_Instruction_Data *****************
   865 ;; Defined at:
   866 ;;		line 24 in file "LCD_Library.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  Instruction     1    wreg     unsigned char 
   869 ;;  Data            1    1[COMRAM] unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  Instruction     1    2[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 1
   888 ;; This function calls:
   889 ;;		i2_LCD_Instruction
   890 ;; This function is called by:
   891 ;;		_Reception
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text7
   896   0011A0                     __ptext7:
   897                           	callstack 0
   898   0011A0                     i2_Send_Instruction_Data:
   899                           	callstack 25
   900                           
   901                           ;incstack = 0
   902                           ;i2Send_Instruction_Data@Instruction stored from wreg
   903   0011A0  6E03               	movwf	i2Send_Instruction_Data@Instruction^0,c
   904   0011A2                     
   905                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   906   0011A2  B003               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
   907   0011A4  D002               	bra	i2u9_45
   908   0011A6  988B               	bcf	139,4,c	;volatile
   909   0011A8  D001               	bra	i2u9_46
   910   0011AA                     i2u9_45:
   911   0011AA  888B               	bsf	139,4,c	;volatile
   912   0011AC                     i2u9_46:
   913   0011AC                     
   914                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   915   0011AC  3802               	swapf	i2Send_Instruction_Data@Data^0,w,c
   916   0011AE  0B0F               	andlw	15
   917   0011B0  ECDF  F008         	call	i2_LCD_Instruction
   918   0011B4                     
   919                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
   920   0011B4  5002               	movf	i2Send_Instruction_Data@Data^0,w,c
   921   0011B6  0B0F               	andlw	15
   922   0011B8  ECDF  F008         	call	i2_LCD_Instruction
   923   0011BC  0012               	return		;funcret
   924   0011BE                     __end_ofi2_Send_Instruction_Data:
   925                           	callstack 0
   926                           
   927 ;; *************** function i2_LCD_Instruction *****************
   928 ;; Defined at:
   929 ;;		line 33 in file "LCD_Library.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  Instruction     1    wreg     unsigned char 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  Instruction     1    0[COMRAM] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;Total ram usage:        1 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		i2_Send_Instruction_Data
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text8
   957   0011BE                     __ptext8:
   958                           	callstack 0
   959   0011BE                     i2_LCD_Instruction:
   960                           	callstack 25
   961                           
   962                           ;incstack = 0
   963                           ;i2LCD_Instruction@Instruction stored from wreg
   964   0011BE  6E01               	movwf	i2LCD_Instruction@Instruction^0,c
   965   0011C0                     
   966                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   967   0011C0  8A8B               	bsf	139,5,c	;volatile
   968   0011C2                     
   969                           ;LCD_Library.c: 36:     _delay((unsigned long)((150)*(16000000/4000000.0)));
   970   0011C2  0EC8               	movlw	200
   971   0011C4                     i2u20_47:
   972   0011C4  2EE8               	decfsz	wreg,f,c
   973   0011C6  D7FE               	bra	i2u20_47
   974   0011C8                     
   975                           ;LCD_Library.c: 37:     LATD = Instruction;
   976   0011C8  C001  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
   977   0011CC                     
   978                           ;LCD_Library.c: 38:     _delay((unsigned long)((150)*(16000000/4000000.0)));
   979   0011CC  0EC8               	movlw	200
   980   0011CE                     i2u21_47:
   981   0011CE  2EE8               	decfsz	wreg,f,c
   982   0011D0  D7FE               	bra	i2u21_47
   983   0011D2                     
   984                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   985   0011D2  9A8B               	bcf	139,5,c	;volatile
   986   0011D4                     
   987                           ;LCD_Library.c: 40:     _delay((unsigned long)((150)*(16000000/4000000.0)));
   988   0011D4  0EC8               	movlw	200
   989   0011D6                     i2u22_47:
   990   0011D6  2EE8               	decfsz	wreg,f,c
   991   0011D8  D7FE               	bra	i2u22_47
   992   0011DA  0012               	return		;funcret
   993   0011DC                     __end_ofi2_LCD_Instruction:
   994                           	callstack 0
   995                           
   996                           	psect	rparam
   997   000000                     
   998                           	psect	temp
   999   00000B                     btemp:
  1000                           	callstack 0
  1001   00000B                     	ds	1
  1002   000000                     int$flags	set	btemp
  1003   000000                     wtemp8	set	btemp+1
  1004   000000                     ttemp5	set	btemp+1
  1005   000000                     ttemp6	set	btemp+4
  1006   000000                     ttemp7	set	btemp+8
  1007                           
  1008                           	psect	config
  1009                           
  1010                           ; Padding undefined space
  1011   300000                     	org	3145728
  1012   300000  FF                 	db	255
  1013                           
  1014                           ;Config register CONFIG1H @ 0x300001
  1015                           ;	Oscillator Selection bits
  1016                           ;	FOSC = INTIO67, Internal oscillator block
  1017                           ;	4X PLL Enable
  1018                           ;	PLLCFG = OFF, Oscillator used directly
  1019                           ;	Primary clock enable bit
  1020                           ;	PRICLKEN = ON, Primary clock is always enabled
  1021                           ;	Fail-Safe Clock Monitor Enable bit
  1022                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1023                           ;	Internal/External Oscillator Switchover bit
  1024                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1025   300001                     	org	3145729
  1026   300001  28                 	db	40
  1027                           
  1028                           ;Config register CONFIG2L @ 0x300002
  1029                           ;	Power-up Timer Enable bit
  1030                           ;	PWRTEN = OFF, Power up timer disabled
  1031                           ;	Brown-out Reset Enable bits
  1032                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1033                           ;	Brown Out Reset Voltage bits
  1034                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1035   300002                     	org	3145730
  1036   300002  1F                 	db	31
  1037                           
  1038                           ;Config register CONFIG2H @ 0x300003
  1039                           ;	Watchdog Timer Enable bits
  1040                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1041                           ;	Watchdog Timer Postscale Select bits
  1042                           ;	WDTPS = 32768, 1:32768
  1043   300003                     	org	3145731
  1044   300003  3C                 	db	60
  1045                           
  1046                           ; Padding undefined space
  1047   300004                     	org	3145732
  1048   300004  FF                 	db	255
  1049                           
  1050                           ;Config register CONFIG3H @ 0x300005
  1051                           ;	CCP2 MUX bit
  1052                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1053                           ;	PORTB A/D Enable bit
  1054                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1055                           ;	P3A/CCP3 Mux bit
  1056                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1057                           ;	HFINTOSC Fast Start-up
  1058                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1059                           ;	Timer3 Clock input mux bit
  1060                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1061                           ;	ECCP2 B output mux bit
  1062                           ;	P2BMX = PORTD2, P2B is on RD2
  1063                           ;	MCLR Pin Enable bit
  1064                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1065   300005                     	org	3145733
  1066   300005  BB                 	db	187
  1067                           
  1068                           ;Config register CONFIG4L @ 0x300006
  1069                           ;	Stack Full/Underflow Reset Enable bit
  1070                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1071                           ;	Single-Supply ICSP Enable bit
  1072                           ;	LVP = OFF, Single-Supply ICSP disabled
  1073                           ;	Extended Instruction Set Enable bit
  1074                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1075                           ;	Background Debug
  1076                           ;	DEBUG = 0x1, unprogrammed default
  1077   300006                     	org	3145734
  1078   300006  81                 	db	129
  1079                           
  1080                           ; Padding undefined space
  1081   300007                     	org	3145735
  1082   300007  FF                 	db	255
  1083                           
  1084                           ;Config register CONFIG5L @ 0x300008
  1085                           ;	Code Protection Block 0
  1086                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1087                           ;	Code Protection Block 1
  1088                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1089                           ;	Code Protection Block 2
  1090                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1091                           ;	Code Protection Block 3
  1092                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1093   300008                     	org	3145736
  1094   300008  0F                 	db	15
  1095                           
  1096                           ;Config register CONFIG5H @ 0x300009
  1097                           ;	Boot Block Code Protection bit
  1098                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1099                           ;	Data EEPROM Code Protection bit
  1100                           ;	CPD = OFF, Data EEPROM not code-protected
  1101   300009                     	org	3145737
  1102   300009  C0                 	db	192
  1103                           
  1104                           ;Config register CONFIG6L @ 0x30000A
  1105                           ;	Write Protection Block 0
  1106                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1107                           ;	Write Protection Block 1
  1108                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1109                           ;	Write Protection Block 2
  1110                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1111                           ;	Write Protection Block 3
  1112                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1113   30000A                     	org	3145738
  1114   30000A  0F                 	db	15
  1115                           
  1116                           ;Config register CONFIG6H @ 0x30000B
  1117                           ;	Configuration Register Write Protection bit
  1118                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1119                           ;	Boot Block Write Protection bit
  1120                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1121                           ;	Data EEPROM Write Protection bit
  1122                           ;	WRTD = OFF, Data EEPROM not write-protected
  1123   30000B                     	org	3145739
  1124   30000B  E0                 	db	224
  1125                           
  1126                           ;Config register CONFIG7L @ 0x30000C
  1127                           ;	Table Read Protection Block 0
  1128                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1129                           ;	Table Read Protection Block 1
  1130                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1131                           ;	Table Read Protection Block 2
  1132                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1133                           ;	Table Read Protection Block 3
  1134                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1135   30000C                     	org	3145740
  1136   30000C  0F                 	db	15
  1137                           
  1138                           ;Config register CONFIG7H @ 0x30000D
  1139                           ;	Boot Block Table Read Protection bit
  1140                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1141   30000D                     	org	3145741
  1142   30000D  40                 	db	64
  1143                           tosu	equ	0xFFF
  1144                           tosh	equ	0xFFE
  1145                           tosl	equ	0xFFD
  1146                           stkptr	equ	0xFFC
  1147                           pclatu	equ	0xFFB
  1148                           pclath	equ	0xFFA
  1149                           pcl	equ	0xFF9
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           prodh	equ	0xFF4
  1155                           prodl	equ	0xFF3
  1156                           indf0	equ	0xFEF
  1157                           postinc0	equ	0xFEE
  1158                           postdec0	equ	0xFED
  1159                           preinc0	equ	0xFEC
  1160                           plusw0	equ	0xFEB
  1161                           fsr0h	equ	0xFEA
  1162                           fsr0l	equ	0xFE9
  1163                           wreg	equ	0xFE8
  1164                           indf1	equ	0xFE7
  1165                           postinc1	equ	0xFE6
  1166                           postdec1	equ	0xFE5
  1167                           preinc1	equ	0xFE4
  1168                           plusw1	equ	0xFE3
  1169                           fsr1h	equ	0xFE2
  1170                           fsr1l	equ	0xFE1
  1171                           bsr	equ	0xFE0
  1172                           indf2	equ	0xFDF
  1173                           postinc2	equ	0xFDE
  1174                           postdec2	equ	0xFDD
  1175                           preinc2	equ	0xFDC
  1176                           plusw2	equ	0xFDB
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Reception in COMRAM

    _Reception->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Reception in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Reception in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Reception in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Reception in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Reception in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Reception in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Reception in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Reception in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Reception in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Reception in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Reception in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Reception in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Reception in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Reception in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Reception in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Reception in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3817
                     _Configurations
                           _Init_LCD
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          3     2      1    1383
                                              6 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0    1217
                                              6 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1    1217
                                              4 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Reception                                            0     0      0     244
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (5) i2_Send_Instruction_Data                              2     1      1     244
                                              1 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (6) i2_LCD_Instruction                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Send_Instruction_Data
   _Send_String
     _Send_Instruction_Data

 _Reception (ROOT)
   i2_Send_Instruction_Data
     i2_LCD_Instruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9       A       1       10.6%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhhll       7      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      47        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 12 16:36:51 2024

                                l53 10F6                                  l47 115C  
                                l48 115C                                  l81 119E  
                                l75 10B4                                  l78 1180  
                                l87 1136                                  u80 1136  
                                u81 1132                                  u75 116E  
                                u76 1170                   Send_String@String 0007  
                               l801 10CE                                 l811 10DC  
                               l803 10D4                                 l821 10EA  
                               l813 10E2                                 l805 10D6  
                               l831 10F4                                 l823 10EC  
                               l815 10E4                                 l807 10D8  
                               l911 102C                                 l825 10EE  
                               l817 10E6                                 l809 10DA  
                               l921 1074                                 l913 1036  
                               l827 10F0                                 l819 10E8  
                               l771 1196                                 l763 1184  
                               l923 107E                                 l915 1050  
                               l931 10F8                                 l829 10F2  
                               l773 1198                                 l765 1186  
                               l925 1088                                 l917 1060  
                               l909 1014                                 l933 1100  
                               l767 118C                                 l927 1092  
                               l919 106A                                 l935 1116  
                               l951 114A                                 l793 10B6  
                               l769 1190                                 l929 109C  
                               l937 1118                                 l953 1154  
                               l945 1138                                 l795 10C4  
                               l891 1166                                 l947 113C  
                               l797 10C6                                 l893 1170  
                               l949 1140                                 l799 10CC  
                               l895 1178                                 u137 101E  
                               u147 103C                                 u157 1056  
                               u167 10A6                                 u177 1188  
                               u187 1192                                 u197 119A  
       i2Send_Instruction_Data@Data 0002                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                STR_1 1001  
                              _LATD 0F8C                                i2l62 0080  
                              i2l81 11DA                                i2l78 11BC  
                              _main 1138                                btemp 000B  
                              start 0084                        ___param_bank 0000  
                   _LCD_Instruction 1182    Send_Instruction_Data@Instruction 0006  
i2Send_Instruction_Data@Instruction 0003                        _BAUDCON1bits 0FB8  
                             ?_main 0001                               i2l901 11C8  
                             i2l903 11CC                               i2l905 11D2  
                             i2l907 11D4                               i2l941 11AC  
                             i2l943 11B4                               i2l961 002E  
                             i2l939 11A2                               i2l963 0050  
                             i2l955 000A                               i2l965 0062  
                             i2l957 0018                               i2l959 001C  
                             i2l897 11C0                               i2l899 11C2  
                             _SPBRG 0FAF                               _TRISD 0F95  
      i2LCD_Instruction@Instruction 0001                               tablat 0FF5  
                             ttemp5 000C                               ttemp6 000F  
                             ttemp7 0013                               status 0FD8  
                             wtemp8 000C                     __initialization 11DC  
                      __end_of_main 1164                    __end_of_Init_LCD 10B6  
             _Send_Instruction_Data 1164                              ??_main 000A  
                     ??_Send_String 0008                       __activetblptr 0001  
                            _ANSELC 0F3A                              _ANSELD 0F3B  
                            _RCREG1 0FAE          LCD_Instruction@Instruction 0004  
                            _OSCCON 0FD3                              i2u9_45 11AA  
                            i2u9_46 11AC             __end_of_LCD_Instruction 11A0  
                            isa$std 0001                        __mediumconst 0000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                 __end_of_Send_String 1138  
                        __accesstop 0060             __end_of__initialization 11DE  
                     ___rparam_used 0001                      __pcstackCOMRAM 0001  
            ?_Send_Instruction_Data 0005                   __end_of_Reception 0084  
                         ?_Init_LCD 0001                    ?_LCD_Instruction 0001  
           i2_Send_Instruction_Data 11A0                         _Send_String 10F8  
                           i2u10_40 0018                             i2u10_41 0014  
                           i2u11_40 002E                             i2u11_41 002A  
                           i2u12_40 0062                             i2u12_41 005E  
                           i2u20_47 11C4                             i2u21_47 11CE  
                           i2u22_47 11D6                          ??_Init_LCD 0007  
                           __Hparam 0000                             __Lparam 0000  
                      __psmallconst 1000                             __pcinit 11DC  
                           __ramtop 1000                             __ptext0 1138  
                           __ptext1 10F8                             __ptext2 1014  
                           __ptext3 1164                             __ptext4 1182  
                           __ptext5 10B6                             __ptext7 11A0  
                           __ptext8 11BE                end_of_initialization 11DE  
         ??i2_Send_Instruction_Data 0003                           _RCSTAbits 0FAB  
                         _TRISCbits 0F94             ??_Send_Instruction_Data 0006  
               start_initialization 11DC                        Send_String@i 0009  
         Send_Instruction_Data@Data 0005                      _Configurations 10B6  
                         _Reception 0008                           _Rx_Buffer 000A  
                      ?_Send_String 0007                         __pbssCOMRAM 000A  
            __end_of_Configurations 10F8                          ?_Reception 0001  
                         __pintcode 0008                         __smallconst 1000  
                   ?_Configurations 0001                            _LATCbits 0F8B  
                          _PIE1bits 0F9D                            _PIR1bits 0F9E  
                          _RCONbits 0FD0                   i2_LCD_Instruction 11BE  
                ?i2_LCD_Instruction 0001                 ??i2_LCD_Instruction 0001  
                       ??_Reception 0004                            _Init_LCD 1014  
                          __Hrparam 0000                            __Lrparam 0000  
                      __Lsmallconst 1000       __end_of_Send_Instruction_Data 1182  
         __end_ofi2_LCD_Instruction 11DC                   ??_LCD_Instruction 0004  
          ?i2_Send_Instruction_Data 0002                            isa$xinst 0000  
                          int$flags 000B                          _INTCONbits 0FF2  
                          intlevel2 0000                    ??_Configurations 0004  
   __end_ofi2_Send_Instruction_Data 11BE  
