

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 12 00:54:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     _ANSELC	set	3898
    58   000000                     _OSCCON	set	4051
    59   000000                     _INTCONbits	set	4082
    60   000000                     _LATCbits	set	3979
    61   000000                     _TRISCbits	set	3988
    62   000000                     _ANSELD	set	3899
    63   000000                     _PIE1bits	set	3997
    64   000000                     _RCONbits	set	4048
    65   000000                     _TRISD	set	3989
    66   000000                     _LATD	set	3980
    67   000000                     _RCSTAbits	set	4011
    68   000000                     _TXSTA1bits	set	4012
    69   000000                     _SPBRG	set	4015
    70   000000                     _PIR1bits	set	3998
    71   000000                     _BAUDCON1bits	set	4024
    72   000000                     _RCREG1	set	4014
    73                           
    74                           	psect	smallconst
    75   001000                     __psmallconst:
    76                           	callstack 0
    77   001000  00                 	db	0
    78   001001                     STR_1:
    79   001001  45                 	db	69	;'E'
    80   001002  53                 	db	83	;'S'
    81   001003  50                 	db	80	;'P'
    82   001004  31                 	db	49	;'1'
    83   001005  32                 	db	50	;'2'
    84   001006  46                 	db	70	;'F'
    85   001007  20                 	db	32
    86   001008  54                 	db	84	;'T'
    87   001009  65                 	db	101	;'e'
    88   00100A  73                 	db	115	;'s'
    89   00100B  74                 	db	116	;'t'
    90   00100C  20                 	db	32
    91   00100D  44                 	db	68	;'D'
    92   00100E  61                 	db	97	;'a'
    93   00100F  74                 	db	116	;'t'
    94   001010  61                 	db	97	;'a'
    95   001011  00                 	db	0
    96   001012  00                 	db	0	; dummy byte at the end
    97   000000                     
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   001218                     __pcinit:
   102                           	callstack 0
   103   001218                     start_initialization:
   104                           	callstack 0
   105   001218                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (1 bytes)
   109   001218  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   110   00121A                     end_of_initialization:
   111                           	callstack 0
   112   00121A                     __end_of__initialization:
   113                           	callstack 0
   114   00121A  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115   00121C  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116   00121E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   117   001220  6EF8               	movwf	tblptru,c
   118   001222  0E10               	movlw	high __Lsmallconst
   119   001224  6EF7               	movwf	tblptrh,c
   120   001226  0100               	movlb	0
   121   001228  EFD8  F008         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124   00000C                     __pbssCOMRAM:
   125                           	callstack 0
   126   00000C                     _Rx_Buffer:
   127                           	callstack 0
   128   00000C                     	ds	1
   129                           
   130                           	psect	cstackCOMRAM
   131   000001                     __pcstackCOMRAM:
   132                           	callstack 0
   133   000001                     ??i2_LCD_Instruction:
   134                           
   135                           ; 1 bytes @ 0x0
   136   000001                     	ds	1
   137   000002                     i2LCD_Instruction@Instruction:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x1
   141   000002                     	ds	1
   142   000003                     i2Send_Instruction_Data@Data:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x2
   146   000003                     	ds	1
   147   000004                     i2Send_Instruction_Data@Instruction:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x3
   151   000004                     	ds	1
   152   000005                     ??_LCD_Instruction:
   153   000005                     
   154                           ; 1 bytes @ 0x4
   155   000005                     	ds	1
   156   000006                     LCD_Instruction@Instruction:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x5
   160   000006                     	ds	1
   161   000007                     Send_Instruction_Data@Data:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x6
   165   000007                     	ds	1
   166   000008                     Send_Instruction_Data@Instruction:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x7
   170   000008                     	ds	1
   171   000009                     ??_Init_LCD:
   172   000009                     Send_String@String:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x8
   176   000009                     	ds	1
   177   00000A                     ??_Send_String:
   178                           
   179                           ; 1 bytes @ 0x9
   180   00000A                     	ds	1
   181   00000B                     Send_String@i:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0xA
   185   00000B                     	ds	1
   186   00000C                     
   187                           ; 1 bytes @ 0xB
   188 ;;
   189 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   190 ;;
   191 ;; *************** function _main *****************
   192 ;; Defined at:
   193 ;;		line 19 in file "main.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   211 ;;Total ram usage:        0 bytes
   212 ;; Hardware stack levels required when called: 6
   213 ;; This function calls:
   214 ;;		_Configurations
   215 ;;		_Init_LCD
   216 ;;		_Send_Instruction_Data
   217 ;;		_Send_String
   218 ;; This function is called by:
   219 ;;		Startup code after reset
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text0
   224   0011B0                     __ptext0:
   225                           	callstack 0
   226   0011B0                     _main:
   227                           	callstack 25
   228   0011B0                     
   229                           ;main.c: 21:     Configurations();
   230   0011B0  EC5B  F008         	call	_Configurations	;wreg free
   231   0011B4                     
   232                           ;main.c: 22:     Init_LCD();
   233   0011B4  EC0A  F008         	call	_Init_LCD	;wreg free
   234   0011B8                     
   235                           ;main.c: 23:     Send_Instruction_Data(0, 0x01);
   236   0011B8  0E01               	movlw	1
   237   0011BA  6E07               	movwf	Send_Instruction_Data@Data^0,c
   238   0011BC  0E00               	movlw	0
   239   0011BE  ECEE  F008         	call	_Send_Instruction_Data
   240   0011C2                     
   241                           ;main.c: 24:     Send_Instruction_Data(0, 0X80);
   242   0011C2  0E80               	movlw	128
   243   0011C4  6E07               	movwf	Send_Instruction_Data@Data^0,c
   244   0011C6  0E00               	movlw	0
   245   0011C8  ECEE  F008         	call	_Send_Instruction_Data
   246   0011CC                     
   247                           ;main.c: 25:     Send_String("ESP12F Test Data");
   248   0011CC  0E01               	movlw	low STR_1
   249   0011CE  6E09               	movwf	Send_String@String^0,c
   250   0011D0  EC7C  F008         	call	_Send_String	;wreg free
   251   0011D4                     l47:
   252   0011D4  EFEA  F008         	goto	l47
   253   0011D8  EF42  F000         	goto	start
   254   0011DC                     __end_of_main:
   255                           	callstack 0
   256                           
   257 ;; *************** function _Send_String *****************
   258 ;; Defined at:
   259 ;;		line 46 in file "LCD_Library.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;  String          1    8[COMRAM] PTR unsigned char 
   262 ;;		 -> STR_1(17), 
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  i               1   10[COMRAM] unsigned char 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   274 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;Total ram usage:        3 bytes
   279 ;; Hardware stack levels used: 1
   280 ;; Hardware stack levels required when called: 5
   281 ;; This function calls:
   282 ;;		_Send_Instruction_Data
   283 ;; This function is called by:
   284 ;;		_main
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text1
   289   0010F8                     __ptext1:
   290                           	callstack 0
   291   0010F8                     _Send_String:
   292                           	callstack 25
   293   0010F8                     
   294                           ;LCD_Library.c: 48:     for (uint8_t i = 0; String[i] != '\0'; i++) {
   295   0010F8  0E00               	movlw	0
   296   0010FA  6E0B               	movwf	Send_String@i^0,c
   297   0010FC  EF8C  F008         	goto	l937
   298   001100                     l933:
   299                           
   300                           ;LCD_Library.c: 50:         Send_Instruction_Data(1, String[i]);
   301   001100  5009               	movf	Send_String@String^0,w,c
   302   001102  240B               	addwf	Send_String@i^0,w,c
   303   001104  6E0A               	movwf	??_Send_String^0,c
   304   001106  C00A  FFF6         	movff	??_Send_String,tblptrl
   305   00110A                     	if	0	;There is only one active tblptr byte
   306   00110A                     	endif
   307   00110A                     	if	0	;tblptru may be non-zero
   308   00110A                     	endif
   309   00110A                     	if	0	;tblptru may be non-zero
   310   00110A                     	endif
   311   00110A  0008               	tblrd		*
   312   00110C  CFF5 F007          	movff	tablat,Send_Instruction_Data@Data
   313   001110  0E01               	movlw	1
   314   001112  ECEE  F008         	call	_Send_Instruction_Data
   315   001116                     
   316                           ;LCD_Library.c: 52:     }
   317   001116  2A0B               	incf	Send_String@i^0,f,c
   318   001118                     l937:
   319   001118  5009               	movf	Send_String@String^0,w,c
   320   00111A  240B               	addwf	Send_String@i^0,w,c
   321   00111C  6E0A               	movwf	??_Send_String^0,c
   322   00111E  C00A  FFF6         	movff	??_Send_String,tblptrl
   323   001122                     	if	0	;There is only one active tblptr byte
   324   001122                     	endif
   325   001122                     	if	0	;tblptru may be non-zero
   326   001122                     	endif
   327   001122                     	if	0	;tblptru may be non-zero
   328   001122                     	endif
   329   001122  0008               	tblrd		*
   330   001124  50F5               	movf	tablat,w,c
   331   001126  0900               	iorlw	0
   332   001128  A4D8               	btfss	status,2,c
   333   00112A  EF99  F008         	goto	u81
   334   00112E  EF9B  F008         	goto	u80
   335   001132                     u81:
   336   001132  EF80  F008         	goto	l933
   337   001136                     u80:
   338   001136  0012               	return		;funcret
   339   001138                     __end_of_Send_String:
   340                           	callstack 0
   341                           
   342 ;; *************** function _Init_LCD *****************
   343 ;; Defined at:
   344 ;;		line 5 in file "LCD_Library.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;Total ram usage:        2 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 5
   365 ;; This function calls:
   366 ;;		_Send_Instruction_Data
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text2
   373   001014                     __ptext2:
   374                           	callstack 0
   375   001014                     _Init_LCD:
   376                           	callstack 25
   377   001014                     
   378                           ;LCD_Library.c: 7:     _delay((unsigned long)((100)*(16000000/4000.0)));
   379   001014  0E03               	movlw	3
   380   001016  6E0A               	movwf	(??_Init_LCD+1)^0,c
   381   001018  0E08               	movlw	8
   382   00101A  6E09               	movwf	??_Init_LCD^0,c
   383   00101C  0E77               	movlw	119
   384   00101E                     u137:
   385   00101E  2EE8               	decfsz	wreg,f,c
   386   001020  D7FE               	bra	u137
   387   001022  2E09               	decfsz	??_Init_LCD^0,f,c
   388   001024  D7FC               	bra	u137
   389   001026  2E0A               	decfsz	(??_Init_LCD+1)^0,f,c
   390   001028  D7FA               	bra	u137
   391   00102A  0000               	nop	
   392   00102C                     
   393                           ;LCD_Library.c: 8:     Send_Instruction_Data(0, 0x30);
   394   00102C  0E30               	movlw	48
   395   00102E  6E07               	movwf	Send_Instruction_Data@Data^0,c
   396   001030  0E00               	movlw	0
   397   001032  ECEE  F008         	call	_Send_Instruction_Data
   398   001036                     
   399                           ;LCD_Library.c: 9:     _delay((unsigned long)((5)*(16000000/4000.0)));
   400   001036  0E1A               	movlw	26
   401   001038  6E09               	movwf	??_Init_LCD^0,c
   402   00103A  0EF8               	movlw	248
   403   00103C                     u147:
   404   00103C  2EE8               	decfsz	wreg,f,c
   405   00103E  D7FE               	bra	u147
   406   001040  2E09               	decfsz	??_Init_LCD^0,f,c
   407   001042  D7FC               	bra	u147
   408   001044  D000               	nop2	
   409                           
   410                           ;LCD_Library.c: 10:     Send_Instruction_Data(0, 0x30);
   411   001046  0E30               	movlw	48
   412   001048  6E07               	movwf	Send_Instruction_Data@Data^0,c
   413   00104A  0E00               	movlw	0
   414   00104C  ECEE  F008         	call	_Send_Instruction_Data
   415   001050                     
   416                           ;LCD_Library.c: 11:     _delay((unsigned long)((5)*(16000000/4000.0)));
   417   001050  0E1A               	movlw	26
   418   001052  6E09               	movwf	??_Init_LCD^0,c
   419   001054  0EF8               	movlw	248
   420   001056                     u157:
   421   001056  2EE8               	decfsz	wreg,f,c
   422   001058  D7FE               	bra	u157
   423   00105A  2E09               	decfsz	??_Init_LCD^0,f,c
   424   00105C  D7FC               	bra	u157
   425   00105E  D000               	nop2	
   426   001060                     
   427                           ;LCD_Library.c: 12:     Send_Instruction_Data(0, 0x30);
   428   001060  0E30               	movlw	48
   429   001062  6E07               	movwf	Send_Instruction_Data@Data^0,c
   430   001064  0E00               	movlw	0
   431   001066  ECEE  F008         	call	_Send_Instruction_Data
   432   00106A                     
   433                           ;LCD_Library.c: 13:     Send_Instruction_Data(0, 0x02);
   434   00106A  0E02               	movlw	2
   435   00106C  6E07               	movwf	Send_Instruction_Data@Data^0,c
   436   00106E  0E00               	movlw	0
   437   001070  ECEE  F008         	call	_Send_Instruction_Data
   438   001074                     
   439                           ;LCD_Library.c: 14:     Send_Instruction_Data(0, 0x06);
   440   001074  0E06               	movlw	6
   441   001076  6E07               	movwf	Send_Instruction_Data@Data^0,c
   442   001078  0E00               	movlw	0
   443   00107A  ECEE  F008         	call	_Send_Instruction_Data
   444   00107E                     
   445                           ;LCD_Library.c: 15:     Send_Instruction_Data(0, 0x0F);
   446   00107E  0E0F               	movlw	15
   447   001080  6E07               	movwf	Send_Instruction_Data@Data^0,c
   448   001082  0E00               	movlw	0
   449   001084  ECEE  F008         	call	_Send_Instruction_Data
   450   001088                     
   451                           ;LCD_Library.c: 16:     Send_Instruction_Data(0, 0x28);
   452   001088  0E28               	movlw	40
   453   00108A  6E07               	movwf	Send_Instruction_Data@Data^0,c
   454   00108C  0E00               	movlw	0
   455   00108E  ECEE  F008         	call	_Send_Instruction_Data
   456   001092                     
   457                           ;LCD_Library.c: 17:     Send_Instruction_Data(0, 0x01);
   458   001092  0E01               	movlw	1
   459   001094  6E07               	movwf	Send_Instruction_Data@Data^0,c
   460   001096  0E00               	movlw	0
   461   001098  ECEE  F008         	call	_Send_Instruction_Data
   462   00109C                     
   463                           ;LCD_Library.c: 18:     _delay((unsigned long)((100)*(16000000/4000.0)));
   464   00109C  0E03               	movlw	3
   465   00109E  6E0A               	movwf	(??_Init_LCD+1)^0,c
   466   0010A0  0E08               	movlw	8
   467   0010A2  6E09               	movwf	??_Init_LCD^0,c
   468   0010A4  0E77               	movlw	119
   469   0010A6                     u167:
   470   0010A6  2EE8               	decfsz	wreg,f,c
   471   0010A8  D7FE               	bra	u167
   472   0010AA  2E09               	decfsz	??_Init_LCD^0,f,c
   473   0010AC  D7FC               	bra	u167
   474   0010AE  2E0A               	decfsz	(??_Init_LCD+1)^0,f,c
   475   0010B0  D7FA               	bra	u167
   476   0010B2  0000               	nop	
   477   0010B4  0012               	return		;funcret
   478   0010B6                     __end_of_Init_LCD:
   479                           	callstack 0
   480                           
   481 ;; *************** function _Send_Instruction_Data *****************
   482 ;; Defined at:
   483 ;;		line 24 in file "LCD_Library.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  Instruction     1    wreg     unsigned char 
   486 ;;  Data            1    6[COMRAM] unsigned char 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  Instruction     1    7[COMRAM] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   498 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 4
   505 ;; This function calls:
   506 ;;		_LCD_Instruction
   507 ;; This function is called by:
   508 ;;		_main
   509 ;;		_Init_LCD
   510 ;;		_Send_String
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text3
   515   0011DC                     __ptext3:
   516                           	callstack 0
   517   0011DC                     _Send_Instruction_Data:
   518                           	callstack 25
   519                           
   520                           ;incstack = 0
   521                           ;Send_Instruction_Data@Instruction stored from wreg
   522   0011DC  6E08               	movwf	Send_Instruction_Data@Instruction^0,c
   523   0011DE                     
   524                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   525   0011DE  B008               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   526   0011E0  D002               	bra	u75
   527   0011E2  988B               	bcf	139,4,c	;volatile
   528   0011E4  D001               	bra	u76
   529   0011E6                     u75:
   530   0011E6  888B               	bsf	139,4,c	;volatile
   531   0011E8                     u76:
   532   0011E8                     
   533                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   534   0011E8  3807               	swapf	Send_Instruction_Data@Data^0,w,c
   535   0011EA  0B0F               	andlw	15
   536   0011EC  EC9C  F008         	call	_LCD_Instruction
   537   0011F0                     
   538                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
   539   0011F0  5007               	movf	Send_Instruction_Data@Data^0,w,c
   540   0011F2  0B0F               	andlw	15
   541   0011F4  EC9C  F008         	call	_LCD_Instruction
   542   0011F8  0012               	return		;funcret
   543   0011FA                     __end_of_Send_Instruction_Data:
   544                           	callstack 0
   545                           
   546 ;; *************** function _LCD_Instruction *****************
   547 ;; Defined at:
   548 ;;		line 33 in file "LCD_Library.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  Instruction     1    wreg     unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  Instruction     1    5[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        2 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 3
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_Send_Instruction_Data
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text4
   577   001138                     __ptext4:
   578                           	callstack 0
   579   001138                     _LCD_Instruction:
   580                           	callstack 25
   581                           
   582                           ;incstack = 0
   583                           ;LCD_Instruction@Instruction stored from wreg
   584   001138  6E06               	movwf	LCD_Instruction@Instruction^0,c
   585   00113A                     
   586                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   587   00113A  8A8B               	bsf	139,5,c	;volatile
   588   00113C                     
   589                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   590   00113C  0E4E               	movlw	78
   591   00113E  6E05               	movwf	??_LCD_Instruction^0,c
   592   001140  0EEB               	movlw	235
   593   001142                     u177:
   594   001142  2EE8               	decfsz	wreg,f,c
   595   001144  D7FE               	bra	u177
   596   001146  2E05               	decfsz	??_LCD_Instruction^0,f,c
   597   001148  D7FC               	bra	u177
   598   00114A  0000               	nop	
   599   00114C                     
   600                           ;LCD_Library.c: 37:     LATD = Instruction;
   601   00114C  C006  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   602   001150                     
   603                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
   604   001150  0E4E               	movlw	78
   605   001152  6E05               	movwf	??_LCD_Instruction^0,c
   606   001154  0EEB               	movlw	235
   607   001156                     u187:
   608   001156  2EE8               	decfsz	wreg,f,c
   609   001158  D7FE               	bra	u187
   610   00115A  2E05               	decfsz	??_LCD_Instruction^0,f,c
   611   00115C  D7FC               	bra	u187
   612   00115E  0000               	nop	
   613   001160                     
   614                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
   615   001160  9A8B               	bcf	139,5,c	;volatile
   616   001162                     
   617                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
   618   001162  0E4E               	movlw	78
   619   001164  6E05               	movwf	??_LCD_Instruction^0,c
   620   001166  0EEB               	movlw	235
   621   001168                     u197:
   622   001168  2EE8               	decfsz	wreg,f,c
   623   00116A  D7FE               	bra	u197
   624   00116C  2E05               	decfsz	??_LCD_Instruction^0,f,c
   625   00116E  D7FC               	bra	u197
   626   001170  0000               	nop	
   627   001172  0012               	return		;funcret
   628   001174                     __end_of_LCD_Instruction:
   629                           	callstack 0
   630                           
   631 ;; *************** function _Configurations *****************
   632 ;; Defined at:
   633 ;;		line 35 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 3
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text5
   662   0010B6                     __ptext5:
   663                           	callstack 0
   664   0010B6                     _Configurations:
   665                           	callstack 27
   666   0010B6                     
   667                           ;main.c: 37:     OSCCON = 0x72;
   668   0010B6  0E72               	movlw	114
   669   0010B8  6ED3               	movwf	211,c	;volatile
   670                           
   671                           ;main.c: 39:     ANSELC = 0;
   672   0010BA  0E00               	movlw	0
   673   0010BC  010F               	movlb	15	; () banked
   674   0010BE  6F3A               	movwf	58,b	;volatile
   675                           
   676                           ;main.c: 40:     ANSELD = 0;
   677   0010C0  0E00               	movlw	0
   678   0010C2  6F3B               	movwf	59,b	;volatile
   679   0010C4                     
   680                           ; BSR set to: 15
   681                           ;main.c: 44:     TRISCbits.RC4 = 0;
   682   0010C4  9894               	bcf	148,4,c	;volatile
   683   0010C6                     
   684                           ; BSR set to: 15
   685                           ;main.c: 45:     TRISCbits.RC5 = 0;
   686   0010C6  9A94               	bcf	148,5,c	;volatile
   687                           
   688                           ;main.c: 46:     TRISD = 0;
   689   0010C8  0E00               	movlw	0
   690   0010CA  6E95               	movwf	149,c	;volatile
   691   0010CC                     
   692                           ; BSR set to: 15
   693                           ;main.c: 49:     LATCbits.LC4 = 0;
   694   0010CC  988B               	bcf	139,4,c	;volatile
   695   0010CE                     
   696                           ; BSR set to: 15
   697                           ;main.c: 50:     LATCbits.LC5 = 0;
   698   0010CE  9A8B               	bcf	139,5,c	;volatile
   699                           
   700                           ;main.c: 51:     LATD = 0;
   701   0010D0  0E00               	movlw	0
   702   0010D2  6E8C               	movwf	140,c	;volatile
   703   0010D4                     
   704                           ; BSR set to: 15
   705                           ;main.c: 54:     INTCONbits.GIE = 1;
   706   0010D4  8EF2               	bsf	242,7,c	;volatile
   707   0010D6                     
   708                           ; BSR set to: 15
   709                           ;main.c: 55:     INTCONbits.PEIE = 1;
   710   0010D6  8CF2               	bsf	242,6,c	;volatile
   711   0010D8                     
   712                           ; BSR set to: 15
   713                           ;main.c: 56:     RCONbits.IPEN = 1;
   714   0010D8  8ED0               	bsf	208,7,c	;volatile
   715   0010DA                     
   716                           ; BSR set to: 15
   717                           ;main.c: 58:     PIE1bits.RC1IE = 1;
   718   0010DA  8A9D               	bsf	157,5,c	;volatile
   719   0010DC                     
   720                           ; BSR set to: 15
   721                           ;main.c: 59:     PIR1bits.RC1IF = 0;
   722   0010DC  9A9E               	bcf	158,5,c	;volatile
   723                           
   724                           ;main.c: 62:     SPBRG = 103;
   725   0010DE  0E67               	movlw	103
   726   0010E0  6EAF               	movwf	175,c	;volatile
   727   0010E2                     
   728                           ; BSR set to: 15
   729                           ;main.c: 63:     TRISCbits.RC6 = 1;
   730   0010E2  8C94               	bsf	148,6,c	;volatile
   731   0010E4                     
   732                           ; BSR set to: 15
   733                           ;main.c: 64:     TRISCbits.RC7 = 1;
   734   0010E4  8E94               	bsf	148,7,c	;volatile
   735   0010E6                     
   736                           ; BSR set to: 15
   737                           ;main.c: 67:     TXSTA1bits.TX91 = 0;
   738   0010E6  9CAC               	bcf	172,6,c	;volatile
   739   0010E8                     
   740                           ; BSR set to: 15
   741                           ;main.c: 68:     TXSTA1bits.TXEN1 = 1;
   742   0010E8  8AAC               	bsf	172,5,c	;volatile
   743   0010EA                     
   744                           ; BSR set to: 15
   745                           ;main.c: 69:     TXSTA1bits.SYNC1 = 0;
   746   0010EA  98AC               	bcf	172,4,c	;volatile
   747   0010EC                     
   748                           ; BSR set to: 15
   749                           ;main.c: 70:     TXSTA1bits.BRGH1 = 1;
   750   0010EC  84AC               	bsf	172,2,c	;volatile
   751   0010EE                     
   752                           ; BSR set to: 15
   753                           ;main.c: 73:     RCSTAbits.SPEN1 = 1;
   754   0010EE  8EAB               	bsf	171,7,c	;volatile
   755   0010F0                     
   756                           ; BSR set to: 15
   757                           ;main.c: 74:     RCSTAbits.RX91 = 0;
   758   0010F0  9CAB               	bcf	171,6,c	;volatile
   759   0010F2                     
   760                           ; BSR set to: 15
   761                           ;main.c: 75:     RCSTAbits.CREN1 = 1;
   762   0010F2  88AB               	bsf	171,4,c	;volatile
   763   0010F4                     
   764                           ; BSR set to: 15
   765                           ;main.c: 78:     BAUDCON1bits.BRG16 = 0;
   766   0010F4  96B8               	bcf	184,3,c	;volatile
   767   0010F6                     
   768                           ; BSR set to: 15
   769   0010F6  0012               	return		;funcret
   770   0010F8                     __end_of_Configurations:
   771                           	callstack 0
   772                           
   773 ;; *************** function _Reception *****************
   774 ;; Defined at:
   775 ;;		line 91 in file "main.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 2
   796 ;; This function calls:
   797 ;;		i2_Send_Instruction_Data
   798 ;; This function is called by:
   799 ;;		Interrupt level 2
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	intcode
   804   000008                     __pintcode:
   805                           	callstack 0
   806   000008                     _Reception:
   807                           	callstack 25
   808                           
   809                           ; BSR set to: 15
   810                           ;incstack = 0
   811   000008  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   812   00000A                     
   813                           ;main.c: 93:     if (PIR1bits.RC1IF) {
   814   00000A  AA9E               	btfss	158,5,c	;volatile
   815   00000C  EF0A  F000         	goto	i2u10_41
   816   000010  EF0C  F000         	goto	i2u10_40
   817   000014                     i2u10_41:
   818   000014  EF40  F000         	goto	i2l62
   819   000018                     i2u10_40:
   820   000018                     
   821                           ;main.c: 95:         Rx_Buffer = RCREG1;
   822   000018  CFAE F00C          	movff	4014,_Rx_Buffer	;volatile
   823   00001C                     
   824                           ;main.c: 97:         if (Rx_Buffer == 'a') {
   825   00001C  0E61               	movlw	97
   826   00001E  180C               	xorwf	_Rx_Buffer^0,w,c
   827   000020  A4D8               	btfss	status,2,c
   828   000022  EF15  F000         	goto	i2u11_41
   829   000026  EF17  F000         	goto	i2u11_40
   830   00002A                     i2u11_41:
   831   00002A  EF28  F000         	goto	i2l963
   832   00002E                     i2u11_40:
   833   00002E                     
   834                           ;main.c: 99:             Send_Instruction_Data(0, 0x01);
   835   00002E  0E01               	movlw	1
   836   000030  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   837   000032  0E00               	movlw	0
   838   000034  ECFD  F008         	call	i2_Send_Instruction_Data
   839                           
   840                           ;main.c: 100:             Send_Instruction_Data(0, 0xC0);
   841   000038  0EC0               	movlw	192
   842   00003A  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   843   00003C  0E00               	movlw	0
   844   00003E  ECFD  F008         	call	i2_Send_Instruction_Data
   845                           
   846                           ;main.c: 101:             Send_Instruction_Data(1, 'a');
   847   000042  0E61               	movlw	97
   848   000044  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   849   000046  0E01               	movlw	1
   850   000048  ECFD  F008         	call	i2_Send_Instruction_Data
   851                           
   852                           ;main.c: 103:         } else if (Rx_Buffer == 'b') {
   853   00004C  EF40  F000         	goto	i2l62
   854   000050                     i2l963:
   855   000050  0E62               	movlw	98
   856   000052  180C               	xorwf	_Rx_Buffer^0,w,c
   857   000054  A4D8               	btfss	status,2,c
   858   000056  EF2F  F000         	goto	i2u12_41
   859   00005A  EF31  F000         	goto	i2u12_40
   860   00005E                     i2u12_41:
   861   00005E  EF40  F000         	goto	i2l62
   862   000062                     i2u12_40:
   863   000062                     
   864                           ;main.c: 105:             Send_Instruction_Data(0, 0x01);
   865   000062  0E01               	movlw	1
   866   000064  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   867   000066  0E00               	movlw	0
   868   000068  ECFD  F008         	call	i2_Send_Instruction_Data
   869                           
   870                           ;main.c: 106:             Send_Instruction_Data(0, 0X94);
   871   00006C  0E94               	movlw	148
   872   00006E  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   873   000070  0E00               	movlw	0
   874   000072  ECFD  F008         	call	i2_Send_Instruction_Data
   875                           
   876                           ;main.c: 107:             Send_Instruction_Data(1, 'b');
   877   000076  0E62               	movlw	98
   878   000078  6E03               	movwf	i2Send_Instruction_Data@Data^0,c
   879   00007A  0E01               	movlw	1
   880   00007C  ECFD  F008         	call	i2_Send_Instruction_Data
   881   000080                     i2l62:
   882   000080  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   883   000082  0011               	retfie		f
   884   000084                     __end_of_Reception:
   885                           	callstack 0
   886                           
   887 ;; *************** function i2_Send_Instruction_Data *****************
   888 ;; Defined at:
   889 ;;		line 24 in file "LCD_Library.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  Instruction     1    wreg     unsigned char 
   892 ;;  Data            1    2[COMRAM] unsigned char 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  Instruction     1    3[COMRAM] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;Total ram usage:        2 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 1
   911 ;; This function calls:
   912 ;;		i2_LCD_Instruction
   913 ;; This function is called by:
   914 ;;		_Reception
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text7
   919   0011FA                     __ptext7:
   920                           	callstack 0
   921   0011FA                     i2_Send_Instruction_Data:
   922                           	callstack 25
   923                           
   924                           ;incstack = 0
   925                           ;i2Send_Instruction_Data@Instruction stored from wreg
   926   0011FA  6E04               	movwf	i2Send_Instruction_Data@Instruction^0,c
   927   0011FC                     
   928                           ;LCD_Library.c: 26:     LATCbits.LATC4 = Instruction;
   929   0011FC  B004               	btfsc	i2Send_Instruction_Data@Instruction^0,0,c
   930   0011FE  D002               	bra	i2u9_45
   931   001200  988B               	bcf	139,4,c	;volatile
   932   001202  D001               	bra	i2u9_46
   933   001204                     i2u9_45:
   934   001204  888B               	bsf	139,4,c	;volatile
   935   001206                     i2u9_46:
   936   001206                     
   937                           ;LCD_Library.c: 27:     LCD_Instruction(Data >> 4);
   938   001206  3803               	swapf	i2Send_Instruction_Data@Data^0,w,c
   939   001208  0B0F               	andlw	15
   940   00120A  ECBA  F008         	call	i2_LCD_Instruction
   941   00120E                     
   942                           ;LCD_Library.c: 28:     LCD_Instruction(Data & 0x0F);
   943   00120E  5003               	movf	i2Send_Instruction_Data@Data^0,w,c
   944   001210  0B0F               	andlw	15
   945   001212  ECBA  F008         	call	i2_LCD_Instruction
   946   001216  0012               	return		;funcret
   947   001218                     __end_ofi2_Send_Instruction_Data:
   948                           	callstack 0
   949                           
   950 ;; *************** function i2_LCD_Instruction *****************
   951 ;; Defined at:
   952 ;;		line 33 in file "LCD_Library.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  Instruction     1    wreg     unsigned char 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  Instruction     1    1[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		i2_Send_Instruction_Data
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text8
   980   001174                     __ptext8:
   981                           	callstack 0
   982   001174                     i2_LCD_Instruction:
   983                           	callstack 25
   984                           
   985                           ;incstack = 0
   986                           ;i2LCD_Instruction@Instruction stored from wreg
   987   001174  6E02               	movwf	i2LCD_Instruction@Instruction^0,c
   988   001176                     
   989                           ;LCD_Library.c: 35:     LATCbits.LATC5 = 1;
   990   001176  8A8B               	bsf	139,5,c	;volatile
   991   001178                     
   992                           ;LCD_Library.c: 36:     _delay((unsigned long)((15)*(16000000/4000.0)));
   993   001178  0E4E               	movlw	78
   994   00117A  6E01               	movwf	??i2_LCD_Instruction^0,c
   995   00117C  0EEB               	movlw	235
   996   00117E                     i2u20_47:
   997   00117E  2EE8               	decfsz	wreg,f,c
   998   001180  D7FE               	bra	i2u20_47
   999   001182  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1000   001184  D7FC               	bra	i2u20_47
  1001   001186  0000               	nop	
  1002   001188                     
  1003                           ;LCD_Library.c: 37:     LATD = Instruction;
  1004   001188  C002  FF8C         	movff	i2LCD_Instruction@Instruction,3980	;volatile
  1005   00118C                     
  1006                           ;LCD_Library.c: 38:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1007   00118C  0E4E               	movlw	78
  1008   00118E  6E01               	movwf	??i2_LCD_Instruction^0,c
  1009   001190  0EEB               	movlw	235
  1010   001192                     i2u21_47:
  1011   001192  2EE8               	decfsz	wreg,f,c
  1012   001194  D7FE               	bra	i2u21_47
  1013   001196  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1014   001198  D7FC               	bra	i2u21_47
  1015   00119A  0000               	nop	
  1016   00119C                     
  1017                           ;LCD_Library.c: 39:     LATCbits.LATC5 = 0;
  1018   00119C  9A8B               	bcf	139,5,c	;volatile
  1019   00119E                     
  1020                           ;LCD_Library.c: 40:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1021   00119E  0E4E               	movlw	78
  1022   0011A0  6E01               	movwf	??i2_LCD_Instruction^0,c
  1023   0011A2  0EEB               	movlw	235
  1024   0011A4                     i2u22_47:
  1025   0011A4  2EE8               	decfsz	wreg,f,c
  1026   0011A6  D7FE               	bra	i2u22_47
  1027   0011A8  2E01               	decfsz	??i2_LCD_Instruction^0,f,c
  1028   0011AA  D7FC               	bra	i2u22_47
  1029   0011AC  0000               	nop	
  1030   0011AE  0012               	return		;funcret
  1031   0011B0                     __end_ofi2_LCD_Instruction:
  1032                           	callstack 0
  1033                           
  1034                           	psect	rparam
  1035   000000                     
  1036                           	psect	temp
  1037   00000D                     btemp:
  1038                           	callstack 0
  1039   00000D                     	ds	1
  1040   000000                     int$flags	set	btemp
  1041   000000                     wtemp8	set	btemp+1
  1042   000000                     ttemp5	set	btemp+1
  1043   000000                     ttemp6	set	btemp+4
  1044   000000                     ttemp7	set	btemp+8
  1045                           
  1046                           	psect	config
  1047                           
  1048                           ; Padding undefined space
  1049   300000                     	org	3145728
  1050   300000  FF                 	db	255
  1051                           
  1052                           ;Config register CONFIG1H @ 0x300001
  1053                           ;	Oscillator Selection bits
  1054                           ;	FOSC = INTIO67, Internal oscillator block
  1055                           ;	4X PLL Enable
  1056                           ;	PLLCFG = OFF, Oscillator used directly
  1057                           ;	Primary clock enable bit
  1058                           ;	PRICLKEN = ON, Primary clock is always enabled
  1059                           ;	Fail-Safe Clock Monitor Enable bit
  1060                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1061                           ;	Internal/External Oscillator Switchover bit
  1062                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1063   300001                     	org	3145729
  1064   300001  28                 	db	40
  1065                           
  1066                           ;Config register CONFIG2L @ 0x300002
  1067                           ;	Power-up Timer Enable bit
  1068                           ;	PWRTEN = OFF, Power up timer disabled
  1069                           ;	Brown-out Reset Enable bits
  1070                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1071                           ;	Brown Out Reset Voltage bits
  1072                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1073   300002                     	org	3145730
  1074   300002  1F                 	db	31
  1075                           
  1076                           ;Config register CONFIG2H @ 0x300003
  1077                           ;	Watchdog Timer Enable bits
  1078                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1079                           ;	Watchdog Timer Postscale Select bits
  1080                           ;	WDTPS = 32768, 1:32768
  1081   300003                     	org	3145731
  1082   300003  3C                 	db	60
  1083                           
  1084                           ; Padding undefined space
  1085   300004                     	org	3145732
  1086   300004  FF                 	db	255
  1087                           
  1088                           ;Config register CONFIG3H @ 0x300005
  1089                           ;	CCP2 MUX bit
  1090                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1091                           ;	PORTB A/D Enable bit
  1092                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1093                           ;	P3A/CCP3 Mux bit
  1094                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  1095                           ;	HFINTOSC Fast Start-up
  1096                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1097                           ;	Timer3 Clock input mux bit
  1098                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1099                           ;	ECCP2 B output mux bit
  1100                           ;	P2BMX = PORTD2, P2B is on RD2
  1101                           ;	MCLR Pin Enable bit
  1102                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1103   300005                     	org	3145733
  1104   300005  BB                 	db	187
  1105                           
  1106                           ;Config register CONFIG4L @ 0x300006
  1107                           ;	Stack Full/Underflow Reset Enable bit
  1108                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1109                           ;	Single-Supply ICSP Enable bit
  1110                           ;	LVP = OFF, Single-Supply ICSP disabled
  1111                           ;	Extended Instruction Set Enable bit
  1112                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1113                           ;	Background Debug
  1114                           ;	DEBUG = 0x1, unprogrammed default
  1115   300006                     	org	3145734
  1116   300006  81                 	db	129
  1117                           
  1118                           ; Padding undefined space
  1119   300007                     	org	3145735
  1120   300007  FF                 	db	255
  1121                           
  1122                           ;Config register CONFIG5L @ 0x300008
  1123                           ;	Code Protection Block 0
  1124                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1125                           ;	Code Protection Block 1
  1126                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1127                           ;	Code Protection Block 2
  1128                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1129                           ;	Code Protection Block 3
  1130                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1131   300008                     	org	3145736
  1132   300008  0F                 	db	15
  1133                           
  1134                           ;Config register CONFIG5H @ 0x300009
  1135                           ;	Boot Block Code Protection bit
  1136                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1137                           ;	Data EEPROM Code Protection bit
  1138                           ;	CPD = OFF, Data EEPROM not code-protected
  1139   300009                     	org	3145737
  1140   300009  C0                 	db	192
  1141                           
  1142                           ;Config register CONFIG6L @ 0x30000A
  1143                           ;	Write Protection Block 0
  1144                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1145                           ;	Write Protection Block 1
  1146                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1147                           ;	Write Protection Block 2
  1148                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1149                           ;	Write Protection Block 3
  1150                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1151   30000A                     	org	3145738
  1152   30000A  0F                 	db	15
  1153                           
  1154                           ;Config register CONFIG6H @ 0x30000B
  1155                           ;	Configuration Register Write Protection bit
  1156                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1157                           ;	Boot Block Write Protection bit
  1158                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1159                           ;	Data EEPROM Write Protection bit
  1160                           ;	WRTD = OFF, Data EEPROM not write-protected
  1161   30000B                     	org	3145739
  1162   30000B  E0                 	db	224
  1163                           
  1164                           ;Config register CONFIG7L @ 0x30000C
  1165                           ;	Table Read Protection Block 0
  1166                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1167                           ;	Table Read Protection Block 1
  1168                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1169                           ;	Table Read Protection Block 2
  1170                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1171                           ;	Table Read Protection Block 3
  1172                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1173   30000C                     	org	3145740
  1174   30000C  0F                 	db	15
  1175                           
  1176                           ;Config register CONFIG7H @ 0x30000D
  1177                           ;	Boot Block Table Read Protection bit
  1178                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1179   30000D                     	org	3145741
  1180   30000D  40                 	db	64
  1181                           tosu	equ	0xFFF
  1182                           tosh	equ	0xFFE
  1183                           tosl	equ	0xFFD
  1184                           stkptr	equ	0xFFC
  1185                           pclatu	equ	0xFFB
  1186                           pclath	equ	0xFFA
  1187                           pcl	equ	0xFF9
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           indf0	equ	0xFEF
  1195                           postinc0	equ	0xFEE
  1196                           postdec0	equ	0xFED
  1197                           preinc0	equ	0xFEC
  1198                           plusw0	equ	0xFEB
  1199                           fsr0h	equ	0xFEA
  1200                           fsr0l	equ	0xFE9
  1201                           wreg	equ	0xFE8
  1202                           indf1	equ	0xFE7
  1203                           postinc1	equ	0xFE6
  1204                           postdec1	equ	0xFE5
  1205                           preinc1	equ	0xFE4
  1206                           plusw1	equ	0xFE3
  1207                           fsr1h	equ	0xFE2
  1208                           fsr1l	equ	0xFE1
  1209                           bsr	equ	0xFE0
  1210                           indf2	equ	0xFDF
  1211                           postinc2	equ	0xFDE
  1212                           postdec2	equ	0xFDD
  1213                           preinc2	equ	0xFDC
  1214                           plusw2	equ	0xFDB
  1215                           fsr2h	equ	0xFDA
  1216                           fsr2l	equ	0xFD9
  1217                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _Reception in COMRAM

    _Reception->i2_Send_Instruction_Data
    i2_Send_Instruction_Data->i2_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _Reception in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Reception in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Reception in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Reception in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Reception in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Reception in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Reception in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Reception in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Reception in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Reception in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Reception in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Reception in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Reception in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Reception in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Reception in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Reception in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3817
                     _Configurations
                           _Init_LCD
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (1) _Send_String                                          3     2      1    1383
                                              8 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0    1217
                                              8 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (2) _Send_Instruction_Data                                2     1      1    1217
                                              6 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruction                                      2     2      0      15
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Reception                                            0     0      0     244
            i2_Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (5) i2_Send_Instruction_Data                              2     1      1     244
                                              2 COMRAM     2     1      1
                  i2_LCD_Instruction
 ---------------------------------------------------------------------------------
 (6) i2_LCD_Instruction                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Send_Instruction_Data
   _Send_String
     _Send_Instruction_Data

 _Reception (ROOT)
   i2_Send_Instruction_Data
     i2_LCD_Instruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B       C       1       12.8%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhlhh     17      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhlhl      C      0       0      42        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlhlh        7      0       0      44        0.0%
BITBIGSFRlhhll       7      0       0      43        0.0%
BITBIGSFRlhhh        2      0       0      38        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      47        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 12 00:54:31 2024

                                l53 10F6                                  l47 11D4  
                                l48 11D4                                  l81 1172  
                                l75 10B4                                  l78 11F8  
                                l87 1136                                  u80 1136  
                                u81 1132                                  u75 11E6  
                                u76 11E8                   Send_String@String 0009  
                               l801 10CE                                 l811 10DC  
                               l803 10D4                                 l821 10EA  
                               l813 10E2                                 l805 10D6  
                               l831 10F4                                 l823 10EC  
                               l815 10E4                                 l807 10D8  
                               l911 102C                                 l825 10EE  
                               l817 10E6                                 l809 10DA  
                               l921 1074                                 l913 1036  
                               l827 10F0                                 l819 10E8  
                               l771 1160                                 l763 113A  
                               l923 107E                                 l915 1050  
                               l931 10F8                                 l829 10F2  
                               l773 1162                                 l765 113C  
                               l925 1088                                 l917 1060  
                               l909 1014                                 l933 1100  
                               l767 114C                                 l927 1092  
                               l919 106A                                 l935 1116  
                               l951 11C2                                 l793 10B6  
                               l769 1150                                 l929 109C  
                               l937 1118                                 l953 11CC  
                               l945 11B0                                 l795 10C4  
                               l891 11DE                                 l947 11B4  
                               l797 10C6                                 l893 11E8  
                               l949 11B8                                 l799 10CC  
                               l895 11F0                                 u137 101E  
                               u147 103C                                 u157 1056  
                               u167 10A6                                 u177 1142  
                               u187 1156                                 u197 1168  
       i2Send_Instruction_Data@Data 0003                                 wreg 0FE8  
                        _TXSTA1bits 0FAC                                STR_1 1001  
                              _LATD 0F8C                                i2l62 0080  
                              i2l81 11AE                                i2l78 1216  
                              _main 11B0                                btemp 000D  
                              start 0084                        ___param_bank 0000  
                   _LCD_Instruction 1138    Send_Instruction_Data@Instruction 0008  
i2Send_Instruction_Data@Instruction 0004                        _BAUDCON1bits 0FB8  
                             ?_main 0001                               i2l901 1188  
                             i2l903 118C                               i2l905 119C  
                             i2l907 119E                               i2l941 1206  
                             i2l943 120E                               i2l961 002E  
                             i2l939 11FC                               i2l963 0050  
                             i2l955 000A                               i2l965 0062  
                             i2l957 0018                               i2l959 001C  
                             i2l897 1176                               i2l899 1178  
                             _SPBRG 0FAF                               _TRISD 0F95  
      i2LCD_Instruction@Instruction 0002                               tablat 0FF5  
                             ttemp5 000E                               ttemp6 0011  
                             ttemp7 0015                               status 0FD8  
                             wtemp8 000E                     __initialization 1218  
                      __end_of_main 11DC                    __end_of_Init_LCD 10B6  
             _Send_Instruction_Data 11DC                              ??_main 000C  
                     ??_Send_String 000A                       __activetblptr 0001  
                            _ANSELC 0F3A                              _ANSELD 0F3B  
                            _RCREG1 0FAE          LCD_Instruction@Instruction 0006  
                            _OSCCON 0FD3                              i2u9_45 1204  
                            i2u9_46 1206             __end_of_LCD_Instruction 1174  
                            isa$std 0001                        __mediumconst 0000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8                 __end_of_Send_String 1138  
                        __accesstop 0060             __end_of__initialization 121A  
                     ___rparam_used 0001                      __pcstackCOMRAM 0001  
            ?_Send_Instruction_Data 0007                   __end_of_Reception 0084  
                         ?_Init_LCD 0001                    ?_LCD_Instruction 0001  
           i2_Send_Instruction_Data 11FA                         _Send_String 10F8  
                           i2u10_40 0018                             i2u10_41 0014  
                           i2u11_40 002E                             i2u11_41 002A  
                           i2u12_40 0062                             i2u12_41 005E  
                           i2u20_47 117E                             i2u21_47 1192  
                           i2u22_47 11A4                          ??_Init_LCD 0009  
                           __Hparam 0000                             __Lparam 0000  
                      __psmallconst 1000                             __pcinit 1218  
                           __ramtop 1000                             __ptext0 11B0  
                           __ptext1 10F8                             __ptext2 1014  
                           __ptext3 11DC                             __ptext4 1138  
                           __ptext5 10B6                             __ptext7 11FA  
                           __ptext8 1174                end_of_initialization 121A  
         ??i2_Send_Instruction_Data 0004                           _RCSTAbits 0FAB  
                         _TRISCbits 0F94             ??_Send_Instruction_Data 0008  
               start_initialization 1218                        Send_String@i 000B  
         Send_Instruction_Data@Data 0007                      _Configurations 10B6  
                         _Reception 0008                           _Rx_Buffer 000C  
                      ?_Send_String 0009                         __pbssCOMRAM 000C  
            __end_of_Configurations 10F8                          ?_Reception 0001  
                         __pintcode 0008                         __smallconst 1000  
                   ?_Configurations 0001                            _LATCbits 0F8B  
                          _PIE1bits 0F9D                            _PIR1bits 0F9E  
                          _RCONbits 0FD0                   i2_LCD_Instruction 1174  
                ?i2_LCD_Instruction 0001                 ??i2_LCD_Instruction 0001  
                       ??_Reception 0005                            _Init_LCD 1014  
                          __Hrparam 0000                            __Lrparam 0000  
                      __Lsmallconst 1000       __end_of_Send_Instruction_Data 11FA  
         __end_ofi2_LCD_Instruction 11B0                   ??_LCD_Instruction 0005  
          ?i2_Send_Instruction_Data 0003                            isa$xinst 0000  
                          int$flags 000D                          _INTCONbits 0FF2  
                          intlevel2 0000                    ??_Configurations 0005  
   __end_ofi2_Send_Instruction_Data 1218  
