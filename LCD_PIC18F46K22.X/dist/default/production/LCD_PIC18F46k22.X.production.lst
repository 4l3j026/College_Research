

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 14 16:49:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   001100                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _Text3
    63   001100  57                 	db	87
    64   001101  65                 	db	101
    65   001102  6C                 	db	108
    66   001103  63                 	db	99
    67   001104  6F                 	db	111
    68   001105  6D                 	db	109
    69   001106  65                 	db	101
    70   001107  20                 	db	32
    71   001108  74                 	db	116
    72   001109  6F                 	db	111
    73   00110A  20                 	db	32
    74   00110B  74                 	db	116
    75   00110C  68                 	db	104
    76   00110D  69                 	db	105
    77   00110E  73                 	db	115
    78   00110F  00                 	db	0
    79   001110  00                 	db	0
    80   001111  00                 	db	0
    81   001112  00                 	db	0
    82   001113  00                 	db	0
    83   001114  00                 	db	0
    84   001115  00                 	db	0
    85   001116  00                 	db	0
    86   001117  00                 	db	0
    87   001118  00                 	db	0
    88   001119  00                 	db	0
    89   00111A  00                 	db	0
    90   00111B  00                 	db	0
    91   00111C  00                 	db	0
    92   00111D  00                 	db	0
    93                           
    94                           ;initializer for _Text2
    95   00111E  45                 	db	69
    96   00111F  76                 	db	118
    97   001120  65                 	db	101
    98   001121  72                 	db	114
    99   001122  79                 	db	121
   100   001123  6F                 	db	111
   101   001124  6E                 	db	110
   102   001125  65                 	db	101
   103   001126  21                 	db	33
   104   001127  00                 	db	0
   105   001128  00                 	db	0
   106   001129  00                 	db	0
   107   00112A  00                 	db	0
   108   00112B  00                 	db	0
   109   00112C  00                 	db	0
   110   00112D  00                 	db	0
   111   00112E  00                 	db	0
   112   00112F  00                 	db	0
   113   001130  00                 	db	0
   114   001131  00                 	db	0
   115   001132  00                 	db	0
   116   001133  00                 	db	0
   117   001134  00                 	db	0
   118   001135  00                 	db	0
   119   001136  00                 	db	0
   120   001137  00                 	db	0
   121                           
   122                           ;initializer for _Text1
   123   001138  48                 	db	72
   124   001139  65                 	db	101
   125   00113A  6C                 	db	108
   126   00113B  6C                 	db	108
   127   00113C  6F                 	db	111
   128   00113D  21                 	db	33
   129   00113E  00                 	db	0
   130   00113F  00                 	db	0
   131   001140  00                 	db	0
   132   001141  00                 	db	0
   133   001142  00                 	db	0
   134   001143  00                 	db	0
   135   001144  00                 	db	0
   136   001145  00                 	db	0
   137   001146  00                 	db	0
   138   001147  00                 	db	0
   139   001148  00                 	db	0
   140   001149  00                 	db	0
   141   00114A  00                 	db	0
   142   00114B  00                 	db	0
   143                           
   144                           	psect	idataBANK0
   145   0011E8                     __pidataBANK0:
   146                           	callstack 0
   147                           
   148                           ;initializer for _Text4
   149   0011E8  4D                 	db	77
   150   0011E9  69                 	db	105
   151   0011EA  63                 	db	99
   152   0011EB  72                 	db	114
   153   0011EC  6F                 	db	111
   154   0011ED  63                 	db	99
   155   0011EE  6F                 	db	111
   156   0011EF  6E                 	db	110
   157   0011F0  74                 	db	116
   158   0011F1  72                 	db	114
   159   0011F2  6F                 	db	111
   160   0011F3  6C                 	db	108
   161   0011F4  6C                 	db	108
   162   0011F5  65                 	db	101
   163   0011F6  72                 	db	114
   164   0011F7  21                 	db	33
   165   0011F8  00                 	db	0
   166   0011F9  00                 	db	0
   167   0011FA  00                 	db	0
   168   0011FB  00                 	db	0
   169   0011FC  00                 	db	0
   170   0011FD  00                 	db	0
   171   0011FE  00                 	db	0
   172   0011FF  00                 	db	0
   173   001200  00                 	db	0
   174   001201  00                 	db	0
   175   001202  00                 	db	0
   176   001203  00                 	db	0
   177   001204  00                 	db	0
   178   001205  00                 	db	0
   179   000000                     _ANSELC	set	3898
   180   000000                     _OSCCON	set	4051
   181   000000                     _LATCbits	set	3979
   182   000000                     _TRISCbits	set	3988
   183   000000                     _ANSELD	set	3899
   184   000000                     _TRISD	set	3989
   185   000000                     _LATD	set	3980
   186                           
   187                           	psect	smallconst
   188   001000                     __psmallconst:
   189                           	callstack 0
   190   001000  00                 	db	0
   191   001001                     STR_1:
   192                           
   193                           ; BSR set to: 15
   194   001001  48                 	db	72	;'H'
   195   001002  65                 	db	101	;'e'
   196   001003  6C                 	db	108	;'l'
   197   001004  6C                 	db	108	;'l'
   198   001005  6F                 	db	111	;'o'
   199   001006  20                 	db	32
   200   001007  57                 	db	87	;'W'
   201   001008  6F                 	db	111	;'o'
   202   001009  72                 	db	114	;'r'
   203   00100A  6C                 	db	108	;'l'
   204   00100B  64                 	db	100	;'d'
   205   00100C  21                 	db	33
   206   00100D  00                 	db	0
   207   00100E  00                 	db	0	; dummy byte at the end
   208   000000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212   0010B2                     __pcinit:
   213                           	callstack 0
   214   0010B2                     start_initialization:
   215                           	callstack 0
   216   0010B2                     __initialization:
   217                           	callstack 0
   218                           
   219                           ; Initialize objects allocated to BANK0 (30 bytes)
   220                           ; load TBLPTR registers with __pidataBANK0
   221   0010B2  0EE8               	movlw	low __pidataBANK0
   222   0010B4  6EF6               	movwf	tblptrl,c
   223   0010B6  0E11               	movlw	high __pidataBANK0
   224   0010B8  6EF7               	movwf	tblptrh,c
   225   0010BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   226   0010BC  6EF8               	movwf	tblptru,c
   227   0010BE  EE00  F060         	lfsr	0,__pdataBANK0
   228   0010C2  EE10 F01E          	lfsr	1,30
   229   0010C6                     copy_data0:
   230   0010C6  0009               	tblrd		*+
   231   0010C8  CFF5 FFEE          	movff	tablat,postinc0
   232   0010CC  50E5               	movf	postdec1,w,c
   233   0010CE  50E1               	movf	fsr1l,w,c
   234   0010D0  E1FA               	bnz	copy_data0
   235                           
   236                           ; Initialize objects allocated to COMRAM (76 bytes)
   237                           ; load TBLPTR registers with __pidataCOMRAM
   238   0010D2  0E00               	movlw	low __pidataCOMRAM
   239   0010D4  6EF6               	movwf	tblptrl,c
   240   0010D6  0E11               	movlw	high __pidataCOMRAM
   241   0010D8  6EF7               	movwf	tblptrh,c
   242   0010DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   243   0010DC  6EF8               	movwf	tblptru,c
   244   0010DE  EE00  F001         	lfsr	0,__pdataCOMRAM
   245   0010E2  EE10 F04C          	lfsr	1,76
   246   0010E6                     copy_data1:
   247   0010E6  0009               	tblrd		*+
   248   0010E8  CFF5 FFEE          	movff	tablat,postinc0
   249   0010EC  50E5               	movf	postdec1,w,c
   250   0010EE  50E1               	movf	fsr1l,w,c
   251   0010F0  E1FA               	bnz	copy_data1
   252   0010F2                     end_of_initialization:
   253                           	callstack 0
   254   0010F2                     __end_of__initialization:
   255                           	callstack 0
   256   0010F2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   257   0010F4  6EF8               	movwf	tblptru,c
   258   0010F6  0E10               	movlw	high __Lsmallconst
   259   0010F8  6EF7               	movwf	tblptrh,c
   260   0010FA  0100               	movlb	0
   261   0010FC  EF11  F009         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	dataCOMRAM
   264   000001                     __pdataCOMRAM:
   265                           	callstack 0
   266   000001                     _Text3:
   267                           	callstack 0
   268   000001                     	ds	30
   269   00001F                     _Text2:
   270                           	callstack 0
   271   00001F                     	ds	26
   272   000039                     _Text1:
   273                           	callstack 0
   274   000039                     	ds	20
   275                           
   276                           	psect	dataBANK0
   277   000060                     __pdataBANK0:
   278                           	callstack 0
   279   000060                     _Text4:
   280                           	callstack 0
   281   000060                     	ds	30
   282                           
   283                           	psect	cstackCOMRAM
   284   00004D                     __pcstackCOMRAM:
   285                           	callstack 0
   286   00004D                     ??_LCD_Instruction:
   287   00004D                     
   288                           ; 1 bytes @ 0x0
   289   00004D                     	ds	1
   290   00004E                     LCD_Instruction@Instruction:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x1
   294   00004E                     	ds	1
   295   00004F                     Send_Instruction_Data@Data:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x2
   299   00004F                     	ds	1
   300   000050                     Send_Instruction_Data@Instruction:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x3
   304   000050                     	ds	1
   305   000051                     ??_Init_LCD:
   306   000051                     Send_String@String:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x4
   310   000051                     	ds	1
   311   000052                     ??_Send_String:
   312                           
   313                           ; 1 bytes @ 0x5
   314   000052                     	ds	1
   315   000053                     Send_String@i:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x6
   319   000053                     	ds	1
   320   000054                     
   321                           ; 1 bytes @ 0x7
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 48 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels required when called: 4
   347 ;; This function calls:
   348 ;;		_Configurations
   349 ;;		_Init_LCD
   350 ;;		_Test
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357   001222                     __ptext0:
   358                           	callstack 0
   359   001222                     _main:
   360                           	callstack 27
   361   001222                     
   362                           ;main.c: 51:     Configurations();
   363   001222  ECE4  F008         	call	_Configurations	;wreg free
   364   001226                     
   365                           ;main.c: 52:     Init_LCD();
   366   001226  EC08  F008         	call	_Init_LCD	;wreg free
   367   00122A                     
   368                           ;main.c: 53:     Test();
   369   00122A  EC1B  F009         	call	_Test	;wreg free
   370   00122E                     l39:
   371   00122E  EF17  F009         	goto	l39
   372   001232  EF00  F000         	goto	start
   373   001236                     __end_of_main:
   374                           	callstack 0
   375                           
   376 ;; *************** function _Test *****************
   377 ;; Defined at:
   378 ;;		line 141 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; Hardware stack levels required when called: 3
   399 ;; This function calls:
   400 ;;		_Send_Instruction_Data
   401 ;;		_Send_String
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text1
   408   001236                     __ptext1:
   409                           	callstack 0
   410   001236                     _Test:
   411                           	callstack 27
   412   001236                     
   413                           ;main.c: 143:     Send_Instruction_Data(0, 0X80);
   414   001236  0E80               	movlw	128
   415   001238  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   416   00123A  0E00               	movlw	0
   417   00123C  EC03  F009         	call	_Send_Instruction_Data
   418   001240                     
   419                           ;main.c: 144:     Send_String("Hello World!");
   420   001240  0E01               	movlw	low STR_1
   421   001242  6E51               	movwf	Send_String@String^0,c
   422   001244  ECA6  F008         	call	_Send_String	;wreg free
   423   001248  0012               	return		;funcret
   424   00124A                     __end_of_Test:
   425                           	callstack 0
   426                           
   427 ;; *************** function _Send_String *****************
   428 ;; Defined at:
   429 ;;		line 129 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  String          1    4[COMRAM] PTR unsigned char 
   432 ;;		 -> STR_1(13), 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  i               1    6[COMRAM] unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   444 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 2
   451 ;; This function calls:
   452 ;;		_Send_Instruction_Data
   453 ;; This function is called by:
   454 ;;		_Test
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text2
   459   00114C                     __ptext2:
   460                           	callstack 0
   461   00114C                     _Send_String:
   462                           	callstack 27
   463   00114C                     
   464                           ;main.c: 131:     for (uint8_t i = 0; String[i] != '\n'; i++) {
   465   00114C  0E00               	movlw	0
   466   00114E  6E53               	movwf	Send_String@i^0,c
   467   001150  EFB6  F008         	goto	l819
   468   001154                     l815:
   469                           
   470                           ;main.c: 133:         Send_Instruction_Data(1, String[i]);
   471   001154  5051               	movf	Send_String@String^0,w,c
   472   001156  2453               	addwf	Send_String@i^0,w,c
   473   001158  6E52               	movwf	??_Send_String^0,c
   474   00115A  C052  FFF6         	movff	??_Send_String,tblptrl
   475   00115E                     	if	0	;There is only one active tblptr byte
   476   00115E                     	endif
   477   00115E                     	if	0	;tblptru may be non-zero
   478   00115E                     	endif
   479   00115E                     	if	0	;tblptru may be non-zero
   480   00115E                     	endif
   481   00115E  0008               	tblrd		*
   482   001160  CFF5 F04F          	movff	tablat,Send_Instruction_Data@Data
   483   001164  0E01               	movlw	1
   484   001166  EC03  F009         	call	_Send_Instruction_Data
   485   00116A                     
   486                           ;main.c: 135:     }
   487   00116A  2A53               	incf	Send_String@i^0,f,c
   488   00116C                     l819:
   489   00116C  5051               	movf	Send_String@String^0,w,c
   490   00116E  2453               	addwf	Send_String@i^0,w,c
   491   001170  6E52               	movwf	??_Send_String^0,c
   492   001172  C052  FFF6         	movff	??_Send_String,tblptrl
   493   001176                     	if	0	;There is only one active tblptr byte
   494   001176                     	endif
   495   001176                     	if	0	;tblptru may be non-zero
   496   001176                     	endif
   497   001176                     	if	0	;tblptru may be non-zero
   498   001176                     	endif
   499   001176  0008               	tblrd		*
   500   001178  50F5               	movf	tablat,w,c
   501   00117A  0A0A               	xorlw	10
   502   00117C  A4D8               	btfss	status,2,c
   503   00117E  EFC3  F008         	goto	u41
   504   001182  EFC5  F008         	goto	u40
   505   001186                     u41:
   506   001186  EFAA  F008         	goto	l815
   507   00118A                     u40:
   508   00118A  0012               	return		;funcret
   509   00118C                     __end_of_Send_String:
   510                           	callstack 0
   511                           
   512 ;; *************** function _Init_LCD *****************
   513 ;; Defined at:
   514 ;;		line 88 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        2 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 2
   535 ;; This function calls:
   536 ;;		_Send_Instruction_Data
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text3
   543   001010                     __ptext3:
   544                           	callstack 0
   545   001010                     _Init_LCD:
   546                           	callstack 28
   547   001010                     
   548                           ;main.c: 90:     _delay((unsigned long)((60)*(16000000/4000.0)));
   549   001010  0E02               	movlw	2
   550   001012  6E52               	movwf	(??_Init_LCD+1)^0,c
   551   001014  0E38               	movlw	56
   552   001016  6E51               	movwf	??_Init_LCD^0,c
   553   001018  0EAD               	movlw	173
   554   00101A                     u57:
   555   00101A  2EE8               	decfsz	wreg,f,c
   556   00101C  D7FE               	bra	u57
   557   00101E  2E51               	decfsz	??_Init_LCD^0,f,c
   558   001020  D7FC               	bra	u57
   559   001022  2E52               	decfsz	(??_Init_LCD+1)^0,f,c
   560   001024  D7FA               	bra	u57
   561   001026  0000               	nop	
   562   001028                     
   563                           ;main.c: 91:     Send_Instruction_Data(0, 0x30);
   564   001028  0E30               	movlw	48
   565   00102A  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   566   00102C  0E00               	movlw	0
   567   00102E  EC03  F009         	call	_Send_Instruction_Data
   568   001032                     
   569                           ;main.c: 92:     _delay((unsigned long)((5)*(16000000/4000.0)));
   570   001032  0E1A               	movlw	26
   571   001034  6E51               	movwf	??_Init_LCD^0,c
   572   001036  0EF8               	movlw	248
   573   001038                     u67:
   574   001038  2EE8               	decfsz	wreg,f,c
   575   00103A  D7FE               	bra	u67
   576   00103C  2E51               	decfsz	??_Init_LCD^0,f,c
   577   00103E  D7FC               	bra	u67
   578   001040  D000               	nop2	
   579                           
   580                           ;main.c: 93:     Send_Instruction_Data(0, 0x30);
   581   001042  0E30               	movlw	48
   582   001044  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   583   001046  0E00               	movlw	0
   584   001048  EC03  F009         	call	_Send_Instruction_Data
   585   00104C                     
   586                           ;main.c: 94:     _delay((unsigned long)((5)*(16000000/4000.0)));
   587   00104C  0E1A               	movlw	26
   588   00104E  6E51               	movwf	??_Init_LCD^0,c
   589   001050  0EF8               	movlw	248
   590   001052                     u77:
   591   001052  2EE8               	decfsz	wreg,f,c
   592   001054  D7FE               	bra	u77
   593   001056  2E51               	decfsz	??_Init_LCD^0,f,c
   594   001058  D7FC               	bra	u77
   595   00105A  D000               	nop2	
   596   00105C                     
   597                           ;main.c: 95:     Send_Instruction_Data(0, 0x30);
   598   00105C  0E30               	movlw	48
   599   00105E  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   600   001060  0E00               	movlw	0
   601   001062  EC03  F009         	call	_Send_Instruction_Data
   602   001066                     
   603                           ;main.c: 96:     Send_Instruction_Data(0, 0x02);
   604   001066  0E02               	movlw	2
   605   001068  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   606   00106A  0E00               	movlw	0
   607   00106C  EC03  F009         	call	_Send_Instruction_Data
   608   001070                     
   609                           ;main.c: 97:     Send_Instruction_Data(0, 0x06);
   610   001070  0E06               	movlw	6
   611   001072  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   612   001074  0E00               	movlw	0
   613   001076  EC03  F009         	call	_Send_Instruction_Data
   614   00107A                     
   615                           ;main.c: 98:     Send_Instruction_Data(0, 0x0F);
   616   00107A  0E0F               	movlw	15
   617   00107C  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   618   00107E  0E00               	movlw	0
   619   001080  EC03  F009         	call	_Send_Instruction_Data
   620   001084                     
   621                           ;main.c: 99:     Send_Instruction_Data(0, 0x28);
   622   001084  0E28               	movlw	40
   623   001086  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   624   001088  0E00               	movlw	0
   625   00108A  EC03  F009         	call	_Send_Instruction_Data
   626   00108E                     
   627                           ;main.c: 100:     Send_Instruction_Data(0, 0x01);
   628   00108E  0E01               	movlw	1
   629   001090  6E4F               	movwf	Send_Instruction_Data@Data^0,c
   630   001092  0E00               	movlw	0
   631   001094  EC03  F009         	call	_Send_Instruction_Data
   632   001098                     
   633                           ;main.c: 101:     _delay((unsigned long)((100)*(16000000/4000.0)));
   634   001098  0E03               	movlw	3
   635   00109A  6E52               	movwf	(??_Init_LCD+1)^0,c
   636   00109C  0E08               	movlw	8
   637   00109E  6E51               	movwf	??_Init_LCD^0,c
   638   0010A0  0E77               	movlw	119
   639   0010A2                     u87:
   640   0010A2  2EE8               	decfsz	wreg,f,c
   641   0010A4  D7FE               	bra	u87
   642   0010A6  2E51               	decfsz	??_Init_LCD^0,f,c
   643   0010A8  D7FC               	bra	u87
   644   0010AA  2E52               	decfsz	(??_Init_LCD+1)^0,f,c
   645   0010AC  D7FA               	bra	u87
   646   0010AE  0000               	nop	
   647   0010B0  0012               	return		;funcret
   648   0010B2                     __end_of_Init_LCD:
   649                           	callstack 0
   650                           
   651 ;; *************** function _Send_Instruction_Data *****************
   652 ;; Defined at:
   653 ;;		line 107 in file "main.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  Instruction     1    wreg     unsigned char 
   656 ;;  Data            1    2[COMRAM] unsigned char 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  Instruction     1    3[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   668 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;Total ram usage:        2 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 1
   675 ;; This function calls:
   676 ;;		_LCD_Instruction
   677 ;; This function is called by:
   678 ;;		_Init_LCD
   679 ;;		_Send_String
   680 ;;		_Test
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text4
   685   001206                     __ptext4:
   686                           	callstack 0
   687   001206                     _Send_Instruction_Data:
   688                           	callstack 27
   689                           
   690                           ;incstack = 0
   691                           ;Send_Instruction_Data@Instruction stored from wreg
   692   001206  6E50               	movwf	Send_Instruction_Data@Instruction^0,c
   693   001208                     
   694                           ;main.c: 109:     LATCbits.LATC4 = Instruction;
   695   001208  B050               	btfsc	Send_Instruction_Data@Instruction^0,0,c
   696   00120A  D002               	bra	u35
   697   00120C  988B               	bcf	139,4,c	;volatile
   698   00120E  D001               	bra	u36
   699   001210                     u35:
   700   001210  888B               	bsf	139,4,c	;volatile
   701   001212                     u36:
   702   001212                     
   703                           ;main.c: 110:     LCD_Instruction(Data >> 4);
   704   001212  384F               	swapf	Send_Instruction_Data@Data^0,w,c
   705   001214  0B0F               	andlw	15
   706   001216  ECC6  F008         	call	_LCD_Instruction
   707   00121A                     
   708                           ;main.c: 111:     LCD_Instruction(Data);
   709   00121A  504F               	movf	Send_Instruction_Data@Data^0,w,c
   710   00121C  ECC6  F008         	call	_LCD_Instruction
   711   001220  0012               	return		;funcret
   712   001222                     __end_of_Send_Instruction_Data:
   713                           	callstack 0
   714                           
   715 ;; *************** function _LCD_Instruction *****************
   716 ;; Defined at:
   717 ;;		line 116 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  Instruction     1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  Instruction     1    1[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;Total ram usage:        2 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_Send_Instruction_Data
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text5
   745   00118C                     __ptext5:
   746                           	callstack 0
   747   00118C                     _LCD_Instruction:
   748                           	callstack 27
   749                           
   750                           ;incstack = 0
   751                           ;LCD_Instruction@Instruction stored from wreg
   752   00118C  6E4E               	movwf	LCD_Instruction@Instruction^0,c
   753   00118E                     
   754                           ;main.c: 118:     LATCbits.LATC5 = 1;
   755   00118E  8A8B               	bsf	139,5,c	;volatile
   756   001190                     
   757                           ;main.c: 119:     _delay((unsigned long)((15)*(16000000/4000.0)));
   758   001190  0E4E               	movlw	78
   759   001192  6E4D               	movwf	??_LCD_Instruction^0,c
   760   001194  0EEB               	movlw	235
   761   001196                     u97:
   762   001196  2EE8               	decfsz	wreg,f,c
   763   001198  D7FE               	bra	u97
   764   00119A  2E4D               	decfsz	??_LCD_Instruction^0,f,c
   765   00119C  D7FC               	bra	u97
   766   00119E  0000               	nop	
   767   0011A0                     
   768                           ;main.c: 120:     LATD = Instruction;
   769   0011A0  C04E  FF8C         	movff	LCD_Instruction@Instruction,3980	;volatile
   770   0011A4                     
   771                           ;main.c: 121:     _delay((unsigned long)((15)*(16000000/4000.0)));
   772   0011A4  0E4E               	movlw	78
   773   0011A6  6E4D               	movwf	??_LCD_Instruction^0,c
   774   0011A8  0EEB               	movlw	235
   775   0011AA                     u107:
   776   0011AA  2EE8               	decfsz	wreg,f,c
   777   0011AC  D7FE               	bra	u107
   778   0011AE  2E4D               	decfsz	??_LCD_Instruction^0,f,c
   779   0011B0  D7FC               	bra	u107
   780   0011B2  0000               	nop	
   781   0011B4                     
   782                           ;main.c: 122:     LATCbits.LATC5 = 0;
   783   0011B4  9A8B               	bcf	139,5,c	;volatile
   784   0011B6                     
   785                           ;main.c: 123:     _delay((unsigned long)((15)*(16000000/4000.0)));
   786   0011B6  0E4E               	movlw	78
   787   0011B8  6E4D               	movwf	??_LCD_Instruction^0,c
   788   0011BA  0EEB               	movlw	235
   789   0011BC                     u117:
   790   0011BC  2EE8               	decfsz	wreg,f,c
   791   0011BE  D7FE               	bra	u117
   792   0011C0  2E4D               	decfsz	??_LCD_Instruction^0,f,c
   793   0011C2  D7FC               	bra	u117
   794   0011C4  0000               	nop	
   795   0011C6  0012               	return		;funcret
   796   0011C8                     __end_of_LCD_Instruction:
   797                           	callstack 0
   798                           
   799 ;; *************** function _Configurations *****************
   800 ;; Defined at:
   801 ;;		line 67 in file "main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text6
   829   0011C8                     __ptext6:
   830                           	callstack 0
   831   0011C8                     _Configurations:
   832                           	callstack 30
   833   0011C8                     
   834                           ;main.c: 69:     OSCCON = 0x72;
   835   0011C8  0E72               	movlw	114
   836   0011CA  6ED3               	movwf	211,c	;volatile
   837                           
   838                           ;main.c: 71:     ANSELC = 0;
   839   0011CC  0E00               	movlw	0
   840   0011CE  010F               	movlb	15	; () banked
   841   0011D0  6F3A               	movwf	58,b	;volatile
   842                           
   843                           ;main.c: 72:     ANSELD = 0;
   844   0011D2  0E00               	movlw	0
   845   0011D4  6F3B               	movwf	59,b	;volatile
   846   0011D6                     
   847                           ; BSR set to: 15
   848                           ;main.c: 74:     TRISCbits.RC4 = 0;
   849   0011D6  9894               	bcf	148,4,c	;volatile
   850   0011D8                     
   851                           ; BSR set to: 15
   852                           ;main.c: 75:     TRISCbits.RC5 = 0;
   853   0011D8  9A94               	bcf	148,5,c	;volatile
   854                           
   855                           ;main.c: 77:     TRISD = 0;
   856   0011DA  0E00               	movlw	0
   857   0011DC  6E95               	movwf	149,c	;volatile
   858   0011DE                     
   859                           ; BSR set to: 15
   860                           ;main.c: 79:     LATCbits.LC4 = 0;
   861   0011DE  988B               	bcf	139,4,c	;volatile
   862   0011E0                     
   863                           ; BSR set to: 15
   864                           ;main.c: 80:     LATCbits.LC5 = 0;
   865   0011E0  9A8B               	bcf	139,5,c	;volatile
   866                           
   867                           ;main.c: 82:     LATD = 0;
   868   0011E2  0E00               	movlw	0
   869   0011E4  6E8C               	movwf	140,c	;volatile
   870   0011E6                     
   871                           ; BSR set to: 15
   872   0011E6  0012               	return		;funcret
   873   0011E8                     __end_of_Configurations:
   874                           	callstack 0
   875                           
   876                           	psect	rparam
   877   000000                     
   878                           	psect	config
   879                           
   880                           ; Padding undefined space
   881   300000                     	org	3145728
   882   300000  FF                 	db	255
   883                           
   884                           ;Config register CONFIG1H @ 0x300001
   885                           ;	Oscillator Selection bits
   886                           ;	FOSC = INTIO67, Internal oscillator block
   887                           ;	4X PLL Enable
   888                           ;	PLLCFG = OFF, Oscillator used directly
   889                           ;	Primary clock enable bit
   890                           ;	PRICLKEN = ON, Primary clock is always enabled
   891                           ;	Fail-Safe Clock Monitor Enable bit
   892                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   893                           ;	Internal/External Oscillator Switchover bit
   894                           ;	IESO = OFF, Oscillator Switchover mode disabled
   895   300001                     	org	3145729
   896   300001  28                 	db	40
   897                           
   898                           ;Config register CONFIG2L @ 0x300002
   899                           ;	Power-up Timer Enable bit
   900                           ;	PWRTEN = OFF, Power up timer disabled
   901                           ;	Brown-out Reset Enable bits
   902                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   903                           ;	Brown Out Reset Voltage bits
   904                           ;	BORV = 190, VBOR set to 1.90 V nominal
   905   300002                     	org	3145730
   906   300002  1F                 	db	31
   907                           
   908                           ;Config register CONFIG2H @ 0x300003
   909                           ;	Watchdog Timer Enable bits
   910                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   911                           ;	Watchdog Timer Postscale Select bits
   912                           ;	WDTPS = 32768, 1:32768
   913   300003                     	org	3145731
   914   300003  3C                 	db	60
   915                           
   916                           ; Padding undefined space
   917   300004                     	org	3145732
   918   300004  FF                 	db	255
   919                           
   920                           ;Config register CONFIG3H @ 0x300005
   921                           ;	CCP2 MUX bit
   922                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   923                           ;	PORTB A/D Enable bit
   924                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   925                           ;	P3A/CCP3 Mux bit
   926                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   927                           ;	HFINTOSC Fast Start-up
   928                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   929                           ;	Timer3 Clock input mux bit
   930                           ;	T3CMX = PORTC0, T3CKI is on RC0
   931                           ;	ECCP2 B output mux bit
   932                           ;	P2BMX = PORTD2, P2B is on RD2
   933                           ;	MCLR Pin Enable bit
   934                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   935   300005                     	org	3145733
   936   300005  BF                 	db	191
   937                           
   938                           ;Config register CONFIG4L @ 0x300006
   939                           ;	Stack Full/Underflow Reset Enable bit
   940                           ;	STVREN = ON, Stack full/underflow will cause Reset
   941                           ;	Single-Supply ICSP Enable bit
   942                           ;	LVP = OFF, Single-Supply ICSP disabled
   943                           ;	Extended Instruction Set Enable bit
   944                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   945                           ;	Background Debug
   946                           ;	DEBUG = 0x1, unprogrammed default
   947   300006                     	org	3145734
   948   300006  81                 	db	129
   949                           
   950                           ; Padding undefined space
   951   300007                     	org	3145735
   952   300007  FF                 	db	255
   953                           
   954                           ;Config register CONFIG5L @ 0x300008
   955                           ;	Code Protection Block 0
   956                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   957                           ;	Code Protection Block 1
   958                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   959                           ;	Code Protection Block 2
   960                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   961                           ;	Code Protection Block 3
   962                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   963   300008                     	org	3145736
   964   300008  0F                 	db	15
   965                           
   966                           ;Config register CONFIG5H @ 0x300009
   967                           ;	Boot Block Code Protection bit
   968                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   969                           ;	Data EEPROM Code Protection bit
   970                           ;	CPD = OFF, Data EEPROM not code-protected
   971   300009                     	org	3145737
   972   300009  C0                 	db	192
   973                           
   974                           ;Config register CONFIG6L @ 0x30000A
   975                           ;	Write Protection Block 0
   976                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   977                           ;	Write Protection Block 1
   978                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   979                           ;	Write Protection Block 2
   980                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   981                           ;	Write Protection Block 3
   982                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   983   30000A                     	org	3145738
   984   30000A  0F                 	db	15
   985                           
   986                           ;Config register CONFIG6H @ 0x30000B
   987                           ;	Configuration Register Write Protection bit
   988                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   989                           ;	Boot Block Write Protection bit
   990                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   991                           ;	Data EEPROM Write Protection bit
   992                           ;	WRTD = OFF, Data EEPROM not write-protected
   993   30000B                     	org	3145739
   994   30000B  E0                 	db	224
   995                           
   996                           ;Config register CONFIG7L @ 0x30000C
   997                           ;	Table Read Protection Block 0
   998                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   999                           ;	Table Read Protection Block 1
  1000                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1001                           ;	Table Read Protection Block 2
  1002                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1003                           ;	Table Read Protection Block 3
  1004                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1005   30000C                     	org	3145740
  1006   30000C  0F                 	db	15
  1007                           
  1008                           ;Config register CONFIG7H @ 0x30000D
  1009                           ;	Boot Block Table Read Protection bit
  1010                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1011   30000D                     	org	3145741
  1012   30000D  40                 	db	64
  1013                           tosu	equ	0xFFF
  1014                           tosh	equ	0xFFE
  1015                           tosl	equ	0xFFD
  1016                           stkptr	equ	0xFFC
  1017                           pclatu	equ	0xFFB
  1018                           pclath	equ	0xFFA
  1019                           pcl	equ	0xFF9
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           prodh	equ	0xFF4
  1025                           prodl	equ	0xFF3
  1026                           indf0	equ	0xFEF
  1027                           postinc0	equ	0xFEE
  1028                           postdec0	equ	0xFED
  1029                           preinc0	equ	0xFEC
  1030                           plusw0	equ	0xFEB
  1031                           fsr0h	equ	0xFEA
  1032                           fsr0l	equ	0xFE9
  1033                           wreg	equ	0xFE8
  1034                           indf1	equ	0xFE7
  1035                           postinc1	equ	0xFE6
  1036                           postdec1	equ	0xFE5
  1037                           preinc1	equ	0xFE4
  1038                           plusw1	equ	0xFE3
  1039                           fsr1h	equ	0xFE2
  1040                           fsr1l	equ	0xFE1
  1041                           bsr	equ	0xFE0
  1042                           indf2	equ	0xFDF
  1043                           postinc2	equ	0xFDE
  1044                           postdec2	equ	0xFDD
  1045                           preinc2	equ	0xFDC
  1046                           plusw2	equ	0xFDB
  1047                           fsr2h	equ	0xFDA
  1048                           fsr2l	equ	0xFD9
  1049                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        106
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      83
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Send_String@String	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _Test->_Send_String
    _Send_String->_Send_Instruction_Data
    _Init_LCD->_Send_Instruction_Data
    _Send_Instruction_Data->_LCD_Instruction

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2689
                     _Configurations
                           _Init_LCD
                               _Test
 ---------------------------------------------------------------------------------
 (1) _Test                                                 0     0      0    1848
              _Send_Instruction_Data
                        _Send_String
 ---------------------------------------------------------------------------------
 (2) _Send_String                                          3     2      1    1007
                                              4 COMRAM     3     2      1
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (1) _Init_LCD                                             2     2      0     841
                                              4 COMRAM     2     2      0
              _Send_Instruction_Data
 ---------------------------------------------------------------------------------
 (3) _Send_Instruction_Data                                2     1      1     841
                                              2 COMRAM     2     1      1
                    _LCD_Instruction
 ---------------------------------------------------------------------------------
 (4) _LCD_Instruction                                      2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configurations                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configurations
   _Init_LCD
     _Send_Instruction_Data
       _LCD_Instruction
   _Test
     _Send_Instruction_Data
     _Send_String
       _Send_Instruction_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7      53       1       87.4%
BITBIGSFRlhll       4F      0       0      40        0.0%
BITBIGSFRlhh        3D      0       0      38        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRh          2C      0       0      37        0.0%
BITBIGSFRlhlh        7      0       0      39        0.0%
BITBIGSFRll          2      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      71      28        0.0%
DATA                 0      0      71       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 14 16:49:51 2024

                              l40 122E                                l51 1220                                l60 118A  
                              l45 11E6                                l54 11C6                                l63 1248  
                              l39 122E                                l48 10B0                                u40 118A  
                              u41 1186                                u35 1210                                u36 1212  
                              u57 101A                                u67 1038                                u77 1052  
                              u87 10A2                                u97 1196                 Send_String@String 0051  
                             l811 121A                               l741 1190                               l821 1010  
                             l813 114C                               l743 11A0                               l807 1208  
                             l831 1066                               l823 1028                               l815 1154  
                             l745 11A4                               l809 1212                               l841 1098  
                             l833 1070                               l825 1032                               l817 116A  
                             l771 11DE                               l747 11B4                               l739 118E  
                             l835 107A                               l827 104C                               l819 116C  
                             l843 1236                               l851 122A                               l773 11E0  
                             l765 11C8                               l749 11B6                               l837 1084  
                             l829 105C                               l845 1240                               l767 11D6  
                             l839 108E                               l847 1222                               l769 11D8  
                             l849 1226                               u107 11AA                               u117 11BC  
                             wreg 0FE8                              STR_1 1001                              _LATD 0F8C  
                            _Test 1236                              _main 1222                              fsr1l 0FE1  
                            start 0000                      ___param_bank 0000                   _LCD_Instruction 118C  
Send_Instruction_Data@Instruction 0050                             ?_Test 004D                             ?_main 004D  
                           _TRISD 0F95                             _Text1 0039                             _Text2 001F  
                           _Text3 0001                             _Text4 0060                             tablat 0FF5  
                           status 0FD8                   __initialization 10B2                      __end_of_Test 124A  
                    __end_of_main 1236                  __end_of_Init_LCD 10B2             _Send_Instruction_Data 1206  
                          ??_Test 0054                            ??_main 0054                     ??_Send_String 0052  
                   __activetblptr 0001                            _ANSELC 0F3A                            _ANSELD 0F3B  
      LCD_Instruction@Instruction 004E                            _OSCCON 0FD3           __end_of_LCD_Instruction 11C8  
                          isa$std 0001                      __pdataCOMRAM 0001                      __mediumconst 0000  
                          tblptrh 0FF7                            tblptrl 0FF6                            tblptru 0FF8  
             __end_of_Send_String 118C                        __accesstop 0060           __end_of__initialization 10F2  
                   ___rparam_used 0001                    __pcstackCOMRAM 004D                      __pidataBANK0 11E8  
          ?_Send_Instruction_Data 004F                         ?_Init_LCD 004D                  ?_LCD_Instruction 004D  
                     _Send_String 114C                        ??_Init_LCD 0051                           __Hparam 0000  
                         __Lparam 0000                      __psmallconst 1000                           __pcinit 10B2  
                         __ramtop 1000                           __ptext0 1222                           __ptext1 1236  
                         __ptext2 114C                           __ptext3 1010                           __ptext4 1206  
                         __ptext5 118C                           __ptext6 11C8              end_of_initialization 10F2  
                         postdec1 0FE5                           postinc0 0FEE                         _TRISCbits 0F94  
         ??_Send_Instruction_Data 0050                     __pidataCOMRAM 1100               start_initialization 10B2  
                    Send_String@i 0053         Send_Instruction_Data@Data 004F                    _Configurations 11C8  
                     __pdataBANK0 0060                      ?_Send_String 0051            __end_of_Configurations 11E8  
                     __smallconst 1000                   ?_Configurations 004D                          _LATCbits 0F8B  
                       copy_data0 10C6                         copy_data1 10E6                          _Init_LCD 1010  
                        __Hrparam 0000                          __Lrparam 0000                      __Lsmallconst 1000  
   __end_of_Send_Instruction_Data 1222                 ??_LCD_Instruction 004D                          isa$xinst 0000  
                ??_Configurations 004D  
