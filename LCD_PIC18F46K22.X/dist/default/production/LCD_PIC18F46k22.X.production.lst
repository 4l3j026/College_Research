

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 14 16:19:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F46K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataBANK0
    53   001094                     __pidataBANK0:
    54                           	callstack 0
    55                           
    56                           ;initializer for _Text4
    57   001094  4D                 	db	77
    58   001095  69                 	db	105
    59   001096  63                 	db	99
    60   001097  72                 	db	114
    61   001098  6F                 	db	111
    62   001099  63                 	db	99
    63   00109A  6F                 	db	111
    64   00109B  6E                 	db	110
    65   00109C  74                 	db	116
    66   00109D  72                 	db	114
    67   00109E  6F                 	db	111
    68   00109F  6C                 	db	108
    69   0010A0  6C                 	db	108
    70   0010A1  65                 	db	101
    71   0010A2  72                 	db	114
    72   0010A3  21                 	db	33
    73   0010A4  00                 	db	0
    74   0010A5  00                 	db	0
    75   0010A6  00                 	db	0
    76   0010A7  00                 	db	0
    77   0010A8  00                 	db	0
    78   0010A9  00                 	db	0
    79   0010AA  00                 	db	0
    80   0010AB  00                 	db	0
    81   0010AC  00                 	db	0
    82   0010AD  00                 	db	0
    83   0010AE  00                 	db	0
    84   0010AF  00                 	db	0
    85   0010B0  00                 	db	0
    86   0010B1  00                 	db	0
    87                           
    88                           	psect	idataCOMRAM
    89   001002                     __pidataCOMRAM:
    90                           	callstack 0
    91                           
    92                           ;initializer for _Text3
    93   001002  57                 	db	87
    94   001003  65                 	db	101
    95   001004  6C                 	db	108
    96   001005  63                 	db	99
    97   001006  6F                 	db	111
    98   001007  6D                 	db	109
    99   001008  65                 	db	101
   100   001009  20                 	db	32
   101   00100A  74                 	db	116
   102   00100B  6F                 	db	111
   103   00100C  20                 	db	32
   104   00100D  74                 	db	116
   105   00100E  68                 	db	104
   106   00100F  69                 	db	105
   107   001010  73                 	db	115
   108   001011  00                 	db	0
   109   001012  00                 	db	0
   110   001013  00                 	db	0
   111   001014  00                 	db	0
   112   001015  00                 	db	0
   113   001016  00                 	db	0
   114   001017  00                 	db	0
   115   001018  00                 	db	0
   116   001019  00                 	db	0
   117   00101A  00                 	db	0
   118   00101B  00                 	db	0
   119   00101C  00                 	db	0
   120   00101D  00                 	db	0
   121   00101E  00                 	db	0
   122   00101F  00                 	db	0
   123                           
   124                           ;initializer for _Text2
   125   001020  45                 	db	69
   126   001021  76                 	db	118
   127   001022  65                 	db	101
   128   001023  72                 	db	114
   129   001024  79                 	db	121
   130   001025  6F                 	db	111
   131   001026  6E                 	db	110
   132   001027  65                 	db	101
   133   001028  21                 	db	33
   134   001029  00                 	db	0
   135   00102A  00                 	db	0
   136   00102B  00                 	db	0
   137   00102C  00                 	db	0
   138   00102D  00                 	db	0
   139   00102E  00                 	db	0
   140   00102F  00                 	db	0
   141   001030  00                 	db	0
   142   001031  00                 	db	0
   143   001032  00                 	db	0
   144   001033  00                 	db	0
   145   001034  00                 	db	0
   146   001035  00                 	db	0
   147   001036  00                 	db	0
   148   001037  00                 	db	0
   149   001038  00                 	db	0
   150   001039  00                 	db	0
   151                           
   152                           ;initializer for _Text1
   153   00103A  48                 	db	72
   154   00103B  65                 	db	101
   155   00103C  6C                 	db	108
   156   00103D  6C                 	db	108
   157   00103E  6F                 	db	111
   158   00103F  21                 	db	33
   159   001040  00                 	db	0
   160   001041  00                 	db	0
   161   001042  00                 	db	0
   162   001043  00                 	db	0
   163   001044  00                 	db	0
   164   001045  00                 	db	0
   165   001046  00                 	db	0
   166   001047  00                 	db	0
   167   001048  00                 	db	0
   168   001049  00                 	db	0
   169   00104A  00                 	db	0
   170   00104B  00                 	db	0
   171   00104C  00                 	db	0
   172   00104D  00                 	db	0
   173                           
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177   00104E                     __pcinit:
   178                           	callstack 0
   179   00104E                     start_initialization:
   180                           	callstack 0
   181   00104E                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Initialize objects allocated to BANK0 (30 bytes)
   185                           ; load TBLPTR registers with __pidataBANK0
   186   00104E  0E94               	movlw	low __pidataBANK0
   187   001050  6EF6               	movwf	tblptrl,c
   188   001052  0E10               	movlw	high __pidataBANK0
   189   001054  6EF7               	movwf	tblptrh,c
   190   001056  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   191   001058  6EF8               	movwf	tblptru,c
   192   00105A  EE00  F060         	lfsr	0,__pdataBANK0
   193   00105E  EE10 F01E          	lfsr	1,30
   194   001062                     copy_data0:
   195   001062  0009               	tblrd		*+
   196   001064  CFF5 FFEE          	movff	tablat,postinc0
   197   001068  50E5               	movf	postdec1,w,c
   198   00106A  50E1               	movf	fsr1l,w,c
   199   00106C  E1FA               	bnz	copy_data0
   200                           
   201                           ; Initialize objects allocated to COMRAM (76 bytes)
   202                           ; load TBLPTR registers with __pidataCOMRAM
   203   00106E  0E02               	movlw	low __pidataCOMRAM
   204   001070  6EF6               	movwf	tblptrl,c
   205   001072  0E10               	movlw	high __pidataCOMRAM
   206   001074  6EF7               	movwf	tblptrh,c
   207   001076  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   208   001078  6EF8               	movwf	tblptru,c
   209   00107A  EE00  F001         	lfsr	0,__pdataCOMRAM
   210   00107E  EE10 F04C          	lfsr	1,76
   211   001082                     copy_data1:
   212   001082  0009               	tblrd		*+
   213   001084  CFF5 FFEE          	movff	tablat,postinc0
   214   001088  50E5               	movf	postdec1,w,c
   215   00108A  50E1               	movf	fsr1l,w,c
   216   00108C  E1FA               	bnz	copy_data1
   217   00108E                     end_of_initialization:
   218                           	callstack 0
   219   00108E                     __end_of__initialization:
   220                           	callstack 0
   221   00108E  0100               	movlb	0
   222   001090  EF59  F008         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	dataCOMRAM
   225   000001                     __pdataCOMRAM:
   226                           	callstack 0
   227   000001                     _Text3:
   228                           	callstack 0
   229   000001                     	ds	30
   230   00001F                     _Text2:
   231                           	callstack 0
   232   00001F                     	ds	26
   233   000039                     _Text1:
   234                           	callstack 0
   235   000039                     	ds	20
   236                           
   237                           	psect	dataBANK0
   238   000060                     __pdataBANK0:
   239                           	callstack 0
   240   000060                     _Text4:
   241                           	callstack 0
   242   000060                     	ds	30
   243                           
   244                           	psect	cstackCOMRAM
   245   000000                     __pcstackCOMRAM:
   246                           	callstack 0
   247   000000                     
   248                           ; 1 bytes @ 0x0
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 46 in file "main.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;		None
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		None
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;Total ram usage:        0 bytes
   273 ;; This function calls:
   274 ;;		Nothing
   275 ;; This function is called by:
   276 ;;		Startup code after reset
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text0
   281   0010B2                     __ptext0:
   282                           	callstack 0
   283   0010B2                     _main:
   284                           	callstack 31
   285   0010B2                     l13:
   286   0010B2  EF59  F008         	goto	l13
   287   0010B6  EF00  F000         	goto	start
   288   0010BA                     __end_of_main:
   289                           	callstack 0
   290                           
   291                           	psect	smallconst
   292   001000                     __psmallconst:
   293                           	callstack 0
   294   001000  00                 	db	0
   295   001001  00                 	db	0	; dummy byte at the end
   296   000000                     
   297                           	psect	rparam
   298   000000                     
   299                           	psect	config
   300                           
   301                           ; Padding undefined space
   302   300000                     	org	3145728
   303   300000  FF                 	db	255
   304                           
   305                           ;Config register CONFIG1H @ 0x300001
   306                           ;	Oscillator Selection bits
   307                           ;	FOSC = INTIO67, Internal oscillator block
   308                           ;	4X PLL Enable
   309                           ;	PLLCFG = OFF, Oscillator used directly
   310                           ;	Primary clock enable bit
   311                           ;	PRICLKEN = ON, Primary clock is always enabled
   312                           ;	Fail-Safe Clock Monitor Enable bit
   313                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   314                           ;	Internal/External Oscillator Switchover bit
   315                           ;	IESO = OFF, Oscillator Switchover mode disabled
   316   300001                     	org	3145729
   317   300001  28                 	db	40
   318                           
   319                           ;Config register CONFIG2L @ 0x300002
   320                           ;	Power-up Timer Enable bit
   321                           ;	PWRTEN = OFF, Power up timer disabled
   322                           ;	Brown-out Reset Enable bits
   323                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   324                           ;	Brown Out Reset Voltage bits
   325                           ;	BORV = 190, VBOR set to 1.90 V nominal
   326   300002                     	org	3145730
   327   300002  1F                 	db	31
   328                           
   329                           ;Config register CONFIG2H @ 0x300003
   330                           ;	Watchdog Timer Enable bits
   331                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   332                           ;	Watchdog Timer Postscale Select bits
   333                           ;	WDTPS = 32768, 1:32768
   334   300003                     	org	3145731
   335   300003  3C                 	db	60
   336                           
   337                           ; Padding undefined space
   338   300004                     	org	3145732
   339   300004  FF                 	db	255
   340                           
   341                           ;Config register CONFIG3H @ 0x300005
   342                           ;	CCP2 MUX bit
   343                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   344                           ;	PORTB A/D Enable bit
   345                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   346                           ;	P3A/CCP3 Mux bit
   347                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   348                           ;	HFINTOSC Fast Start-up
   349                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   350                           ;	Timer3 Clock input mux bit
   351                           ;	T3CMX = PORTC0, T3CKI is on RC0
   352                           ;	ECCP2 B output mux bit
   353                           ;	P2BMX = PORTD2, P2B is on RD2
   354                           ;	MCLR Pin Enable bit
   355                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   356   300005                     	org	3145733
   357   300005  BF                 	db	191
   358                           
   359                           ;Config register CONFIG4L @ 0x300006
   360                           ;	Stack Full/Underflow Reset Enable bit
   361                           ;	STVREN = ON, Stack full/underflow will cause Reset
   362                           ;	Single-Supply ICSP Enable bit
   363                           ;	LVP = OFF, Single-Supply ICSP disabled
   364                           ;	Extended Instruction Set Enable bit
   365                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   366                           ;	Background Debug
   367                           ;	DEBUG = 0x1, unprogrammed default
   368   300006                     	org	3145734
   369   300006  81                 	db	129
   370                           
   371                           ; Padding undefined space
   372   300007                     	org	3145735
   373   300007  FF                 	db	255
   374                           
   375                           ;Config register CONFIG5L @ 0x300008
   376                           ;	Code Protection Block 0
   377                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   378                           ;	Code Protection Block 1
   379                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   380                           ;	Code Protection Block 2
   381                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   382                           ;	Code Protection Block 3
   383                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   384   300008                     	org	3145736
   385   300008  0F                 	db	15
   386                           
   387                           ;Config register CONFIG5H @ 0x300009
   388                           ;	Boot Block Code Protection bit
   389                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   390                           ;	Data EEPROM Code Protection bit
   391                           ;	CPD = OFF, Data EEPROM not code-protected
   392   300009                     	org	3145737
   393   300009  C0                 	db	192
   394                           
   395                           ;Config register CONFIG6L @ 0x30000A
   396                           ;	Write Protection Block 0
   397                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   398                           ;	Write Protection Block 1
   399                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   400                           ;	Write Protection Block 2
   401                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   402                           ;	Write Protection Block 3
   403                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   404   30000A                     	org	3145738
   405   30000A  0F                 	db	15
   406                           
   407                           ;Config register CONFIG6H @ 0x30000B
   408                           ;	Configuration Register Write Protection bit
   409                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   410                           ;	Boot Block Write Protection bit
   411                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   412                           ;	Data EEPROM Write Protection bit
   413                           ;	WRTD = OFF, Data EEPROM not write-protected
   414   30000B                     	org	3145739
   415   30000B  E0                 	db	224
   416                           
   417                           ;Config register CONFIG7L @ 0x30000C
   418                           ;	Table Read Protection Block 0
   419                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   420                           ;	Table Read Protection Block 1
   421                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   422                           ;	Table Read Protection Block 2
   423                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   424                           ;	Table Read Protection Block 3
   425                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   426   30000C                     	org	3145740
   427   30000C  0F                 	db	15
   428                           
   429                           ;Config register CONFIG7H @ 0x30000D
   430                           ;	Boot Block Table Read Protection bit
   431                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   432   30000D                     	org	3145741
   433   30000D  40                 	db	64
   434                           tosu	equ	0xFFF
   435                           tosh	equ	0xFFE
   436                           tosl	equ	0xFFD
   437                           stkptr	equ	0xFFC
   438                           pclatu	equ	0xFFB
   439                           pclath	equ	0xFFA
   440                           pcl	equ	0xFF9
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           prodh	equ	0xFF4
   446                           prodl	equ	0xFF3
   447                           indf0	equ	0xFEF
   448                           postinc0	equ	0xFEE
   449                           postdec0	equ	0xFED
   450                           preinc0	equ	0xFEC
   451                           plusw0	equ	0xFEB
   452                           fsr0h	equ	0xFEA
   453                           fsr0l	equ	0xFE9
   454                           wreg	equ	0xFE8
   455                           indf1	equ	0xFE7
   456                           postinc1	equ	0xFE6
   457                           postdec1	equ	0xFE5
   458                           preinc1	equ	0xFE4
   459                           plusw1	equ	0xFE3
   460                           fsr1h	equ	0xFE2
   461                           fsr1l	equ	0xFE1
   462                           bsr	equ	0xFE0
   463                           indf2	equ	0xFDF
   464                           postinc2	equ	0xFDE
   465                           postdec2	equ	0xFDD
   466                           preinc2	equ	0xFDC
   467                           plusw2	equ	0xFDB
   468                           fsr2h	equ	0xFDA
   469                           fsr2l	equ	0xFD9
   470                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        106
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0      76
    BANK0           160      0      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           C8      0       0      36        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1E       5       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0      4C       1       80.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      37        0.0%
DATA                 0      0      6A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 14 16:19:49 2024

                     l13 10B2                       l14 10B2                     _main 10B2  
                   fsr1l 0FE1                     start 0000             ___param_bank 0000  
                  ?_main 0000                    _Text1 0039                    _Text2 001F  
                  _Text3 0001                    _Text4 0060                    tablat 0FF5  
        __initialization 104E             __end_of_main 10BA                   ??_main 0000  
          __activetblptr 0000                   isa$std 0001             __pdataCOMRAM 0001  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 108E  
          ___rparam_used 0001           __pcstackCOMRAM 0000             __pidataBANK0 1094  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1000  
                __pcinit 104E                  __ramtop 1000                  __ptext0 10B2  
   end_of_initialization 108E                  postdec1 0FE5                  postinc0 0FEE  
          __pidataCOMRAM 1002      start_initialization 104E              __pdataBANK0 0060  
            __smallconst 1000                copy_data0 1062                copy_data1 1082  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
